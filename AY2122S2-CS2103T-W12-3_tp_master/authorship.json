[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"# AddresSoC","lastModifiedDate":"2022-04-05"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"AddresSoC is a CLI desktop application for School of Computing students to keep track of their network with other students and schedule meetings. It does not handle communication between students.","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"### Basic Features","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"  * **Add contact**","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"  * **Delete contact**","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"  * **List contacts**","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"  * **Add meeting**","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"  * **Delete meeting**","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"For the detailed documentation of this project, see the **[AddresSoC Product Website](https://ay2122s2-cs2103t-w12-3.github.io/tp/)**.","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"### Acknowledgment","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org),","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"as **part of the se-education.org** initiative.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"tomascherian":18,"cpwill01":2,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"run {","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"    archiveName \u003d \u0027addressoc.jar\u0027","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cpwill01":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"### William Ming","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"\u003cimg src\u003d\"images/cpwill01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"[[github](http://github.com/cpwill01)]","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"[[portfolio](team/cpwill01.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"* Role: Team Lead, Developer","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"* Responsibilities: Documentation, UI","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"### Rahul Prasad","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"\u003cimg src\u003d\"images/rahulprasad01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"[[github](http://github.com/rahulprasad01)] [[portfolio](team/rahulprasad01.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"* Responsibilities: Testing, Deliverables and deadlines, in charge of parser","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"### Thomas Cherian","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"\u003cimg src\u003d\"images/tomascherian.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"[[github](http://github.com/tomascherian)]","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"[[portfolio](team/tomascherian.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"* Responsibilities: Code Quality, in charge of Storage component","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"### Fong Yi Fei","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"\u003cimg src\u003d\"images/yifei2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"[[github](http://github.com/yifei2)]","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"[[portfolio](team/yifei2.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"* Responsibilities: Integration, Scheduling and Tracking, in charge of Commands component","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"tomascherian":5,"cpwill01":6,"YiFei2":5,"rahulprasad01":4,"-":29}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"cpwill01":1,"-":79}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents  ","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"* This project is based on the AddressBook-Level3 (AB3) project created by the [SE-EDU initiative](https://se-education.org),","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"  as **part of the se-education.org** initiative.","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"* The undo/redo feature was implemented and documented with reference to the proposed implementation found in [AB3\u0027s developer guide](https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature).","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-W12-3/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"The UI consists of a `MainWindow` that is made up of parts, namely `MeetingListPanel`, `PersonListPanel` and other UI parts that have been left out of the diagram. The other parts include `StatusBarFooter`, `ResultDisplay`, `CommandBox`, `HelpWindow` and `MeetingClashWindow`.","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"* depends on some classes in the `Model` component, as it displays `Contact` objects and `Meeting` objects residing in the `Model`.","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"deletec 1\")` API call.","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"![Interactions Inside the Logic Component for the `deletec 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteContactCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"![Model Class Diagram](images/ModelClassDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"* stores the address book data i.e., all `Contact` objects and all `Meeting` objects (which are contained in a `UniquePersonList` object and a `UniqueMeetingList` respectively).","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"* stores the currently \u0027selected\u0027 `Contact` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cContact\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"* stores the currently \u0027selected\u0027 `Meeting` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cMeeting\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has two `Tag` lists in the `AddressBook`, which `Person` and `Meeting` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` and each `Meeting` needing their own `Tag` objects.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"![Better](images/BetterModelClassDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"cpwill01"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W12-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"740\" /\u003e","lastModifiedDate":"2022-04-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"YiFei2"},"content":"### Add Meeting feature","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"This section describes how a ```Meeting``` object is added to the list of meetings using the ```addm``` command.","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"YiFei2"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"YiFei2"},"content":"A ```Meeting``` object in AddresSoc consists of ```MeetingName```,```MeetingDate```,```StartTime```,```EndTime```,","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"YiFei2"},"content":"as well as the optional ```Tags``` and ```Participants``` fields. Upon the ```addm``` command being called with the","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"YiFei2"},"content":"relevant fields provided, a ```Meeting``` will be added to the ```UniqueMeetingList```.","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"YiFei2"},"content":"Given below is an example usage scenario and how the ```addm``` command behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"YiFei2"},"content":"1. The user inputs the command ```addm mn/2103 Meeting d/25/03/2022 st/1600 et/1800 t/Important pt/2 pt/3```","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"YiFei2"},"content":"2. The user input is passed into ```AddressBookParser``` which matches the ```addm``` command word and passes the arguments to ```AddMeetingCommandParser```.","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"YiFei2"},"content":"3. ```AddMeetingCommandParser``` parses the arguments according to the prefixes and constructs a ```AddMeetingCommand``` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"YiFei2"},"content":"4. The ```AddMeetingCommand``` object is returned to ```LogicManager``` to be executed. During execution, the ```Meeting``` object with the given fields is constructed and added to the ```UniqueMeetingList```.","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"YiFei2"},"content":"#### Sequence Diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"YiFei2"},"content":"The sequence diagram below shows the execution of the above example:","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"YiFei2"},"content":"![Interactions Inside the Logic Component for the `addm mn/2103 Meeting d/25/03/2022 st/1600 et/1800 t/Important pt/2 pt/3` Command](images/AddMeetingSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddMeetingCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**The arguments for methods and constructors have been shortened for clarity in the diagram.","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"YiFei2"},"content":"#### Activity Diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"YiFei2"},"content":"The activity diagram below shows the execution of the above example:","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"YiFei2"},"content":"![Add Meeting activity diagram](images/AddMeetingActivityDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The Create Participant ⋔ references the Create Participant","lastModifiedDate":"2022-04-09"},{"lineNumber":201,"author":{"gitId":"YiFei2"},"content":"Activity Diagram in the Managing meeting participants section below.","lastModifiedDate":"2022-04-09"},{"lineNumber":202,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-09"},{"lineNumber":203,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":204,"author":{"gitId":"cpwill01"},"content":"#### Design Considerations:","lastModifiedDate":"2022-04-10"},{"lineNumber":205,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"YiFei2"},"content":"**Aspect: How `Participant` is constructed**","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"YiFei2"},"content":"* **Alternative 1 (current choice):** `Participant` constructed using a `Contact`.","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"YiFei2"},"content":"    * Pros: Better extensibility as it will be possible to implement features that can interact with the `Participant` in each meeting.","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"YiFei2"},"content":"    * Cons: More difficult to implement as a `Participant` would need to change if changes are made to the corresponding `Contact`.","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"YiFei2"},"content":"* **Alternative 2:** `Participant` constructed using a `String`.","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"YiFei2"},"content":"    * Pros: `Participant` has less dependence on `Contact`. Better flexibility as each `Participant` no longer needs to be a `Contact`.","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"YiFei2"},"content":"    * Cons: Less extensibility as `Participant` does not have any link to `Contact`. Changes to each `Contact` that is in a `Meeting` will require a separate command to change the `Participant` as well.","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"YiFei2"},"content":"**Aspect: How to deal with clash in `Meeting` timings**","lastModifiedDate":"2022-04-08"},{"lineNumber":216,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":217,"author":{"gitId":"YiFei2"},"content":"* **Alternative 1 (current choice):** A clash in timings will notify the user of the clash.","lastModifiedDate":"2022-04-09"},{"lineNumber":218,"author":{"gitId":"YiFei2"},"content":"    * Pros: User is still allowed to add meetings regardless of the timing of other meetings in the list.","lastModifiedDate":"2022-04-08"},{"lineNumber":219,"author":{"gitId":"YiFei2"},"content":"    * Cons: Clash in meetings are left in the meeting list until the user deals with it. May cause confusion for the user if not dealt with.","lastModifiedDate":"2022-04-08"},{"lineNumber":220,"author":{"gitId":"YiFei2"},"content":"* **Alternative 2** A clash in timings will throw an exception.","lastModifiedDate":"2022-04-09"},{"lineNumber":221,"author":{"gitId":"YiFei2"},"content":"    * Pros: Meetings that clash will not be added and will not cause confusion for the user. The user can edit or remove clashing meetings before attempting to add the meeting again.","lastModifiedDate":"2022-04-08"},{"lineNumber":222,"author":{"gitId":"YiFei2"},"content":"    * Cons: Will require more steps to adding a meeting with time clash. User will have to edit or remove clashing meetings before adding again.","lastModifiedDate":"2022-04-08"},{"lineNumber":223,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":224,"author":{"gitId":"YiFei2"},"content":"Reasons for choosing Alternative 1:","lastModifiedDate":"2022-04-08"},{"lineNumber":225,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":226,"author":{"gitId":"YiFei2"},"content":"* Overall, it is more efficient for the user as the original meeting will be successfully added to the list. The implemented","lastModifiedDate":"2022-04-08"},{"lineNumber":227,"author":{"gitId":"YiFei2"},"content":"  notification pop-up should suffice in prompting the user to resolve any clashes in timings through editing or removing","lastModifiedDate":"2022-04-08"},{"lineNumber":228,"author":{"gitId":"YiFei2"},"content":"  them. This implementation provides the user with more freedom as to how they would want to deal with the clash or simply","lastModifiedDate":"2022-04-08"},{"lineNumber":229,"author":{"gitId":"YiFei2"},"content":"  make a mental note of it and not deal with it in the application at all.","lastModifiedDate":"2022-04-08"},{"lineNumber":230,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":232,"author":{"gitId":"tomascherian"},"content":"### Find Contact feature","lastModifiedDate":"2022-04-11"},{"lineNumber":233,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":234,"author":{"gitId":"tomascherian"},"content":"#### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":235,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":236,"author":{"gitId":"tomascherian"},"content":"The contacts of AddresSoc are stored in a `FilteredList`. The `FilteredList` is updated using `FilteredList#setPredicate`.","lastModifiedDate":"2022-04-11"},{"lineNumber":237,"author":{"gitId":"tomascherian"},"content":"The feature uses a combination of `NameContainsKeywordsPredicate` and `ContactTagContainsKeywordsPredicate` as a predicate.","lastModifiedDate":"2022-04-11"},{"lineNumber":238,"author":{"gitId":"tomascherian"},"content":"Upon the ```findc``` command being called with the relevant fields provided, the ```FilteredList``` object is updated in accordance with the predicate and then displayed.","lastModifiedDate":"2022-04-11"},{"lineNumber":239,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":240,"author":{"gitId":"tomascherian"},"content":"Given below is an example usage scenario and how the ```findc``` command behaves at each step.","lastModifiedDate":"2022-04-11"},{"lineNumber":241,"author":{"gitId":"tomascherian"},"content":"1. The user inputs the command ```findc n/alex t/friends```","lastModifiedDate":"2022-04-11"},{"lineNumber":242,"author":{"gitId":"tomascherian"},"content":"2. The user input is passed into ```AddressBookParser``` which matches the ```findc``` command word and passes the arguments to ```FindContactCommandParser```.","lastModifiedDate":"2022-04-11"},{"lineNumber":243,"author":{"gitId":"tomascherian"},"content":"3. ```FindContactCommandParser``` parses the arguments according to the prefixes and constructs a ```FindContactCommand``` object.","lastModifiedDate":"2022-04-11"},{"lineNumber":244,"author":{"gitId":"tomascherian"},"content":"4. The ```FindContactCommand``` object is returned to ```LogicManager``` to be executed. During execution, the ```FilteredList\u003cContact\u003e``` object is updated and displayed.","lastModifiedDate":"2022-04-11"},{"lineNumber":245,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":246,"author":{"gitId":"tomascherian"},"content":"#### Sequence Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":247,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":248,"author":{"gitId":"tomascherian"},"content":"The sequence diagram below shows the execution of the above example:","lastModifiedDate":"2022-04-11"},{"lineNumber":249,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":250,"author":{"gitId":"tomascherian"},"content":"![Find Contact Sequence Diagram](images/FindContactSequenceDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":251,"author":{"gitId":"tomascherian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FindContactCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-11"},{"lineNumber":252,"author":{"gitId":"tomascherian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":253,"author":{"gitId":"tomascherian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**The arguments for methods and constructors have been shortened for clarity in the diagram.","lastModifiedDate":"2022-04-11"},{"lineNumber":254,"author":{"gitId":"tomascherian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":255,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":256,"author":{"gitId":"tomascherian"},"content":"#### Activity Diagram","lastModifiedDate":"2022-04-11"},{"lineNumber":257,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":258,"author":{"gitId":"tomascherian"},"content":"The activity diagram below shows the execution of the above example:","lastModifiedDate":"2022-04-11"},{"lineNumber":259,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":260,"author":{"gitId":"tomascherian"},"content":"![Find Contact activity diagram](images/FindContactActivityDiagram.png)","lastModifiedDate":"2022-04-11"},{"lineNumber":261,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":262,"author":{"gitId":"tomascherian"},"content":"#### Design Considerations","lastModifiedDate":"2022-04-11"},{"lineNumber":263,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":264,"author":{"gitId":"tomascherian"},"content":"**Aspect: How `names` and `tags` matches:**","lastModifiedDate":"2022-04-11"},{"lineNumber":265,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":266,"author":{"gitId":"tomascherian"},"content":"* **Alternative 1 (current choice):** Only full names are matched","lastModifiedDate":"2022-04-11"},{"lineNumber":267,"author":{"gitId":"tomascherian"},"content":"    * Pros: Filtered List will look less cluttered and allows users to easily look up a particular contact","lastModifiedDate":"2022-04-11"},{"lineNumber":268,"author":{"gitId":"tomascherian"},"content":"    * Cons: Users have less flexibility to search the contacts","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":270,"author":{"gitId":"tomascherian"},"content":"* **Alternative 2:** Names that contain the input phrase is matched","lastModifiedDate":"2022-04-11"},{"lineNumber":271,"author":{"gitId":"tomascherian"},"content":"  itself.","lastModifiedDate":"2022-04-11"},{"lineNumber":272,"author":{"gitId":"tomascherian"},"content":"    * Pros: Users have more flexibility to search the contacts","lastModifiedDate":"2022-04-11"},{"lineNumber":273,"author":{"gitId":"tomascherian"},"content":"    * Cons: The filtered list will be bloated and makes it difficult to look up a particular contact.","lastModifiedDate":"2022-04-11"},{"lineNumber":274,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":275,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":276,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":277,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"YiFei2"},"content":"### Undo/redo feature","lastModifiedDate":"2022-04-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"YiFei2"},"content":"#### Implementation","lastModifiedDate":"2022-04-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"YiFei2"},"content":"The undo/redo mechanism is facilitated by `VersionedAddressBook`. It keeps track of AddressBook states, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-04-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"YiFei2"},"content":"* `VersionedAddressBook#canUndo()` — Checks that `currentStatePointer` is not pointing to the first state in the `addressBookStateList`.","lastModifiedDate":"2022-04-08"},{"lineNumber":288,"author":{"gitId":"YiFei2"},"content":"* `VersionedAddressBook#canRedo()` — Checks that `currentStatePointer` is not pointing to the last state in the `addressBookStateList`.","lastModifiedDate":"2022-04-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"YiFei2"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`, `Model#redoAddressBook()`, `Model#canUndo` and `Model#canRedo` respectively.","lastModifiedDate":"2022-04-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"cpwill01"},"content":"### Managing meeting participants","lastModifiedDate":"2022-03-24"},{"lineNumber":359,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":360,"author":{"gitId":"cpwill01"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":361,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"cpwill01"},"content":"A `Meeting` object in AddresSoc has a set containing 0 or more participants, each represented by a","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"cpwill01"},"content":"`Participant` object. Each `Participant` holds a reference to a `Contact` that exists in the","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"cpwill01"},"content":"`UniquePersonList` of the `AddressBook`. This design is summarized below:","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"cpwill01"},"content":"![MeetingParticipantClassDiagram](images/MeetingParticipantClassDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"cpwill01"},"content":"Users can directly modify the set of `Participants` of a `Meeting` during commands that allow them to specify","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"cpwill01"},"content":"participant indexes, such as `AddMeetingCommand` and `EditMeetingCommand`. When entering these commands, the user optionally specifies the indexes of contacts in the","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"cpwill01"},"content":"currently displayed contact list to participate in the meeting.  During such commands, the","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"cpwill01"},"content":"general process of creating and adding `Participants` to a `Meeting`\u0027s participant set is as follows:","lastModifiedDate":"2022-03-24"},{"lineNumber":372,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":373,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":374,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":375,"author":{"gitId":"cpwill01"},"content":"1. If an index is specified, the validity of the index is checked.","lastModifiedDate":"2022-03-24"},{"lineNumber":376,"author":{"gitId":"cpwill01"},"content":"    * If the index is invalid, the command execution is stopped.","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"cpwill01"},"content":"    * If the index is valid, proceed to step 2.","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"cpwill01"},"content":"2. The `Contact` specified by the index is obtained.","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"cpwill01"},"content":"3. A `Participant` is created from the `Contact` and added to the `Meeting`\u0027s participant set.","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"cpwill01"},"content":"4. Repeat steps 1 to 3 for all indexes given by the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"cpwill01"},"content":"This process is summarised in the activity diagram below.","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"cpwill01"},"content":"![CreateParticipantActivityDiagram](images/CreateParticipantActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"cpwill01"},"content":"Another scenario when a `Meeting` may have its set of `Participants` modified is when a `Contact` object","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"cpwill01"},"content":"is replaced by another `Contact` object in the `UniquePersonList` (ie. during the execution of `EditContactCommand`).","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"cpwill01"},"content":"In this case, the `Participant` referencing the original `Contact` object is updated. Each `Meeting` that","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"cpwill01"},"content":"this `Participant` participates in is replaced with a new `Meeting` containing the updated `Participant`.","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"cpwill01"},"content":"It is important to note here that the **entire `UniqueMeetingList`** is looped through during this operation to check whether each `Meeting` is participated by this","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"cpwill01"},"content":"`Participant`. The following activity diagram summarises this process:","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"cpwill01"},"content":"![UpdateParticipantActivityDiagram](images/UpdateParticipantActivityDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":396,"author":{"gitId":"cpwill01"},"content":"Similarly, the deletion of a `Contact` from `UniquePersonList` during the execution of `DeleteContactCommand` also","lastModifiedDate":"2022-03-24"},{"lineNumber":397,"author":{"gitId":"cpwill01"},"content":"updates participant sets by looping through the entire `UniqueMeetingList`. The process is identical to the above,","lastModifiedDate":"2022-03-24"},{"lineNumber":398,"author":{"gitId":"cpwill01"},"content":"except that no replacement participant is created and added to the meeting\u0027s participant set.","lastModifiedDate":"2022-03-24"},{"lineNumber":399,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":400,"author":{"gitId":"cpwill01"},"content":"#### Design considerations:","lastModifiedDate":"2022-03-24"},{"lineNumber":401,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":402,"author":{"gitId":"cpwill01"},"content":"**Aspect: Whether each `Contact` should keep track of a list of `Meetings` it participates in:**","lastModifiedDate":"2022-03-24"},{"lineNumber":403,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":404,"author":{"gitId":"cpwill01"},"content":"* **Alternative 1 (current choice):** `Contacts` do not keep track of the `Meetings` they participate in.","lastModifiedDate":"2022-03-24"},{"lineNumber":405,"author":{"gitId":"cpwill01"},"content":"    * Pros: More testable. The `Contact` class does not depend on `Meeting`, which reduces the","lastModifiedDate":"2022-03-24"},{"lineNumber":406,"author":{"gitId":"cpwill01"},"content":"      chance of regressions.","lastModifiedDate":"2022-03-24"},{"lineNumber":407,"author":{"gitId":"cpwill01"},"content":"    * Cons: Slower as every meeting in the `UniqueMeetingList` must be checked whenever a `Contact`","lastModifiedDate":"2022-03-24"},{"lineNumber":408,"author":{"gitId":"cpwill01"},"content":"      is updated or deleted. The poor performance would be noticeable when there is a large number of meetings scheduled.","lastModifiedDate":"2022-03-24"},{"lineNumber":409,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":410,"author":{"gitId":"cpwill01"},"content":"* **Alternative 2:** Each `Contact` keeps track of the `Meetings` it participates in.","lastModifiedDate":"2022-03-24"},{"lineNumber":411,"author":{"gitId":"cpwill01"},"content":"    * Pros: When updating or deleting contacts, the meetings whose participant sets need to be updated","lastModifiedDate":"2022-03-24"},{"lineNumber":412,"author":{"gitId":"cpwill01"},"content":"      can be directly accessed from the contact. Thus, these operations are faster.","lastModifiedDate":"2022-03-24"},{"lineNumber":413,"author":{"gitId":"cpwill01"},"content":"    * Cons: Harder to implement. Moreover, the `Meeting` and `Contact` classes will now depend on each other. The cyclic dependency makes the code","lastModifiedDate":"2022-03-24"},{"lineNumber":414,"author":{"gitId":"cpwill01"},"content":"      less testable.","lastModifiedDate":"2022-03-24"},{"lineNumber":415,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":416,"author":{"gitId":"cpwill01"},"content":"Reasons for choosing Alternative 1:","lastModifiedDate":"2022-03-24"},{"lineNumber":417,"author":{"gitId":"cpwill01"},"content":"* It reduces regressions by preventing cyclic dependencies.","lastModifiedDate":"2022-03-24"},{"lineNumber":418,"author":{"gitId":"cpwill01"},"content":"* The number of meetings that the target user (a busy NUS School of Computing student) would realistically schedule is","lastModifiedDate":"2022-03-24"},{"lineNumber":419,"author":{"gitId":"cpwill01"},"content":"  not expected to be so large that the slower performance of alternative 1 is noticeable.","lastModifiedDate":"2022-03-24"},{"lineNumber":420,"author":{"gitId":"cpwill01"},"content":"* Hence, testability was prioritised over performance.","lastModifiedDate":"2022-03-24"},{"lineNumber":421,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":422,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":423,"author":{"gitId":"cpwill01"},"content":"### Find meeting feature","lastModifiedDate":"2022-04-10"},{"lineNumber":424,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":425,"author":{"gitId":"cpwill01"},"content":"This section describes how the find meeting feature was implemented. This feature allows the user to find meetings by specifying","lastModifiedDate":"2022-04-10"},{"lineNumber":426,"author":{"gitId":"cpwill01"},"content":"search terms for the name, date and/or tags of meetings.","lastModifiedDate":"2022-04-10"},{"lineNumber":427,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":428,"author":{"gitId":"cpwill01"},"content":"#### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":429,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":430,"author":{"gitId":"cpwill01"},"content":"Similar to other commands, the user input (eg. `findm n/Alex d/22-02-2022`) is first parsed by the `FindMeetingCommandParser` to create a `FindMeetingCommand`,","lastModifiedDate":"2022-04-10"},{"lineNumber":431,"author":{"gitId":"cpwill01"},"content":"which when executed will update the Model\u0027s `FilteredList` using `FilteredList#setPredicate`.","lastModifiedDate":"2022-04-10"},{"lineNumber":432,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":433,"author":{"gitId":"cpwill01"},"content":"During the parsing, the user input is used to create an instance each of `MeetingNameHasKeywordsPredicate`, `MeetingTagHasKeywordsPredicate`","lastModifiedDate":"2022-04-10"},{"lineNumber":434,"author":{"gitId":"cpwill01"},"content":"and `MeetingOccursOnDatesPredicate`. (Note that all 3 are created regardless of whether the user specified a search term of that type.)","lastModifiedDate":"2022-04-11"},{"lineNumber":435,"author":{"gitId":"cpwill01"},"content":"The 3 classes implement the Java generic interface `Predicate\u003cMeeting\u003e` (see [here](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/Predicate.html) for documentation), with the `test` method implemented as follows:","lastModifiedDate":"2022-04-10"},{"lineNumber":436,"author":{"gitId":"cpwill01"},"content":"* If no search terms of a type are specified by the user, the predicate corresponding to that type will always return true. For example, if the user does not specify any name or tag to search for, `MeetingNameHasKeywordsPredicate#test` and `MeetingTagHasKeywordsPredicate#test` return true for any meeting.","lastModifiedDate":"2022-04-11"},{"lineNumber":437,"author":{"gitId":"cpwill01"},"content":"* If search terms of that type are specified, the predicate returns true if and only if the meeting being tested matches **at least one** of the search terms. For example, if the user specifies the dates `22-02-2022` and `11-04-2022`, `MeetingOccursOnDatesPredicate#test` will return true for meetings that occur on either date.","lastModifiedDate":"2022-04-11"},{"lineNumber":438,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":439,"author":{"gitId":"cpwill01"},"content":"These 3 predicates are combined using the default method `Predicate#and`, thus allowing the user to combine searches of different types (e.g. searching for meetings occurring on specific days with the same tag). The predicate produced from `and` is then used as the argument for `FilteredList#setPredicate`.","lastModifiedDate":"2022-04-11"},{"lineNumber":440,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":441,"author":{"gitId":"cpwill01"},"content":"The following sequence diagram summarises these interactions between the logic and model components when this feature is used:","lastModifiedDate":"2022-04-10"},{"lineNumber":442,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":443,"author":{"gitId":"cpwill01"},"content":"![FindMeetingSequenceDiagram](images/FindMeetingSequenceDiagram.png)","lastModifiedDate":"2022-04-10"},{"lineNumber":444,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":445,"author":{"gitId":"cpwill01"},"content":"**Note:** The lifeline for `FindMeetingCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML,","lastModifiedDate":"2022-04-10"},{"lineNumber":446,"author":{"gitId":"cpwill01"},"content":"the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-10"},{"lineNumber":447,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":448,"author":{"gitId":"cpwill01"},"content":"#### Design considerations:","lastModifiedDate":"2022-04-10"},{"lineNumber":449,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":450,"author":{"gitId":"cpwill01"},"content":"**Aspect: Whether to allow multiple search terms of each type** (e.g. allow users to specify multiple dates to search for)","lastModifiedDate":"2022-04-11"},{"lineNumber":451,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":452,"author":{"gitId":"cpwill01"},"content":"* **Alternative 1 (current choice):** Allow multiple search terms of each type.","lastModifiedDate":"2022-04-10"},{"lineNumber":453,"author":{"gitId":"cpwill01"},"content":"    * Pros: More flexible for the user. Addresses legitimate user stories, e.g. users might want to view their schedule on multiple days at once to aid with their planning.","lastModifiedDate":"2022-04-11"},{"lineNumber":454,"author":{"gitId":"cpwill01"},"content":"    * Cons: Manual testing is much more difficult due to the large increase in number of possible user inputs.","lastModifiedDate":"2022-04-10"},{"lineNumber":455,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":456,"author":{"gitId":"cpwill01"},"content":"* **Alternative 2:** Allow only one search term per type.","lastModifiedDate":"2022-04-11"},{"lineNumber":457,"author":{"gitId":"cpwill01"},"content":"    * Pros: Much easier to test manually due to the smaller number of possible inputs.","lastModifiedDate":"2022-04-10"},{"lineNumber":458,"author":{"gitId":"cpwill01"},"content":"    * Cons: Less flexible for the user. Might not adequately address the problems they face in managing their academic/social life. E.g. separate searches are required to view schedule on different days; unable to view schedule across multiple days at once.","lastModifiedDate":"2022-04-11"},{"lineNumber":459,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":460,"author":{"gitId":"cpwill01"},"content":"Reasons for choosing Alternative 1:","lastModifiedDate":"2022-04-10"},{"lineNumber":461,"author":{"gitId":"cpwill01"},"content":"* It helps to solve problems faced by the user in a faster and more convenient way than alternative 2.","lastModifiedDate":"2022-04-10"},{"lineNumber":462,"author":{"gitId":"cpwill01"},"content":"* The use of OOP through Java `Predicates` makes automated testing easier as we can test the `OR` behaviour","lastModifiedDate":"2022-04-10"},{"lineNumber":463,"author":{"gitId":"cpwill01"},"content":"  within each predicate separately before testing the `AND` behaviour in `FindMeetingCommand`. This helps to partially make","lastModifiedDate":"2022-04-10"},{"lineNumber":464,"author":{"gitId":"cpwill01"},"content":"  up for the relatively low manual testability compared to alternative 2.","lastModifiedDate":"2022-04-10"},{"lineNumber":465,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":466,"author":{"gitId":"cpwill01"},"content":"### Reminder feature","lastModifiedDate":"2022-04-11"},{"lineNumber":467,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":468,"author":{"gitId":"rahulprasad01"},"content":"This section describes how the reminder feature can be used for users to be reminded of meetings that will occur","lastModifiedDate":"2022-03-30"},{"lineNumber":469,"author":{"gitId":"rahulprasad01"},"content":"within a certain time frame which the users can specify.","lastModifiedDate":"2022-03-30"},{"lineNumber":470,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":471,"author":{"gitId":"cpwill01"},"content":"#### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":472,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":473,"author":{"gitId":"rahulprasad01"},"content":"The reminder feature uses the `ReminderDatePredicate`.The condition to locate the meetings is provided through this.","lastModifiedDate":"2022-03-30"},{"lineNumber":474,"author":{"gitId":"rahulprasad01"},"content":"The meetings in AddresSoc are extracted and stored in the `FilteredList`.","lastModifiedDate":"2022-03-30"},{"lineNumber":475,"author":{"gitId":"rahulprasad01"},"content":"It is then used to update `FilteredList` using `FilteredList#setPredicate`.","lastModifiedDate":"2022-03-30"},{"lineNumber":476,"author":{"gitId":"rahulprasad01"},"content":"The updated `FilteredList` is then displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":477,"author":{"gitId":"rahulprasad01"},"content":"This operation uses the `Model` for `Model#UpdateFilteredMeetingList`.","lastModifiedDate":"2022-03-30"},{"lineNumber":478,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":479,"author":{"gitId":"rahulprasad01"},"content":"Given below is an example usage scenario and how the Reminder mechanism behaves at each step.","lastModifiedDate":"2022-03-30"},{"lineNumber":480,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":481,"author":{"gitId":"rahulprasad01"},"content":"1. The user keys in and executes the command `reminder 2` to locate all meetings within 2 days.","lastModifiedDate":"2022-03-30"},{"lineNumber":482,"author":{"gitId":"rahulprasad01"},"content":"2. The command is parsed by `ReminderCommandParser`. The prefixes and their respective keywords are","lastModifiedDate":"2022-03-30"},{"lineNumber":483,"author":{"gitId":"rahulprasad01"},"content":"   extracted and saved in an `ArgumentMultimap`.","lastModifiedDate":"2022-03-30"},{"lineNumber":484,"author":{"gitId":"rahulprasad01"},"content":"3. The inputs are then checked for their validity. If no exceptions are detected, a `ReminderDatePredicate` and a `ReminderCommand` will be created.","lastModifiedDate":"2022-03-30"},{"lineNumber":485,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":486,"author":{"gitId":"rahulprasad01"},"content":"4. The `ReminderCommand#execute` is called which updates the `FilteredList` that is currently being displayed.","lastModifiedDate":"2022-03-30"},{"lineNumber":487,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":488,"author":{"gitId":"rahulprasad01"},"content":"The following sequence diagram shows how this works:","lastModifiedDate":"2022-03-30"},{"lineNumber":489,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":490,"author":{"gitId":"rahulprasad01"},"content":"![ReminderSequenceDiagram](images/ReminderSequenceDiagram.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":491,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":492,"author":{"gitId":"rahulprasad01"},"content":"**Note:** The lifeline for `ReminderCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML,","lastModifiedDate":"2022-03-31"},{"lineNumber":493,"author":{"gitId":"rahulprasad01"},"content":"the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-31"},{"lineNumber":494,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":495,"author":{"gitId":"rahulprasad01"},"content":"#### Design considerations:","lastModifiedDate":"2022-04-07"},{"lineNumber":496,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":497,"author":{"gitId":"cpwill01"},"content":"**Aspect: How to allow users to receive reminders**","lastModifiedDate":"2022-04-11"},{"lineNumber":498,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":499,"author":{"gitId":"rahulprasad01"},"content":"* **Alternative 1 (current choice):** Create a `reminder` command that allows users to specify the number of days to","lastModifiedDate":"2022-04-07"},{"lineNumber":500,"author":{"gitId":"rahulprasad01"},"content":"  return the result of upcoming meetings.","lastModifiedDate":"2022-04-07"},{"lineNumber":501,"author":{"gitId":"rahulprasad01"},"content":"    * Pros:","lastModifiedDate":"2022-04-07"},{"lineNumber":502,"author":{"gitId":"rahulprasad01"},"content":"        * Gives users flexibility in specifying the time frame they want to receive reminders for","lastModifiedDate":"2022-04-07"},{"lineNumber":503,"author":{"gitId":"rahulprasad01"},"content":"        * Easy to implement.","lastModifiedDate":"2022-04-07"},{"lineNumber":504,"author":{"gitId":"rahulprasad01"},"content":"    * Cons:","lastModifiedDate":"2022-04-07"},{"lineNumber":505,"author":{"gitId":"rahulprasad01"},"content":"        * User has to manually specify number of days.","lastModifiedDate":"2022-04-07"},{"lineNumber":506,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":507,"author":{"gitId":"rahulprasad01"},"content":"* **Alternative 2:** Set number of days reminders, so that when user call reminder command meetings","lastModifiedDate":"2022-04-07"},{"lineNumber":508,"author":{"gitId":"rahulprasad01"},"content":"  upcoming in a fixed number of days will be displayed.","lastModifiedDate":"2022-04-07"},{"lineNumber":509,"author":{"gitId":"rahulprasad01"},"content":"    * Pros:","lastModifiedDate":"2022-04-07"},{"lineNumber":510,"author":{"gitId":"rahulprasad01"},"content":"        * User does not have to manually specify number of days since it is fixed.","lastModifiedDate":"2022-04-07"},{"lineNumber":511,"author":{"gitId":"rahulprasad01"},"content":"    * Cons:","lastModifiedDate":"2022-04-07"},{"lineNumber":512,"author":{"gitId":"rahulprasad01"},"content":"        * User has no flexibility to specify the time range to receive reminders for.","lastModifiedDate":"2022-04-09"},{"lineNumber":513,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":514,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":515,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":516,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":517,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":518,"author":{"gitId":"cpwill01"},"content":"### Archive \u0026 Unarchive Features","lastModifiedDate":"2022-04-11"},{"lineNumber":519,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":520,"author":{"gitId":"cpwill01"},"content":"#### Archive feature","lastModifiedDate":"2022-04-11"},{"lineNumber":521,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":522,"author":{"gitId":"rahulprasad01"},"content":"This section describes how the archive feature can be used to be archive meetings that users do not","lastModifiedDate":"2022-04-09"},{"lineNumber":523,"author":{"gitId":"rahulprasad01"},"content":"want to appear in the meeting list , but still want to save the data. There is an unarchive command","lastModifiedDate":"2022-04-09"},{"lineNumber":524,"author":{"gitId":"rahulprasad01"},"content":"which is used to revert the archive command.","lastModifiedDate":"2022-04-09"},{"lineNumber":525,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":526,"author":{"gitId":"cpwill01"},"content":"##### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":527,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":528,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":529,"author":{"gitId":"rahulprasad01"},"content":"![ArchiveActivityDiagram](images/ArchiveActivityDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":530,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":531,"author":{"gitId":"rahulprasad01"},"content":"Users can archive a specific meeting by entering the `archive index` command. The following steps describe how this","lastModifiedDate":"2022-04-07"},{"lineNumber":532,"author":{"gitId":"rahulprasad01"},"content":"behaviour is implemented.","lastModifiedDate":"2022-04-09"},{"lineNumber":533,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":534,"author":{"gitId":"rahulprasad01"},"content":"The archive feature uses the `ArchiveStatus`.The condition to is used to check whether the meeting","lastModifiedDate":"2022-04-07"},{"lineNumber":535,"author":{"gitId":"rahulprasad01"},"content":"is already archived or not.","lastModifiedDate":"2022-04-07"},{"lineNumber":536,"author":{"gitId":"rahulprasad01"},"content":"The meetings in AddresSoc are extracted and stored in the `FilteredList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":537,"author":{"gitId":"rahulprasad01"},"content":"It is then used to update `FilteredList` using `FilteredList#PREDICATE_SHOW_ALL_MEETINGS`.","lastModifiedDate":"2022-04-07"},{"lineNumber":538,"author":{"gitId":"rahulprasad01"},"content":"The updated `FilteredList` is then displayed.","lastModifiedDate":"2022-04-07"},{"lineNumber":539,"author":{"gitId":"rahulprasad01"},"content":"This operation uses the `Model` for `Model#UpdateFilteredMeetingList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":540,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":541,"author":{"gitId":"rahulprasad01"},"content":"The following sequence diagram shows how this works:","lastModifiedDate":"2022-04-07"},{"lineNumber":542,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":543,"author":{"gitId":"rahulprasad01"},"content":"![ArchiveSequenceDiagram](images/ArchiveSequenceDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":544,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":545,"author":{"gitId":"rahulprasad01"},"content":"**Note:** The lifeline for `ArchiveCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML,","lastModifiedDate":"2022-04-07"},{"lineNumber":546,"author":{"gitId":"rahulprasad01"},"content":"the lifeline reaches the end of diagram.","lastModifiedDate":"2022-04-07"},{"lineNumber":547,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":548,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":549,"author":{"gitId":"rahulprasad01"},"content":"1. The user archives a `Meeting` in the observable `MeetingList` with command `archive index`.The index is parsed and","lastModifiedDate":"2022-04-07"},{"lineNumber":550,"author":{"gitId":"rahulprasad01"},"content":"   archive command is executed.","lastModifiedDate":"2022-04-07"},{"lineNumber":551,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":552,"author":{"gitId":"rahulprasad01"},"content":"2. The meeting\u0027s `ArchiveStatus` will be checked . If it is true, an error message will be displayed.","lastModifiedDate":"2022-04-07"},{"lineNumber":553,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":554,"author":{"gitId":"rahulprasad01"},"content":"3. Otherwise the meeting\u0027s `ArchiveStatus` will be set to true by the `Meeting#archive()` method.","lastModifiedDate":"2022-04-07"},{"lineNumber":555,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":556,"author":{"gitId":"rahulprasad01"},"content":"4. The current `FilteredList` will be updated showing only the unarchived meetings, facilitated by","lastModifiedDate":"2022-04-07"},{"lineNumber":557,"author":{"gitId":"rahulprasad01"},"content":"   `Model#PREDICATE_SHOW_ALL_MEETINGS`","lastModifiedDate":"2022-04-07"},{"lineNumber":558,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":559,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":560,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":561,"author":{"gitId":"cpwill01"},"content":"#### Unarchive feature","lastModifiedDate":"2022-04-11"},{"lineNumber":562,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":563,"author":{"gitId":"rahulprasad01"},"content":"This section shows how the archive feature can be reverted. The user can use the unarchive command so","lastModifiedDate":"2022-04-07"},{"lineNumber":564,"author":{"gitId":"rahulprasad01"},"content":"that the unarchived meeting appear in the meeting list.","lastModifiedDate":"2022-04-07"},{"lineNumber":565,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":566,"author":{"gitId":"cpwill01"},"content":"##### Implementation","lastModifiedDate":"2022-04-11"},{"lineNumber":567,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":568,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":569,"author":{"gitId":"rahulprasad01"},"content":"![UnArchiveActivityDiagram](images/UnArchiveActivityDiagram.png)","lastModifiedDate":"2022-04-07"},{"lineNumber":570,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":571,"author":{"gitId":"rahulprasad01"},"content":"Users can unarchive a specific meeting by entering the `unarchive index` command. The following steps describe how this","lastModifiedDate":"2022-04-07"},{"lineNumber":572,"author":{"gitId":"rahulprasad01"},"content":"behaviour is implemented.","lastModifiedDate":"2022-04-09"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":574,"author":{"gitId":"rahulprasad01"},"content":"The archive feature uses the `ArchiveStatus`.The condition to is used to check whether the meeting","lastModifiedDate":"2022-04-07"},{"lineNumber":575,"author":{"gitId":"rahulprasad01"},"content":"is already archived or not.","lastModifiedDate":"2022-04-07"},{"lineNumber":576,"author":{"gitId":"rahulprasad01"},"content":"The meetings in AddresSoc are extracted and stored in the `FilteredList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":577,"author":{"gitId":"rahulprasad01"},"content":"It is then used to update `FilteredList` using `FilteredList#PREDICATE_SHOW_ALL_MEETINGS`.","lastModifiedDate":"2022-04-07"},{"lineNumber":578,"author":{"gitId":"rahulprasad01"},"content":"The updated `FilteredList` is then displayed.","lastModifiedDate":"2022-04-07"},{"lineNumber":579,"author":{"gitId":"rahulprasad01"},"content":"This operation uses the `Model` for `Model#UpdateFilteredMeetingList`.","lastModifiedDate":"2022-04-07"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":582,"author":{"gitId":"rahulprasad01"},"content":"1. The user unarchives a `Meeting` in the observable `archivelist` with command `unarchive index`.The index is parsed and","lastModifiedDate":"2022-04-07"},{"lineNumber":583,"author":{"gitId":"rahulprasad01"},"content":"   unarchive command is executed.","lastModifiedDate":"2022-04-07"},{"lineNumber":584,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":585,"author":{"gitId":"rahulprasad01"},"content":"2. The meeting\u0027s `ArchiveStatus` will be checked . If it is false, an error message will be displayed.","lastModifiedDate":"2022-04-07"},{"lineNumber":586,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":587,"author":{"gitId":"rahulprasad01"},"content":"3. Otherwise the meeting\u0027s `ArchiveStatus` will be set to false by the `Meeting#archive()` method.","lastModifiedDate":"2022-04-07"},{"lineNumber":588,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":589,"author":{"gitId":"rahulprasad01"},"content":"4. The current `FilteredList` will be updated showing all the unarchived meetings, facilitated by","lastModifiedDate":"2022-04-07"},{"lineNumber":590,"author":{"gitId":"rahulprasad01"},"content":"   `Model#PREDICATE_SHOW_ALL_MEETINGS`","lastModifiedDate":"2022-04-07"},{"lineNumber":591,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":594,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":599,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":600,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":601,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":602,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":607,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":608,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"cpwill01"},"content":"**Target user profile**: [NUS School of Computing](https://www.comp.nus.edu.sg/) students who:","lastModifiedDate":"2022-03-02"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"cpwill01"},"content":"* have a need to manage a significant number of student contacts and meetings","lastModifiedDate":"2022-03-02"},{"lineNumber":615,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"cpwill01"},"content":"* can type fast and prefer typing to mouse interactions","lastModifiedDate":"2022-03-02"},{"lineNumber":617,"author":{"gitId":"cpwill01"},"content":"* are reasonably comfortable using CLI apps","lastModifiedDate":"2022-03-02"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"cpwill01"},"content":"**Value proposition**: AddresSoC helps the student to","lastModifiedDate":"2022-03-02"},{"lineNumber":620,"author":{"gitId":"cpwill01"},"content":"* keep track of the contacts of peers in the student\u0027s network,","lastModifiedDate":"2022-03-02"},{"lineNumber":621,"author":{"gitId":"cpwill01"},"content":"* organize the contacts for easier lookup, and","lastModifiedDate":"2022-03-02"},{"lineNumber":622,"author":{"gitId":"cpwill01"},"content":"* manage the student\u0027s social and academic life by keeping track of their schedule.","lastModifiedDate":"2022-03-02"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":624,"author":{"gitId":"cpwill01"},"content":"It completes these tasks faster than a typical mouse/GUI driven app.","lastModifiedDate":"2022-03-02"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"cpwill01"},"content":"| Priority | As a …​                                             | I can …​                                                  | So that …​                                                   |","lastModifiedDate":"2022-03-02"},{"lineNumber":632,"author":{"gitId":"cpwill01"},"content":"| -------- | ------------------------------------------------------ | ------------------------------------------------------------ | --------------------------------------------------------------- |","lastModifiedDate":"2022-03-02"},{"lineNumber":633,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | add a contact                                                | I can look it up if I need to find the contact.                 |","lastModifiedDate":"2022-03-02"},{"lineNumber":634,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | delete a contact                                             | I can remove contacts I no longer need or had added wrongly.    |","lastModifiedDate":"2022-03-02"},{"lineNumber":635,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | view all my contacts                                         | I can see my full list of contacts at once.                     |","lastModifiedDate":"2022-03-02"},{"lineNumber":636,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | add a meeting                                                | I can look it up if I need to find the meeting.                 |","lastModifiedDate":"2022-03-20"},{"lineNumber":637,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | delete a meeting                                             | I can remove meetings that I had added wrongly or are already done.    |","lastModifiedDate":"2022-03-20"},{"lineNumber":638,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user                                                   | view all my meetings                                         | I can see my full list of meetings at once.                     |","lastModifiedDate":"2022-03-20"},{"lineNumber":639,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user who wants to contact a specific person            | view a single contact and its details                        |                                                                 |","lastModifiedDate":"2022-03-02"},{"lineNumber":640,"author":{"gitId":"cpwill01"},"content":"| `* * *`  | user who needs to meet my peers                        | schedule a meeting with specific contacts in my contact list | I can keep track of my meetings                                 |","lastModifiedDate":"2022-03-02"},{"lineNumber":641,"author":{"gitId":"cpwill01"},"content":"| `* *`    | careless user who keyed in wrong information for a contact | edit the contact                                        | I can correct the wrong information                             |","lastModifiedDate":"2022-03-20"},{"lineNumber":642,"author":{"gitId":"cpwill01"},"content":"| `* *`    | careless user who keyed in wrong information for a meeting | edit the meeting                                        | I can correct the wrong information                             |","lastModifiedDate":"2022-03-20"},{"lineNumber":643,"author":{"gitId":"cpwill01"},"content":"| `* *`    | careless user                                          | undo my previous action(s)                                   | I can correct mistakes I made (eg. recover a deleted meeting).  |","lastModifiedDate":"2022-03-02"},{"lineNumber":644,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who wants to schedule meetings with various people| tag meetings with specific types (e.g. lunch, project)       | I can keep track of what each meeting is for.                   |","lastModifiedDate":"2022-03-20"},{"lineNumber":645,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who has many contacts                             | add tags to each contact                                     | I can keep track of any notable information about the contact.  |","lastModifiedDate":"2022-03-02"},{"lineNumber":646,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who wants to contact a specific person            | search for that specific contact                             | I do not need to look through the entire list to find it.       |","lastModifiedDate":"2022-03-02"},{"lineNumber":647,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who wants to schedule a meeting on a specific day | search for meetings occurring that day                       | I can see what time I am free that day.                         |","lastModifiedDate":"2022-03-20"},{"lineNumber":648,"author":{"gitId":"cpwill01"},"content":"| `* *`    | busy user with many meetings                           | search for meetings by name or tags                          | I can find specific meetings or groups of meetings easily.      |","lastModifiedDate":"2022-03-20"},{"lineNumber":649,"author":{"gitId":"cpwill01"},"content":"| `* *`    | busy user with many meetings                           | be reminded of meetings happening in the next few days       | I do not forget these meetings.                                 |","lastModifiedDate":"2022-03-02"},{"lineNumber":650,"author":{"gitId":"cpwill01"},"content":"| `* *`    | busy user with many meetings                           | be alerted when I try to add a new meeting that clashes with existing ones | I do not overlook the clash.                      |","lastModifiedDate":"2022-04-10"},{"lineNumber":651,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who needs to manage a variety of contacts         | categorize my contacts into subgroups                        | I can keep track of what group each contact is from.            |","lastModifiedDate":"2022-03-20"},{"lineNumber":652,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user who needs to manage a variety of contacts         | search for contacts by their tags / grouping                 | I can find all contacts from a specific group / with a specific tag.            |","lastModifiedDate":"2022-03-20"},{"lineNumber":653,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user with many contacts in my contact list             | sort contacts by name                                        | I can locate a person easily.                                   |","lastModifiedDate":"2022-03-20"},{"lineNumber":654,"author":{"gitId":"cpwill01"},"content":"| `* *`    | user with many meetings in my meeting list             | sort meetings by date and time                               | I can see my earliest upcoming meetings.                        |","lastModifiedDate":"2022-04-10"},{"lineNumber":655,"author":{"gitId":"cpwill01"},"content":"| `*`      | user with many meetings in my meeting list             | archive meetings that are irrelevant/completed               | these meetings do not clutter my meeting list, but I can still refer to them if I need to. |","lastModifiedDate":"2022-04-10"},{"lineNumber":656,"author":{"gitId":"cpwill01"},"content":"| `*`      | long-term user of the app                              | archive contacts that may no longer be relevant              | my contact list is less cluttered.                              |","lastModifiedDate":"2022-03-02"},{"lineNumber":657,"author":{"gitId":"cpwill01"},"content":"| `*`      | user who wants to add many new contacts quickly        | add many contacts at once                                    | I do not have to spend time adding them individually.           |","lastModifiedDate":"2022-03-02"},{"lineNumber":658,"author":{"gitId":"cpwill01"},"content":"| `*`      | new user who already has a contact list on another app | import all my contacts into AddresSoC                        | I do not have to spend time adding them individually.           |","lastModifiedDate":"2022-03-02"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"YiFei2"},"content":"(For all use cases below, the **System** is the `AddresSoc` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-01"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"rahulprasad01"},"content":"**Use case: Add a contact**","lastModifiedDate":"2022-03-02"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":667,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":669,"author":{"gitId":"rahulprasad01"},"content":"1. User requests to add a new contact to the contact list","lastModifiedDate":"2022-03-03"},{"lineNumber":670,"author":{"gitId":"rahulprasad01"},"content":"2. AddresSoc adds the contact","lastModifiedDate":"2022-03-03"},{"lineNumber":671,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":672,"author":{"gitId":"rahulprasad01"},"content":"   Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":673,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":674,"author":{"gitId":"rahulprasad01"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":675,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":676,"author":{"gitId":"cpwill01"},"content":"* 1a. The contact list does not exist.","lastModifiedDate":"2022-04-11"},{"lineNumber":677,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":678,"author":{"gitId":"cpwill01"},"content":"    * 1a1. AddresSoc creates a new list.","lastModifiedDate":"2022-04-11"},{"lineNumber":679,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":680,"author":{"gitId":"rahulprasad01"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-03-03"},{"lineNumber":681,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":682,"author":{"gitId":"cpwill01"},"content":"* 1a. The arguments specified by the user are invalid.","lastModifiedDate":"2022-04-11"},{"lineNumber":683,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":684,"author":{"gitId":"cpwill01"},"content":"    * 1a1. AddresSoc shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":685,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":686,"author":{"gitId":"cpwill01"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":687,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":688,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":689,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":690,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":691,"author":{"gitId":"rahulprasad01"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2022-03-02"},{"lineNumber":692,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":693,"author":{"gitId":"rahulprasad01"},"content":"**MSS**","lastModifiedDate":"2022-03-02"},{"lineNumber":694,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":695,"author":{"gitId":"rahulprasad01"},"content":"1.  User requests to list contacts","lastModifiedDate":"2022-03-02"},{"lineNumber":696,"author":{"gitId":"rahulprasad01"},"content":"2.  AddresSoc shows a list of contacts","lastModifiedDate":"2022-03-02"},{"lineNumber":697,"author":{"gitId":"rahulprasad01"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2022-03-02"},{"lineNumber":698,"author":{"gitId":"rahulprasad01"},"content":"4.  AddresSoc deletes the contact","lastModifiedDate":"2022-03-02"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":702,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-03-02"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":704,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-03-02"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":706,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-03-02"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":708,"author":{"gitId":"rahulprasad01"},"content":"* 3a. The contact specified by user is invalid.","lastModifiedDate":"2022-03-02"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":710,"author":{"gitId":"rahulprasad01"},"content":"    * 3a1. AddresSoc shows an error message.","lastModifiedDate":"2022-03-02"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":712,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-02"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":714,"author":{"gitId":"cpwill01"},"content":"**Use case: Add a meeting**","lastModifiedDate":"2022-04-10"},{"lineNumber":715,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":716,"author":{"gitId":"YiFei2"},"content":"**MSS**","lastModifiedDate":"2022-03-01"},{"lineNumber":717,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":718,"author":{"gitId":"cpwill01"},"content":"1.  User requests to add a meeting to the meeting list","lastModifiedDate":"2022-04-11"},{"lineNumber":719,"author":{"gitId":"cpwill01"},"content":"2.  AddresSoc adds the meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":720,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":721,"author":{"gitId":"YiFei2"},"content":"    Use case ends.","lastModifiedDate":"2022-03-01"},{"lineNumber":722,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":723,"author":{"gitId":"YiFei2"},"content":"**Extensions**","lastModifiedDate":"2022-03-01"},{"lineNumber":724,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":725,"author":{"gitId":"cpwill01"},"content":"* 1a. The arguments passed are invalid.","lastModifiedDate":"2022-04-11"},{"lineNumber":726,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":727,"author":{"gitId":"cpwill01"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":728,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":729,"author":{"gitId":"cpwill01"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":730,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":731,"author":{"gitId":"cpwill01"},"content":"* 1b. The mandatory arguments are not passed.","lastModifiedDate":"2022-04-11"},{"lineNumber":732,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":733,"author":{"gitId":"cpwill01"},"content":"    * 1b1. AddressBook shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":734,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":735,"author":{"gitId":"cpwill01"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":736,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":737,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":738,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":739,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":740,"author":{"gitId":"cpwill01"},"content":"**Use case: Delete a meeting**","lastModifiedDate":"2022-04-10"},{"lineNumber":741,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":742,"author":{"gitId":"tomascherian"},"content":"**MSS**","lastModifiedDate":"2022-03-03"},{"lineNumber":743,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":744,"author":{"gitId":"tomascherian"},"content":"1.  User requests to list meetings","lastModifiedDate":"2022-03-03"},{"lineNumber":745,"author":{"gitId":"tomascherian"},"content":"2.  AddresSoc shows a list of meetings","lastModifiedDate":"2022-03-03"},{"lineNumber":746,"author":{"gitId":"cpwill01"},"content":"3.  User requests to delete a specific meeting in the list","lastModifiedDate":"2022-04-10"},{"lineNumber":747,"author":{"gitId":"cpwill01"},"content":"4.  AddresSoc deletes the meeting","lastModifiedDate":"2022-04-10"},{"lineNumber":748,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":749,"author":{"gitId":"tomascherian"},"content":"    Use case ends.","lastModifiedDate":"2022-03-03"},{"lineNumber":750,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":751,"author":{"gitId":"tomascherian"},"content":"**Extensions**","lastModifiedDate":"2022-03-03"},{"lineNumber":752,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":753,"author":{"gitId":"cpwill01"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-04-10"},{"lineNumber":754,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":755,"author":{"gitId":"cpwill01"},"content":"  Use case ends.","lastModifiedDate":"2022-04-10"},{"lineNumber":756,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":757,"author":{"gitId":"cpwill01"},"content":"* 3a. The specified meeting is invalid.","lastModifiedDate":"2022-04-10"},{"lineNumber":758,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":759,"author":{"gitId":"cpwill01"},"content":"    * 3a1. AddresSoc shows an error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":760,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":761,"author":{"gitId":"tomascherian"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-03-03"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"cpwill01"},"content":"**Use case: Find meetings**","lastModifiedDate":"2022-04-10"},{"lineNumber":764,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":765,"author":{"gitId":"cpwill01"},"content":"**MSS**","lastModifiedDate":"2022-04-10"},{"lineNumber":766,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":767,"author":{"gitId":"cpwill01"},"content":"1. User requests to find meetings satisfying their desired search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":768,"author":{"gitId":"cpwill01"},"content":"2. AddresSoc shows the list of meetings satisfying the search terms.","lastModifiedDate":"2022-04-10"},{"lineNumber":769,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":770,"author":{"gitId":"cpwill01"},"content":"**Extensions**","lastModifiedDate":"2022-04-10"},{"lineNumber":771,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":772,"author":{"gitId":"cpwill01"},"content":"* 1a. User does not provide any arguments as search terms.","lastModifiedDate":"2022-04-11"},{"lineNumber":773,"author":{"gitId":"cpwill01"},"content":"    * 1a1. AddresSoc shows an error message.","lastModifiedDate":"2022-04-10"},{"lineNumber":774,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":775,"author":{"gitId":"cpwill01"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":776,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":777,"author":{"gitId":"cpwill01"},"content":"* 1b. User provides invalid arguments as search terms.","lastModifiedDate":"2022-04-11"},{"lineNumber":778,"author":{"gitId":"cpwill01"},"content":"    * 1b1. AddresSoc shows an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":779,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":780,"author":{"gitId":"cpwill01"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-04-11"},{"lineNumber":781,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":782,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":783,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":784,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":786,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"YiFei2"},"content":"3.  A user with above average typing speed should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-03-01"},{"lineNumber":791,"author":{"gitId":"YiFei2"},"content":"4.  Should be easily maintainable and scalable (i.e. use of OOP and high cohesion) to implement new features in future.","lastModifiedDate":"2022-03-01"},{"lineNumber":792,"author":{"gitId":"cpwill01"},"content":"5.  Should have high testability by reducing use of coupling.","lastModifiedDate":"2022-04-11"},{"lineNumber":793,"author":{"gitId":"YiFei2"},"content":"6.  Should be well documented for users to understand how to use the product.","lastModifiedDate":"2022-03-01"},{"lineNumber":794,"author":{"gitId":"YiFei2"},"content":"7.  Should be well documented for developers to understand how to further improve the product.","lastModifiedDate":"2022-03-01"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":803,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":804,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"cpwill01"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts and meetings. The window size may not be optimum.","lastModifiedDate":"2022-04-11"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"cpwill01"},"content":"### Saving \u0026 Loading data","lastModifiedDate":"2022-04-11"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"cpwill01"},"content":"1. Generating a save file when there is no saved data found.","lastModifiedDate":"2022-04-11"},{"lineNumber":831,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":832,"author":{"gitId":"cpwill01"},"content":"    1.  Prerequisites: There is no `addressoc.json` file in a folder called `data`  located in the same directory as the jar file.","lastModifiedDate":"2022-04-11"},{"lineNumber":833,"author":{"gitId":"cpwill01"},"content":"    1.  Launch the app and enter the exit command (Note: a command must be entered for the data to be saved, so closing the app via the GUI will not work unless another command has already been entered).","lastModifiedDate":"2022-04-11"},{"lineNumber":834,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":835,"author":{"gitId":"cpwill01"},"content":"        Expected: An `addressoc.json` file containing the sample contact list and meeting list data is generated in the `data` folder located in the same directory as the jar file","lastModifiedDate":"2022-04-11"},{"lineNumber":836,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":837,"author":{"gitId":"cpwill01"},"content":"1. Handling an invalid save file.","lastModifiedDate":"2022-04-11"},{"lineNumber":838,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":839,"author":{"gitId":"cpwill01"},"content":"    1.  Prerequisites: There is already an `addressoc.json` file in the correct folder.","lastModifiedDate":"2022-04-11"},{"lineNumber":840,"author":{"gitId":"cpwill01"},"content":"    1.  Open the json file in a text editor and delete one line (eg. the first line)","lastModifiedDate":"2022-04-11"},{"lineNumber":841,"author":{"gitId":"cpwill01"},"content":"    1.  Launch the app","lastModifiedDate":"2022-04-11"},{"lineNumber":842,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":843,"author":{"gitId":"cpwill01"},"content":"        Expected: The contact list and meeting list are both empty.","lastModifiedDate":"2022-04-11"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"cpwill01"},"content":"### Adding a contact","lastModifiedDate":"2022-04-11"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"cpwill01"},"content":"1. Adding a valid contact.","lastModifiedDate":"2022-04-11"},{"lineNumber":849,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":850,"author":{"gitId":"cpwill01"},"content":"    1.  Prerequisites: Default list of contacts is loaded into the application.","lastModifiedDate":"2022-04-11"},{"lineNumber":851,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `addc n/Bobby Low e/bobby.low@u.nus.edu p/94323302 th/bLow01 t/friends` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":852,"author":{"gitId":"cpwill01"},"content":"        Expected: New contact is added to the list. Details of added meeting is shown in status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":853,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":854,"author":{"gitId":"cpwill01"},"content":"1. Attempting to add an invalid contact.","lastModifiedDate":"2022-04-11"},{"lineNumber":855,"author":{"gitId":"cpwill01"},"content":"    1.  Prerequisites: Same as above.","lastModifiedDate":"2022-04-11"},{"lineNumber":856,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `addc n/Jacky Yeo e/jacky.yeo@u.nus.edu p/94123093 th/rak_01` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":857,"author":{"gitId":"cpwill01"},"content":"        Expected: No contact is added. Error message shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":858,"author":{"gitId":"cpwill01"},"content":"    1.  Other incorrect `addc` commands to try: `addc n/Alice p/92345678 e/xyz th/alice `, `addc n/A!@ p/92345678 e/a@a.com th/alice`, `addc`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":859,"author":{"gitId":"cpwill01"},"content":"        Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":860,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":861,"author":{"gitId":"cpwill01"},"content":"### Editing a contact","lastModifiedDate":"2022-04-11"},{"lineNumber":862,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":863,"author":{"gitId":"cpwill01"},"content":"Prerequisites: List all contacts using the `listc` command. Multiple contacts in the list. There is no contact with the telegram handle `rak_02`.","lastModifiedDate":"2022-04-11"},{"lineNumber":864,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":865,"author":{"gitId":"cpwill01"},"content":"1. Editing a contact while all contacts are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":866,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `editc 1 th/rak_02` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":867,"author":{"gitId":"cpwill01"},"content":"       Expected: The first contact in the list is edited. Details of the edited contact are shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":868,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":869,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `editc 0 th/rake_02` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":870,"author":{"gitId":"cpwill01"},"content":"       Expected: No meeting is edited. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `editc` commands to try: `editc th/rak_02`, `editc 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":873,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":876,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":877,"author":{"gitId":"cpwill01"},"content":"### Deleting a contact","lastModifiedDate":"2022-04-11"},{"lineNumber":878,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":879,"author":{"gitId":"cpwill01"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":880,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":881,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: List all persons using the `listc` command. Multiple contacts in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":882,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":883,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `deletec 1`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":884,"author":{"gitId":"cpwill01"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":885,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":886,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `deletec 0`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":887,"author":{"gitId":"cpwill01"},"content":"       Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":888,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":889,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `deletec` commands to try: `deletec`, `deletec x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":890,"author":{"gitId":"cpwill01"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"tomascherian"},"content":"### Finding contacts","lastModifiedDate":"2022-04-11"},{"lineNumber":893,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":894,"author":{"gitId":"cpwill01"},"content":"1. Finding contacts with valid search terms","lastModifiedDate":"2022-04-11"},{"lineNumber":895,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":896,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: List all contacts using the `listc` command. Multiple contacts in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":897,"author":{"gitId":"tomascherian"},"content":"    1. Test case: `findc n/alex t/friends` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":898,"author":{"gitId":"tomascherian"},"content":"       Expected: Contacts named `alex` with a tag called `friends` will be displayed. The number of contacts with the name","lastModifiedDate":"2022-04-11"},{"lineNumber":899,"author":{"gitId":"tomascherian"},"content":"       `alex` and the tag `friends` is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":900,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":901,"author":{"gitId":"cpwill01"},"content":"2. Attempting to find contacts with invalid search terms","lastModifiedDate":"2022-04-11"},{"lineNumber":902,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: Same as above.","lastModifiedDate":"2022-04-11"},{"lineNumber":903,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `findc p/12345678`  \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":904,"author":{"gitId":"tomascherian"},"content":"       Expected: No contacts are searched. Error details shown in status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":905,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `findc` commands to try: `findc th/john_01`, `findc alex` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":906,"author":{"gitId":"tomascherian"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":907,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":908,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":909,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":910,"author":{"gitId":"YiFei2"},"content":"### Adding a meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":911,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":912,"author":{"gitId":"cpwill01"},"content":"1. Adding meetings (including clashing and non-clashing meetings)","lastModifiedDate":"2022-04-11"},{"lineNumber":913,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: Default list of meetings are loaded into the application.","lastModifiedDate":"2022-04-11"},{"lineNumber":914,"author":{"gitId":"YiFei2"},"content":"    1. Test case: `addm n/Lunch with Friends d/30-04-2022 st/1100 et/1300 t/important` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":915,"author":{"gitId":"YiFei2"},"content":"       Expected: New meeting is added to the list. Details of added meeting is shown in status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":916,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `addm n/Project Meeting with Advisor d/30-04-2022 st/1200 et/1400` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":917,"author":{"gitId":"YiFei2"},"content":"       Expected: New meeting is added to the list. Warning notification pop up due to clash in timing with previously added","lastModifiedDate":"2022-04-11"},{"lineNumber":918,"author":{"gitId":"YiFei2"},"content":"       meeting. Details of added meeting and meeting it clashes with is shown in status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":919,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `addm n/Project Meeting with Advisor d/30-04-2022 st/1600 et/1800` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":920,"author":{"gitId":"YiFei2"},"content":"       Expected: No meeting is added due to duplicate meeting with meeting added in previous test case. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":921,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":922,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `addm` commands to try","lastModifiedDate":"2022-04-11"},{"lineNumber":923,"author":{"gitId":"cpwill01"},"content":"       `addm n/Dinner with Family d/24-05-2022`, `addm n/2103 Exam d/23-04-2022 st/1500 et/1400`, `addm`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":924,"author":{"gitId":"cpwill01"},"content":"       Expected: No meeting is added. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":925,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":926,"author":{"gitId":"tomascherian"},"content":"### Editing a meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":927,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":928,"author":{"gitId":"cpwill01"},"content":"1. Editing a meeting while all meetings are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":929,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: List all meetings using the `listm` command. Multiple meetings in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":930,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":931,"author":{"gitId":"tomascherian"},"content":"    1. Test case: `editm 1 d/30-04-2022 st/1630 et/1730` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":932,"author":{"gitId":"tomascherian"},"content":"       Expected: The first meeting in the list is edited. Details of the edited meeting is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":933,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":934,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `editm 0 d/30-04-2022` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":935,"author":{"gitId":"tomascherian"},"content":"       Expected: No meeting is edited. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":936,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `editm` commands to try: `editm d/10-04-2022`, `editm 2`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":937,"author":{"gitId":"tomascherian"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":938,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":939,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":940,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":941,"author":{"gitId":"YiFei2"},"content":"### Deleting a meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":942,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":943,"author":{"gitId":"cpwill01"},"content":"1. Deleting a meeting while all meetings are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":944,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: List all meetings using the `listm` command. Multiple meetings in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":945,"author":{"gitId":"YiFei2"},"content":"    1. Test case: `deletem 1` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":946,"author":{"gitId":"YiFei2"},"content":"       Expected: First meeting is deleted from the list. Details of the deleted meeting is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":947,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `deletem 0` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":948,"author":{"gitId":"YiFei2"},"content":"       Expected: No meeting is deleted. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":949,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect `deletem` commands to try: `deletem`, `deletem x`, (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":950,"author":{"gitId":"YiFei2"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":951,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":952,"author":{"gitId":"cpwill01"},"content":"### Finding meetings","lastModifiedDate":"2022-04-11"},{"lineNumber":953,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":954,"author":{"gitId":"cpwill01"},"content":"1. Finding meetings by search terms of one type only.","lastModifiedDate":"2022-04-11"},{"lineNumber":955,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `findm d/12 03 2022`","lastModifiedDate":"2022-04-11"},{"lineNumber":956,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":957,"author":{"gitId":"cpwill01"},"content":"        Expected: The full list of meetings is still shown as the find operation is not carried out. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":958,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `findm n/project`","lastModifiedDate":"2022-04-11"},{"lineNumber":959,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":960,"author":{"gitId":"cpwill01"},"content":"        Expected: All meetings with the word `project` (not case-sensitive) in their name are listed. For example, if the sample","lastModifiedDate":"2022-04-11"},{"lineNumber":961,"author":{"gitId":"cpwill01"},"content":"        meeting data is being used, the meetings `CS2103T project` and `CS2101 project` are listed. The number of meetings listed is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":962,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `findm d/12-03-2022 d/15-03-2022`","lastModifiedDate":"2022-04-11"},{"lineNumber":963,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":964,"author":{"gitId":"cpwill01"},"content":"        Expected: All meetings occurring on either `12-03-2022` **or** `15-03-2022` are listed. For example, if the sample meeting data is being used, the same 2 meetings are listed. Similar to above for the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":965,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":966,"author":{"gitId":"cpwill01"},"content":"1. Finding meetings by search terms of different types.","lastModifiedDate":"2022-04-11"},{"lineNumber":967,"author":{"gitId":"cpwill01"},"content":"    1.  Test case: `findm n/project d/12-03-2022`","lastModifiedDate":"2022-04-11"},{"lineNumber":968,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":969,"author":{"gitId":"cpwill01"},"content":"        Expected: All meetings that both have the word `project` (not case-sensitive) in their name **and** occur on `12-03-2022` are listed. For example, if the sample","lastModifiedDate":"2022-04-11"},{"lineNumber":970,"author":{"gitId":"cpwill01"},"content":"        meeting data is being used, only the meeting `CS2103T project` is listed. Similar to above for the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":971,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":972,"author":{"gitId":"YiFei2"},"content":"### Undo/Redo","lastModifiedDate":"2022-04-11"},{"lineNumber":973,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":974,"author":{"gitId":"cpwill01"},"content":"1. Undoing and redoing add contact command","lastModifiedDate":"2022-04-11"},{"lineNumber":975,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: No contacts sharing any of the fields with contact to be added in test case.","lastModifiedDate":"2022-04-11"},{"lineNumber":976,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":977,"author":{"gitId":"YiFei2"},"content":"    1. Test case: `addc n/Bobby Tan p/98127492 e/Bobby01@gmail.com th/Bobby012` followed by `undo` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":978,"author":{"gitId":"YiFei2"},"content":"       Expected: Contact will first be added to the list and details of the added contact is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":979,"author":{"gitId":"YiFei2"},"content":"       The contact will be removed after `undo` is executed and a successful `undo` message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":980,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":981,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `addc n/Bobby Tan p/98127492 e/Bobby01@gmail.com th/Bobby012` followed by `undo`, then `redo` \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":982,"author":{"gitId":"YiFei2"},"content":"       Expected: Similar to previous test case. However, contact will be added back to the list after execution of","lastModifiedDate":"2022-04-11"},{"lineNumber":983,"author":{"gitId":"YiFei2"},"content":"       `redo`, and a successful `redo` message is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":984,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":985,"author":{"gitId":"cpwill01"},"content":"1. Undoing and redoing without prior changes to the lists","lastModifiedDate":"2022-04-11"},{"lineNumber":986,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: No command has been executed since the application was opened, or all executed commands have already been undone.","lastModifiedDate":"2022-04-11"},{"lineNumber":987,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `undo` without any prior changes to the lists \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":988,"author":{"gitId":"YiFei2"},"content":"       Expected: No change to the lists. Error details are shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":989,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `redo` without any prior successful `undo` command \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":990,"author":{"gitId":"YiFei2"},"content":"       Expected: No change to the lists. Error details are shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":991,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":992,"author":{"gitId":"cpwill01"},"content":"### Reminder","lastModifiedDate":"2022-04-11"},{"lineNumber":993,"author":{"gitId":"cpwill01"},"content":"1. Getting a reminder for meetings in the meeting list","lastModifiedDate":"2022-04-11"},{"lineNumber":994,"author":{"gitId":"cpwill01"},"content":"    1. Prerequisites: List all meetings using the `listm` command. Multiple meetings in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":995,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `reminder 1`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":996,"author":{"gitId":"cpwill01"},"content":"       Expected: All meetings whose date are either the current day or the next day are listed. The number of meetings listed is shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":997,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":998,"author":{"gitId":"cpwill01"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":999,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1000,"author":{"gitId":"rahulprasad01"},"content":"### Archiving a meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":1001,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1002,"author":{"gitId":"rahulprasad01"},"content":"1. Archiving a meeting while all meetings are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1004,"author":{"gitId":"rahulprasad01"},"content":"    1. Prerequisites: List all meetings using the `listm` command. Multiple meetings in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1006,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `archive 1`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1007,"author":{"gitId":"cpwill01"},"content":"       Expected: First meeting is archived and no longer shown in the meeting list. Details of the archived meeting shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1009,"author":{"gitId":"cpwill01"},"content":"    1. Test case: `archive 0`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1010,"author":{"gitId":"cpwill01"},"content":"       Expected: No meeting is archived. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1012,"author":{"gitId":"cpwill01"},"content":"    1. Other incorrect archive commands to try: `archive`, `archive x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1013,"author":{"gitId":"rahulprasad01"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1015,"author":{"gitId":"rahulprasad01"},"content":"### Unarchiving a meeting","lastModifiedDate":"2022-04-11"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1017,"author":{"gitId":"rahulprasad01"},"content":"1. Unarchiving a meeting while all archived meetings are being shown","lastModifiedDate":"2022-04-11"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1019,"author":{"gitId":"rahulprasad01"},"content":"    1. Prerequisites: List all archived meetings using the `archivelist` command. Multiple meetings in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":1020,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1021,"author":{"gitId":"rahulprasad01"},"content":"    1. Test case: `unarchive 1`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1022,"author":{"gitId":"cpwill01"},"content":"       Expected: First meeting is unarchived and is no longer in the archive list. Details of the archived contact shown in the status message. The main meeting list is shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1024,"author":{"gitId":"rahulprasad01"},"content":"    1. Test case: `unarchive 0`\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1025,"author":{"gitId":"cpwill01"},"content":"       Expected: No meeting is archived. Error details shown in the status message.","lastModifiedDate":"2022-04-11"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":1027,"author":{"gitId":"rahulprasad01"},"content":"    1. Other incorrect archive commands to try: `unarchive`, `unarchive x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":1028,"author":{"gitId":"rahulprasad01"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2022-04-11"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":88,"cpwill01":358,"YiFei2":114,"rahulprasad01":149,"-":320}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddresSoC’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"cpwill01":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"AddresSoC is a desktop app for School of Computing (SoC) students to **keep track of their student network and add meetings**.","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"If you\u0027re a student who can type fast, AddresSoC can get your contact and schedule management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"# Quick start","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"2. Download the latest `addressoc.jar` from [here](https://github.com/AY2122S2-CS2103T-W12-3/tp/releases/latest).","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddresSoC.","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"4. Double-click the file to start the app. The GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"   * **`listc`** : Lists all your contacts.","lastModifiedDate":"2022-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"   * **`addc`**` n/John Doe e/johnd@u.nus.edu p/98076034 th/johnd` : Adds a contact named `John Doe` to your contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"   * **`addm`**` n/SE Team Meeting d/23/03/2022 st/1415 et/1615` : Adds a meeting called \"SE Team Meeting\" on 23 March 2022 from 1415hrs to 1615hrs.","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"   * **`deletec`**`3` : Deletes the 3rd contact shown in your currently displayed contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"   * **`clear`** : Deletes all your contacts and meetings.","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"6. You may refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"# Features","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"  e.g. in `addc n/NAME`, `NAME` is a parameter which can be used as `addc n/John Doe`.","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"  e.g.  `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"  e.g. `[t/TAG]…​` can be used as `t/` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `listc`, `listm`, `help`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"## Contact","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"### Listing all contacts : `listc`","lastModifiedDate":"2022-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"Shows you all the contacts in your contact list.","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"Format: `listc`","lastModifiedDate":"2022-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"rahulprasad01"},"content":"### Adding a contact : `addc`","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"Adds the specified contact to your contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"Format: `addc n/NAME e/EMAIL p/PHONE_NUMBER th/TELEGRAM_HANDLE [t/TAGS]...`","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"* Adds a person into your contact list with given email, phone number, telegram handle.","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"* Optionally, tags can also be specified for the contact.","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"Examples:","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"* `addc n/Alice Lee e/alice.lee@u.nus.edu p/786454454 th/theor9 t/database expert t/CS2103 teammate` adds the contact Alice Lee with the given email, phone, telegram and tags.","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"YiFei2"},"content":"* `addc n/Bob Tan p/91234567` gives an error message as e/EMAIL and th/TELEGRAM is not optional.","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"Duplicate contacts with the same name, phone number, email or telegram handle cannot be added into the app.","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"rahulprasad01"},"content":"### Deleting a contact : `deletec`","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":100,"author":{"gitId":"YiFei2"},"content":"Removes the specified person from your currently displayed contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"Format: `deletec CONTACT_INDEX`","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":104,"author":{"gitId":"YiFei2"},"content":"* Deletes the contact at the specified CONTACT_INDEX.","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"* CONTACT_INDEX refers to the index number shown in your currently displayed contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"YiFei2"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-02"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"* `deletec 2` deletes the 2nd person in your currently displayed contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"* `deletec 0` returns an error for invalid input as 0 is not a positive integer.","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"### Editing a contact : `editc`","lastModifiedDate":"2022-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"YiFei2"},"content":"Edits an existing contact in your currently displayed contact list.","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"YiFei2"},"content":"Format: `editc CONTACT_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [th/TELEGRAM_HANDLE] [t/TAG]…​`","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":119,"author":{"gitId":"YiFei2"},"content":"* Edits the contact at the specified `CONTACT_INDEX`. ","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"* `CONTACT_INDEX` refers to the index number shown in your currently displayed contact list. ","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"YiFei2"},"content":"* `CONTACT_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"YiFei2"},"content":"* Existing contact details will be updated according to your input fields.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":125,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"YiFei2"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"YiFei2"},"content":"When editing tags, the existing tags of the contact will be removed i.e. adding of tags is not cumulative. You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":132,"author":{"gitId":"YiFei2"},"content":"* `editc 1 p/91234567 e/johndoe@example.com` edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-04-11"},{"lineNumber":133,"author":{"gitId":"YiFei2"},"content":"* `editc 2 n/Betsy Crower t/` edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":135,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":136,"author":{"gitId":"YiFei2"},"content":"**:information_source: Note:** The new edited contact follows the same constraints as a new contact to be added using `addc` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":137,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"### Locating contacts by name and tag: `findc`","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"Finds the contacts that match your search criteria as explained below:","lastModifiedDate":"2022-04-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"Format: `findc [n/NAMES]... [t/TAGS]...`","lastModifiedDate":"2022-04-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":145,"author":{"gitId":"tomascherian"},"content":"* For both `NAMES` and `TAGS`:","lastModifiedDate":"2022-04-06"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"    * The search is case-insensitive e.g. `t/friends` matches `Friends`","lastModifiedDate":"2022-04-06"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"    * Only full words are matched e.g. `n/alex` matches `Alex Yeoh` but not `Alexander Yeoh`","lastModifiedDate":"2022-04-06"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"* If you specify only `n/NAMES`, contacts matching at least one of `n/NAMES` will be returned.","lastModifiedDate":"2022-04-06"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"* If you specify only `t/TAGS`, contacts matching at least one of `t/TAGS` will be returned.","lastModifiedDate":"2022-04-06"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"* If you specify both `n/NAMES` and `t/TAGS`, contacts matching at least one of `n/NAMES`","lastModifiedDate":"2022-04-06"},{"lineNumber":151,"author":{"gitId":"YiFei2"},"content":"  **and** at least one of `t/TAGS` will be returned.","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":154,"author":{"gitId":"YiFei2"},"content":"* `findc n/alex n/roy` returns the contacts with `alex` or `roy` in their names.","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"YiFei2"},"content":"* `findc t/friends t/family` returns the contacts matching the `friends` tag or the `family` tag or both .","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"YiFei2"},"content":"  ![example](images/Find_Contact_example2.png) \u003cbr\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":157,"author":{"gitId":"YiFei2"},"content":"* `findc n/alex t/friends` returns `Alex Yeoh` as the contact\u0027s name contains `alex` and the contact is tagged with `friends`.","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"* `findc n/Alex n/David t/family t/friends` will return `Alex Yeoh`, `David Li` as both contacts\u0027 names contain either `alex` or `david`","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"and both contacts are labelled with either the `family` tag or the `friends` tag or both.","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"tomascherian"},"content":"  ![example](images/Find_Contact_example3.png)","lastModifiedDate":"2022-04-06"},{"lineNumber":161,"author":{"gitId":"tomascherian"},"content":"  ","lastModifiedDate":"2022-04-06"},{"lineNumber":162,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":164,"author":{"gitId":"rahulprasad01"},"content":"### Sorting contacts : `sortc`","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"rahulprasad01"},"content":"Sort contacts in the displayed contact list according to name.","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"rahulprasad01"},"content":"Format: `sortc`","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"* Sort contacts according to name in ascending alphabetical order.","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"cpwill01"},"content":"## Meeting","lastModifiedDate":"2022-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"cpwill01"},"content":"### Listing all meetings : `listm`","lastModifiedDate":"2022-04-05"},{"lineNumber":177,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":178,"author":{"gitId":"cpwill01"},"content":"Shows you a list of all meetings in your meeting list.","lastModifiedDate":"2022-04-05"},{"lineNumber":179,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":180,"author":{"gitId":"cpwill01"},"content":"Format: `listm`","lastModifiedDate":"2022-04-05"},{"lineNumber":181,"author":{"gitId":"YiFei2"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":182,"author":{"gitId":"YiFei2"},"content":"### Adding a meeting : `addm`","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":184,"author":{"gitId":"YiFei2"},"content":"Adds a meeting to your meeting list.","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":186,"author":{"gitId":"YiFei2"},"content":"Format: `addm n/NAME d/DATE st/START_TIME et/END_TIME [pt/CONTACT_INDEX]... [t/TAGS]...`","lastModifiedDate":"2022-04-05"},{"lineNumber":187,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":188,"author":{"gitId":"YiFei2"},"content":"* Adds a meeting with a specified date, start time and end time to your meeting list.","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"YiFei2"},"content":"* `DATE` requires the format **DD/MM/YYYY** or **DD-MM-YYYY** e.g. 20/02/2022 or 20-02-2022.","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"YiFei2"},"content":"* `START_TIME` and `END_TIME` requires the format **hhmm** e.g. 2359.","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"YiFei2"},"content":"* `START_TIME` needs to be earlier than `END_TIME`.","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"YiFei2"},"content":"* Optionally, the contacts involved in the meeting can also be specified by a `CONTACT_INDEX`.","lastModifiedDate":"2022-04-05"},{"lineNumber":193,"author":{"gitId":"YiFei2"},"content":"* `CONTACT_INDEX` refers to the index number shown in your currently displayed contact list.","lastModifiedDate":"2022-04-05"},{"lineNumber":194,"author":{"gitId":"YiFei2"},"content":"* `CONTACT_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-05"},{"lineNumber":195,"author":{"gitId":"YiFei2"},"content":"* Optionally, tags can also be specified for the meeting.","lastModifiedDate":"2022-04-11"},{"lineNumber":196,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":197,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":198,"author":{"gitId":"YiFei2"},"content":"**:information_source: Note:** The app will notify you in case of any clash in meeting timings upon adding a meeting. You","lastModifiedDate":"2022-04-11"},{"lineNumber":199,"author":{"gitId":"YiFei2"},"content":"may find information regarding the meetings involved in the clash in the status message given.","lastModifiedDate":"2022-04-11"},{"lineNumber":200,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-05"},{"lineNumber":201,"author":{"gitId":"tomascherian"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":202,"author":{"gitId":"YiFei2"},"content":"* `addm n/CS2103 Project Discussion d/23-02-2022 st/1800 et/1930 pt/1 pt/2 pt/3 pt/4 pt/5`","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"YiFei2"},"content":"  Adds the meeting \"CS2103 Project Discussion\" with your given date, time and participants.","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"YiFei2"},"content":"* `addm n/JAVA Workshop d/23-02-2022 st/1030 et/1230`","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"YiFei2"},"content":"  Adds meeting \"JAVA Workshop\" with your given date and time.","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"YiFei2"},"content":"* `addm n/Job Interview st/1500 et/1700`","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"tomascherian"},"content":"  Returns error message as d/DATE is missing.","lastModifiedDate":"2022-03-03"},{"lineNumber":208,"author":{"gitId":"YiFei2"},"content":"* `addm n/CS2102 Project Discussion d/25/03/2022 st/1500 et/1400`","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"YiFei2"},"content":"  Returns error message as your end time input `et/1400` is earlier than your start time input `st/1500`.","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":211,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-04-11"},{"lineNumber":212,"author":{"gitId":"YiFei2"},"content":"Duplicate meetings with the same name and date cannot be added into the app.","lastModifiedDate":"2022-04-11"},{"lineNumber":213,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":214,"author":{"gitId":"YiFei2"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":215,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"YiFei2"},"content":"### Deleting a meeting : `deletem`","lastModifiedDate":"2022-03-13"},{"lineNumber":217,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":218,"author":{"gitId":"YiFei2"},"content":"Deletes the specified meeting from your currently displayed meeting list.","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":220,"author":{"gitId":"YiFei2"},"content":"Format: `deletem MEETING_INDEX`","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":222,"author":{"gitId":"tomascherian"},"content":"* Deletes the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2022-03-03"},{"lineNumber":223,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` refers to the index number shown in your currently displayed meetings list.","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":226,"author":{"gitId":"tomascherian"},"content":"Examples:","lastModifiedDate":"2022-03-03"},{"lineNumber":227,"author":{"gitId":"YiFei2"},"content":"* `deletem 3` deletes the 3rd meeting in your currently displayed meeting list.","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"YiFei2"},"content":"* `deletem -1` returns an error for invalid input as -1 is not a positive integer.","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":230,"author":{"gitId":"tomascherian"},"content":"### Editing a meeting : `editm`","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"tomascherian"},"content":"Edits an existing meeting in your currently displayed meeting list.","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"tomascherian"},"content":"Format: `editm MEETING_INDEX [n/NAME] [d/DATE] [st/START_TIME] [et/END_TIME] [pt/PARTICIPANTS_INDEX]... [t/TAGS]...`","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"tomascherian"},"content":"* Edits the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"tomascherian"},"content":"* `MEETING_INDEX` refers to the index number shown in your currently displayed meeting list.","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"tomascherian"},"content":"* `MEETING_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"tomascherian"},"content":"* Existing meeting details will be updated according to your input fields.","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"tomascherian"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"tomascherian"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"tomascherian"},"content":"When editing participants and tags, the existing participants and tags of the contact will be removed i.e.","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"tomascherian"},"content":"adding of participants and tags is not cumulative. You can remove all the meeting’s participants and tags by typing","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"tomascherian"},"content":"`pt/` `t/` without specifying any participants and tags after it respectively.","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"tomascherian"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"tomascherian"},"content":"* `editm 1 n/cs2103 project et/1930` Edits the meeting name and end time of the 1st meeting to be `cs2103 project` and  `1930` respectively.","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"tomascherian"},"content":"* `editm 2 pt/ t/` Clears all existing participants and all existing tags of the 2nd meeting.","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":254,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":255,"author":{"gitId":"YiFei2"},"content":"**:information_source: Note:** The new edited meeting follows the same constraints as a new meeting to be added using `addm` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":256,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":258,"author":{"gitId":"cpwill01"},"content":"### Locating meetings by date, name and tag: `findm`","lastModifiedDate":"2022-03-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":260,"author":{"gitId":"cpwill01"},"content":"Finds meetings that match your search criteria as explained below:","lastModifiedDate":"2022-03-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":262,"author":{"gitId":"cpwill01"},"content":"Format: `findm [d/DATES]... [n/NAMES]... [t/TAGS]...`","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"YiFei2"},"content":"* If you specify only `d/DATES`, meetings occurring on any of the `DATES` will be shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":264,"author":{"gitId":"YiFei2"},"content":"  Note that the `DATES` must be specified in either the **DD-MM-YYYY** or **DD/MM/YYYY** format.","lastModifiedDate":"2022-04-11"},{"lineNumber":265,"author":{"gitId":"YiFei2"},"content":"* If you specify only `n/NAMES`, meetings matching at least one of `n/NAME` will be shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":266,"author":{"gitId":"YiFei2"},"content":"* If you specify only `t/TAGS`, meetings matching at least one of `t/TAGS` will be shown.","lastModifiedDate":"2022-04-11"},{"lineNumber":267,"author":{"gitId":"cpwill01"},"content":"* For `NAMES` and `TAGS`: ","lastModifiedDate":"2022-03-31"},{"lineNumber":268,"author":{"gitId":"YiFei2"},"content":"    * The search is case-insensitive e.g. `t/planning` matches `Planning`.","lastModifiedDate":"2022-04-11"},{"lineNumber":269,"author":{"gitId":"YiFei2"},"content":"    * Only full words are matched e.g. `n/proj` matches `proj meeting` but not `project meeting`.","lastModifiedDate":"2022-04-11"},{"lineNumber":270,"author":{"gitId":"cpwill01"},"content":"* If you specify more than one type of input, meetings matching at least **one of each type** will be returned. ","lastModifiedDate":"2022-03-31"},{"lineNumber":271,"author":{"gitId":"cpwill01"},"content":"  ","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"cpwill01"},"content":"  eg. If you specify both `n/NAMES` and `t/TAGS`, meetings matching at least one of `NAMES`","lastModifiedDate":"2022-03-31"},{"lineNumber":273,"author":{"gitId":"cpwill01"},"content":"  **and** at least one of `TAGS` will be returned.","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":276,"author":{"gitId":"YiFei2"},"content":"* `findm n/event n/project` returns meetings titled `Event`, `event planning`, `Project Meeting`, etc.","lastModifiedDate":"2022-04-11"},{"lineNumber":277,"author":{"gitId":"YiFei2"},"content":"* `findm n/event d/18-06-2022 t/important` returns a meeting that occurs on `18-06-2022`, is named `event planning` ","lastModifiedDate":"2022-04-11"},{"lineNumber":278,"author":{"gitId":"YiFei2"},"content":"  **and** has a tag called `important`.","lastModifiedDate":"2022-04-11"},{"lineNumber":279,"author":{"gitId":"YiFei2"},"content":"* `findm n/event n/project d/01-06-2022` returns meetings that occur on `01-06-2022` and are named `event planning` or  `project`, etc.","lastModifiedDate":"2022-04-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":281,"author":{"gitId":"rahulprasad01"},"content":"### Sorting meetings : `sortm`","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"rahulprasad01"},"content":"Sorts meetings in the displayed meeting list according to date and time.","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"rahulprasad01"},"content":"Format: `sortm`","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"YiFei2"},"content":"* Sorts meeting according to date.","lastModifiedDate":"2022-04-11"},{"lineNumber":288,"author":{"gitId":"YiFei2"},"content":"* Meetings with the same date are sorted according to time.","lastModifiedDate":"2022-04-11"},{"lineNumber":289,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":290,"author":{"gitId":"rahulprasad01"},"content":"### Reminder : `reminder`","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":292,"author":{"gitId":"rahulprasad01"},"content":"Format: `reminder NUM_OF_DAYS`","lastModifiedDate":"2022-03-31"},{"lineNumber":293,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":294,"author":{"gitId":"YiFei2"},"content":"Reminds you of meetings that occur within the given number of days.","lastModifiedDate":"2022-04-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":297,"author":{"gitId":"YiFei2"},"content":"* `Reminder 2` lists meetings that occur within 2 days.","lastModifiedDate":"2022-04-11"},{"lineNumber":298,"author":{"gitId":"YiFei2"},"content":"* `Reminder 100` lists meetings that occur within 100 days.","lastModifiedDate":"2022-04-11"},{"lineNumber":299,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"rahulprasad01"},"content":"![example](images/reminder_example.png)","lastModifiedDate":"2022-03-31"},{"lineNumber":301,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":302,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":303,"author":{"gitId":"YiFei2"},"content":"**:information_source: Note:** Reminder will not remind you of archived meetings.","lastModifiedDate":"2022-04-11"},{"lineNumber":304,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":305,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":306,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":307,"author":{"gitId":"rahulprasad01"},"content":"### Archive : `archive`","lastModifiedDate":"2022-03-31"},{"lineNumber":308,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":309,"author":{"gitId":"YiFei2"},"content":"Archives the meeting specified by the meeting index. The archived meetings are stored separately in an archived meeting list.","lastModifiedDate":"2022-04-11"},{"lineNumber":310,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":311,"author":{"gitId":"YiFei2"},"content":"Format: `archive MEETING_INDEX`","lastModifiedDate":"2022-04-11"},{"lineNumber":312,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":313,"author":{"gitId":"YiFei2"},"content":"* Archives the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2022-04-11"},{"lineNumber":314,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` refers to the index number shown in your currently displayed meetings list.","lastModifiedDate":"2022-04-11"},{"lineNumber":315,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-11"},{"lineNumber":316,"author":{"gitId":"rahulprasad01"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":317,"author":{"gitId":"rahulprasad01"},"content":"* `archive 2` archives 2nd meeting in the displayed meeting list","lastModifiedDate":"2022-03-31"},{"lineNumber":318,"author":{"gitId":"YiFei2"},"content":"* `archive 0` returns an error for invalid input as 0 is not a positive integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":319,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":320,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":321,"author":{"gitId":"rahulprasad01"},"content":"### Unarchive : `unarchive`","lastModifiedDate":"2022-03-31"},{"lineNumber":322,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":323,"author":{"gitId":"YiFei2"},"content":"Unarchives the meeting specified by the meeting index. The unarchived meeting is placed back into the regular meeting list.","lastModifiedDate":"2022-04-11"},{"lineNumber":324,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":325,"author":{"gitId":"YiFei2"},"content":"Format: `unarchive MEETING_INDEX`","lastModifiedDate":"2022-04-11"},{"lineNumber":326,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":327,"author":{"gitId":"YiFei2"},"content":"* Unarchives the meeting at the specified `MEETING_INDEX`.","lastModifiedDate":"2022-04-11"},{"lineNumber":328,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` refers to the index number shown in your currently displayed meetings list.","lastModifiedDate":"2022-04-11"},{"lineNumber":329,"author":{"gitId":"YiFei2"},"content":"* `MEETING_INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-11"},{"lineNumber":330,"author":{"gitId":"rahulprasad01"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":331,"author":{"gitId":"YiFei2"},"content":"* `unarchive 2` unarchives 2nd meeting in the archive meeting list.","lastModifiedDate":"2022-04-11"},{"lineNumber":332,"author":{"gitId":"YiFei2"},"content":"* `unarchive -2` returns an error for invalid input as 0 is not a positive integer.","lastModifiedDate":"2022-04-11"},{"lineNumber":333,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":334,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":335,"author":{"gitId":"tomascherian"},"content":"### Archive list : `archivelist`","lastModifiedDate":"2022-04-06"},{"lineNumber":336,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":337,"author":{"gitId":"YiFei2"},"content":"Shows you all the archived meetings in your archived meeting list.","lastModifiedDate":"2022-04-11"},{"lineNumber":338,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":339,"author":{"gitId":"rahulprasad01"},"content":"Format: `archivelist`","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":341,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":342,"author":{"gitId":"YiFei2"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-04-11"},{"lineNumber":343,"author":{"gitId":"YiFei2"},"content":"If you would like to return to view the regular meeting list, use the `listm` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":344,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":345,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":346,"author":{"gitId":"cpwill01"},"content":"## Common","lastModifiedDate":"2022-03-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":350,"author":{"gitId":"YiFei2"},"content":"Clears all your contacts and meetings from AddresSoC.","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":352,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":354,"author":{"gitId":"YiFei2"},"content":"### Undoing a change : `undo`","lastModifiedDate":"2022-03-31"},{"lineNumber":355,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":356,"author":{"gitId":"YiFei2"},"content":"Revert a previous change to your meeting or contact lists.","lastModifiedDate":"2022-04-11"},{"lineNumber":357,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":358,"author":{"gitId":"YiFei2"},"content":"Format: `undo`","lastModifiedDate":"2022-03-31"},{"lineNumber":359,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":360,"author":{"gitId":"YiFei2"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":361,"author":{"gitId":"YiFei2"},"content":"* `undo` after `addc n/Alice Lee e/alice.lee@u.nus.edu p/786454454 th/theor9` ","lastModifiedDate":"2022-03-31"},{"lineNumber":362,"author":{"gitId":"YiFei2"},"content":"removes the added contact from your contact list.","lastModifiedDate":"2022-03-31"},{"lineNumber":363,"author":{"gitId":"YiFei2"},"content":"* `undo` after `deletem 3` restores the meeting that was deleted.","lastModifiedDate":"2022-04-11"},{"lineNumber":364,"author":{"gitId":"YiFei2"},"content":"* `undo` after `findc t/family` will not revert the filtering of the contact list as","lastModifiedDate":"2022-03-31"},{"lineNumber":365,"author":{"gitId":"YiFei2"},"content":"`findc` does not change your contact list.","lastModifiedDate":"2022-03-31"},{"lineNumber":366,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":367,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":368,"author":{"gitId":"YiFei2"},"content":"**:information_source: Note:** Only commands that alter the contact or meeting lists can be undone.","lastModifiedDate":"2022-04-11"},{"lineNumber":369,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-11"},{"lineNumber":370,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":371,"author":{"gitId":"YiFei2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":372,"author":{"gitId":"YiFei2"},"content":":bulb: **Tip:**","lastModifiedDate":"2022-03-31"},{"lineNumber":373,"author":{"gitId":"YiFei2"},"content":"If you would like to revert a `findc` command, you may use `listc` to return to the full contact list.","lastModifiedDate":"2022-03-31"},{"lineNumber":374,"author":{"gitId":"YiFei2"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":375,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":376,"author":{"gitId":"YiFei2"},"content":"### Redoing an undo : `redo`","lastModifiedDate":"2022-03-31"},{"lineNumber":377,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":378,"author":{"gitId":"YiFei2"},"content":"Reverts a previous `undo` command.","lastModifiedDate":"2022-04-11"},{"lineNumber":379,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":380,"author":{"gitId":"YiFei2"},"content":"Format: `redo`","lastModifiedDate":"2022-03-31"},{"lineNumber":381,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":382,"author":{"gitId":"YiFei2"},"content":"Examples:","lastModifiedDate":"2022-03-31"},{"lineNumber":383,"author":{"gitId":"YiFei2"},"content":"* `redo` after an `undo` that reverts a `deletem 3` command will delete the meeting restored by `undo`.","lastModifiedDate":"2022-03-31"},{"lineNumber":384,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":385,"author":{"gitId":"cpwill01"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-03-23"},{"lineNumber":386,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":387,"author":{"gitId":"YiFei2"},"content":"Shows you a message explaining how to access the help page.","lastModifiedDate":"2022-03-25"},{"lineNumber":388,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":389,"author":{"gitId":"cpwill01"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-03-23"},{"lineNumber":390,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":391,"author":{"gitId":"cpwill01"},"content":"Format: `help`","lastModifiedDate":"2022-03-23"},{"lineNumber":392,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"YiFei2"},"content":"AddresSoC data (both your contact list and meeting list) is saved in your hard disk automatically after","lastModifiedDate":"2022-03-25"},{"lineNumber":402,"author":{"gitId":"YiFei2"},"content":"any command that changes the data. There is no need for you to save manually.","lastModifiedDate":"2022-03-25"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":406,"author":{"gitId":"YiFei2"},"content":"If you are an advanced user, you are welcome to update data directly by editing the JSON file where the data is saved. To do so, navigate to the","lastModifiedDate":"2022-03-25"},{"lineNumber":407,"author":{"gitId":"cpwill01"},"content":"folder containing the `addressoc.jar` file to find a folder called `data`. Access the folder and edit the `addressoc.json` file found inside.","lastModifiedDate":"2022-03-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":409,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":410,"author":{"gitId":"YiFei2"},"content":"If your changes to the data file makes its format invalid, AddressSoC will discard all data and start with an empty data file the next time you run the app.","lastModifiedDate":"2022-03-25"},{"lineNumber":411,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":412,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"YiFei2"},"content":"# FAQ","lastModifiedDate":"2022-04-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"YiFei2"},"content":"**A**: When you install the app in the other computer, you may overwrite the empty data file it creates with the file that contains the data of your previous AddresSoc home folder.","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"YiFei2"},"content":"# Command summary","lastModifiedDate":"2022-04-11"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"cpwill01"},"content":"**List contacts** | `listc`","lastModifiedDate":"2022-04-05"},{"lineNumber":426,"author":{"gitId":"YiFei2"},"content":"**Add contact** | `addc n/NAME e/EMAIL p/PHONE_NUMBER th/TELEGRAM_HANDLE [t/TAGS]...` \u003cbr\u003e e.g., `addc n/Alice Lee e/alice.lee@u.nus.edu p/76054673 th/alicey76 t/database expert t/CS2103 teammate`","lastModifiedDate":"2022-03-25"},{"lineNumber":427,"author":{"gitId":"rahulprasad01"},"content":"**Delete contact** | `deletec CONTACT_INDEX` \u003cbr\u003e e.g., `deletec 2`","lastModifiedDate":"2022-03-14"},{"lineNumber":428,"author":{"gitId":"YiFei2"},"content":"**Edit contact** | `editc CONTACT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [th/TELEGRAM_HANDLE] [t/TAG]…​`\u003cbr\u003e e.g.,`editc 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-03-25"},{"lineNumber":429,"author":{"gitId":"tomascherian"},"content":"**Find contact** | `findc [n/NAME]... [t/TAGS]...`\u003cbr\u003e e.g., `findc n/James n/Jake`","lastModifiedDate":"2022-03-31"},{"lineNumber":430,"author":{"gitId":"YiFei2"},"content":"**Sort contact** | `sortc`","lastModifiedDate":"2022-04-11"},{"lineNumber":431,"author":{"gitId":"cpwill01"},"content":"**List meetings** | `listm`","lastModifiedDate":"2022-04-05"},{"lineNumber":432,"author":{"gitId":"YiFei2"},"content":"**Add meeting** | `addm n/NAME d/DATE st/START_TIME et/END_TIME [pt/CONTACT_INDEX]... [t/TAGS]...` \u003cbr\u003ee.g., `addm n/CS2103 Project Discussion d/20/02/2022 st/1800 et/1930 pt/1 pt/2 pt/3`","lastModifiedDate":"2022-04-11"},{"lineNumber":433,"author":{"gitId":"cpwill01"},"content":"**Delete meeting** | `deletem MEETING_INDEX`\u003cbr\u003e e.g., `deletem 2`","lastModifiedDate":"2022-04-05"},{"lineNumber":434,"author":{"gitId":"cpwill01"},"content":"**Edit meeting** | `editm MEETING_INDEX [n/NAME] [d/DATE] [st/START_TIME] [et/END_TIME] [pt/PARTICIPANTS_INDEX]... [t/TAGS]...`\u003cbr\u003e e.g., `editm 1 et/1930 pt/1 pt/2 pt/3`","lastModifiedDate":"2022-04-05"},{"lineNumber":435,"author":{"gitId":"cpwill01"},"content":"**Find meeting** | `findm [d/DATES]... [n/NAMES]... [t/TAGS]...` \u003cbr\u003ee.g., `findm n/project n/event d/18-06-2022`","lastModifiedDate":"2022-04-05"},{"lineNumber":436,"author":{"gitId":"YiFei2"},"content":"**Sort meeting** | `sortm`","lastModifiedDate":"2022-04-11"},{"lineNumber":437,"author":{"gitId":"YiFei2"},"content":"**Reminder** | `reminder NUM_OF_DAYS` \u003cbr\u003ee.g., `reminder 5`","lastModifiedDate":"2022-04-11"},{"lineNumber":438,"author":{"gitId":"YiFei2"},"content":"**Archive meeting** | `archive MEETING_INDEX`","lastModifiedDate":"2022-04-11"},{"lineNumber":439,"author":{"gitId":"YiFei2"},"content":"**Unarchive meeting** | `unarchive MEETING_INDEX`","lastModifiedDate":"2022-04-11"},{"lineNumber":440,"author":{"gitId":"YiFei2"},"content":"**List archived meetings** | `archivelist`","lastModifiedDate":"2022-04-11"},{"lineNumber":441,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-03-23"},{"lineNumber":442,"author":{"gitId":"YiFei2"},"content":"**Undo** | `undo`","lastModifiedDate":"2022-03-31"},{"lineNumber":443,"author":{"gitId":"YiFei2"},"content":"**Redo** | `redo`","lastModifiedDate":"2022-03-31"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"YiFei2"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":45,"YiFei2":179,"cpwill01":50,"rahulprasad01":53,"-":118}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"cpwill01"},"content":"    content: \"AddresSoC\";","lastModifiedDate":"2022-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"cpwill01":1,"-":294}},{"path":"docs/diagrams/AddMeetingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"title Activity: Add a meeting\\n","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"start","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":":User enters addm command in the command box;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":":AddMeetingCommandParser parses the arguments;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"if () then ([arguments are valid])","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"    :Creates AddMeetingCommand object for execution;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"    :LogicManager calls AddMeetingCommand.execute();","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"    if () then ([endTime \u003e startTime])","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"        :Create Participant ⋔;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"        :New meeting is constructed with the given arguments and set of Participants;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"        if () then ([meeting does not exist in meeting list])","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"                if() then ([else])","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"                else ([meeting\u0027s timing clash])","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"                :Show meeting clash warning to user;","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"                endif","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"                :Meeting is added to the meeting list;","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        :Throw CommandException with\\nduplicate meeting message;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"        endif","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    :Throw CommandException with\\ninvalid time message;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    endif","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"else ([else])","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":":Throws ParseException with invalid command\\nformat message and command usage;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"endif","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"stop","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"YiFei2":31,"cpwill01":1}},{"path":"docs/diagrams/AddMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"scale 938x475","lastModifiedDate":"2022-04-08"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"participant \":AddMeetingCommandParser\" as AddMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"participant \"a:AddMeetingCommand\" as AddMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"participant \":Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"[-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(userInput)","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"create AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"AddressBookParser -\u003e AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"activate AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"deactivate AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"AddressBookParser -\u003e AddMeetingCommandParser : parse(inputArguments)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"activate AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"create AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommandParser -\u003e AddMeetingCommand : AddMeetingCommand(inputFields)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"activate AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommand --\u003e AddMeetingCommandParser : a","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"deactivate AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"deactivate AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"destroy AddMeetingCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"LogicManager -\u003e AddMeetingCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"activate AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"create Meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommand -\u003e Meeting : Meeting(inputFields)","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"activate Meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"Meeting --\u003e AddMeetingCommand : toAdd","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"deactivate Meeting","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommand -\u003e Model : addMeeting(toAdd)","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"Model --\u003e AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"CommandResult --\u003e AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"AddMeetingCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"deactivate AddMeetingCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"YiFei2":79}},{"path":"docs/diagrams/ArchiveActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"title Activity: Archive a meeting\\n","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"start","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":":User enters archive command in the command box;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":":ArchiveCommandParser parses the arguments","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"                    (meeting index);","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"if () then ([arguments are valid])","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"if () then ([is archived])","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"    :AddresSoc displays","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    error message;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"else ([else])","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    :Archive Meeting;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"endif","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"else ([else])","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":":Throws ParseException with invalid command\\nformat message and command usage;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"endif","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"stop","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":22}},{"path":"docs/diagrams/ArchiveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"!include style.puml","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"participant \":ArchiveCommandParser\" as TCheckParser LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"participant \":ArchiveCommand\" as ArchiveCommand LOGIC_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"participant \":Meeting\" as Meeting MODEL_COLOR","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"end box","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":" -\u003e TCheckParser : parse(\"userinput\")","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"activate TCheckParser","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"create ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"TCheckParser -\u003e ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"activate ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"ArchiveCommand --\u003e TCheckParser","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":" [\u003c--TCheckParser :","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"deactivate TCheckParser","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"-\u003e ArchiveCommand : execute()","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"activate ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"ArchiveCommand -\u003e Meeting : archive()","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"activate Meeting","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"Meeting --\u003e ArchiveCommand :archivedMeeting","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"deactivate Meeting","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":" [\u003c--ArchiveCommand :commandResult","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"deactivate ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"ArchiveCommand -[hidden]-\u003e  : result","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"destroy ArchiveCommand","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"rahulprasad01":48}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"AddressBook *-down--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"AddressBook *-down-\u003e \"1\" UniquePersonTagList","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"UniquePersonTagList -[hidden]left- UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"AddressBook *-down-\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"AddressBook *-down-\u003e \"1\" UniqueMeetingTagList","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"UniqueMeetingTagList -[hidden]right- UniqueMeetingList","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"UniquePersonTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"UniquePersonList -down-\u003e Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"UniqueMeetingTagList *-left-\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"UniqueMeetingList -down-\u003e Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"Contact -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"Meeting -up-\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Name","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Email","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Address","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e MeetingName","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e MeetingDate","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e StartTime","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e EndTime","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e Participant","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tomascherian":23,"-":12}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"title Activity: Executing a command \\n","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if () then ([command commits AddressBook])","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    :Save AddressBook to","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    addressBookStateList;","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cpwill01":1,"-":15}},{"path":"docs/diagrams/CreateParticipantActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"title Activity: Create Participant\\n","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    while () is ([There is a participant index remaining])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    if () then ([Index is valid])","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    :The contact specified by the index is obtained;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    :A participant referencing the contact is created","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    and added to the meeting\u0027s set of participants;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    :Command is not executed and","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    an error message is shown ;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    stop","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    endif","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    endwhile ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    stop","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cpwill01":24,"YiFei2":1}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"participant \":DeleteContactCommandParser\" as DeleteContactCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"participant \"d:DeleteContactCommand\" as DeleteContactCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"[-\u003e LogicManager : execute(\"deletec 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deletec 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"create DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"AddressBookParser -\u003e DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"AddressBookParser -\u003e DeleteContactCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"activate DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"create DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommandParser -\u003e DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommand --\u003e DeleteContactCommandParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"deactivate DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"destroy DeleteContactCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"LogicManager -\u003e DeleteContactCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"activate DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"Model --\u003e DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"CommandResult --\u003e DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"DeleteContactCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"deactivate DeleteContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YiFei2":28,"-":41}},{"path":"docs/diagrams/FindContactActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"title Activity: Find contacts\\n","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"scale 898 width","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"start","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":":User enters findc command in the command box;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":":FindContactCommandParser parses the arguments;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"if () then ([arguments are valid])","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    :Creates FindContactCommand object for execution;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"    :LogicManager calls FindContactCommand::execute();","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    :FindContactCommand calls Model::updateFilteredPersonList();","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"    :FilteredList is updated in accordance with the predicate and the displayed;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"else ([else])","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":":Throws ParseException with invalid command\\nformat message and command usage;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"endif","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"stop","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":20,"cpwill01":1}},{"path":"docs/diagrams/FindContactSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"@startuml","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"!include style.puml","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"scale 938*462","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"participant \":FindContactCommandParser\" as FindContactCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"participant \"f:FindContactCommand\" as FindContactCommand LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"participant \":NameContainsKeywordsPredicate\" as NameContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"participant \":ContactTagContainsKeywordsPredicate\" as ContactTagContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"end box","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"[-\u003e LogicManager : execute(userInput)","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"activate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(userInput)","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"activate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"create FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"AddressBookParser -\u003e FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"activate FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"deactivate FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"AddressBookParser -\u003e FindContactCommandParser : parse(inputArguments)","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"activate FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"create NameContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser -\u003e NameContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"activate NameContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"NameContainsKeywordsPredicate --\u003e FindContactCommandParser : n","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"deactivate NameContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"create ContactTagContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser -\u003e ContactTagContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"activate ContactTagContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"ContactTagContainsKeywordsPredicate --\u003e FindContactCommandParser : t","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"deactivate ContactTagContainsKeywordsPredicate","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"create FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser -\u003e FindContactCommand : FindContactCommand(n, t)","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"activate FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"FindContactCommand --\u003e FindContactCommandParser : f","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"deactivate FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"deactivate FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"FindContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"destroy FindContactCommandParser","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"LogicManager -\u003e FindContactCommand : execute()","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"activate FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"FindContactCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"activate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"Model --\u003e FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"deactivate Model","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"create CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"FindContactCommand -\u003e CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"activate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"CommandResult --\u003e FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"deactivate CommandResult","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"FindContactCommand --\u003e LogicManager : result","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"deactivate FindContactCommand","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"deactivate LogicManager","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"@enduml","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":89}},{"path":"docs/diagrams/FindMeetingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"@startuml","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":" !include style.puml","lastModifiedDate":"2022-04-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":" skinparam defaultfontsize 16","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":" box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" participant \":FindMeetingCommandParser\" as FindMeetingCommandParser LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" participant \":FindMeetingCommand\" as FindMeetingCommand LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":" end box","lastModifiedDate":"2022-04-10"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":" box Model MODEL_COLOR_T1","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":" participant \":MeetingNameHasKeywordsPredicate\" as MeetingNameHasKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":" participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":" end box","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":" [-\u003e FindMeetingCommandParser : parse(userInput)","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":" activate FindMeetingCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":" note top : MeetingOccursOnDatePredicate and MeetingTagHasKeywordsPredicate \\n instances are also created, but have been left out for brevity.","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":" create MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommandParser -\u003e MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":" activate MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":" MeetingNameHasKeywordsPredicate --\u003e FindMeetingCommandParser : namePredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":" deactivate MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":" create FindMeetingCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommandParser -\u003e FindMeetingCommand : FindMeetingCommand(namePredicate\\n datePredicate, tagPredicate)","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":" activate FindMeetingCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommand --\u003e FindMeetingCommandParser : command","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":" deactivate FindMeetingCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":" [\u003c-- FindMeetingCommandParser : command","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":" deactivate FindMeetingCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":" [\u003c-[hidden]- FindMeetingCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":" destroy FindMeetingCommandParser","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":" [-\u003e FindMeetingCommand : execute()","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":" activate FindMeetingCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":" note top : \u0027dateAndTagPredicate\u0027 is the result of \\n datePredicate.and(tagPredicate),\\n left out for brevity","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommand -\u003e MeetingNameHasKeywordsPredicate : and(dateAndTagPredicate)","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":" activate MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":" MeetingNameHasKeywordsPredicate --\u003e FindMeetingCommand : combinedPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":" deactivate MeetingNameHasKeywordsPredicate","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommand -\u003e Model : updateFilteredMeetingList(combinedPredicate)","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":" activate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":" deactivate Model","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":" create CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":" FindMeetingCommand -\u003e CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":" activate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":" CommandResult --\u003e FindMeetingCommand : result","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":" deactivate CommandResult","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":" [\u003c-- FindMeetingCommand : result","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":" deactivate FindMeetingCommand","lastModifiedDate":"2022-04-10"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":" @enduml","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"cpwill01":65}},{"path":"docs/diagrams/MeetingParticipantClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"AddressBook *-down-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"UniquePersonList -down-\u003e \"*\" Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"Participant -up-\u003e \"1  \" Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"Meeting -down-\u003e \"\\t \\t *\" Participant","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cpwill01":13}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"Class Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"Class Telegram","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"Class UniqueMeetingList","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"Class Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"Class MeetingName","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"Class MeetingDate","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"Class StartTime","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"Class EndTime","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"Class ArchiveStatus","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"Class Participant","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"ModelManager -down--\u003e \"1\" AddressBook","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"AddressBook *--\u003e \"1\" UniqueMeetingList","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"UniquePersonList ---\u003e \"~* all\" Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Name","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Email","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"Contact *--\u003e Address","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"Contact *--\u003e Telegram","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"Contact *-down--\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"UniqueMeetingList ---\u003e \"~* all\" Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e MeetingName","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e MeetingDate","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e StartTime","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e EndTime","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"Meeting *--\u003e ArchiveStatus","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"Meeting *--\u003e \"*\" Participant","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"Meeting *-down--\u003e \"*\" Tag","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"Name -[hidden]right- Phone","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"Phone -[hidden]right- Address","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"Address -[hidden]right- Email","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"MeetingName -[hidden]right- MeetingDate","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"MeetingDate -[hidden]right- StartTime","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"StartTime -[hidden]right- EndTime","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"EndTime -[hidden]right- Participant","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"rahulprasad01"},"content":"Participant -[hidden]right- ArchiveStatus","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"Participant -[hidden]-\u003eTag","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"ModelManager --\u003e\"~* filtered\" Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"ModelManager --\u003e\"~* filtered\" Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tomascherian":41,"rahulprasad01":5,"-":37}},{"path":"docs/diagrams/ReminderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"@startuml","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":" !include style.puml","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":" box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":" participant \":ReminderCommandParser\" as ReminderCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":" participant \":ReminderCommand\" as ReminderCommand LOGIC_COLOR","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":" participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":" end box","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":" box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"  participant \":ReminderDatePredicate\" as ReminderDatePredicate MODEL_COLOR","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"  participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":" end box","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":" [-\u003e ReminderCommandParser : parse(\"userInput\")","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":" activate ReminderCommandParser","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":" create ReminderDatePredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":" ReminderCommandParser -\u003e ReminderDatePredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":" activate ReminderDatePredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":" ReminderDatePredicate --\u003e ReminderCommandParser : c","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":" deactivate ReminderDatePredicate","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":" create ReminderCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":" ReminderCommandParser -\u003e ReminderCommand : ReminderCommand(c)","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":" activate ReminderCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":" ReminderCommand --\u003e ReminderCommandParser : r","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":" deactivate ReminderCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":" [\u003c-- ReminderCommandParser : r","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":" deactivate ReminderCommandParser","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":" [\u003c-[hidden]- ReminderCommandParser","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":" destroy ReminderCommandParser","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":" [-\u003e ReminderCommand : execute()","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":" activate ReminderCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":" ReminderCommand -\u003e Model : updateFilteredMeetingList(c)","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":" activate Model","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":" deactivate Model","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":" create CommandResult","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":" ReminderCommand -\u003e CommandResult","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":" activate CommandResult","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":" CommandResult --\u003e ReminderCommand : result","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":" deactivate CommandResult","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":" [\u003c-- ReminderCommand : result","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":" deactivate ReminderCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":" @enduml","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"rahulprasad01":57}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"Class JsonAdaptedMeeting","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"JsonSerializableAddressBook -down-\u003e \"\\t *\" JsonAdaptedPerson","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"JsonSerializableAddressBook -down-\u003e \"*\" JsonAdaptedMeeting","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"JsonAdaptedMeeting -right-\u003e \"*\" JsonAdaptedPerson :participates in \\t  \u003c","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"JsonAdaptedMeeting -left-\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cpwill01":5,"-":42}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"package OtherUiComponents \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"Class HiddenPart #FFFFFF","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"Class MeetingListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"Class MeetingCard","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"Class Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"Class Contact","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"     1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"MainWindow *-down-\u003e \"     1\" PersonListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"MainWindow *-down-\u003e \"                 1\" MeetingListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"MainWindow *-down-\u003e  OtherUiComponents","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"           *\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"MeetingListPanel -down-\u003e \"        *\" MeetingCard","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"MainWindow --down--|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"OtherUiComponents --|\u003e UiPart","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"MeetingListPanel --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"MeetingCard --|\u003e UiPart","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"MeetingCard ..\u003e Meeting","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"PersonCard ..\u003e Contact","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"OtherUiComponents -[hidden]left- PersonCard","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"MeetingListPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"MeetingListPanel -[hidden]-|\u003e UiPart","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"MeetingListPanel -[hidden]left- Model","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cpwill01":22,"-":38}},{"path":"docs/diagrams/UnArchiveActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"@startuml","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"title Activity: Unarchive a meeting\\n","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"start","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":":User enters unarchive command in the command box;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":":AddressBookParser parses the command;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":":UnarchiveCommandParser parses the arguments","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"                    (meeting index);","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"if () then ([arguments are valid])","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"if () then ([else])","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"    :AddresSoc displays","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    error message;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"else ([is archived])","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    :Unarchive Meeting;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"endif","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"else ([else])","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":":Throws ParseException with invalid command\\nformat message and command usage;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"endif","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"stop","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"@enduml","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":22}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2022-04-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"VersionedAddressBook -\u003e AddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"activate AddressBook","lastModifiedDate":"2022-04-08"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"AddressBook -\u003e VersionedAddressBook","lastModifiedDate":"2022-04-08"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"deactivate AddressBook","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YiFei2":6,"-":52}},{"path":"docs/diagrams/UpdateParticipantActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"title Activity: Update Participant when Contact is updated\\n","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":":Original contact is replaced by the  \\n edited contact in UniquePersonList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"    while () is ([A meeting in UniqueMeetingList \\n has yet to be checked])","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    if () then ([Original contact is referenced \\n by  a participant of the meeting])","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    :The original Participant is removed","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    from the meeting\u0027s set of participant;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    :A Participant referencing the edited contact is created;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    :The new Participant is added to","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    the meeting\u0027s set of participants;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    else ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    endif","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    endwhile ([else])","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    stop","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cpwill01":25}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"title: AddresSoC","lastModifiedDate":"2022-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-W12-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W12-3/tp/branch/master/graph/badge.svg?token\u003dFN4KARYWV3)](https://codecov.io/gh/AY2122S2-CS2103T-W12-3/tp)","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"**AddresSoC is a desktop application for School of Computing students to keep track of their network with other students and their meetings.** It does not handle communication between students. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"* If you are interested in using AddresSoC, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"* If you are interested about developing AddresSoC, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org),","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"  as **part of the se-education.org** initiative.","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"cpwill01":7,"-":14}},{"path":"docs/team/cpwill01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"title: William\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"### Project: AddresSoC","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"AddresSoC is a CLI desktop application for School of Computing students to keep track of their network with other students and schedule meetings. It does not handle communication between students.","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"* **New Feature:** Implementation of the Storage component to save meetings and contacts.","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"  * What it does: Allows the contacts and meetings in the user\u0027s lists to be automatically saved after any changes made to the data.","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"  * Justification: This feature is essential to the application as it is part of the central feature allowing for management of contacts and meetings.","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"  * Highlights: Adding of this feature required understanding of Jackson and how the existing saving infrastructure of AB3 works.","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    Moreover, it required awareness of the Model\u0027s implementation of Contact (by Rahul) and Meeting (by Thomas) as well as the interactions ","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    of the Storage component with other components of the application. ","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"* **New Feature:** Finding a meeting by name, date and/or tag.","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"  * What it does: Allows the user to find meetings by name, date and/or tag.","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"  * Justification: This feature improves the product significantly because it helps the user in better managing their meeting schedule.","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    For example, they can view how busy their schedule is on a particular day by searching by date, or recall when a particular meeting was scheduled","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    by searching by name.","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"  * Highlights: This feature required understanding of Java `Predicates` and `FilteredList` / `ObservableList`. The key consideration when implementing this feature was the tradeoff between the testability of the feature vs the flexibility provided to the user, as elaborated in the DG. ","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"* **New Feature:** Automatically updating/deleting participants when the contact is updated/deleted.","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"  * What it does: Allows the meeting\u0027s participant list to automatically sync with any updates to the contact participating in the meeting.","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"  * Justification: This feature makes it significantly more convenient for the user when managing meeting participants, eg. if the delete a contact, ","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    they do not have to manually delete this contact from the meetings that it participated in.","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"  * Highlights: It was challenging to consider how best to link Meetings and Participants to Contacts that exist in the Contact list in order to balance performance and testability, as explained in the DG.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"* **Enhancement to existing feature**: Improved the GUI.","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"  * What it does: Allows the user to see both the meeting and contact lists on one screen. Also allows the user to read results from executing commands with minimal scrolling. ","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"  * Justification: Showing the meeting and contact lists on one screen rather than separate tabs allows users to more ","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    easily manage their meetings and contact the participants of their meetings. Moreover, adjusting the window size and size of the ","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    various components of the GUI so that command results can be viewed with minimal scrolling makes the application more optimised for a command-line interface.","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"  * Highlights: This enhancement required an understanding of the GUI framework. It also required the understanding of CSS, especially the precedence of various CSS rules and ","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    the interaction between the styles of different components (eg. changing the padding of one object might affect the look of another, etc.)","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    Since my previous experience with CSS was largely limited to copy-pasting without much understanding, I had to pick up the language on the fly while implementing this enhancement.","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dcpwill01\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    * Updated the introduction, quick start \u0026 command format notes","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    * Updated documentation for \"Saving the data\" and \"Editing the data files\" features","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    * Added documentation for `findm` feature","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    * Improved the overall structure of the User Guide (separation into sections \u0026 subsections)","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"    * Added target user profile, value proposition [\\#35](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/35)","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    * Periodically updated user stories [\\#35](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/35), [\\#85](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/85), [\\#204](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/204)","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    * Added details for how meeting participants are managed [\\#111](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/111)","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    * Added details for find meeting feature [\\#204](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/204) ","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    * Updated class diagrams for Storage and UI components [\\#111](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/111), [\\#204](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/204)","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"  * Set up the GitHub team org and part of the team repo (CodeCov integration)","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"  * Reviewed most PRs","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"  * Overall maintenance of issue tracker (creating and assigning issues, ensuring issues are linked to the relevant PRs, etc.)","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"  * Milestone management (creation, setting deadlines, release of JAR file, closing)","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#70](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/70), [\\#106](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/106), [\\#139](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/139), etc.","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"cpwill01":56}},{"path":"docs/team/rahulprasad01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"title: Rahul\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":" ---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"### Project: AddresSoC","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"AddresSoC is a CLI desktop application for School of Computing students to keep track of their network with other students and schedule meetings. It does not handle communication between students.","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003drahulprasad01\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    * Modify person to form contact. (PR #70)","lastModifiedDate":"2022-04-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"    * Modify logic, model, storage, ui and update tests to support contact","lastModifiedDate":"2022-04-09"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allows users to add all details for the contact of a person","lastModifiedDate":"2022-04-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: These features are necessary for users to store important contact information.","lastModifiedDate":"2022-04-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"* **New Features implemented**:","lastModifiedDate":"2022-04-09"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    * Sort contacts (PRs #70, #80, #81)","lastModifiedDate":"2022-04-09"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allows users to sort contacts by name","lastModifiedDate":"2022-04-09"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: This will enable users to order the contacts and will make finding contacts easier.","lastModifiedDate":"2022-04-09"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"    * Reminder (PR #106)","lastModifiedDate":"2022-04-09"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    * Added tests (PR #134)","lastModifiedDate":"2022-04-09"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Reminds users of meeting upcoming in input number of days","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: This will allow user with busy schedules to be reminded of upcoming meetings","lastModifiedDate":"2022-04-09"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    * Sort meetings (PR #117)","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allows users to sort contacts by date and meetings on same day are sorted by start time.","lastModifiedDate":"2022-04-09"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: This will enable users to order the meetings and will make locating meetings easier.","lastModifiedDate":"2022-04-09"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    * Archive meetings (PR #124)","lastModifiedDate":"2022-04-09"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allows users to archive meeting","lastModifiedDate":"2022-04-09"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: Using this users can archive meeting they do not want to appear in the meeting list, but want to save the data","lastModifiedDate":"2022-04-09"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"  ","lastModifiedDate":"2022-04-09"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"    * Unarchive meeting (PR #127)","lastModifiedDate":"2022-04-09"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allow users to unarchive meeting","lastModifiedDate":"2022-04-09"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: Users can unarchive meeting they want back in the meeting list. This is used to revert the archive feature.","lastModifiedDate":"2022-04-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    * List archive (PR #124)","lastModifiedDate":"2022-04-09"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"    * What it does: Allows users to list archived meeting","lastModifiedDate":"2022-04-09"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"    * Justification: Users can view archived meeting and use the unarchive feature if necessary.","lastModifiedDate":"2022-04-09"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"      ","lastModifiedDate":"2022-04-09"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"    * User Guide: (PRs 132, 31)","lastModifiedDate":"2022-04-09"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for Add contact","lastModifiedDate":"2022-04-09"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for Delete contact","lastModifiedDate":"2022-04-09"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for sort contact","lastModifiedDate":"2022-04-09"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for sort meeting","lastModifiedDate":"2022-04-09"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for reminder","lastModifiedDate":"2022-04-09"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for archive","lastModifiedDate":"2022-04-09"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for unarchive","lastModifiedDate":"2022-04-09"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"        * Added documentation for archivelist","lastModifiedDate":"2022-04-09"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"      ","lastModifiedDate":"2022-04-09"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"    * Developer Guide: (PRs #33, 34, 133, 190)","lastModifiedDate":"2022-04-09"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"        * Added use case for add contact","lastModifiedDate":"2022-04-09"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"        * Added use case for delete contact","lastModifiedDate":"2022-04-09"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"        * Modify model class diagram","lastModifiedDate":"2022-04-09"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        * Added implementation details for reminder with a sequence diagram","lastModifiedDate":"2022-04-09"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"        * Added implementation details for archive with a sequence and an activity diagram","lastModifiedDate":"2022-04-09"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        * Added implementation details for unarchive with a activity diagram.","lastModifiedDate":"2022-04-09"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"      ","lastModifiedDate":"2022-04-09"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-04-09"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"    * Added and assigned issues, contributed to tutorial team tasks(practise demo), engaged in discussion","lastModifiedDate":"2022-04-09"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"      during team meetings","lastModifiedDate":"2022-04-09"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"* ","lastModifiedDate":"2022-03-02"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2022-03-02"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"    * PRs reviewed (with non-trivial review comments): [PR #191](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/191)","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"rahulprasad01":71}},{"path":"docs/team/tomascherian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"layout: page","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"title: Thomas\u0027 Project Portfolio Page","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"---","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"### Project: AddresSoc","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"AddresSoC is a CLI desktop application for School of Computing students to keep track of their network with other students and schedule meetings. It does not handle communication between students.","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtomascherian\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"* **Enhancements implemented**: Implementation of `Model` component to support `Meeting` (PR #72)","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    * What it does: Holds the details of meeting data in memory","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"    * Justification: This is essential to the working of the application as it stores all meeting related data.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"* **New Feature**: Find contact. (PR #139)","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"    * What it does: Allows users to find contacts by name and/or tag.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"    * Justification: This improves the application significantly by helping users look up particular contacts.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"* **New Feature**: Edit meeting. (PR #138)","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    * What it does: Allows users to edit meeting details.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"    * Justification: This feature improves the application significantly by helping users easily make changes to existing ","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"      meeting details.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"    * User Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"        * Added documentation for `addm` feature (PR #40)","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"        * Added documentation for `findc` feature (PR #143)","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"        * Added documentation for `editm` feature (PR #143)","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        * Fixed documentation bugs (PR #189)","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"        * Added use case for `addm` feature (PR #39)","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"        * Modified class diagrams for Model component (PR #113)","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"        * Added implementation details for `findc` feature with (PR #209) ","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"    * Set up the README page","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"    * Created and assigned issues","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":35}},{"path":"docs/team/yifei2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"title: Yi Fei\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"### Project: AddresSoC","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"AddresSoC is a CLI desktop application for School of Computing students to keep track of their network with other students and schedule meetings. It does not handle communication between students.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-05"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"  * **New Feature:** Implementation of the Logic component to allow users to add and delete meetings.","lastModifiedDate":"2022-04-05"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    * What it does: Allows the user to add and delete meetings from the meeting list.","lastModifiedDate":"2022-04-05"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    * Justification: These features are essential to the application as they are the central features allowing for management of meetings.","lastModifiedDate":"2022-04-05"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    * Highlights: Adding of this feature required understanding of the Logic component as well as the Model\u0027s implementation of Meeting done by my teammate Thomas.","lastModifiedDate":"2022-04-05"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    It was also challenging to consider and implement the most appropriate way to include Participants in a Meeting and link Participants to Contacts that exist in the Contact list.","lastModifiedDate":"2022-04-05"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"  * **New Feature:** Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-04-05"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    * What it does: Allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-04-05"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-04-05"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives and understanding of the Model component used by the app.","lastModifiedDate":"2022-04-05"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-04-05"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"  * **New Feature:** Added the checking of clashes in meeting timings.","lastModifiedDate":"2022-04-05"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    * What it does: The app will check for clashes in meeting timings upon adding or editing of a meeting and notify the user.","lastModifiedDate":"2022-04-05"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    * Justification: As an app used to schedule and manage meetings, this feature improves the app significantly as the user will attempt to schedule many meetings and","lastModifiedDate":"2022-04-05"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    the app should notify the user if there are any clashes in meeting timings to help the user manage them properly.","lastModifiedDate":"2022-04-05"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    * Highlights: This enhancement required an understanding of the GUI framework to implement the pop up notification.","lastModifiedDate":"2022-04-05"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"  * **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dyifei2\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"  * **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"    * User Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"      * Added documentation for `deletem` feature","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"      * Added documentation for `undo` and `redo` features","lastModifiedDate":"2022-04-05"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"      * Edited User Guide\u0027s overall language to be user-centric","lastModifiedDate":"2022-04-05"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    * Developer Guide:","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"      * Added use case for `deletem` feature","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"      * Added Non-functional requirements","lastModifiedDate":"2022-04-05"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"      * Added implementation details for `addm` feature","lastModifiedDate":"2022-04-05"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"      * Added implementation details for `undo` and `redo` features","lastModifiedDate":"2022-04-05"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"  * **Contributions to team-based tasks**:","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    * Hosted group meetings (i.e. start meetings, share screen, facilitate discussion, etc)","lastModifiedDate":"2022-04-05"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"  * **Review/mentoring contributions**:","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"    * PRs reviewed (with non-trivial review comments): [#138](https://github.com/AY2122S2-CS2103T-W12-3/tp/pull/138)","lastModifiedDate":"2022-04-05"}],"authorContributionMap":{"YiFei2":42}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"rahulprasad01"},"content":"Create a new `Remark` in `seedu.address.model.contact`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"rahulprasad01":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.contact.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"rahulprasad01":1,"-":111}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    /** Launches the app","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"rahulprasad01":5,"-":25}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddresSoC ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"                logger.info(\"Data file not found. Will be starting with sample data\");","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with empty lists\");","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with empty lists\");","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with empty lists\");","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"cpwill01"},"content":"        logger.info(\"Starting AddresSoC \" + MainApp.VERSION);","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"cpwill01"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping AddresSoC ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-04-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":8,"-":175}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2022-04-01"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":2,"-":77}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The contact index provided is invalid\";","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_INVALID_MEETING_DISPLAYED_INDEX \u003d \"The meeting index provided is invalid\";","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    public static final String MESSAGE_MEETINGS_LISTED_OVERVIEW \u003d \"%1$d meetings listed!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":1,"cpwill01":1,"rahulprasad01":2,"-":12}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"     * Returns true if the {@code sentence} contains the {@code phrase}.","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     *   Ignores case, but the phrase must match a full phrase in the sentence.","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"     *       containsPhraseIgnoreCase(\"ABc def\", \"abc def\") \u003d\u003d true","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"     *       containsPhraseIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"     *       containsPhraseIgnoreCase(\"ABc def\", \"ABc de\") \u003d\u003d false //not a full phrase match","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"     * @param phrase cannot be null, cannot be empty, consisting of one or more words","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    public static boolean containsPhraseIgnoreCase(String sentence, String phrase) {","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(phrase);","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"        //short circuit if phrase is just one word","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"        if (phrase.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"            return containsWordIgnoreCase(sentence, phrase);","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        String preppedPhrase \u003d phrase.toLowerCase().trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        String preppedSentence \u003d sentence.toLowerCase().trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        return preppedSentence.endsWith(preppedPhrase) || preppedSentence.contains(preppedPhrase + \" \");","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":26,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    ObservableList\u003cContact\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    /** Returns an unmodifiable view of the filtered list of meetings */","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cpwill01":3,"rahulprasad01":3,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"    public ObservableList\u003cContact\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        return model.getFilteredMeetingList();","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cpwill01":6,"rahulprasad01":2,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"addc\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to the address book. \"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"            + PREFIX_TELEGRAM + \"TELEGRAM \"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"            + PREFIX_TELEGRAM + \"rak01 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book.\";","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"    private final Contact toAdd;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"    public AddContactCommand(Contact person) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":2,"rahulprasad01":12,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/AddMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARTICIPANTS;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":" * Adds a meeting to the meeting list.","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"public class AddMeetingCommand extends Command {","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    public static final String COMMAND_WORD \u003d \"addm\";","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a meeting to the meeting list. \"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_MEETING_NAME + \"MEETING NAME \"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_END_TIME + \"END TIME \"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"            + \"[\" + PREFIX_PARTICIPANTS + \"PARTICIPANTS]... \"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_MEETING_NAME + \"2103 project \"","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_DATE + \"12/03/2022 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_START_TIME + \"1600 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_END_TIME + \"1800 \"","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"            + PREFIX_TAG + \"discussion for v1.2\";","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New meeting added: %1$s\";","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_SUCCESS_WITH_CLASH \u003d \"New meeting added: %1$s. Clashes with:\\n%2$s.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the meeting list\";","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Meeting end time should be later meeting start time\";","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"    private final MeetingName meetingName;","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"    private final MeetingDate meetingDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"    private final StartTime startTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"    private final EndTime endTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"    private final MeetingArchiveStatus archiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"    private final Set\u003cTag\u003e tagList;","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"    private final Set\u003cIndex\u003e participantsIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"    private Meeting toAdd;","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    public AddMeetingCommand(MeetingName meetingName, MeetingDate meetingDate, StartTime startTime,","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"                             EndTime endTime, MeetingArchiveStatus archiveStatus,","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"            Set\u003cIndex\u003e participantsIndex, Set\u003cTag\u003e tagList) {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"        requireAllNonNull(meetingName, startTime, endTime, archiveStatus, tagList, participantsIndex);","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"        this.meetingName \u003d meetingName;","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"        this.meetingDate \u003d meetingDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"        this.archiveStatus \u003d archiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"        this.tagList \u003d tagList;","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"        this.participantsIndex \u003d participantsIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"YiFei2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"YiFei2"},"content":"        final Set\u003cParticipant\u003e participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"YiFei2"},"content":"        addParticipants(participants, lastShownList);","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"        if (!startTime.isBefore(endTime)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"YiFei2"},"content":"            throw new CommandException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"YiFei2"},"content":"        toAdd \u003d new Meeting(meetingName, meetingDate, startTime, endTime, participants, archiveStatus, tagList);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"YiFei2"},"content":"        if (model.hasMeeting(toAdd)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"YiFei2"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"YiFei2"},"content":"        ArrayList\u003cMeeting\u003e clashingMeetings \u003d model.checkMeetingClash(toAdd);","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"        model.addMeeting(toAdd);","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"YiFei2"},"content":"        if (clashingMeetings.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"YiFei2"},"content":"            String clashMessage \u003d clashingMeetings.stream().map(Meeting::toString)","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"                    .collect(Collectors.joining(\",\\n\"));","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"YiFei2"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_WITH_CLASH, toAdd, clashMessage),","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"                    false, true, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"YiFei2"},"content":"    private void addParticipants(Set\u003cParticipant\u003e participants, List\u003cContact\u003e lastShownList) throws CommandException {","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"YiFei2"},"content":"        for (Index targetIndex : participantsIndex) {","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"YiFei2"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"YiFei2"},"content":"            Contact participatingContact \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"YiFei2"},"content":"            participants.add(new Participant(participatingContact));","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"YiFei2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"YiFei2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"YiFei2"},"content":"                || (other instanceof AddMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 toAdd.equals(((AddMeetingCommand) other).toAdd));","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"YiFei2":134}},{"path":"src/main/java/seedu/address/logic/commands/ArchiveMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":" * Archives a meeting using the meeting index","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"public class ArchiveMeetingCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"                                             + \": Archives the meeting identified by the index.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"                                             + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"                                             + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_ARCHIVE_MEETING_SUCCESS \u003d \"Archived Meeting: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_ALREADY_ARCHIVED \u003d \"This meeting has already been archived\"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"                                                         + \"\\nTo view all archived meetings, use command \u0027archivelist\u0027\";","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"     * Constructs an ArchiveMeetingCommand.","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"     * @param targetIndex the index number shown in the  meeting list.","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"    public ArchiveMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        Meeting meetingToArchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"        MeetingArchiveStatus currentState \u003d meetingToArchive.getArchiveStatus();","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        if (currentState.isArchive) {","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_ARCHIVED,","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"                    meetingToArchive));","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"        Meeting toarchiveMeeting \u003d meetingToArchive.archive();","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        model.setMeeting(meetingToArchive, toarchiveMeeting);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(String.format(MESSAGE_ARCHIVE_MEETING_SUCCESS, meetingToArchive.getName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof ArchiveMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 targetIndex.equals(((ArchiveMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"YiFei2":1,"rahulprasad01":74}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    /** Meeting Clash Warning should be shwon to the user */","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    private final boolean showWarning;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showWarning, boolean exit) {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"        this.showWarning \u003d showWarning;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"    public boolean isShowWarning() {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        return showWarning;","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 showWarning \u003d\u003d otherCommandResult.showWarning","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"        return Objects.hash(feedbackToUser, showHelp, showWarning, exit);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":12,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"deletec\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Contact: %1$s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"        Contact personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":1,"rahulprasad01":10,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":" * Deletes a meeting identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"public class DeleteMeetingCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    public static final String COMMAND_WORD \u003d \"deletem\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"            + \": Deletes the meeting identified by the index number used in the displayed meeting list.\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_DELETE_MEETING_SUCCESS \u003d \"Deleted Meeting: %1$s\";","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    public DeleteMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        Meeting meetingToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"        model.deleteMeeting(meetingToDelete);","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEETING_SUCCESS, meetingToDelete));","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"                || (other instanceof DeleteMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiFei2":54}},{"path":"src/main/java/seedu/address/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    public static final String COMMAND_WORD \u003d \"editc\";","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"rahulprasad01"},"content":"        Contact personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"        assert !personToEdit.getEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"        personToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"        if (model.hasPerson(editedPerson)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"            personToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"        personToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"    private static Contact createEditedPerson(Contact personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"rahulprasad01"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"rahulprasad01"},"content":"        return new Contact(updatedName, updatedPhone, updatedEmail, updatedTelegram, updatedTags);","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"rahulprasad01"},"content":"        private Telegram telegram;","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"rahulprasad01"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"rahulprasad01"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"rahulprasad01"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, telegram, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"rahulprasad01"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2022-03-09"},{"lineNumber":190,"author":{"gitId":"rahulprasad01"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2022-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"rahulprasad01"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-03-09"},{"lineNumber":194,"author":{"gitId":"rahulprasad01"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2022-03-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"rahulprasad01"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-03-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cpwill01":5,"YiFei2":7,"rahulprasad01":24,"-":200}},{"path":"src/main/java/seedu/address/logic/commands/EditMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARTICIPANTS;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import java.util.List;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":" * Edits the details of an existing meeting in the address book.","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"    public static final String COMMAND_WORD \u003d \"editm\";","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the meeting identified \"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"            + \"by the index number used in the displayed meeting list. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_MEETING_NAME + \"MEETING NAME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_START_TIME + \"START TIME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_END_TIME + \"END TIME] \"","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_PARTICIPANTS + \"PARTICIPANTS]... \"","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"            + PREFIX_DATE + \"12-03-2022 \"","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"            + PREFIX_START_TIME + \"1800\";","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_EDIT_MEETING_SUCCESS \u003d \"Edited Meeting: %1$s\";","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_EDIT_SUCCESS_WITH_CLASH \u003d \"Edited Meeting: %1$s. Clashes with:\\n%2$s.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"This meeting already exists in the address book.\";","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"Meeting end time should be later meeting start time\";","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"    private final Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"    private final EditMeetingCommand.EditMeetingDescriptor editMeetingDescriptor;","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"     * @param index                of the person in the filtered meeting list to edit","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"     * @param editMeetingDescriptor details to edit the meeting with","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingCommand(Index index, EditMeetingDescriptor editMeetingDescriptor) {","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(editMeetingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"        this.editMeetingDescriptor \u003d new EditMeetingCommand.EditMeetingDescriptor(editMeetingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        List\u003cContact\u003e contactList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"        Meeting meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"        assert !meetingToEdit.getEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"        meetingToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"        Meeting editedMeeting \u003d createEditedMeeting(meetingToEdit, editMeetingDescriptor, contactList);","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"        if (model.hasMeeting(editedMeeting)) {","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"            meetingToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"YiFei2"},"content":"        ArrayList\u003cMeeting\u003e clashingMeetings \u003d model.checkMeetingClash(editedMeeting);","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"YiFei2"},"content":"        meetingToEdit.setEditStatus();","lastModifiedDate":"2022-04-10"},{"lineNumber":100,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"tomascherian"},"content":"        model.setMeeting(meetingToEdit, editedMeeting);","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-31"},{"lineNumber":104,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"        if (clashingMeetings.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":106,"author":{"gitId":"tomascherian"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting));","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"YiFei2"},"content":"            String clashMessage \u003d clashingMeetings.stream().map(Meeting::toString)","lastModifiedDate":"2022-03-31"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"                    .collect(Collectors.joining(\",\\n\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_SUCCESS_WITH_CLASH, editedMeeting, clashMessage),","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"YiFei2"},"content":"                    false, true, false);","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":115,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":116,"author":{"gitId":"tomascherian"},"content":"     * Creates and returns a {@code Meeting} with the details of {@code meetingToEdit}","lastModifiedDate":"2022-03-31"},{"lineNumber":117,"author":{"gitId":"tomascherian"},"content":"     * edited with {@code editMeetingDescriptor}.","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"    private static Meeting createEditedMeeting(Meeting meetingToEdit, EditMeetingDescriptor editMeetingDescriptor,","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"                                               List\u003cContact\u003e contactList) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"        MeetingName updatedMeetingName \u003d editMeetingDescriptor.getMeetingName().orElse(meetingToEdit.getName());","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"        MeetingDate updatedMeetingDate \u003d editMeetingDescriptor.getMeetingDate().orElse(meetingToEdit.getDate());","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"        StartTime updatedStartTime \u003d editMeetingDescriptor.getStartTime().orElse(meetingToEdit.getStartTime());","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"        EndTime updatedEndTime \u003d editMeetingDescriptor.getEndTime().orElse(meetingToEdit.getEndTime());","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"        if (updatedStartTime.isAfter(updatedEndTime) || updatedStartTime.equals(updatedEndTime)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"tomascherian"},"content":"            throw new CommandException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2022-03-31"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":131,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":132,"author":{"gitId":"tomascherian"},"content":"        MeetingArchiveStatus archiveStatus \u003d meetingToEdit.getArchiveStatus();","lastModifiedDate":"2022-03-31"},{"lineNumber":133,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMeetingDescriptor.getTags().orElse(meetingToEdit.getTags());","lastModifiedDate":"2022-03-31"},{"lineNumber":134,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cParticipant\u003e updatedParticipants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"        if (editMeetingDescriptor.getParticipantsIndex().isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"            updatedParticipants.addAll(getParticipantsFromIndexes(editMeetingDescriptor, contactList));","lastModifiedDate":"2022-03-31"},{"lineNumber":138,"author":{"gitId":"tomascherian"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"            updatedParticipants.addAll(meetingToEdit.getParticipants());","lastModifiedDate":"2022-03-31"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"        return new Meeting(updatedMeetingName, updatedMeetingDate, updatedStartTime,","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"                updatedEndTime, updatedParticipants, archiveStatus, updatedTags);","lastModifiedDate":"2022-03-31"},{"lineNumber":144,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":145,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"    public static Set\u003cParticipant\u003e getParticipantsFromIndexes(EditMeetingDescriptor editMeetingDescriptor,","lastModifiedDate":"2022-03-31"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"                                                       List\u003cContact\u003e contactList) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cParticipant\u003e participantsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"        for (Index targetIndex : editMeetingDescriptor.participantsIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":151,"author":{"gitId":"tomascherian"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d contactList.size()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-31"},{"lineNumber":153,"author":{"gitId":"tomascherian"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":154,"author":{"gitId":"tomascherian"},"content":"            Contact participatingContact \u003d contactList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"tomascherian"},"content":"            participantsSet.add(new Participant(participatingContact));","lastModifiedDate":"2022-03-31"},{"lineNumber":156,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":158,"author":{"gitId":"tomascherian"},"content":"        return participantsSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":159,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":160,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":161,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":162,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":163,"author":{"gitId":"tomascherian"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":164,"author":{"gitId":"tomascherian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":165,"author":{"gitId":"tomascherian"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":166,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":168,"author":{"gitId":"tomascherian"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"tomascherian"},"content":"        if (!(other instanceof EditMeetingCommand)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"tomascherian"},"content":"            return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"tomascherian"},"content":"        // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":174,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand e \u003d (EditMeetingCommand) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":175,"author":{"gitId":"tomascherian"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-03-31"},{"lineNumber":176,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 editMeetingDescriptor.equals(e.editMeetingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":177,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":178,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":179,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":180,"author":{"gitId":"tomascherian"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-31"},{"lineNumber":181,"author":{"gitId":"tomascherian"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2022-03-31"},{"lineNumber":182,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":183,"author":{"gitId":"tomascherian"},"content":"    public static class EditMeetingDescriptor {","lastModifiedDate":"2022-03-31"},{"lineNumber":184,"author":{"gitId":"tomascherian"},"content":"        private MeetingName meetingName;","lastModifiedDate":"2022-03-31"},{"lineNumber":185,"author":{"gitId":"tomascherian"},"content":"        private MeetingDate meetingDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":186,"author":{"gitId":"tomascherian"},"content":"        private StartTime startTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":187,"author":{"gitId":"tomascherian"},"content":"        private EndTime endTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":188,"author":{"gitId":"tomascherian"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-31"},{"lineNumber":189,"author":{"gitId":"tomascherian"},"content":"        private Set\u003cIndex\u003e participantsIndex;","lastModifiedDate":"2022-03-31"},{"lineNumber":190,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":191,"author":{"gitId":"tomascherian"},"content":"        public EditMeetingDescriptor() {","lastModifiedDate":"2022-03-31"},{"lineNumber":192,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":193,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":194,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"tomascherian"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"tomascherian"},"content":"         * A defensive copy of {@code tags} and {@code participantsIndex} is used internally.","lastModifiedDate":"2022-03-31"},{"lineNumber":197,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":198,"author":{"gitId":"tomascherian"},"content":"        public EditMeetingDescriptor(EditMeetingDescriptor toCopy) {","lastModifiedDate":"2022-03-31"},{"lineNumber":199,"author":{"gitId":"tomascherian"},"content":"            setMeetingName(toCopy.meetingName);","lastModifiedDate":"2022-03-31"},{"lineNumber":200,"author":{"gitId":"tomascherian"},"content":"            setMeetingDate(toCopy.meetingDate);","lastModifiedDate":"2022-03-31"},{"lineNumber":201,"author":{"gitId":"tomascherian"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":202,"author":{"gitId":"tomascherian"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":203,"author":{"gitId":"tomascherian"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-03-31"},{"lineNumber":204,"author":{"gitId":"tomascherian"},"content":"            setParticipantsIndex(toCopy.participantsIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":205,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":206,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"tomascherian"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-03-31"},{"lineNumber":209,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"tomascherian"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-03-31"},{"lineNumber":211,"author":{"gitId":"tomascherian"},"content":"            return CollectionUtil.isAnyNonNull(meetingName, meetingDate, startTime, endTime, tags, participantsIndex);","lastModifiedDate":"2022-03-31"},{"lineNumber":212,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":213,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":214,"author":{"gitId":"tomascherian"},"content":"        public void setMeetingName(MeetingName meetingName) {","lastModifiedDate":"2022-03-31"},{"lineNumber":215,"author":{"gitId":"tomascherian"},"content":"            this.meetingName \u003d meetingName;","lastModifiedDate":"2022-03-31"},{"lineNumber":216,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":217,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":218,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cMeetingName\u003e getMeetingName() {","lastModifiedDate":"2022-03-31"},{"lineNumber":219,"author":{"gitId":"tomascherian"},"content":"            return Optional.ofNullable(meetingName);","lastModifiedDate":"2022-03-31"},{"lineNumber":220,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":221,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":222,"author":{"gitId":"tomascherian"},"content":"        public void setMeetingDate(MeetingDate meetingDate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"tomascherian"},"content":"            this.meetingDate \u003d meetingDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":224,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":226,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cMeetingDate\u003e getMeetingDate() {","lastModifiedDate":"2022-03-31"},{"lineNumber":227,"author":{"gitId":"tomascherian"},"content":"            return Optional.ofNullable(meetingDate);","lastModifiedDate":"2022-03-31"},{"lineNumber":228,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":229,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":230,"author":{"gitId":"tomascherian"},"content":"        public void setStartTime(StartTime startTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":231,"author":{"gitId":"tomascherian"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":232,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":233,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":234,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cStartTime\u003e getStartTime() {","lastModifiedDate":"2022-03-31"},{"lineNumber":235,"author":{"gitId":"tomascherian"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":236,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":237,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":238,"author":{"gitId":"tomascherian"},"content":"        public void setEndTime(EndTime endTime) {","lastModifiedDate":"2022-03-31"},{"lineNumber":239,"author":{"gitId":"tomascherian"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2022-03-31"},{"lineNumber":240,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":242,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cEndTime\u003e getEndTime() {","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"tomascherian"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":245,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":247,"author":{"gitId":"tomascherian"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-03-31"},{"lineNumber":248,"author":{"gitId":"tomascherian"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-31"},{"lineNumber":249,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":250,"author":{"gitId":"tomascherian"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-31"},{"lineNumber":251,"author":{"gitId":"tomascherian"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-03-31"},{"lineNumber":252,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":253,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":254,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":255,"author":{"gitId":"tomascherian"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-31"},{"lineNumber":256,"author":{"gitId":"tomascherian"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-31"},{"lineNumber":257,"author":{"gitId":"tomascherian"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-03-31"},{"lineNumber":258,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":259,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-03-31"},{"lineNumber":260,"author":{"gitId":"tomascherian"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-03-31"},{"lineNumber":261,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":262,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":264,"author":{"gitId":"tomascherian"},"content":"         * Sets {@code participantsIndex} to this object\u0027s {@code participantsIndex}.","lastModifiedDate":"2022-03-31"},{"lineNumber":265,"author":{"gitId":"tomascherian"},"content":"         * A defensive copy of {@code participantsIndex} is used internally.","lastModifiedDate":"2022-03-31"},{"lineNumber":266,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":267,"author":{"gitId":"tomascherian"},"content":"        public void setParticipantsIndex(Set\u003cIndex\u003e participantsIndex) {","lastModifiedDate":"2022-03-31"},{"lineNumber":268,"author":{"gitId":"tomascherian"},"content":"            this.participantsIndex \u003d (participantsIndex !\u003d null) ? new HashSet\u003c\u003e(participantsIndex) : null;","lastModifiedDate":"2022-03-31"},{"lineNumber":269,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":270,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":271,"author":{"gitId":"tomascherian"},"content":"        /**","lastModifiedDate":"2022-03-31"},{"lineNumber":272,"author":{"gitId":"tomascherian"},"content":"         * Returns an unmodifiable index set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-31"},{"lineNumber":273,"author":{"gitId":"tomascherian"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-03-31"},{"lineNumber":274,"author":{"gitId":"tomascherian"},"content":"         * Returns {@code Optional#empty()} if {@code participantsIndex} is null.","lastModifiedDate":"2022-03-31"},{"lineNumber":275,"author":{"gitId":"tomascherian"},"content":"         */","lastModifiedDate":"2022-03-31"},{"lineNumber":276,"author":{"gitId":"tomascherian"},"content":"        public Optional\u003cSet\u003cIndex\u003e\u003e getParticipantsIndex() {","lastModifiedDate":"2022-03-31"},{"lineNumber":277,"author":{"gitId":"tomascherian"},"content":"            return (participantsIndex !\u003d null)","lastModifiedDate":"2022-03-31"},{"lineNumber":278,"author":{"gitId":"tomascherian"},"content":"                    ? Optional.of(Collections.unmodifiableSet(participantsIndex))","lastModifiedDate":"2022-03-31"},{"lineNumber":279,"author":{"gitId":"tomascherian"},"content":"                    : Optional.empty();","lastModifiedDate":"2022-03-31"},{"lineNumber":280,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":281,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":282,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"tomascherian"},"content":"            public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"tomascherian"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"tomascherian"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-31"},{"lineNumber":286,"author":{"gitId":"tomascherian"},"content":"                return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"tomascherian"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":288,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":289,"author":{"gitId":"tomascherian"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":290,"author":{"gitId":"tomascherian"},"content":"            if (!(other instanceof EditMeetingDescriptor)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":291,"author":{"gitId":"tomascherian"},"content":"                return false;","lastModifiedDate":"2022-03-31"},{"lineNumber":292,"author":{"gitId":"tomascherian"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":293,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":294,"author":{"gitId":"tomascherian"},"content":"            // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":295,"author":{"gitId":"tomascherian"},"content":"            EditMeetingDescriptor e \u003d (EditMeetingDescriptor) other;","lastModifiedDate":"2022-03-31"},{"lineNumber":296,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":297,"author":{"gitId":"tomascherian"},"content":"            return getMeetingName().equals(e.getMeetingName())","lastModifiedDate":"2022-03-31"},{"lineNumber":298,"author":{"gitId":"tomascherian"},"content":"                    \u0026\u0026 getMeetingDate().equals(e.getMeetingDate())","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"tomascherian"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2022-03-31"},{"lineNumber":300,"author":{"gitId":"tomascherian"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime())","lastModifiedDate":"2022-03-31"},{"lineNumber":301,"author":{"gitId":"tomascherian"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2022-03-31"},{"lineNumber":302,"author":{"gitId":"tomascherian"},"content":"                    \u0026\u0026 getParticipantsIndex().equals(e.getParticipantsIndex());","lastModifiedDate":"2022-03-31"},{"lineNumber":303,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":304,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":305,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":287,"YiFei2":18}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"YiFei2":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.ContactTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"    public static final String COMMAND_WORD \u003d \"findc\";","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts that matches the given parameters. \"","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"family \";","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"    private final NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    private final ContactTagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"     * Creates a {@code FindContactCommand} to find Contacts that match at least one item","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"     * from each non-empty {@code Set} provided as argument.","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"    public FindContactCommand(NameContainsKeywordsPredicate namePredicate,","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"                              ContactTagContainsKeywordsPredicate tagPredicate) {","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        model.updateFilteredPersonList(namePredicate.and(tagPredicate));","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 namePredicate.equals(((FindContactCommand) other).namePredicate)","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 tagPredicate.equals(((FindContactCommand) other).tagPredicate)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":54}},{"path":"src/main/java/seedu/address/logic/commands/FindMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingNameHasKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingOccursOnDatesPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingTagHasKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":" * Finds and lists all meetings that satisfy the search criteria.","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"public class FindMeetingCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public static final String COMMAND_WORD \u003d \"findm\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all meetings that matches the given parameters.\"","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"            + \"Parameters (please specify at least one): \"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"            + \"[\" + PREFIX_MEETING_NAME + \"MEETING NAME]... \"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"            + \"[\" + PREFIX_DATE + \"DATE]... \"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"            + PREFIX_DATE + \"05-07-2022 \";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    private final MeetingNameHasKeywordsPredicate namePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    private final MeetingOccursOnDatesPredicate datePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private final MeetingTagHasKeywordsPredicate tagPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     * Creates a {@code FindMeetingCommand} to find Meetings that match at least one item","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"     * from each non-empty {@code Set} provided as argument.","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    public FindMeetingCommand(MeetingNameHasKeywordsPredicate namePredicate,","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"                              MeetingOccursOnDatesPredicate datePredicate,","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"                              MeetingTagHasKeywordsPredicate tagPredicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        this.namePredicate \u003d namePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        this.datePredicate \u003d datePredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        model.updateFilteredMeetingList(namePredicate.and(datePredicate).and(tagPredicate));","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"                String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, model.getFilteredMeetingList().size()));","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"                || (other instanceof FindMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 namePredicate.equals(((FindMeetingCommand) other).namePredicate)","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 datePredicate.equals(((FindMeetingCommand) other).datePredicate)","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 tagPredicate.equals(((FindMeetingCommand) other).tagPredicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cpwill01":64}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListArchivedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_ARCHIVED_MEETINGS;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":" * Shows all archived meetings.","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"public class ListArchivedCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"archivelist\";","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all archived meetings\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_ARCHIVED_MEETINGS);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"rahulprasad01":26}},{"path":"src/main/java/seedu/address/logic/commands/ListContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Lists all contacts in the address book to the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class ListContactCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    public static final String COMMAND_WORD \u003d \"listc\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cpwill01":3,"rahulprasad01":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEETINGS;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Lists all meetings in the address book to the user.","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"public class ListMeetingCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    public static final String COMMAND_WORD \u003d \"listm\";","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all meetings\";","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        model.updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"cpwill01":24}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" * Reverts the previous Undo.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_INVALID_REDO \u003d \"There is no Undo to be reverted.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Previous Undo has been reverted.\";","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"            throw new CommandException(MESSAGE_INVALID_REDO);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        model.redoAddressBook();","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"YiFei2":28}},{"path":"src/main/java/seedu/address/logic/commands/ReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.ReminderDatePredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":" * Finds and lists all meetings whose date is within X days of the current date.","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":" *","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"reminder\";","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_REMINDER \u003d \"REMINDER \\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"            + \"-----------\\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"            + \"As of today, \"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"            + DateTimeFormatter.ofPattern(\" dd MMM yyyy\").format(LocalDate.now())","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            + \" :- \\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"            + \" %1$d meeting/s are upcoming \\n\"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"            + \" in %2$d day/s\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows all meetings which occur \"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"            + \"within X days from the today, as a list.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"            + \"Parameters: DAYS (Integer more than or equal to 0) \\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    private final ReminderDatePredicate predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"     * @param predicate of the number of days from the current date, to return true for meetings","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"     * which dates fall within the date range.","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"    public ReminderCommand(ReminderDatePredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        assert predicate !\u003d null;","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        model.updateFilteredMeetingList(predicate);","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"                String.format(MESSAGE_REMINDER, model.getFilteredMeetingList().size(),","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"                        predicate.getDays()));","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof ReminderCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 predicate.equals(((ReminderCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"rahulprasad01":60}},{"path":"src/main/java/seedu/address/logic/commands/SortContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":" * Sorts all contacts in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"public class SortContactCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"sortc\";","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all contacts\";","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        model.sortContact();","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"YiFei2":1,"rahulprasad01":23}},{"path":"src/main/java/seedu/address/logic/commands/SortMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":" * Lists all meetings in the address book.","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"public class SortMeetingCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"sortm\";","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all meetings based on date and time\";","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        model.sortMeeting();","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        model.commitAddressBook();","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"YiFei2":1,"rahulprasad01":23}},{"path":"src/main/java/seedu/address/logic/commands/UnarchiveMeetingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":" * Archives a meeting using the meeting index","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"public class UnarchiveMeetingCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public static final String COMMAND_WORD \u003d \"unarchive\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"            + \": Unarchives the meeting identified by the index.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_UNARCHIVE_MEETING_SUCCESS \u003d \"Unarchived Meeting: %1$s\";","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_ALREADY_UNARCHIVED \u003d \"This meeting is not in the archive list\";","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"     * Constructs an UnarchiveMeetingCommand.","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"     * @param targetIndex the index number shown in the  meeting list.","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    public UnarchiveMeetingCommand(Index targetIndex) {","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cMeeting\u003e lastShownList \u003d model.getFilteredMeetingList();","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"        Meeting meetingToArchive \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        MeetingArchiveStatus currentState \u003d meetingToArchive.getArchiveStatus();","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"        if (!currentState.isArchive) {","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_UNARCHIVED,","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"                    meetingToArchive));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        Meeting tounarchiveMeeting \u003d meetingToArchive.unarchive();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"        model.setMeeting(meetingToArchive, tounarchiveMeeting);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        model.updateFilteredMeetingList(Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"        return new CommandResult(String.format(MESSAGE_UNARCHIVE_MEETING_SUCCESS, meetingToArchive.getName()));","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof UnarchiveMeetingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 targetIndex.equals(((UnarchiveMeetingCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"rahulprasad01":74}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" * Reverts the previous change to AddresSoc.","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_INVALID_UNDO \u003d \"There are no more changes to be reverted.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Previous change has been reverted.\";","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"            throw new CommandException(MESSAGE_INVALID_UNDO);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        model.undoAddressBook();","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"YiFei2":27}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_TELEGRAM, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        Contact person \u003d new Contact(name, phone, email, telegram, tagList);","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"rahulprasad01":19,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARTICIPANTS;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":" * Parses input arguments and creates a new AddMeetingCommand object","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddMeetingCommand\u003e {","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"     * Parses the given {@code String} of arguments in the context of the AddMeetingCommand","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"     * and returns an AddMeetingCommand object for execution.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    public AddMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEETING_NAME, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME,","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"                        PREFIX_PARTICIPANTS, PREFIX_TAG);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEETING_NAME, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME)","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        MeetingName meetingName \u003d ParserUtil.parseMeetingName(argMultimap.getValue(PREFIX_MEETING_NAME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        MeetingDate date \u003d ParserUtil.parseMeetingDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"        StartTime startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"        EndTime endTime \u003d ParserUtil.parseEndTime(argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        MeetingArchiveStatus archiveStatus \u003d new MeetingArchiveStatus(false);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        Set\u003cIndex\u003e participantsIndex \u003d ParserUtil.parseParticipants(argMultimap.getAllValues(PREFIX_PARTICIPANTS));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"        return new AddMeetingCommand(meetingName, date, startTime, endTime, archiveStatus, participantsIndex, tagList);","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"YiFei2":60,"rahulprasad01":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.AddMeetingCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.ArchiveMeetingCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.ListArchivedCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.ListMeetingCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.ReminderCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.SortContactCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.SortMeetingCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.UnarchiveMeetingCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"        case AddMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"        case EditMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"        case DeleteMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"        case FindMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"            return new FindMeetingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        case ListContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"            return new ListContactCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        case ListMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"            return new ListMeetingCommand();","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"rahulprasad01"},"content":"        case SortMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"rahulprasad01"},"content":"            return new SortMeetingCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"rahulprasad01"},"content":"        case SortContactCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"rahulprasad01"},"content":"            return new SortContactCommand();","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"        case ReminderCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-31"},{"lineNumber":107,"author":{"gitId":"rahulprasad01"},"content":"            return new ReminderCommandParser().parse(arguments);","lastModifiedDate":"2022-03-31"},{"lineNumber":108,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"            return new UndoCommand();","lastModifiedDate":"2022-03-26"},{"lineNumber":111,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"YiFei2"},"content":"            return new RedoCommand();","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"rahulprasad01"},"content":"        case ArchiveMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"rahulprasad01"},"content":"            return new ArchiveMeetingParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"rahulprasad01"},"content":"        case ListArchivedCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"rahulprasad01"},"content":"            return new ListArchivedCommand();","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"rahulprasad01"},"content":"        case UnarchiveMeetingCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"rahulprasad01"},"content":"            return new UnarchiveMeetingParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tomascherian":6,"YiFei2":14,"cpwill01":13,"rahulprasad01":29,"-":67}},{"path":"src/main/java/seedu/address/logic/parser/ArchiveMeetingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.ArchiveMeetingCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":" * Parses input arguments and creates a new ArchiveMeetingCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"public class ArchiveMeetingParser implements Parser\u003cArchiveMeetingCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"     * Parses the given {@code String} of arguments in the context of the ArchiveMeetingCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"     * and returns a ArchiveMeetingCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"     * @throws ParseException if the user input does not have the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    public ArchiveMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"            return new ArchiveMeetingCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ArchiveMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"rahulprasad01":29}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"th/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public static final Prefix PREFIX_MEETING_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    public static final Prefix PREFIX_PARTICIPANTS \u003d new Prefix(\"pt/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YiFei2":5,"rahulprasad01":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"rahulprasad01":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.DeleteMeetingCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteMeetingCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"     * and returns a DeleteMeetingCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public DeleteMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"            return new DeleteMeetingCommand(index);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"YiFei2":29}},{"path":"src/main/java/seedu/address/logic/parser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":" * Parses input arguments and creates a new EditContactCommand object","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"public class EditContactCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * Parses the given {@code String} of arguments in the context of the EditContactCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     * and returns an EditContactCommand object for execution.","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TELEGRAM, PREFIX_TAG);","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"            throw new","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"                    ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cpwill01":11,"rahulprasad01":9,"-":68}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARTICIPANTS;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditMeetingCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMeetingCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"     * and returns an EditMeetingCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"     *","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEETING_NAME, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME,","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"                        PREFIX_PARTICIPANTS, PREFIX_TAG);","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        Index index;","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"        try {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"            index \u003d ParserUtil.parseIndex(argMultiMap.getPreamble());","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"            throw new","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"                    ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor editMeetingDescriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        if (argMultiMap.getValue(PREFIX_MEETING_NAME).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"            editMeetingDescriptor","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"                    .setMeetingName(ParserUtil.parseMeetingName(argMultiMap.getValue(PREFIX_MEETING_NAME).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"        if (argMultiMap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"            editMeetingDescriptor","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"                    .setMeetingDate(ParserUtil.parseMeetingDate(argMultiMap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        if (argMultiMap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"            editMeetingDescriptor","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"                    .setStartTime(ParserUtil.parseStartTime(argMultiMap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"        if (argMultiMap.getValue(PREFIX_END_TIME).isPresent()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"            editMeetingDescriptor","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"                    .setEndTime(ParserUtil.parseEndTime(argMultiMap.getValue(PREFIX_END_TIME).get()));","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        parseTagsForEdit(argMultiMap.getAllValues(PREFIX_TAG)).ifPresent(editMeetingDescriptor::setTags);","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        parseParticipantsIndexForEdit(argMultiMap.getAllValues(PREFIX_PARTICIPANTS))","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"                .ifPresent((editMeetingDescriptor::setParticipantsIndex));","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        if (!editMeetingDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"        return new EditMeetingCommand(index, editMeetingDescriptor);","lastModifiedDate":"2022-03-31"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"     * Parses {@code Collection\u003cString\u003e participants} into a {@code Set\u003cIndex\u003e} if {@code participants} is non-empty.","lastModifiedDate":"2022-03-31"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"     * If {@code participants} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"     * {@code Set\u003cIndex\u003e} containing zero participants.","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"    private Optional\u003cSet\u003cIndex\u003e\u003e parseParticipantsIndexForEdit(Collection\u003cString\u003e participants) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"        assert participants !\u003d null;","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"        if (participants.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"tomascherian"},"content":"        Collection\u003cString\u003e indexes \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"tomascherian"},"content":"                participants.size() \u003d\u003d 1 \u0026\u0026 participants.contains(\"\") ? Collections.emptySet() : participants;","lastModifiedDate":"2022-03-31"},{"lineNumber":101,"author":{"gitId":"tomascherian"},"content":"        return Optional.of(ParserUtil.parseParticipants(indexes));","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":102,"YiFei2":1}},{"path":"src/main/java/seedu/address/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.ContactTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":" * Parses input arguments and creates a new FindContactCommand object","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"     * and returns a FindContactCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"        if (!isAnyPrefix(argMultiMap, PREFIX_NAME, PREFIX_TAG) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        Set\u003cName\u003e nameKeywords \u003d ParserUtil.parseNames(argMultiMap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e tagKeywords \u003d ParserUtil.parseTags(argMultiMap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d new NameContainsKeywordsPredicate(nameKeywords);","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate tagPredicate \u003d new ContactTagContainsKeywordsPredicate(tagKeywords);","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        return new FindContactCommand(namePredicate, tagPredicate);","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"    private static boolean isAnyPrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":48}},{"path":"src/main/java/seedu/address/logic/parser/FindMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingNameHasKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingOccursOnDatesPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingTagHasKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":" * Parses input arguments and creates a new FindMeetingCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"public class FindMeetingCommandParser implements Parser\u003cFindMeetingCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMeetingCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"     * and returns a FindMeetingCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    public FindMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEETING_NAME, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        if (!isAnyPrefixPresent(argMultimap, PREFIX_MEETING_NAME, PREFIX_DATE, PREFIX_TAG)","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingName\u003e nameKeywords \u003d ParserUtil.parseMeetingNames(argMultimap.getAllValues(PREFIX_MEETING_NAME));","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingDate\u003e dates \u003d ParserUtil.parseMeetingDates(argMultimap.getAllValues(PREFIX_DATE));","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        Set\u003cTag\u003e tagKeywords \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate namePredicate \u003d new MeetingNameHasKeywordsPredicate(nameKeywords);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate datePredicate \u003d new MeetingOccursOnDatesPredicate(dates);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate tagPredicate \u003d new MeetingTagHasKeywordsPredicate(tagKeywords);","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"        return new FindMeetingCommand(namePredicate, datePredicate, tagPredicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"     * Returns true if at least one of the prefixes contains a non-empty {@code Optional} value in the given","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    private static boolean isAnyPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cpwill01":57}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    public static Set\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(names);","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cName\u003e namesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        for (String name : names) {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"            namesSet.add(parseName(name));","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        return namesSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"    public static Telegram parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(telegram);","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"rahulprasad01"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"rahulprasad01"},"content":"        if (!Telegram.isValidId(trimmedTelegram)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"rahulprasad01"},"content":"        return new Telegram(trimmedTelegram);","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"YiFei2"},"content":"     * Parses a {@code String meetingName} into a {@code MeetingName}.","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the given {@code meetingName} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"    public static MeetingName parseMeetingName(String meetingName) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(meetingName);","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"YiFei2"},"content":"        String trimmedMeetingName \u003d meetingName.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"YiFei2"},"content":"        if (!MeetingName.isValidMeetingName(trimmedMeetingName)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(MeetingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"YiFei2"},"content":"        return new MeetingName(trimmedMeetingName);","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"     * Parses {@code Collection\u003cString\u003e meetingNames} into a {@code Set\u003cMeetingName\u003e}.","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"    public static Set\u003cMeetingName\u003e parseMeetingNames(Collection\u003cString\u003e meetingNames) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(meetingNames);","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"        final Set\u003cMeetingName\u003e meetingNamesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"        for (String meetingName : meetingNames) {","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"            meetingNamesSet.add(parseMeetingName(meetingName));","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"        return meetingNamesSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"YiFei2"},"content":"     * Parses a {@code String meetingDate} into a {@code MeetingDate}.","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"YiFei2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the given {@code meetingDate} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":146,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"YiFei2"},"content":"    public static MeetingDate parseMeetingDate(String meetingDate) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(meetingDate);","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"YiFei2"},"content":"        String trimmedMeetingDate \u003d meetingDate.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"YiFei2"},"content":"        if (!MeetingDate.isValidDate(trimmedMeetingDate)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(MeetingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":152,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"YiFei2"},"content":"        return new MeetingDate(trimmedMeetingDate);","lastModifiedDate":"2022-03-13"},{"lineNumber":154,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":155,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"     * Parses {@code Collection\u003cString\u003e meetingDates} into a {@code Set\u003cMeetingDate\u003e}.","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"    public static Set\u003cMeetingDate\u003e parseMeetingDates(Collection\u003cString\u003e meetingDates) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(meetingDates);","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"cpwill01"},"content":"        final Set\u003cMeetingDate\u003e meetingDatesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"cpwill01"},"content":"        for (String meetingDate : meetingDates) {","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"            meetingDatesSet.add(parseMeetingDate(meetingDate));","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"cpwill01"},"content":"        return meetingDatesSet;","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"YiFei2"},"content":"     * Parses a {@code String startTime} into a {@code StartTime}.","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the given {@code startTime} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"YiFei2"},"content":"    public static StartTime parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"YiFei2"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"YiFei2"},"content":"        if (!StartTime.isValidTime(trimmedStartTime)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":180,"author":{"gitId":"YiFei2"},"content":"        return new StartTime(trimmedStartTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":181,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":182,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"YiFei2"},"content":"     * Parses a {@code String endTime} into a {@code EndTime}.","lastModifiedDate":"2022-03-13"},{"lineNumber":185,"author":{"gitId":"YiFei2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if the given {@code endTime} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"YiFei2"},"content":"    public static EndTime parseEndTime(String endTime) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"YiFei2"},"content":"        String trimmedEndTime \u003d endTime.trim();","lastModifiedDate":"2022-03-13"},{"lineNumber":192,"author":{"gitId":"YiFei2"},"content":"        if (!EndTime.isValidTime(trimmedEndTime)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"YiFei2"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":195,"author":{"gitId":"YiFei2"},"content":"        return new EndTime(trimmedEndTime);","lastModifiedDate":"2022-03-13"},{"lineNumber":196,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":197,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":198,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":199,"author":{"gitId":"YiFei2"},"content":"     * Parses a {@code Collection\u003cString\u003e indexes} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2022-03-13"},{"lineNumber":200,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":201,"author":{"gitId":"YiFei2"},"content":"     * @throws ParseException if any of the specified indexes is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-03-13"},{"lineNumber":202,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":203,"author":{"gitId":"YiFei2"},"content":"    public static Set\u003cIndex\u003e parseParticipants(Collection\u003cString\u003e indexes) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":204,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"YiFei2"},"content":"        final Set\u003cIndex\u003e participantSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"YiFei2"},"content":"        for (String targetIndex : indexes) {","lastModifiedDate":"2022-03-13"},{"lineNumber":207,"author":{"gitId":"YiFei2"},"content":"            participantSet.add(parseIndex(targetIndex));","lastModifiedDate":"2022-03-13"},{"lineNumber":208,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":209,"author":{"gitId":"YiFei2"},"content":"        return participantSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":210,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":211,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":238,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":239,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":240,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":241,"author":{"gitId":"rahulprasad01"},"content":"     * Parses String days into int days","lastModifiedDate":"2022-03-23"},{"lineNumber":242,"author":{"gitId":"rahulprasad01"},"content":"     * @throws ParseException","lastModifiedDate":"2022-03-23"},{"lineNumber":243,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":244,"author":{"gitId":"rahulprasad01"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":245,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(days);","lastModifiedDate":"2022-03-23"},{"lineNumber":246,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":247,"author":{"gitId":"rahulprasad01"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(days.trim())) {","lastModifiedDate":"2022-03-23"},{"lineNumber":248,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":250,"author":{"gitId":"rahulprasad01"},"content":"        return Integer.parseInt(days.trim());","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tomascherian":12,"YiFei2":78,"cpwill01":24,"rahulprasad01":24,"-":114}},{"path":"src/main/java/seedu/address/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.ReminderCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.ReminderDatePredicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":" * Parses input argument and creates a new RemindCommand object","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"     * Parses the given {@code String} of arguments in the context of the RemindCommand","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"     * and returns a RemindCommand object for execution.","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        int days;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"            days \u003d ParserUtil.parseDays(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"                    ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"        return new ReminderCommand(new ReminderDatePredicate(days));","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"rahulprasad01":29}},{"path":"src/main/java/seedu/address/logic/parser/UnarchiveMeetingParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.UnarchiveMeetingCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":" * Parses input arguments and creates a new ArchiveMeetingCommand object","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"public class UnarchiveMeetingParser implements Parser\u003cUnarchiveMeetingCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"     * Parses the given {@code String} of arguments in the context of the UnarchiveMeetingCommand","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"     * and returns a UnarchiveMeetingCommand object for execution.","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"     * @throws ParseException if the user input does not have the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    public UnarchiveMeetingCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        try {","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"            return new UnarchiveMeetingCommand(index);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnarchiveMeetingCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"rahulprasad01":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.UniquePersonList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.UniqueMeetingList;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"    private final UniqueMeetingList meetings;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        meetings \u003d new UniqueMeetingList();","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"    public void setPersons(List\u003cContact\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"     * Replaces the contents of the meeting list with {@code meetings}.","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"        this.meetings.setMeetings(meetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        setMeetings(newData.getMeetingList());","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"    public boolean hasPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"rahulprasad01"},"content":"    public void addPerson(Contact p) {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"rahulprasad01"},"content":"    public void setPerson(Contact target, Contact editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"        assert hasPerson(target) : \"Contact specified does not exist in the contact list\";","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"        persons.setContact(target, editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"        setMeetingParticipant(target, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"    public void removePerson(Contact key) {","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"        assert hasPerson(key) : \"Contact specified does not exist in the contact list\";","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"        removeMeetingParticipant(key);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"rahulprasad01"},"content":"    public void sortPerson() {","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"rahulprasad01"},"content":"        persons.sortContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"    //// meeting-level operations","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"        return meetings.contains(meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"tomascherian"},"content":"     * Adds a meeting to the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"     * The meeting must not already exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"    public void addMeeting(Meeting m) {","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"tomascherian"},"content":"        meetings.add(m);","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"     * Replaces the given meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"tomascherian"},"content":"     * The meeting identity of {@code editedMeeting} must not be the","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"tomascherian"},"content":"     * same as another existing meeting in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"        meetings.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"    private void setMeetingParticipant(Contact target, Contact editedContact) {","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"        meetings.updateParticipantLists(new Participant(target), new Participant(editedContact));","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"tomascherian"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"tomascherian"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"tomascherian"},"content":"    public void removeMeeting(Meeting key) {","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"tomascherian"},"content":"        meetings.remove(key);","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"cpwill01"},"content":"    private void removeMeetingParticipant(Contact key) {","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"cpwill01"},"content":"        meetings.removeFromParticipantLists(new Participant(key));","lastModifiedDate":"2022-03-24"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"rahulprasad01"},"content":"    public void sortMeet() {","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"rahulprasad01"},"content":"        meetings.sortMeetingList();","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"tomascherian"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"tomascherian"},"content":"                + meetings.asUnmodifiableObservableList().size() + \" meetings\";","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"rahulprasad01"},"content":"    public ObservableList\u003cContact\u003e getPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":186,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"tomascherian"},"content":"    public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"tomascherian"},"content":"        return meetings.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 meetings.equals(((AddressBook) other).meetings));","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"tomascherian"},"content":"        return Objects.hash(persons, meetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tomascherian":63,"cpwill01":14,"rahulprasad01":15,"-":111}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    /** {@code Predicates} that always evaluate to true */","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    /** {@code Predicate} that evaluates to true if meeting\u0027s archive status is false. */","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_MEETINGS \u003d meeting -\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"            !(meeting.getArchiveStatus().isArchive);","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    /** {@code Predicate} that evaluates to true if meeting\u0027s archive status is true. */","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    Predicate\u003cMeeting\u003e PREDICATE_SHOW_ALL_ARCHIVED_MEETINGS \u003d meeting -\u003e (","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"            meeting.getArchiveStatus().isArchive);","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"    void commitAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    void undoAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    void redoAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"    boolean hasPerson(Contact person);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"rahulprasad01"},"content":"    void deletePerson(Contact target);","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"    void sortContact();","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"rahulprasad01"},"content":"    void addPerson(Contact person);","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"    void setPerson(Contact target, Contact editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"    ObservableList\u003cContact\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"rahulprasad01"},"content":"    void updateFilteredPersonList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"     * Returns true if a meeting with the same identity as {@code meeting} exists in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"    boolean hasMeeting(Meeting meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"     * Deletes the given meeting.","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"     * The meeting must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"    void deleteMeeting(Meeting target);","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"tomascherian"},"content":"     * Adds the given meeting.","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"tomascherian"},"content":"     * {@code meeting} must not already exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"tomascherian"},"content":"    void addMeeting(Meeting meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"     * Replaces the given meeting {@code target} with {@code editedMeeting}.","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"tomascherian"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"     * The meeting identity of {@code editedMeeting} must not be the","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"     * same as another existing meeting in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"    void setMeeting(Meeting target, Meeting editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"rahulprasad01"},"content":"    void sortMeeting();","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"    /** Returns an unmodifiable view of the filtered Meeting list */","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"    ObservableList\u003cMeeting\u003e getFilteredMeetingList();","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"     * Updates the filter of the filtered meeting list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"tomascherian"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"tomascherian"},"content":"    void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"YiFei2"},"content":"     * Checks for any clashes in Meeting timings.","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"     * @param toAdd Meeting to check against current list of meetings.","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"     * @return List of meetings that clash with meeting to be added.","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"YiFei2"},"content":"    ArrayList\u003cMeeting\u003e checkMeetingClash(Meeting toAdd);","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tomascherian":35,"YiFei2":24,"cpwill01":1,"rahulprasad01":21,"-":81}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"    private final FilteredList\u003cContact\u003e filteredPersons;","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    private final FilteredList\u003cMeeting\u003e filteredMeetings;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook(this.addressBook);","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        filteredMeetings \u003d new FilteredList\u003c\u003e(this.addressBook.getMeetingList(), Model.PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"YiFei2"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"YiFei2"},"content":"        versionedAddressBook.commit(this.addressBook);","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":103,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":104,"author":{"gitId":"YiFei2"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"YiFei2"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":113,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"YiFei2"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"YiFei2"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":122,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"rahulprasad01"},"content":"    public boolean hasPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"rahulprasad01"},"content":"    public void deletePerson(Contact target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"rahulprasad01"},"content":"    public void sortContact() {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"rahulprasad01"},"content":"        addressBook.sortPerson();","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"rahulprasad01"},"content":"    public void addPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"rahulprasad01"},"content":"    public void setPerson(Contact target, Contact editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"tomascherian"},"content":"    public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"tomascherian"},"content":"        return addressBook.hasMeeting(meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"    public ArrayList\u003cMeeting\u003e checkMeetingClash(Meeting toAdd) {","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"YiFei2"},"content":"        ObservableList\u003cMeeting\u003e meetingList \u003d addressBook.getMeetingList();","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"YiFei2"},"content":"        ArrayList\u003cMeeting\u003e clashingMeetings \u003d new ArrayList\u003cMeeting\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"YiFei2"},"content":"        for (Meeting otherMeeting : meetingList) {","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"YiFei2"},"content":"            if (toAdd.isTimingClash(otherMeeting) \u0026\u0026 !otherMeeting.getArchiveStatus().isArchive","lastModifiedDate":"2022-04-04"},{"lineNumber":164,"author":{"gitId":"YiFei2"},"content":"                    \u0026\u0026 !otherMeeting.getEditStatus()) {","lastModifiedDate":"2022-04-10"},{"lineNumber":165,"author":{"gitId":"YiFei2"},"content":"                clashingMeetings.add(otherMeeting);","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"YiFei2"},"content":"        return clashingMeetings;","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"tomascherian"},"content":"    public void deleteMeeting(Meeting target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"tomascherian"},"content":"        addressBook.removeMeeting(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"tomascherian"},"content":"    public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"tomascherian"},"content":"        addressBook.addMeeting(meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"tomascherian"},"content":"        updateFilteredMeetingList(PREDICATE_SHOW_ALL_MEETINGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"tomascherian"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"tomascherian"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"tomascherian"},"content":"        addressBook.setMeeting(target, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":191,"author":{"gitId":"rahulprasad01"},"content":"    public void sortMeeting() {","lastModifiedDate":"2022-03-24"},{"lineNumber":192,"author":{"gitId":"rahulprasad01"},"content":"        addressBook.sortMeet();","lastModifiedDate":"2022-03-24"},{"lineNumber":193,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":194,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"rahulprasad01"},"content":"    public ObservableList\u003cContact\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":207,"author":{"gitId":"rahulprasad01"},"content":"    public void updateFilteredPersonList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":212,"author":{"gitId":"tomascherian"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Meeting List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"tomascherian"},"content":"     * Returns an unmodifiable view of the list of {@code Meeting} backed by the internal list of","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"tomascherian"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":218,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":219,"author":{"gitId":"tomascherian"},"content":"    public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":220,"author":{"gitId":"tomascherian"},"content":"        return filteredMeetings;","lastModifiedDate":"2022-03-10"},{"lineNumber":221,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":222,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":223,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":224,"author":{"gitId":"tomascherian"},"content":"    public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":225,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"tomascherian"},"content":"        filteredMeetings.setPredicate(predicate);","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"rahulprasad01"},"content":"    // @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"rahulprasad01"},"content":"    //public void sortContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":232,"author":{"gitId":"rahulprasad01"},"content":"    //filteredPersons.sort(new NameComparator());","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"rahulprasad01"},"content":"    //  getFilteredPersonList().sort(new NameComparator());","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"rahulprasad01"},"content":"    //}","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":253,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-10"},{"lineNumber":254,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 filteredMeetings.equals(other.filteredMeetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tomascherian":45,"YiFei2":42,"rahulprasad01":28,"-":143}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    ObservableList\u003cContact\u003e getPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"     * Returns an unmodifiable view of the meetings list.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"     * This list will not contain any duplicate meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"    */","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"    ObservableList\u003cMeeting\u003e getMeetingList();","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tomascherian":6,"rahulprasad01":4,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressoc.json\");","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":1,"-":86}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":" * Keeps track of changes to the AddressBook and implements","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":" * the Undo and Redo functions.","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"public class VersionedAddressBook {","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"    private final ArrayList\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"    private final AddressBook initialAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    private int currentStatePointer;","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"     * Initializes VersionedAddressBook with the initial AddressBook.","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    public VersionedAddressBook(AddressBook initialAddressBook) {","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"        this.initialAddressBook \u003d initialAddressBook;","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        ReadOnlyAddressBook initialState \u003d new AddressBook(initialAddressBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        addressBookStateList \u003d new ArrayList\u003cReadOnlyAddressBook\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"        addressBookStateList.add(initialState);","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"     * Commits current AddressBook to the StateList as a State.","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"     * @param currentAddressBook to be saved in the StateList.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"    public void commit(ReadOnlyAddressBook currentAddressBook) {","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"        ReadOnlyAddressBook currentState \u003d new AddressBook(currentAddressBook);","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"        if (addressBookStateList.size() \u003e currentStatePointer + 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"            addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"        currentStatePointer++;","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"        addressBookStateList.add(currentState);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"     * Decrements pointer and resets the AddressBook to its previous state.","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"     * {@code addressBookStateList} must contain previous states to revert to.","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"    public void undo() {","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"        assert(canUndo()) : \"The addressbook has no states to undo!\";","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"        currentStatePointer--;","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"        ReadOnlyAddressBook newState \u003d addressBookStateList.get(currentStatePointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        initialAddressBook.resetData(newState);","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"     * Increments pointer and sets the AddressBook to its next state.","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"     * {@code addressBookStateList} must contain undone states to revert to.","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"    public void redo() {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"        assert(canRedo()) : \"The addressbook has no states to redo!\";","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"        currentStatePointer++;","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        ReadOnlyAddressBook newState \u003d addressBookStateList.get(currentStatePointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"        initialAddressBook.resetData(newState);","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"        return (currentStatePointer \u003e 0);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    public boolean canRedo() {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"        return (currentStatePointer \u003c addressBookStateList.size() - 1);","lastModifiedDate":"2022-03-27"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"YiFei2":71}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":" * Represents a contact in the contact list.","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"public class Contact {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    private final Telegram telegramUsername;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    private boolean isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    public Contact(Name name, Phone phone, Email email, Telegram id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"        requireAllNonNull(name, phone, email, id, tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        this.telegramUsername \u003d id;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        this.isBeingEdited \u003d false;","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"        return telegramUsername;","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"    public boolean getEditStatus() {","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"        return isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"    public void setEditStatus() {","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"        this.isBeingEdited \u003d !isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"     * Returns true if both contacts have at least one identity field that is the same and","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"     * neither contacts are being edited.","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"     * This defines a weaker notion of equality between two contacts.","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"rahulprasad01"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"rahulprasad01"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"        return otherContact !\u003d null","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 otherContact.getEditStatus() \u003d\u003d getEditStatus()","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 (otherContact.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"                        || otherContact.getName().equals(getName())","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"                        || otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"                        || otherContact.getTelegram().equals(getTelegram()));","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"     * Returns true if both contacts have the same identity and data fields.","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"YiFei2"},"content":"     * This defines a stronger notion of equality between two contacts.","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"        Contact otherPerson \u003d (Contact) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"rahulprasad01"},"content":"        return Objects.hash(name, phone, email, telegramUsername, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"rahulprasad01"},"content":"                .append(\" Phone: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"rahulprasad01"},"content":"                .append(\" Email: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"rahulprasad01"},"content":"                .append(\" Telegram: \")","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"rahulprasad01"},"content":"                .append(getTelegram())","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"rahulprasad01"},"content":"                .append(\" Tags: \");","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"rahulprasad01"},"content":"        getTags().forEach(builder::append);","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":17,"cpwill01":3,"rahulprasad01":27,"-":91}},{"path":"src/main/java/seedu/address/model/contact/ContactTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"public class ContactTagContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"    private final Set\u003cTag\u003e tagKeywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    public ContactTagContainsKeywordsPredicate(Set\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"    public boolean test(Contact person) {","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"        if (tagKeywords.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"        return tagKeywords.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"                .anyMatch(tagKeyword -\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"                        person.getTags().stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"                .anyMatch(tag -\u003e StringUtil.containsPhraseIgnoreCase(tag.tagName, tagKeyword.tagName)));","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"                || (other instanceof ContactTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 tagKeywords.equals(((ContactTagContainsKeywordsPredicate) other).tagKeywords)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":34}},{"path":"src/main/java/seedu/address/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rahulprasad01":1,"-":70}},{"path":"src/main/java/seedu/address/model/contact/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"rahulprasad01":2,"-":59}},{"path":"src/main/java/seedu/address/model/contact/NameComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"public class NameComparator implements Comparator\u003cContact\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"    /** override the compare() method","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"     * @param s1","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"     * @param s2","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"     * @returns a negative, zero or positive integer based on whether the first argument is","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"     * less than, equal to or greater than the second.","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    public int compare(Contact s1, Contact s2) {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"        return s1.getName().fullName.toLowerCase().compareTo(s2.getName().fullName.toLowerCase());","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"rahulprasad01":22}},{"path":"src/main/java/seedu/address/model/contact/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    private final Set\u003cName\u003e nameKeywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    public NameContainsKeywordsPredicate(Set\u003cName\u003e nameKeywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"    public boolean test(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"        if (nameKeywords.isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"            return true;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"        return nameKeywords.stream()","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"                .anyMatch(nameKeyword -\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"                        StringUtil.containsPhraseIgnoreCase(person.getName().fullName, nameKeyword.fullName));","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 nameKeywords.equals(((NameContainsKeywordsPredicate) other).nameKeywords)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tomascherian":12,"rahulprasad01":3,"-":21}},{"path":"src/main/java/seedu/address/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rahulprasad01":1,"-":52}},{"path":"src/main/java/seedu/address/model/contact/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"public class Telegram {","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"            \"Telegram id should contain alphanumeric characters and underscore, and it should not be empty\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_]+$\";","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public final String telegramId;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"     * Constructs a {@code Telegram id}.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"     * @param id A valid telegram handle.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    public Telegram(String id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"        telegramId \u003d id;","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        return this.telegramId;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 telegramId.equals(((Telegram) other).telegramId)); // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"        return telegramId.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"rahulprasad01":55}},{"path":"src/main/java/seedu/address/model/contact/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"public class UniquePersonList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"    public void setContact(Contact target, Contact editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"        if (!target.isSameContact(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"rahulprasad01"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"rahulprasad01"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"rahulprasad01"},"content":"    public void setPersons(List\u003cContact\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"rahulprasad01"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"    public void sortContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"        internalList.sort(new NameComparator());","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"rahulprasad01"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"rahulprasad01"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"rahulprasad01"},"content":"    private boolean personsAreUnique(List\u003cContact\u003e persons) {","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"rahulprasad01"},"content":"                if (persons.get(i).isSameContact(persons.get(j))) {","lastModifiedDate":"2022-03-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"rahulprasad01":30,"-":113}},{"path":"src/main/java/seedu/address/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"public class ContactNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"rahulprasad01":6}},{"path":"src/main/java/seedu/address/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":" * identity).","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"        super(\"Operation would result in duplicate contacts\");","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"rahulprasad01":11}},{"path":"src/main/java/seedu/address/model/meeting/EndTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":" * Represents a Meeting end time in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"public class EndTime extends Time {","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"     * Constructs an {@code EndTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"     * @param time A valid meeting end time.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    public EndTime(String time) {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"        super(time);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":14,"YiFei2":3}},{"path":"src/main/java/seedu/address/model/meeting/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":" * Represents a Meeting in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"public class Meeting {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"    // Identity fields","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    private final MeetingName name;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"    private final MeetingDate date;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    private final StartTime startTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"    private final EndTime endTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    private final MeetingArchiveStatus archiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    private boolean isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    // Data fields","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    private final Set\u003cParticipant\u003e participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"    public Meeting(MeetingName name, MeetingDate date, StartTime startTime, EndTime endTime,","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"                   Set\u003cParticipant\u003e participants, MeetingArchiveStatus archiveStatus, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"        requireAllNonNull(name, date, startTime, endTime, participants, tags, archiveStatus);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        this.archiveStatus \u003d archiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"        this.isBeingEdited \u003d false;","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    public MeetingName getName() {","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        return name;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"    public MeetingDate getDate() {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"        return date;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"    public StartTime getStartTime() {","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        return startTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    public EndTime getEndTime() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"        return endTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"    public Set\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"        return Collections.unmodifiableSet(participants);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"    public MeetingArchiveStatus getArchiveStatus() {","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"        return archiveStatus;","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    public boolean getEditStatus() {","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"        return isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"    public void setEditStatus() {","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"        this.isBeingEdited \u003d !isBeingEdited;","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"     * Replaces a participant of this meeting with the {@code editedParticipant}.","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"     * @param target the participant to be replaced","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"     * @param editedParticipant the updated participant that will replace {@code target}","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"     * @return","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"    public Meeting setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        assert participants.contains(target) : \"The given participant is not participating in this meeting\";","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"        Set\u003cParticipant\u003e newParticipants \u003d new HashSet\u003c\u003e(participants);","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        newParticipants.remove(target);","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"        newParticipants.add(editedParticipant);","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"        return new Meeting(name, date, startTime, endTime, newParticipants, archiveStatus, tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"     * Removes a participant from this meeting\u0027s participant list","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"     * @param toRemove the participant to remove.","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"     * @return a new meeting instance with the participant removed","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"    public Meeting removeParticipant(Participant toRemove) {","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"        requireAllNonNull(toRemove);","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"        assert participants.contains(toRemove) : \"The given participant is not participating in this meeting\";","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"        Set\u003cParticipant\u003e newParticipants \u003d participants.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"                .filter(p -\u003e !p.isSameParticipant(toRemove))","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"YiFei2"},"content":"        return new Meeting(name, date, startTime, endTime, newParticipants, archiveStatus, tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"     * Returns true if the participant {@code toCheck} is in","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"     * this meeting\u0027s participant list.","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"    public boolean hasParticipant(Participant toCheck) {","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"        return participants.contains(toCheck);","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":129,"author":{"gitId":"tomascherian"},"content":"     * Returns true if both meetings have the same name and same date.","lastModifiedDate":"2022-03-10"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"     * This defines a weaker notion of equality between two meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":131,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"tomascherian"},"content":"    public boolean isSameMeeting(Meeting otherMeeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":133,"author":{"gitId":"tomascherian"},"content":"        if (otherMeeting \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":134,"author":{"gitId":"tomascherian"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"        return otherMeeting !\u003d null","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 otherMeeting.getEditStatus() \u003d\u003d getEditStatus()","lastModifiedDate":"2022-04-10"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 otherMeeting.getName().equals(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 otherMeeting.getDate().equals(getDate());","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"YiFei2"},"content":"     * Returns true if a meeting\u0027s startTime or endTime falls within","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"YiFei2"},"content":"     * another meeting.","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"YiFei2"},"content":"    public boolean isTimingClash(Meeting otherMeeting) {","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"YiFei2"},"content":"        if (this.date.equals(otherMeeting.getDate())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"YiFei2"},"content":"            if (this.startTime.isWithin(otherMeeting.getStartTime(), otherMeeting.getEndTime())","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"YiFei2"},"content":"                    || otherMeeting.getStartTime().isWithin(this.startTime, this.endTime)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"YiFei2"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"YiFei2"},"content":"            if (this.endTime.isWithin(otherMeeting.getStartTime(), otherMeeting.getEndTime())","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"YiFei2"},"content":"                    || otherMeeting.getEndTime().isWithin(this.startTime, this.endTime)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"YiFei2"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"YiFei2"},"content":"            if (this.startTime.equals(otherMeeting.getStartTime()) \u0026\u0026 this.endTime.equals(otherMeeting.getEndTime())) {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"YiFei2"},"content":"        return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"tomascherian"},"content":"     * Returns true if both meetings have the same identity and data fields.","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"tomascherian"},"content":"     * This defines a stronger notion of equality between two meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"tomascherian"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"tomascherian"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"tomascherian"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":175,"author":{"gitId":"tomascherian"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":176,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":177,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"tomascherian"},"content":"        Meeting otherMeeting \u003d (Meeting) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"tomascherian"},"content":"        return otherMeeting.getName().equals(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 otherMeeting.getDate().equals(getDate())","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 otherMeeting.getStartTime().equals(getStartTime())","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 otherMeeting.getEndTime().equals(getEndTime())","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 otherMeeting.getParticipants().equals(getParticipants())","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 otherMeeting.getTags().equals(getTags())","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 otherMeeting.getArchiveStatus().equals(getArchiveStatus());","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"rahulprasad01"},"content":"    /** Return a meeting that has been archived */","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"YiFei2"},"content":"    public Meeting archive() {","lastModifiedDate":"2022-03-30"},{"lineNumber":190,"author":{"gitId":"YiFei2"},"content":"        return new Meeting(this.name, this.date, this.startTime, this.endTime,","lastModifiedDate":"2022-03-30"},{"lineNumber":191,"author":{"gitId":"YiFei2"},"content":"                this.participants, new MeetingArchiveStatus(true),","lastModifiedDate":"2022-03-30"},{"lineNumber":192,"author":{"gitId":"YiFei2"},"content":"                this.tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":193,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":194,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":195,"author":{"gitId":"rahulprasad01"},"content":"    /** Return a meeting that has been unarchived */","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"rahulprasad01"},"content":"    public Meeting unarchive() {","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"rahulprasad01"},"content":"        return new Meeting(this.name, this.date, this.startTime, this.endTime,","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"rahulprasad01"},"content":"                this.participants, new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"rahulprasad01"},"content":"                this.tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":200,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"tomascherian"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"tomascherian"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"YiFei2"},"content":"        return Objects.hash(name, date, startTime, endTime, participants, archiveStatus, tags);","lastModifiedDate":"2022-03-30"},{"lineNumber":206,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"tomascherian"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"tomascherian"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"tomascherian"},"content":"        builder.append(getName())","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"tomascherian"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":213,"author":{"gitId":"tomascherian"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-10"},{"lineNumber":214,"author":{"gitId":"tomascherian"},"content":"                .append(\"; From: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":215,"author":{"gitId":"tomascherian"},"content":"                .append(getStartTime())","lastModifiedDate":"2022-03-10"},{"lineNumber":216,"author":{"gitId":"tomascherian"},"content":"                .append(\"; To: \")","lastModifiedDate":"2022-03-10"},{"lineNumber":217,"author":{"gitId":"YiFei2"},"content":"                .append(getEndTime());","lastModifiedDate":"2022-03-13"},{"lineNumber":218,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":219,"author":{"gitId":"YiFei2"},"content":"        Set\u003cParticipant\u003e participants \u003d getParticipants();","lastModifiedDate":"2022-03-13"},{"lineNumber":220,"author":{"gitId":"YiFei2"},"content":"        if (!participants.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"YiFei2"},"content":"            builder.append(\"; Participants: \");","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"cpwill01"},"content":"            builder.append(participants.stream().map(Participant::toString)","lastModifiedDate":"2022-04-01"},{"lineNumber":223,"author":{"gitId":"cpwill01"},"content":"                    .collect(Collectors.joining(\", \")));","lastModifiedDate":"2022-04-01"},{"lineNumber":224,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":226,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-10"},{"lineNumber":227,"author":{"gitId":"tomascherian"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":228,"author":{"gitId":"tomascherian"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-10"},{"lineNumber":229,"author":{"gitId":"tomascherian"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-10"},{"lineNumber":230,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":231,"author":{"gitId":"tomascherian"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":232,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":233,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":120,"cpwill01":44,"YiFei2":61,"rahulprasad01":8}},{"path":"src/main/java/seedu/address/model/meeting/MeetingArchiveStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":" * Represents a Person\u0027s archive status in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"public class MeetingArchiveStatus {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Archive status should only be true or false\";","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(true|false)$\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"    public final boolean isArchive;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"     * Constructs a {@code archiveStatus} based on the archiveStatus passed in.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"     * @param archiveStatus A valid archiveStatus of archival.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    public MeetingArchiveStatus(boolean archiveStatus) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"        requireNonNull(archiveStatus);","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"        this.isArchive \u003d archiveStatus;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"     * Returns true if a given string is a valid archiveStatus.","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    public static boolean isValidArchiveStatus(String test) {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        return String.valueOf(isArchive);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof MeetingArchiveStatus","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 isArchive \u003d\u003d ((MeetingArchiveStatus) other).isArchive);","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"        return String.valueOf(isArchive).hashCode();","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"rahulprasad01":51}},{"path":"src/main/java/seedu/address/model/meeting/MeetingComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"public class MeetingComparator implements Comparator\u003cMeeting\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"    /** override the compare() method","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"     *","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"     * @param s1","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"     * @param s2","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"     * @returns a negative, zero or positive integer based on whether the first argument is","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"     * less than, equal to or greater than the second.","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    public int compare(Meeting s1, Meeting s2) {","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"        final int dateCompare \u003d s1.getDate().value.compareTo(s2.getDate().value);","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"        if (dateCompare !\u003d 0) {","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"            return dateCompare;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"        return s1.getStartTime().value.compareTo(s2.getStartTime().value);","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"rahulprasad01":25}},{"path":"src/main/java/seedu/address/model/meeting/MeetingDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":" * Represents a Meeting date in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"public class MeetingDate {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be of the format DD/MM/YYYY or DD-MM-YYYY\"","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"                                                     + \" and the date should have a valid day, month and year. \\n\";","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    private static final DateTimeFormatter formats \u003d DateTimeFormatter.ofPattern(\"[dd/MM/uuuu][dd-MM-uuuu]\");","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"    public final LocalDate value;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"     * Constructs an {@code MeetingDate}.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"     * @param date A valid meeting date.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    public MeetingDate(String date) {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"        value \u003d LocalDate.parse(date, formats);","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"     * checks whether the given date is valid","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"            LocalDate.parse(test, formats.withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"        return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        return this.value;","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        return value.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"                || (other instanceof MeetingDate // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 value.equals(((MeetingDate) other).value)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":45,"rahulprasad01":26}},{"path":"src/main/java/seedu/address/model/meeting/MeetingName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":" * Represents a Meeting name in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"public class MeetingName {","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"            \"Meeting Name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    /*","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    public final String meetingName;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"     * Constructs a {@code meetingName}.","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    public MeetingName(String name) {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"        checkArgument(isValidMeetingName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"        meetingName \u003d name;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    public static boolean isValidMeetingName(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"    public String toString() {","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        return meetingName;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"                || (other instanceof MeetingName // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 meetingName.equals(((MeetingName) other).meetingName)); // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        return meetingName.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":54,"YiFei2":2}},{"path":"src/main/java/seedu/address/model/meeting/MeetingNameHasKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" * Tests whether a {@code Meeting\u0027s} name matches any of the {@code MeetingNames} given.","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" * If no {@code MeetingName} is given, the test returns true.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"public class MeetingNameHasKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    private final Set\u003cMeetingName\u003e nameKeywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public MeetingNameHasKeywordsPredicate(Set\u003cMeetingName\u003e nameKeywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"        this.nameKeywords \u003d nameKeywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        if (nameKeywords.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"        return nameKeywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"                .anyMatch(nameKeyword -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"                        StringUtil.containsPhraseIgnoreCase(meeting.getName().meetingName, nameKeyword.meetingName));","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"                || (other instanceof MeetingNameHasKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 nameKeywords.equals(((MeetingNameHasKeywordsPredicate) other).nameKeywords)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cpwill01":36}},{"path":"src/main/java/seedu/address/model/meeting/MeetingOccursOnDatesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":" * Tests whether a {@code Meeting\u0027s} date matches any of the {@code MeetingDates} given.","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":" * If no {@code MeetingDate} is given, the test returns true.","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"public class MeetingOccursOnDatesPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"    private final Set\u003cMeetingDate\u003e dates;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"    public MeetingOccursOnDatesPredicate(Set\u003cMeetingDate\u003e dates) {","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"        if (dates.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"        return dates.stream().anyMatch(date -\u003e date.equals(meeting.getDate()));","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"                || (other instanceof MeetingOccursOnDatesPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 dates.equals(((MeetingOccursOnDatesPredicate) other).dates)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cpwill01":32}},{"path":"src/main/java/seedu/address/model/meeting/MeetingTagHasKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" * Tests whether a {@code Meeting\u0027s} tags matches any of the {@code Tags} given.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":" * If no {@code Tag} is given, the test returns true.","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"public class MeetingTagHasKeywordsPredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    private final Set\u003cTag\u003e tagKeywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    public MeetingTagHasKeywordsPredicate(Set\u003cTag\u003e tagKeywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"        this.tagKeywords \u003d tagKeywords;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"        if (tagKeywords.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"            return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return tagKeywords.stream()","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"                .anyMatch(tagKeyword -\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"                        meeting.getTags()","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"                                .stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"                                .anyMatch(tag -\u003e StringUtil.containsPhraseIgnoreCase(tag.tagName, tagKeyword.tagName)));","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"                || (other instanceof MeetingTagHasKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 tagKeywords.equals(((MeetingTagHasKeywordsPredicate) other).tagKeywords)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cpwill01":40}},{"path":"src/main/java/seedu/address/model/meeting/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" * Represents the Meeting participants in the address book.","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"public class Participant {","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    public final Contact contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"     * Constructs an {@code ParticipantsList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"     * @param contact A valid contact.","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    public Participant(Contact contact) {","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(contact);","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        return contact.getName() + \" @\" + contact.getTelegram();","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Returns true if this participant\u0027s {@code contact} shares the same name and at","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     * least one other identity field as the {@code other} participant\u0027s {@code contact}.","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * This defines a weaker notion of equality between two participants.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    public boolean isSameParticipant(Participant other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"        return other !\u003d null","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 other.contact.isSameContact(this.contact);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"                || (other instanceof Participant // instanceof handles nulls","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 contact.equals(((Participant) other).contact)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        return contact.hashCode();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"YiFei2":39,"cpwill01":15}},{"path":"src/main/java/seedu/address/model/meeting/ReminderDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":" * Tests that a {@code Meeting}\u0027s {@code Date} is within X days of the current date.","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"public class ReminderDatePredicate implements Predicate\u003cMeeting\u003e {","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"    private long days;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"     * Constructor for ReminderDatePredicate","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"     * @param days the number of days from the current date such that the","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"     * predicate will return true.","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"    public ReminderDatePredicate(long days) {","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"        this.days \u003d days;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    public long getDays() {","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"        return this.days;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"    public boolean test(Meeting meeting) {","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"        return limit(meeting);","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"     * Returns true if the meeting is within X days of the current date.","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    public boolean limit(Meeting meeting) {","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"        LocalDate toTest \u003d meeting.getDate().value;","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        LocalDate dateToday \u003d LocalDate.now();","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        LocalDate acceptableDate \u003d dateToday.plusDays(days + 1);","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"        return toTest.isAfter(dateToday.minusDays(1L)) \u0026\u0026 toTest.isBefore(acceptableDate)","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 !(meeting.getArchiveStatus().isArchive);","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"                || (other instanceof ReminderDatePredicate // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"                \u0026\u0026 days \u003d\u003d (((ReminderDatePredicate) other).days)); // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"rahulprasad01":56}},{"path":"src/main/java/seedu/address/model/meeting/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":" * Represents a Meeting start time in the address book.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"public class StartTime extends Time {","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"     * Constructs an {@code StartTime}.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"     * @param time A valid meeting start time.","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    public StartTime(String time) {","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"        super(time);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":14,"YiFei2":3}},{"path":"src/main/java/seedu/address/model/meeting/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":" * Represents a Meeting time in the address book.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Incorrect time format. Time should be in the format hhmm\";","lastModifiedDate":"2022-04-10"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public static final String VALIDATION_REGEX \u003d \"([0-1][0-9]|2[0-3])[0-5][0-9]\";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"    public final String value;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"     * @param time A valid meeting time.","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"    public Time(String time) {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"        value \u003d time;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"     * Compares if time is later than a given time.","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"     * @param time A valid meeting time.","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"     * @return true if this time is later than given time.","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"    public boolean isBefore(Time time) {","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"        return this.value.compareTo(time.value) \u003c 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"     * Compares if time is earlier than a given time.","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"     * @param time A valid meeting time.","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"     * @return true if this time is earlier than given time.","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"    public boolean isAfter(Time time) {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"        return this.value.compareTo(time.value) \u003e 0;","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"     * Checks if time falls between two given timings.","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"     * @param start A valid meeting time.","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"     * @param end A valid meeting time.","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"     * @return true if time falls between the two given timings.","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"    public boolean isWithin(Time start, Time end) {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"        return isAfter(start) \u0026\u0026 isBefore(end);","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"    public int compareTo(Time time) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"        return this.value.compareTo(time.value);","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"        return value;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"                \u0026\u0026 value.equals(((Time) other).value)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"YiFei2"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"YiFei2"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tomascherian":1,"YiFei2":89}},{"path":"src/main/java/seedu/address/model/meeting/UniqueMeetingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import java.util.List;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.exceptions.DuplicateMeetingException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.exceptions.MeetingNotFoundException;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":" * A list of meetings that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":" * A meetings is considered unique by comparing using {@code Meeting#isSameMeeting(Meeting)}.","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":" * As such, adding and updating of meetings uses Meeting#isSameMeeting(Meeting) for equality","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":" * so as to ensure that the meeting being added or updated is unique in terms of identity","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":" * in the UniqueMeetingList. However, the removal of a meeting uses Meeting#equals(Object) so","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":" * as to ensure that the meeting with exactly the same fields will be removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":" *","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":" * @see Meeting#isSameMeeting(Meeting)","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"public class UniqueMeetingList implements Iterable\u003cMeeting\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"    private final ObservableList\u003cMeeting\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    private final ObservableList\u003cMeeting\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"     * Returns true if the list contains an equivalent meeting as the given argument.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"    public boolean contains(Meeting toCheck) {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"     * Adds a meeting to the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"     * The meeting must not already exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"    public void add(Meeting toAdd) {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"     * Replaces the meeting {@code target} in the list with {@code editedMeeting}.","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"     * The meeting identity of {@code editedMeeting} must not be the same as another existing meeting in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"    public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"        requireAllNonNull(target, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"        if (!target.isSameMeeting(editedMeeting) \u0026\u0026 contains(editedMeeting)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"        internalList.set(index, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"     * Removes the equivalent meeting from the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"     * The meeting must exist in the list.","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"    public void remove(Meeting toRemove) {","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"            throw new MeetingNotFoundException();","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"    public void setMeetings(UniqueMeetingList replacement) {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"     * Replaces the contents of this list with {@code meetings}.","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"     * {@code meetings} must not contain duplicate meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"    public void setMeetings(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"        requireAllNonNull(meetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"        if (!meetingsAreUnique(meetings)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"            throw new DuplicateMeetingException();","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"        internalList.setAll(meetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":99,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":100,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"    public void sortMeetingList() {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"        internalList.sort(new MeetingComparator());","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"     * Replaces a participant {@code target} in all meetings it is","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"     * participating in with {@code editedParticipant}.","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"     * @param target the participant to be updated","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"     * @param editedParticipant the updated participant","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"    public void updateParticipantLists(Participant target, Participant editedParticipant) {","lastModifiedDate":"2022-03-24"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"        List\u003cMeeting\u003e newMeetings \u003d internalList.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"                .map(existingMeeting -\u003e existingMeeting.hasParticipant(target)","lastModifiedDate":"2022-03-24"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"                                                ? existingMeeting.setParticipant(target, editedParticipant)","lastModifiedDate":"2022-03-24"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"                                                : existingMeeting)","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        setMeetings(newMeetings);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"     * Removes a meeting participant from all meetings it is participating in.","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"     * @param toRemove the participant to be removed","lastModifiedDate":"2022-03-24"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"    public void removeFromParticipantLists(Participant toRemove) {","lastModifiedDate":"2022-03-24"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-24"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"        List\u003cMeeting\u003e newMeetings \u003d internalList.stream()","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"                .map(existingMeeting -\u003e existingMeeting.hasParticipant(toRemove)","lastModifiedDate":"2022-03-24"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"                                        ? existingMeeting.removeParticipant(toRemove)","lastModifiedDate":"2022-03-24"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"                                        : existingMeeting)","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"        setMeetings(newMeetings);","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":138,"author":{"gitId":"tomascherian"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"    public ObservableList\u003cMeeting\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":144,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":145,"author":{"gitId":"tomascherian"},"content":"    public Iterator\u003cMeeting\u003e iterator() {","lastModifiedDate":"2022-03-10"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":151,"author":{"gitId":"tomascherian"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"                || (other instanceof UniqueMeetingList // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":153,"author":{"gitId":"tomascherian"},"content":"                \u0026\u0026 internalList.equals(((UniqueMeetingList) other).internalList));","lastModifiedDate":"2022-03-10"},{"lineNumber":154,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":155,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":156,"author":{"gitId":"tomascherian"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":157,"author":{"gitId":"tomascherian"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"tomascherian"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-10"},{"lineNumber":159,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":161,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":162,"author":{"gitId":"tomascherian"},"content":"     * Returns true if {@code meetings} contains only unique meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":163,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":164,"author":{"gitId":"tomascherian"},"content":"    private boolean meetingsAreUnique(List\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-10"},{"lineNumber":165,"author":{"gitId":"tomascherian"},"content":"        for (int i \u003d 0; i \u003c meetings.size() - 1; i++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":166,"author":{"gitId":"tomascherian"},"content":"            for (int j \u003d i + 1; j \u003c meetings.size(); j++) {","lastModifiedDate":"2022-03-10"},{"lineNumber":167,"author":{"gitId":"tomascherian"},"content":"                if (meetings.get(i).isSameMeeting(meetings.get(j))) {","lastModifiedDate":"2022-03-10"},{"lineNumber":168,"author":{"gitId":"tomascherian"},"content":"                    return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":169,"author":{"gitId":"tomascherian"},"content":"                }","lastModifiedDate":"2022-03-10"},{"lineNumber":170,"author":{"gitId":"tomascherian"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":171,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":172,"author":{"gitId":"tomascherian"},"content":"        return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":173,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":174,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":137,"cpwill01":33,"rahulprasad01":4}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/DuplicateMeetingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":" * Signals that the operation will result in duplicate Meetings (Meetings are considered duplicates if","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":" * they have the same identity).","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"public class DuplicateMeetingException extends RuntimeException {","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"    public DuplicateMeetingException() {","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"        super(\"Operation would result in duplicate meetings\");","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":11}},{"path":"src/main/java/seedu/address/model/meeting/exceptions/MeetingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.meeting.exceptions;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"public class MeetingNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"            \"Tag names should be alphanumeric, can contain punctuations except for /\";","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!.*/)[\\\\p{Alnum}\\\\p{Punct}][\\\\p{Alnum}\\\\p{Punct} ]*\";","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YiFei2":3,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    public static Contact[] getSamplePersons() {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"        return new Contact[]{","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"rak_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"bernie_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"chalro_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"david_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"irfan_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"            new Contact(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"                        new Telegram(\"roy_01\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    public static Meeting[] getSampleMeetings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"        Contact[] samplePersons \u003d getSamplePersons();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        return new Meeting[] {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"            new Meeting(new MeetingName(\"CS2103T project\"), new MeetingDate(\"12/03/2022\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"                        new StartTime(\"1600\"), new EndTime(\"1700\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"                        getParticipantSet(samplePersons[0], samplePersons[1]), new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"                    getTagSet(\"v1.2\")),","lastModifiedDate":"2022-04-01"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"            new Meeting(new MeetingName(\"CS2101 project\"), new MeetingDate(\"15/03/2022\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"                        new StartTime(\"1900\"), new EndTime(\"2000\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"                        getParticipantSet(samplePersons[0], samplePersons[1]), new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"                    getTagSet(\"OP2\")),","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"            new Meeting(new MeetingName(\"NUSSU meeting\"), new MeetingDate(\"20/03/2022\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"                        new StartTime(\"1600\"), new EndTime(\"1700\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"                        getParticipantSet(samplePersons[3], samplePersons[1]), new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"                    getTagSet(\"important\")),","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"            new Meeting(new MeetingName(\"Dance exco meeting\"), new MeetingDate(\"22/03/2022\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                        new StartTime(\"1700\"), new EndTime(\"1800\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"                        getParticipantSet(samplePersons[0], samplePersons[3]), new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"                    getTagSet()),","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"            new Meeting(new MeetingName(\"Computing club meeting\"), new MeetingDate(\"30/03/2022\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"                        new StartTime(\"1600\"), new EndTime(\"1700\"),","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"rahulprasad01"},"content":"                        getParticipantSet(samplePersons[4], samplePersons[2]), new MeetingArchiveStatus(false),","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"                    getTagSet()),","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"        for (Contact samplePerson : getSamplePersons()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        for (Meeting sampleMeeting : getSampleMeetings()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"            sampleAb.addMeeting(sampleMeeting);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"     * Returns a participant set containing the list of Persons given.","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"    public static Set\u003cParticipant\u003e getParticipantSet(Contact... persons) {","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"        return Arrays.stream(persons)","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"                .map(Participant::new)","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"cpwill01":34,"YiFei2":1,"rahulprasad01":31,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":" * Json-friendly version of {@link Meeting}.","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"public class JsonAdaptedMeeting {","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Meeting\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    private final String name;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private final String date;","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    private final String startTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    private final String endTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    private final String archiveStatus;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    private final List\u003cJsonAdaptedPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given meeting details.","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    public JsonAdaptedMeeting(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"                              @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"                              @JsonProperty(\"archiveStatus\") String archiveStatus,","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"                              @JsonProperty(\"participants\") List\u003cJsonAdaptedPerson\u003e participants,","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"        this.archiveStatus \u003d archiveStatus;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        if (!Objects.isNull(participants)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"            this.participants.addAll(participants);","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"        if (!Objects.isNull(tags)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"     * Converts a given {@code Meeting} into an object of this class for Json use.","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"    public JsonAdaptedMeeting(Meeting source) {","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        name \u003d source.getName().meetingName;","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        startTime \u003d source.getStartTime().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        endTime \u003d source.getEndTime().value;","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"        archiveStatus \u003d source.getArchiveStatus().toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        participants.addAll(source.getParticipants().stream().map(participant -\u003e participant.contact)","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"                .map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"        tags.addAll(source.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"     * Converts this JsonAdaptedMeeting object into the model\u0027s {@code Meeting} object.","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    public Meeting toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        final MeetingName modelName \u003d toModelName(name);","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"        final MeetingDate modelDate \u003d toModelDate(date);","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"        final StartTime modelStartTime \u003d toModelStartTime(startTime);","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"        final EndTime modelEndTime \u003d toModelEndTime(endTime);","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"rahulprasad01"},"content":"        final MeetingArchiveStatus modelArchiveStatus \u003d toModelArchiveStatus(archiveStatus);","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        final Set\u003cParticipant\u003e modelParticipants \u003d toModelParticipants(participants);","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        final Set\u003cTag\u003e modelTags \u003d toModelTags(tags);","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"        return new Meeting(modelName, modelDate, modelStartTime, modelEndTime,","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"                modelParticipants, modelArchiveStatus, modelTags);","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"    private MeetingName toModelName(String name) throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"                    MeetingName.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"YiFei2"},"content":"        if (!MeetingName.isValidMeetingName(name)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(MeetingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"        return new MeetingName(name);","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"    private MeetingDate toModelDate(String date) throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"                    MeetingDate.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"        if (!MeetingDate.isValidDate(date)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(MeetingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"        return new MeetingDate(date);","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"    private StartTime toModelStartTime(String time) throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"                    StartTime.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"        if (!StartTime.isValidTime(startTime)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        return new StartTime(time);","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"    private EndTime toModelEndTime(String time) throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"                    EndTime.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"YiFei2"},"content":"        if (!EndTime.isValidTime(endTime)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(EndTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"        return new EndTime(time);","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"rahulprasad01"},"content":"    private MeetingArchiveStatus toModelArchiveStatus(String status) throws IllegalValueException {","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"rahulprasad01"},"content":"        if (!MeetingArchiveStatus.isValidArchiveStatus(archiveStatus)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"rahulprasad01"},"content":"            throw new IllegalValueException(MeetingArchiveStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"rahulprasad01"},"content":"        return new MeetingArchiveStatus(Boolean.parseBoolean(status));","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"cpwill01"},"content":"    private Set\u003cParticipant\u003e toModelParticipants(List\u003cJsonAdaptedPerson\u003e participants) throws IllegalValueException {","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"        final List\u003cContact\u003e meetingPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"cpwill01"},"content":"        for (JsonAdaptedPerson jsonPerson : participants) {","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"            meetingPersons.add(jsonPerson.toModelType());","lastModifiedDate":"2022-03-07"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":149,"author":{"gitId":"cpwill01"},"content":"        return meetingPersons.stream().map(Participant::new).collect(Collectors.toSet());","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"cpwill01"},"content":"    private Set\u003cTag\u003e toModelTags(List\u003cJsonAdaptedTag\u003e tags) throws IllegalValueException {","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"        final List\u003cTag\u003e meetingTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"        for (JsonAdaptedTag jsonTag : tags) {","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"cpwill01"},"content":"            meetingTags.add(jsonTag.toModelType());","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"        return new HashSet\u003c\u003e(meetingTags);","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"cpwill01":140,"YiFei2":3,"rahulprasad01":16}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    private final String telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"telegram\") String telegram,","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"     * Converts a given {@code Person} into this class for Json use.","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"    public JsonAdaptedPerson(Contact source) {","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"        telegram \u003d source.getTelegram().telegramId;","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"                   Telegram.class.getSimpleName()));","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"        if (!Telegram.isValidId(telegram)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"        final Telegram modelAddress \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"rahulprasad01"},"content":"        return new Contact(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cpwill01":5,"rahulprasad01":18,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    public static final String MESSAGE_DUPLICATE_MEETING \u003d \"Meeting list contains duplicate meeting(s).\";","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    private final List\u003cJsonAdaptedMeeting\u003e meetings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and meetings.","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"                                       @JsonProperty(\"meetings\") List\u003cJsonAdaptedMeeting\u003e meetings) {","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"        this.meetings.addAll(meetings);","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Json use.","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        meetings.addAll(source.getMeetingList().stream().map(JsonAdaptedMeeting::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"            Contact person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        for (JsonAdaptedMeeting jsonAdaptedMeeting : meetings) {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"            Meeting meeting \u003d jsonAdaptedMeeting.toModelType();","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"            if (addressBook.hasMeeting(meeting)) {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"            addressBook.addMeeting(meeting);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cpwill01":19,"rahulprasad01":2,"-":55}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cpwill01":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"    private MeetingListPanel meetingListPanel;","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    private MeetingClashWindow meetingClashWindow;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    private StackPane meetingListPanelPlaceholder;","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"        meetingClashWindow \u003d new MeetingClashWindow();","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        meetingListPanel \u003d new MeetingListPanel(logic.getFilteredMeetingList());","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        meetingListPanelPlaceholder.getChildren().add(meetingListPanel.getRoot());","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":160,"author":{"gitId":"YiFei2"},"content":"     * Opens the meeting clash window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-03-30"},{"lineNumber":161,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":162,"author":{"gitId":"YiFei2"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"YiFei2"},"content":"    public void handleWarning() {","lastModifiedDate":"2022-03-30"},{"lineNumber":164,"author":{"gitId":"YiFei2"},"content":"        if (!meetingClashWindow.isShowing()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"YiFei2"},"content":"            meetingClashWindow.show();","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"YiFei2"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"YiFei2"},"content":"            meetingClashWindow.focus();","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":169,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":170,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"YiFei2"},"content":"        meetingClashWindow.hide();","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"YiFei2"},"content":"            if (commandResult.isShowWarning()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":208,"author":{"gitId":"YiFei2"},"content":"                handleWarning();","lastModifiedDate":"2022-03-30"},{"lineNumber":209,"author":{"gitId":"YiFei2"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cpwill01":7,"YiFei2":19,"-":196}},{"path":"src/main/java/seedu/address/ui/MeetingCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2022-04-01"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2022-04-01"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2022-04-01"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2022-04-01"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":" * An UI component that displays information of a {@code Meeting}.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class MeetingCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private static final String FXML \u003d \"MeetingListCard.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private static final String LABEL_ARCHIVED \u003d \"ARCHIVED\";","lastModifiedDate":"2022-04-01"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    private static final Background BACKGROUND_ARCHIVED \u003d","lastModifiedDate":"2022-04-01"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"            new Background(new BackgroundFill(","lastModifiedDate":"2022-04-01"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"                    Color.rgb(128, 96, 0, 0.7),","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"                    new CornerRadii(0),","lastModifiedDate":"2022-04-01"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"                    new Insets(0)));","lastModifiedDate":"2022-04-01"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    public final Meeting meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    private FlowPane participants;","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    private Label name;","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    private Label archiveStatus;","lastModifiedDate":"2022-04-01"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-04-01"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    private Label id;","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    private Label date;","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    private Label startToEndTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"     * Creates a {@code MeetingCard} with the given {@code Meeting} and index to display.","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"    public MeetingCard(Meeting meeting, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"        name.setText(meeting.getName().meetingName);","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"        date.setText(meeting.getDate().toString());","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        startToEndTime.setText(meeting.getStartTime().value + \" - \" + meeting.getEndTime().value);","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        meeting.getTags().stream()","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        meeting.getParticipants().stream()","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"                .sorted(Comparator.comparing(participant -\u003e participant.contact.getName().fullName))","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"                .forEach(participant -\u003e participants.getChildren().add(","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"                        new Label(participant.contact.getName().fullName)));","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        if (meeting.getArchiveStatus().isArchive) {","lastModifiedDate":"2022-04-01"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"            archiveStatus.setText(LABEL_ARCHIVED);","lastModifiedDate":"2022-04-01"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"            archiveStatus.setBackground(BACKGROUND_ARCHIVED);","lastModifiedDate":"2022-04-01"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-04-01"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"            return true;","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        if (!(other instanceof MeetingCard)) {","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"            return false;","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        // state check","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"        MeetingCard card \u003d (MeetingCard) other;","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"                \u0026\u0026 meeting.equals(card.meeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"cpwill01":95,"rahulprasad01":1}},{"path":"src/main/java/seedu/address/ui/MeetingClashWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":" * Controller for a meeting clash notification.","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"public class MeetingClashWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    public static final String CLASH_MESSAGE \u003d \"WARNING: There is a clash in timing with another Meeting! \"","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"            + \"Refer to the display box for details regarding these clash(es).\";","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"    private static final String FXML \u003d \"MeetingClashWindow.fxml\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"    @FXML","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"    private Label clashMessage;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"     * Creates a new MeetingClashWindow.","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"     *","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"     * @param root Stage to use as the root of the MeetingClashWindow.","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"    public MeetingClashWindow(Stage root) {","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"        super(FXML, root);","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"        clashMessage.setText(CLASH_MESSAGE);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"     * Creates a new MeetingClashWindow.","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"    public MeetingClashWindow() {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        this(new Stage());","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"     * Shows the meeting clash window.","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"     * \u003cul\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"    public void show() {","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        logger.fine(\"Showing meeting clash notification.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"        getRoot().show();","lastModifiedDate":"2022-03-30"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"     * Returns true if the meeting clash window is currently being shown.","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"     * Hides the meeting clash window.","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"    public void hide() {","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"        getRoot().hide();","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"YiFei2"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"     * Focuses on the meeting clash window.","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"YiFei2"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"YiFei2"},"content":"    public void focus() {","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"YiFei2":85}},{"path":"src/main/java/seedu/address/ui/MeetingListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":" * Panel containing the list of meetings.","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"public class MeetingListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    private static final String FXML \u003d \"MeetingListPanel.fxml\";","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MeetingListPanel.class);","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    @FXML","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private ListView\u003cMeeting\u003e meetingListView;","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"     * Creates a {@code MeetingListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    public MeetingListPanel(ObservableList\u003cMeeting\u003e meetingList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"        super(FXML);","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        meetingListView.setItems(meetingList);","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        meetingListView.setCellFactory(listView -\u003e new MeetingListViewCell());","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Meeting} using a {@code MeetingCard}.","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    class MeetingListViewCell extends ListCell\u003cMeeting\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        protected void updateItem(Meeting meeting, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"            super.updateItem(meeting, empty);","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"            if (empty || meeting \u003d\u003d null) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"                setText(null);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"            } else {","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"                setGraphic(new MeetingCard(meeting, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"            }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"cpwill01":49}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":" * An UI component that displays information of a {@code Contact}.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    public final Contact person;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private Label nameAndTelegram;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"     * Creates a {@code PersonCard} with the given {@code Contact} and index to display.","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    public PersonCard(Contact person, int displayedIndex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        nameAndTelegram.setText(person.getName().fullName + \" - @\" + person.getTelegram().telegramId);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cpwill01":4,"rahulprasad01":3,"-":67}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"    private ListView\u003cContact\u003e personListView;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    public PersonListPanel(ObservableList\u003cContact\u003e personList) {","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    class PersonListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        protected void updateItem(Contact person, boolean empty) {","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"rahulprasad01":5,"-":44}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/app_logo_small.png\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cpwill01":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003cStackPane styleClass\u003d\"pane-with-shadow\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"cpwill01":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    -fx-base: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    -fx-control-inner-background: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"    -fx-border-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"    -fx-padding: 0 5 0 5;","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":".pane-with-shadow {","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"    -fx-effect: innershadow(two-pass-box, #2C394B, 20, 0, 0, 0);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-03-08"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":".list-box {","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"     -fx-background-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"    -fx-background-insets: 10px;","lastModifiedDate":"2022-03-08"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"    -fx-padding: 3px;","lastModifiedDate":"2022-03-08"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"    -fx-background-insets: 2px;","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":".list-cell:empty {","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":152,"author":{"gitId":"cpwill01"},"content":"     -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"     -fx-background-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"     -fx-border-color: derive(#2C394B, -10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"     -fx-padding: 5 10 5 10;","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, -20%);","lastModifiedDate":"2022-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":168,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"cpwill01"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":178,"author":{"gitId":"cpwill01"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"cpwill01"},"content":".result-display .scroll-pane {","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":183,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":184,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"cpwill01"},"content":".result-display .scroll-pane .viewport {","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":188,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":189,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"cpwill01"},"content":".result-display .scroll-pane .content {","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":193,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 30%);","lastModifiedDate":"2022-03-13"},{"lineNumber":205,"author":{"gitId":"cpwill01"},"content":"    -fx-border-color: derive(#2C394B, 25%);","lastModifiedDate":"2022-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 30%);","lastModifiedDate":"2022-03-13"},{"lineNumber":215,"author":{"gitId":"cpwill01"},"content":"    -fx-border-color: derive(#2C394B, 30%);","lastModifiedDate":"2022-03-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":220,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 30%);","lastModifiedDate":"2022-03-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 20%);","lastModifiedDate":"2022-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, -20%);","lastModifiedDate":"2022-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"cpwill01"},"content":"  -fx-text-fill: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #2C394B;","lastModifiedDate":"2022-03-13"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 25%);","lastModifiedDate":"2022-03-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":322,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-03-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 50%);","lastModifiedDate":"2022-03-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"cpwill01"},"content":".scroll-pane .corner {","lastModifiedDate":"2022-03-13"},{"lineNumber":331,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: transparent ;","lastModifiedDate":"2022-03-13"},{"lineNumber":332,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":333,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"cpwill01"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: derive(#2C394B, 10%);","lastModifiedDate":"2022-03-13"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"cpwill01"},"content":"#tags, #participants {","lastModifiedDate":"2022-03-13"},{"lineNumber":382,"author":{"gitId":"cpwill01"},"content":"    -fx-hgap: 5;","lastModifiedDate":"2022-03-13"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"cpwill01"},"content":"    -fx-padding: 1 4 1 4;","lastModifiedDate":"2022-03-13"},{"lineNumber":390,"author":{"gitId":"cpwill01"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-03-13"},{"lineNumber":391,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":392,"author":{"gitId":"cpwill01"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-13"},{"lineNumber":393,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":394,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":395,"author":{"gitId":"cpwill01"},"content":"#participants .label {","lastModifiedDate":"2022-03-13"},{"lineNumber":396,"author":{"gitId":"cpwill01"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-13"},{"lineNumber":397,"author":{"gitId":"cpwill01"},"content":"    -fx-background-color: #4f7942;","lastModifiedDate":"2022-03-13"},{"lineNumber":398,"author":{"gitId":"cpwill01"},"content":"    -fx-padding: 1 4 1 4;","lastModifiedDate":"2022-03-13"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":400,"author":{"gitId":"cpwill01"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2022-03-13"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"cpwill01":82,"-":320}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"         title\u003d\"AddresSoC\" minWidth\u003d\"1000\" minHeight\u003d\"700\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    \u003cImage url\u003d\"@/images/app_logo_small.png\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        \u003cSplitPane fx:id\u003d\"listsSplitPane\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"          \u003cVBox fx:id\u003d\"personListBox\" styleClass\u003d\"list-box\" minWidth\u003d\"340\" prefWidth\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" styleClass\u003d\"pane-with-shadow\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"                       minWidth\u003d\"320\" prefWidth\u003d\"450\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"          \u003cVBox fx:id\u003d\"meetingListBox\" styleClass\u003d\"list-box\" minWidth\u003d\"340\" prefWidth\u003d\"450\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"            \u003cStackPane fx:id\u003d\"meetingListPanelPlaceholder\" styleClass\u003d\"pane-with-shadow\" VBox.vgrow\u003d\"ALWAYS\"","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"                       minWidth\u003d\"320\" prefWidth\u003d\"450\"/\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cpwill01":13,"-":42}},{"path":"src/main/resources/view/MeetingClashWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"#clashMessage {","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"#clashMessageContainer {","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"YiFei2":6}},{"path":"src/main/resources/view/MeetingClashWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Warning\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"    \u003cicons\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"        \u003cImage url\u003d\"@/images/warning_icon.png\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"    \u003cscene\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"        \u003cScene\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"                \u003cURL value\u003d\"@MeetingClashWindow.css\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"            \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"clashMessageContainer\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"                    \u003cLabel fx:id\u003d\"clashMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"                \u003c/children\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"YiFei2":38}},{"path":"src/main/resources/view/MeetingListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        \u003cLabel fx:id\u003d\"archiveStatus\" text\u003d\"\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"      \u003cLabel fx:id\u003d\"startToEndTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"      \u003cFlowPane fx:id\u003d\"participants\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"cpwill01":37}},{"path":"src/main/resources/view/MeetingListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"  \u003cListView fx:id\u003d\"meetingListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"cpwill01":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        \u003cLabel fx:id\u003d\"nameAndTelegram\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":1,"-":34}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-shadow\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"cpwill01":2,"-":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"    //---------------- Tests for containsPhraseIgnoreCase --------------------------------------","lastModifiedDate":"2022-03-26"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"    public void containsPhraseIgnoreCase_nullPhrase_throwsNullPointerException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPhraseIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-03-26"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"    public void containsPhraseIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-03-26"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPhraseIgnoreCase(null, \"typical phrase\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-26"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"    public void containsPhraseIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-03-26"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":141,"author":{"gitId":"cpwill01"},"content":"        // Empty sentence","lastModifiedDate":"2022-03-26"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"\", \"abc 123\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":143,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"    \", \"123 abc\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":144,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"        // Matches a partial word","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa bbb ccc\", \"aaa bb\")); // Sentence phrase bigger","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa bbb ccc\", \"aaa bbbb\")); // Query phrase bigger","lastModifiedDate":"2022-03-26"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"cpwill01"},"content":"        // Matches full words but not full phrase","lastModifiedDate":"2022-03-26"},{"lineNumber":150,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa bbb ccc\", \"aaa ccc\")); // Missing word in phrase","lastModifiedDate":"2022-03-26"},{"lineNumber":151,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa bbb\", \"bbb aaa\")); // Different ordering of words","lastModifiedDate":"2022-03-26"},{"lineNumber":152,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa  bbb  ccc\", \"aaa bbb\")); // extra spaces between words","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"        assertFalse(StringUtil.containsPhraseIgnoreCase(\"aaa bbb ccc\", \"aaa  bbb\")); // extra spaces between words","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":155,"author":{"gitId":"cpwill01"},"content":"        // Matches phrase in the sentence, different upper/lower case letters","lastModifiedDate":"2022-03-26"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"Aaa bbb\", \"aaa bbb\")); // Same phrase and sentence, except case","lastModifiedDate":"2022-03-26"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"aaa bBb ccc\", \"Aaa Bbb\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":158,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"aaa bBb ccc@1\", \"Bbb CCc@1\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"  AAA bBb ccc ddd \", \"bbb ccc\")); // leading/trailing spaces","lastModifiedDate":"2022-03-26"},{"lineNumber":160,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"aaa bbb ccc\", \"  bbb ccc  \")); // leading/trailing spaces","lastModifiedDate":"2022-03-26"},{"lineNumber":161,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":162,"author":{"gitId":"cpwill01"},"content":"        // Matches multiple phrases in sentence","lastModifiedDate":"2022-03-26"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"        assertTrue(StringUtil.containsPhraseIgnoreCase(\"AAA bBb aAa BbB ccc  aaa bbb\", \"aaa bbB\"));","lastModifiedDate":"2022-03-26"},{"lineNumber":164,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":165,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cpwill01":40,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        String deleteCommand \u003d \"deletec 9\";","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        String listCommand \u003d ListContactCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(listCommand, ListContactCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"        Contact expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YiFei2":2,"cpwill01":3,"rahulprasad01":5,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"        Contact validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model,","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        Contact personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, AddContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":7,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        Contact validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"        Contact validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        AddContactCommand addCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        Contact alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"        Contact bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"rahulprasad01"},"content":"        public void addPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":129,"author":{"gitId":"YiFei2"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"YiFei2"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"YiFei2"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"YiFei2"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":149,"author":{"gitId":"YiFei2"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":150,"author":{"gitId":"YiFei2"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":151,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":152,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"rahulprasad01"},"content":"        public boolean hasPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"rahulprasad01"},"content":"        public void deletePerson(Contact target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"rahulprasad01"},"content":"        public void setPerson(Contact target, Contact editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"rahulprasad01"},"content":"        public ObservableList\u003cContact\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"rahulprasad01"},"content":"        public void updateFilteredPersonList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":178,"author":{"gitId":"rahulprasad01"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"rahulprasad01"},"content":"        public void sortContact() {","lastModifiedDate":"2022-03-14"},{"lineNumber":180,"author":{"gitId":"rahulprasad01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":181,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":182,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":183,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":184,"author":{"gitId":"tomascherian"},"content":"        public void addMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":185,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":186,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":187,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":188,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":189,"author":{"gitId":"tomascherian"},"content":"        public boolean hasMeeting(Meeting meeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":190,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":191,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":192,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":193,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":194,"author":{"gitId":"tomascherian"},"content":"        public void deleteMeeting(Meeting target) {","lastModifiedDate":"2022-03-10"},{"lineNumber":195,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":196,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":197,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":198,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":199,"author":{"gitId":"tomascherian"},"content":"        public void setMeeting(Meeting target, Meeting editedMeeting) {","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":201,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":202,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":203,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":204,"author":{"gitId":"tomascherian"},"content":"        public ObservableList\u003cMeeting\u003e getFilteredMeetingList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":205,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":206,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":207,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":208,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":209,"author":{"gitId":"tomascherian"},"content":"        public void updateFilteredMeetingList(Predicate\u003cMeeting\u003e predicate) {","lastModifiedDate":"2022-03-10"},{"lineNumber":210,"author":{"gitId":"tomascherian"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":211,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":212,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"rahulprasad01"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"rahulprasad01"},"content":"        public void sortMeeting() {","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"rahulprasad01"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"rahulprasad01"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"YiFei2"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":220,"author":{"gitId":"YiFei2"},"content":"        public ArrayList\u003cMeeting\u003e checkMeetingClash(Meeting toAdd) {","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"rahulprasad01"},"content":"        private final Contact person;","lastModifiedDate":"2022-03-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"rahulprasad01"},"content":"        ModelStubWithPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"rahulprasad01"},"content":"        public boolean hasPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"rahulprasad01"},"content":"            return this.person.isSameContact(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"rahulprasad01"},"content":"        final ArrayList\u003cContact\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"rahulprasad01"},"content":"        public boolean hasPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"rahulprasad01"},"content":"            return personsAdded.stream().anyMatch(person::isSameContact);","lastModifiedDate":"2022-03-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"rahulprasad01"},"content":"        public void addPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"YiFei2"},"content":"        @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":262,"author":{"gitId":"YiFei2"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2022-03-30"},{"lineNumber":263,"author":{"gitId":"YiFei2"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":264,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tomascherian":31,"YiFei2":14,"rahulprasad01":41,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/AddMeetingCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"/**","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":" */","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"public class AddMeetingCommandIntegrationTest {","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"    private Model model;","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    public void execute_newMeeting_success() {","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"        Meeting validMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        expectedModel.addMeeting(validMeeting);","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        MeetingName validMeetingName \u003d validMeeting.getName();","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        MeetingDate validMeetingDate \u003d validMeeting.getDate();","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"        StartTime validMeetingStartTime \u003d validMeeting.getStartTime();","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"        EndTime validMeetingEndTime \u003d validMeeting.getEndTime();","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"        MeetingArchiveStatus validMeetingArchiveStatus \u003d validMeeting.getArchiveStatus();","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        Set\u003cIndex\u003e validMeetingParticipantsIndex \u003d new HashSet\u003cIndex\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        Set\u003cTag\u003e validMeetingTagList \u003d validMeeting.getTags();","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new AddMeetingCommand(validMeetingName, validMeetingDate, validMeetingStartTime,","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"                        validMeetingEndTime, validMeetingArchiveStatus, validMeetingParticipantsIndex,","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"                        validMeetingTagList), model,","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"                String.format(AddMeetingCommand.MESSAGE_SUCCESS, validMeeting), expectedModel);","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"YiFei2":58}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cpwill01":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"        // different showWarning value -\u003e returns false","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"YiFei2":7,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING_NAME;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"aB_01\";","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bc0_1\";","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_MEETING_NAME_CS2103 \u003d \"CS2103 Project\";","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_MEETING_NAME_NUSSU \u003d \"Nussu meeting\";","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_DATE_CS2103 \u003d \"11-04-2022\";","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_DATE_NUSSU \u003d \"22-04-2022\";","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_START_TIME_CS2103 \u003d \"1630\";","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_START_TIME_NUSSU \u003d \"1530\";","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_END_TIME_CS2103 \u003d \"1800\";","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_END_TIME_NUSSU \u003d \"1730\";","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_TAG_CS2103 \u003d \"V1point4\";","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"    public static final String VALID_TAG_NUSSU \u003d \"important\";","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    public static final String MEETING_NAME_DESC_CS2103 \u003d \" \" + PREFIX_MEETING_NAME + VALID_MEETING_NAME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"    public static final String MEETING_NAME_DESC_NUSSU \u003d \" \" + PREFIX_MEETING_NAME + VALID_MEETING_NAME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"    public static final String DATE_DESC_CS2103 \u003d \" \" + PREFIX_DATE + VALID_DATE_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"    public static final String DATE_DESC_NUSSU \u003d \" \" + PREFIX_DATE + VALID_DATE_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"    public static final String START_TIME_DESC_CS2103 \u003d \" \" + PREFIX_START_TIME + VALID_START_TIME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"    public static final String START_TIME_DESC_NUSSU \u003d \" \" + PREFIX_START_TIME + VALID_START_TIME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"    public static final String END_TIME_DESC_CS2103 \u003d \" \" + PREFIX_END_TIME + VALID_END_TIME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"    public static final String END_TIME_DESC_NUSSU \u003d \" \" + PREFIX_END_TIME + VALID_END_TIME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"    public static final String TAG_DESC_CS2103 \u003d \" \" + PREFIX_TAG + VALID_TAG_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"    public static final String TAG_DESC_NUSSU \u003d \" \" + PREFIX_TAG + VALID_TAG_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_TELEGRAM + \"#\"; // empty string not allowed","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"YiFei2"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby/husband\"; // \u0027/\u0027 not allowed in tags","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    public static final String INVALID_MEETING_NAME_DESC \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"            \" \" + PREFIX_MEETING_NAME + \"\u0026\"; // \u0027\u0026\u0027 not allowed in meeting names","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"09-11-2022aB\"; // \u0027ab\u0027 not allowed in dates","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_START_TIME + \":\"; // empty string not allowed","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_END_TIME + \":\"; // empty string not allowed","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"    public static final EditMeetingCommand.EditMeetingDescriptor DESC_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"rahulprasad01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"tomascherian"},"content":"        DESC_CS2103 \u003d new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"tomascherian"},"content":"                .withDate(VALID_DATE_CS2103).withStartTime(VALID_START_TIME_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"tomascherian"},"content":"                .withEndTime(VALID_END_TIME_CS2103).withTags(VALID_TAG_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"tomascherian"},"content":"        DESC_NUSSU \u003d new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_NUSSU)","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"                .withDate(VALID_DATE_NUSSU).withStartTime(VALID_START_TIME_NUSSU)","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"tomascherian"},"content":"                .withEndTime(VALID_END_TIME_NUSSU).withTags(VALID_TAG_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"rahulprasad01"},"content":"        Contact person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":169,"author":{"gitId":"tomascherian"},"content":"        for (String name : splitName) {","lastModifiedDate":"2022-03-31"},{"lineNumber":170,"author":{"gitId":"tomascherian"},"content":"            nameSet.add(new Name(name));","lastModifiedDate":"2022-03-31"},{"lineNumber":171,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":172,"author":{"gitId":"tomascherian"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(nameSet));","lastModifiedDate":"2022-03-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tomascherian":49,"YiFei2":3,"cpwill01":2,"rahulprasad01":12,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"        Contact personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        Contact personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":17,"-":91}},{"path":"src/test/java/seedu/address/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditContactCommand.","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        Contact lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"rahulprasad01"},"content":"        Contact personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"        Contact firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"rahulprasad01"},"content":"        Contact personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        assertCommandFailure(editContactCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"cpwill01"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"cpwill01"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cpwill01":28,"rahulprasad01":9,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/EditContactDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class EditContactDescriptorTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cpwill01":2,"rahulprasad01":4,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_NAME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_NAME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder().build();","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(editedMeeting).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        expectedModel.setMeeting(model.getFilteredMeetingList().get(0), editedMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"        Index indexLastMeeting \u003d Index.fromOneBased(model.getFilteredMeetingList().size());","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        Meeting lastMeeting \u003d model.getFilteredMeetingList().get(indexLastMeeting.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        MeetingBuilder meetingInList \u003d new MeetingBuilder(lastMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        Meeting editedMeeting \u003d meetingInList.withName(VALID_MEETING_NAME_CS2103).withDate(VALID_DATE_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"                .withTags(VALID_TAG_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"                .withDate(VALID_DATE_CS2103).withTags(VALID_TAG_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(indexLastMeeting, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"        expectedModel.setMeeting(lastMeeting, editedMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand editMeetingCommand \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"                new EditMeetingCommand(INDEX_FIRST_MEETING, new EditMeetingDescriptor());","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"        Meeting editedMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(EditMeetingCommand.MESSAGE_EDIT_MEETING_SUCCESS, editedMeeting);","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(editMeetingCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"        Meeting firstMeeting \u003d model.getFilteredMeetingList().get(INDEX_FIRST_MEETING.getZeroBased());","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder(firstMeeting).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(INDEX_SECOND_MEETING, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"        assertCommandFailure(editMeetingCommand, model, EditMeetingCommand.MESSAGE_DUPLICATE_MEETING);","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMeetingList().size() + 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"                new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand editMeetingCommand \u003d new EditMeetingCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"tomascherian"},"content":"        assertCommandFailure(editMeetingCommand, model, Messages.MESSAGE_INVALID_MEETING_DISPLAYED_INDEX);","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"tomascherian"},"content":"    public void equals() {","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"tomascherian"},"content":"        final EditMeetingCommand standardCommand \u003d new EditMeetingCommand(INDEX_FIRST_MEETING, DESC_CS2103);","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"tomascherian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor copyDescriptor \u003d new EditMeetingDescriptor(DESC_CS2103);","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand commandWithSameValues \u003d new EditMeetingCommand(INDEX_FIRST_MEETING, copyDescriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"tomascherian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"tomascherian"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"tomascherian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"tomascherian"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_SECOND_MEETING, DESC_CS2103)));","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"        assertFalse(standardCommand.equals(new EditMeetingCommand(INDEX_FIRST_MEETING, DESC_NUSSU)));","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":128}},{"path":"src/test/java/seedu/address/logic/commands/EditMeetingDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_NAME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingDescriptorTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    public void equals() {","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptorWithSameValues \u003d new EditMeetingDescriptor(DESC_CS2103);","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"        assertTrue(DESC_CS2103.equals(descriptorWithSameValues));","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        assertTrue(DESC_CS2103.equals(DESC_CS2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(null));","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(5));","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(DESC_NUSSU));","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor editedCs2103 \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"                new EditMeetingDescriptorBuilder(DESC_CS2103).withName(VALID_MEETING_NAME_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(editedCs2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"        // different start time -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        editedCs2103 \u003d new EditMeetingDescriptorBuilder(DESC_CS2103).withStartTime(VALID_START_TIME_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(editedCs2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        // different end time -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        editedCs2103 \u003d new EditMeetingDescriptorBuilder(DESC_CS2103).withEndTime(VALID_END_TIME_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_CS2103.equals(editedCs2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"        editedCs2103 \u003d new EditMeetingDescriptorBuilder(DESC_CS2103).withDate(VALID_DATE_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_AMY.equals(editedCs2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        editedCs2103 \u003d new EditMeetingDescriptorBuilder(DESC_CS2103).withTags(VALID_TAG_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"        assertFalse(DESC_AMY.equals(editedCs2103));","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":60}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"YiFei2":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.ContactTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":" * Contains integration tests (interaction with the Model) for {@code FindContactCommand}.","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    private static final Name NAME_MATCHING_ALICE \u003d new Name(\"Alice Pauline\");","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"    private static final Name NAME_MATCHING_BENSON \u003d new Name(\"Benson Meier\");","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    private static final Tag TAG_MATCHING_ALICE \u003d new Tag(\"friends\");","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"    private static final Tag TAG_MATCHING_BENSON \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"    private final NameContainsKeywordsPredicate emptyNamePredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"            new NameContainsKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"    private final ContactTagContainsKeywordsPredicate emptyTagPredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"            new ContactTagContainsKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate firstNamePredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Collections.singleton(new Name(\"first\")));","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate secondNamePredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Collections.singleton(new Name(\"second\")));","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Set.of(new Tag(\"secondTag\")));","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand findFirstCommand \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"                new FindContactCommand(firstNamePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondNamePredicate, secondTagPredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstNamePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"    public void execute_searchByName_success() {","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        // one name keyword specified","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Set.of(NAME_MATCHING_ALICE));","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        // multiple name keywords specified","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        namePredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Set.of(NAME_MATCHING_ALICE, NAME_MATCHING_BENSON));","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"        command \u003d new FindContactCommand(namePredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(namePredicate);","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"    public void execute_searchByTag_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"        // one tag keyword specified","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Set.of(TAG_MATCHING_ALICE));","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand command \u003d new FindContactCommand(emptyNamePredicate, tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"tomascherian"},"content":"        // multiple tag keywords specified","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"        tagPredicate \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Set.of(TAG_MATCHING_ALICE, TAG_MATCHING_BENSON));","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"tomascherian"},"content":"        command \u003d new FindContactCommand(emptyNamePredicate, tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"tomascherian"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"    public void execute_searchByAll_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"tomascherian"},"content":"        // all types matching","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Set.of(NAME_MATCHING_ALICE));","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Set.of(TAG_MATCHING_ALICE));","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand command \u003d new FindContactCommand(namePredicate, tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(namePredicate.and(tagPredicate));","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"        // one type non-matching","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"        tagPredicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(TAG_MATCHING_BENSON));","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"        command \u003d new FindContactCommand(namePredicate, tagPredicate);","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"        expectedModel.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tomascherian":88,"cpwill01":1,"rahulprasad01":1,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/FindMeetingCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_DATE_MATCHING_CS2103T;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_DATE_MATCHING_NUSSU;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_NAME_MATCHING_CS2103T;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.MEETING_NAME_MATCHING_NUSSU;","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.TAG_MATCHING_CS2103T;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.TAG_MATCHING_NUSSU;","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingNameHasKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingOccursOnDatesPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingTagHasKeywordsPredicate;","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"class FindMeetingCommandTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    private final MeetingNameHasKeywordsPredicate emptyNamePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"            new MeetingNameHasKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    private final MeetingOccursOnDatesPredicate emptyDatePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"            new MeetingOccursOnDatesPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"    private final MeetingTagHasKeywordsPredicate emptyTagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"            new MeetingTagHasKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate firstMeetingNamePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Collections.singleton(new MeetingName(\"first\")));","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate secondMeetingNamePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Collections.singleton(new MeetingName(\"second\")));","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(Collections.singleton(new Tag(\"secondTag\")));","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate firstMeetingDatePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate secondMeetingDatePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Collections.singleton(new MeetingDate(\"16-06-2022\")));","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand firstFindMeetingCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"                new FindMeetingCommand(firstMeetingNamePredicate, firstMeetingDatePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstFindMeetingCommand.equals(firstFindMeetingCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand firstFindMeetingCommandCopy \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"                new FindMeetingCommand(firstMeetingNamePredicate, firstMeetingDatePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstFindMeetingCommand.equals(firstFindMeetingCommandCopy));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstFindMeetingCommand.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstFindMeetingCommand.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand differentNameFindMeetingCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"                new FindMeetingCommand(secondMeetingNamePredicate, firstMeetingDatePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstFindMeetingCommand.equals(differentNameFindMeetingCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"        //different date -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand differentDateFindMeetingCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"                new FindMeetingCommand(firstMeetingNamePredicate, secondMeetingDatePredicate, firstTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstFindMeetingCommand.equals(differentDateFindMeetingCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"        //different date -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand differentTagFindMeetingCommand \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"                new FindMeetingCommand(firstMeetingNamePredicate, firstMeetingDatePredicate, secondTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstFindMeetingCommand.equals(differentTagFindMeetingCommand));","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"    //---------------- Tests for execute with only one type of search --------------------------------------","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"cpwill01"},"content":"    public void execute_searchByName_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"        // one name keyword specified","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Set.of(MEETING_NAME_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(namePredicate, emptyDatePredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(namePredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"cpwill01"},"content":"        // multiple name keywords specified","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"cpwill01"},"content":"        namePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Set.of(MEETING_NAME_MATCHING_CS2103T, MEETING_NAME_MATCHING_NUSSU));","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"        command \u003d new FindMeetingCommand(namePredicate, emptyDatePredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(namePredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"cpwill01"},"content":"    public void execute_searchByDate_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"        // one date specified","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate datesPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Set.of(MEETING_DATE_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(emptyNamePredicate, datesPredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(datesPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        // multiple dates specified","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        datesPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Set.of(MEETING_DATE_MATCHING_CS2103T, MEETING_DATE_MATCHING_NUSSU));","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"cpwill01"},"content":"        command \u003d new FindMeetingCommand(emptyNamePredicate, datesPredicate, emptyTagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(datesPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"cpwill01"},"content":"    public void execute_searchByTag_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"cpwill01"},"content":"        // one tag keyword specified","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(Set.of(TAG_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(emptyNamePredicate, emptyDatePredicate, tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"cpwill01"},"content":"        // multiple tag keywords specified","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"        tagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(Set.of(TAG_MATCHING_CS2103T, TAG_MATCHING_NUSSU));","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"cpwill01"},"content":"        command \u003d new FindMeetingCommand(emptyNamePredicate, emptyDatePredicate, tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"cpwill01"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"cpwill01"},"content":"    //---------------- Tests for execute combining multiple types of search --------------------------------------","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"cpwill01"},"content":"    public void execute_searchByAll_success() {","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"cpwill01"},"content":"        // all types matching","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate namePredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Set.of(MEETING_NAME_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate datesPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Set.of(MEETING_DATE_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate tagPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(Set.of(TAG_MATCHING_CS2103T));","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"cpwill01"},"content":"        FindMeetingCommand command \u003d new FindMeetingCommand(namePredicate, datesPredicate, tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(namePredicate.and(datesPredicate).and(tagPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"cpwill01"},"content":"        // one type non-matching","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"cpwill01"},"content":"        tagPredicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(TAG_MATCHING_NUSSU));","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"cpwill01"},"content":"        command \u003d new FindMeetingCommand(namePredicate, datesPredicate, tagPredicate);","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"cpwill01"},"content":"        expectedMessage \u003d String.format(Messages.MESSAGE_MEETINGS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"cpwill01"},"content":"        expectedModel.updateFilteredMeetingList(m -\u003e false);","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":172}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"YiFei2":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"public class ListContactCommandTest {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        assertCommandSuccess(new ListContactCommand(), model, ListContactCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cpwill01":5,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.RedoCommand.MESSAGE_INVALID_REDO;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.RedoCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"public class RedoCommandTest {","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    @TempDir","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"    private AddressBook initialAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"    private Model testModel \u003d new ModelManager(initialAddressBook, new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    private Logic logic;","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"        logic \u003d new LogicManager(testModel, storage);","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"    public void execute_redo_failure() {","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"        assertCommandFailure(new RedoCommand(), testModel, MESSAGE_INVALID_REDO);","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"    public void execute_redo_success() throws CommandException, ParseException {","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"        logic.execute(AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_AMY);","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"        Model newModel \u003d new ModelManager(testModel.getAddressBook(), testModel.getUserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"        logic.execute(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new RedoCommand(), testModel, MESSAGE_SUCCESS, newModel);","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"    public void execute_redo_successThenFailure() throws CommandException, ParseException {","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"        logic.execute(AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_AMY);","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"        Model newModel \u003d new ModelManager(testModel.getAddressBook(), testModel.getUserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"        logic.execute(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new RedoCommand(), testModel, MESSAGE_SUCCESS, newModel);","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"        assertCommandFailure(new RedoCommand(), testModel, MESSAGE_INVALID_REDO);","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"YiFei2":72}},{"path":"src/test/java/seedu/address/logic/commands/ReminderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.ReminderCommand.MESSAGE_REMINDER;","lastModifiedDate":"2022-04-01"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalMeetings.COMPUTING_CLUB;","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalMeetings.CS2101;","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalMeetings.CS2103T;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalMeetings.DANCE_CLUB;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.TypicalMeetings.NUSSU;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-31"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.ReminderDatePredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"/**","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":" * Contains integration tests (interaction with the Model) for {@code RemindCommand}.","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":" */","lastModifiedDate":"2022-03-31"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"public class ReminderCommandTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-31"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"    public void equals() {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        ReminderDatePredicate firstPredicate \u003d new ReminderDatePredicate(5);","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"        ReminderDatePredicate secondPredicate \u003d new ReminderDatePredicate(6);","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand remindFirstCommand \u003d new ReminderCommand(firstPredicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand remindSecondCommand \u003d new ReminderCommand(secondPredicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"        // same values return true","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand copy \u003d new ReminderCommand(firstPredicate);","lastModifiedDate":"2022-04-01"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(remindFirstCommand.equals(copy));","lastModifiedDate":"2022-03-31"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"        // different types return false","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(remindFirstCommand.equals(\"5\"));","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"rahulprasad01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(remindFirstCommand.equals(null));","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"        // different predicate returns false","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(remindFirstCommand.equals(remindSecondCommand));","lastModifiedDate":"2022-03-31"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"    // Returns zero meetings due to invalid days","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"    public void execute_invalidRange_noMeetingFound() {","lastModifiedDate":"2022-03-31"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDER, 0, -1);","lastModifiedDate":"2022-03-31"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand command \u003d new ReminderCommand(new ReminderDatePredicate(-1));","lastModifiedDate":"2022-04-01"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"        expectedModel.updateFilteredMeetingList(new ReminderDatePredicate(-1));","lastModifiedDate":"2022-03-31"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMeetingList());","lastModifiedDate":"2022-03-31"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"    // returns zero meetings as no meeting starts in 10 days. This test will fail after 29/4/2022","lastModifiedDate":"2022-04-08"},{"lineNumber":68,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"    public void execute_smallRange_noMeetingFound() {","lastModifiedDate":"2022-03-31"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDER, 0, 1);","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand command \u003d new ReminderCommand(new ReminderDatePredicate(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"rahulprasad01"},"content":"        expectedModel.updateFilteredMeetingList(new ReminderDatePredicate(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(Arrays.asList(), model.getFilteredMeetingList());","lastModifiedDate":"2022-03-31"},{"lineNumber":75,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":76,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":77,"author":{"gitId":"rahulprasad01"},"content":"    // returns all meeting due to large range. This test will fail after 30/4/2022.","lastModifiedDate":"2022-04-08"},{"lineNumber":78,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":79,"author":{"gitId":"rahulprasad01"},"content":"    public void execute_largeRange_allMeetingFound() {","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDER, 5, 76820);","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand command \u003d new ReminderCommand(new ReminderDatePredicate(76820));","lastModifiedDate":"2022-04-01"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"        expectedModel.updateFilteredMeetingList(new ReminderDatePredicate(76820));","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"rahulprasad01"},"content":"                Arrays.asList(CS2103T, CS2101, NUSSU, DANCE_CLUB, COMPUTING_CLUB),","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"rahulprasad01"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":88,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"    // returns all meeting due to big range. This test will fail after 30/4/2022","lastModifiedDate":"2022-04-08"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":91,"author":{"gitId":"rahulprasad01"},"content":"    public void execute_bigRange_allMeetingFound() {","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REMINDER, 5, 607);","lastModifiedDate":"2022-03-31"},{"lineNumber":93,"author":{"gitId":"rahulprasad01"},"content":"        ReminderCommand command \u003d new ReminderCommand(new ReminderDatePredicate(607));","lastModifiedDate":"2022-04-01"},{"lineNumber":94,"author":{"gitId":"rahulprasad01"},"content":"        expectedModel.updateFilteredMeetingList(new ReminderDatePredicate(607));","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"rahulprasad01"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"rahulprasad01"},"content":"                Arrays.asList(CS2103T, CS2101, NUSSU, DANCE_CLUB, COMPUTING_CLUB),","lastModifiedDate":"2022-03-31"},{"lineNumber":98,"author":{"gitId":"rahulprasad01"},"content":"                model.getFilteredMeetingList());","lastModifiedDate":"2022-03-31"},{"lineNumber":99,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":100,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"rahulprasad01":100}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YiFei2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_INVALID_UNDO;","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"YiFei2"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"YiFei2"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"YiFei2"},"content":"    @TempDir","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"YiFei2"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"YiFei2"},"content":"    private AddressBook initialAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"    private Model testModel \u003d new ModelManager(initialAddressBook, new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"YiFei2"},"content":"    private Logic logic;","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"YiFei2"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"    public void setUp() {","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"YiFei2"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"YiFei2"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"YiFei2"},"content":"        logic \u003d new LogicManager(testModel, storage);","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"    public void execute_undo_failure() {","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"        assertCommandFailure(new UndoCommand(), testModel, MESSAGE_INVALID_UNDO);","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"    public void execute_undo_success() throws CommandException, ParseException {","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"YiFei2"},"content":"        Model newModel \u003d new ModelManager(initialAddressBook, new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"YiFei2"},"content":"        logic.execute(AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_AMY);","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"        Model newModel1 \u003d new ModelManager(testModel.getAddressBook(), testModel.getUserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"YiFei2"},"content":"        logic.execute(AddContactCommand.COMMAND_WORD + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_BOB);","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new UndoCommand(), testModel, MESSAGE_SUCCESS, newModel1);","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new UndoCommand(), testModel, MESSAGE_SUCCESS, newModel);","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"YiFei2"},"content":"    @Test","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"YiFei2"},"content":"    public void execute_undo_successThenFailure() throws CommandException, ParseException {","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"        Model newModel \u003d new ModelManager(initialAddressBook, new UserPrefs());","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"YiFei2"},"content":"        logic.execute(AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_AMY);","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"YiFei2"},"content":"        assertCommandSuccess(new UndoCommand(), testModel, MESSAGE_SUCCESS, newModel);","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"YiFei2"},"content":"        assertCommandFailure(new UndoCommand(), testModel, MESSAGE_INVALID_UNDO);","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"YiFei2"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"YiFei2"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"YiFei2":78}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"        Contact expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"YiFei2"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"YiFei2"},"content":"                + TELEGRAM_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"rahulprasad01"},"content":"        Contact expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"YiFei2"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"rahulprasad01"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"        Contact expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"YiFei2"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY,","lastModifiedDate":"2022-04-06"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-04-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-04-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + TELEGRAM_DESC_BOB,","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_TELEGRAM_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"rahulprasad01"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_TELEGRAM_BOB,","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"rahulprasad01"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"YiFei2"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"YiFei2"},"content":"                        + TELEGRAM_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-04-06"},{"lineNumber":138,"author":{"gitId":"rahulprasad01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"YiFei2":17,"cpwill01":2,"rahulprasad01":19,"-":102}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.ListContactCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.SortContactCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.ContactTagContainsKeywordsPredicate;","lastModifiedDate":"2022-03-31"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"rahulprasad01"},"content":"        Contact person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"rahulprasad01"},"content":"        Contact person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        for (String name : keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"            nameSet.add(new Name(name));","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"                FindContactCommand.COMMAND_WORD + \" n/foo n/bar n/baz\");","lastModifiedDate":"2022-03-31"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"        assertEquals(new FindContactCommand(new NameContainsKeywordsPredicate(nameSet),","lastModifiedDate":"2022-03-31"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"                        new ContactTagContainsKeywordsPredicate(Collections.emptySet())), command);","lastModifiedDate":"2022-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD) instanceof ListContactCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"        assertTrue(parser.parseCommand(ListContactCommand.COMMAND_WORD + \" 3\") instanceof ListContactCommand);","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(parser.parseCommand(SortContactCommand.COMMAND_WORD) instanceof SortContactCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(parser.parseCommand(SortContactCommand.COMMAND_WORD + \" 3\") instanceof SortContactCommand);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tomascherian":14,"cpwill01":7,"rahulprasad01":19,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"rahulprasad01":6,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"YiFei2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_TELEGRAM_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"YiFei2"},"content":"                + EMAIL_DESC_AMY + TELEGRAM_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"rahulprasad01"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"cpwill01"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"cpwill01"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"YiFei2"},"content":"        // telegram","lastModifiedDate":"2022-04-06"},{"lineNumber":158,"author":{"gitId":"YiFei2"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_AMY;","lastModifiedDate":"2022-04-06"},{"lineNumber":159,"author":{"gitId":"rahulprasad01"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":160,"author":{"gitId":"cpwill01"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"cpwill01"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"YiFei2"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-04-06"},{"lineNumber":174,"author":{"gitId":"YiFei2"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + TELEGRAM_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-04-06"},{"lineNumber":175,"author":{"gitId":"YiFei2"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-04-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"rahulprasad01"},"content":"                .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2022-03-10"},{"lineNumber":179,"author":{"gitId":"rahulprasad01"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"YiFei2"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + TELEGRAM_DESC_BOB","lastModifiedDate":"2022-04-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"rahulprasad01"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-03-10"},{"lineNumber":200,"author":{"gitId":"cpwill01"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"cpwill01"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"YiFei2":9,"cpwill01":17,"rahulprasad01":15,"-":173}},{"path":"src/test/java/seedu/address/logic/parser/EditMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEETING_NAME_DESC;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEETING_NAME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEETING_NAME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.EditMeetingDescriptorBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingCommandParserTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMeetingCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"    private EditMeetingCommandParser parser \u003d new EditMeetingCommandParser();","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        // no index specified","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, VALID_MEETING_NAME_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"        // no field specified","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\", EditMeetingCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        // no index and no field specified","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"        // negative index","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"-5\" + MEETING_NAME_DESC_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        // zero index","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"0\" + MEETING_NAME_DESC_CS2103, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEETING_NAME_DESC, MeetingName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, MeetingDate.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC, StartTime.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_END_TIME_DESC, EndTime.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC + START_TIME_DESC_CS2103, MeetingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + DATE_DESC_CS2103 + INVALID_DATE_DESC, MeetingDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103 + TAG_DESC_NUSSU + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_CS2103 + TAG_EMPTY + TAG_DESC_NUSSU, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_CS2103 + TAG_DESC_NUSSU, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEETING_NAME_DESC + INVALID_START_TIME_DESC","lastModifiedDate":"2022-04-11"},{"lineNumber":96,"author":{"gitId":"tomascherian"},"content":"                        + VALID_END_TIME_CS2103 + VALID_DATE_CS2103,","lastModifiedDate":"2022-04-11"},{"lineNumber":97,"author":{"gitId":"tomascherian"},"content":"                MeetingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-04-11"},{"lineNumber":98,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":99,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"tomascherian"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"        String userInput \u003d targetIndex.getOneBased() + MEETING_NAME_DESC_CS2103 + TAG_DESC_CS2103","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"tomascherian"},"content":"                + DATE_DESC_CS2103 + START_TIME_DESC_CS2103 + END_TIME_DESC_CS2103 + TAG_DESC_NUSSU;","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":106,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":107,"author":{"gitId":"tomascherian"},"content":"                .withDate(VALID_DATE_CS2103).withStartTime(VALID_START_TIME_CS2103).withEndTime(VALID_END_TIME_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":108,"author":{"gitId":"tomascherian"},"content":"                .withTags(VALID_TAG_CS2103, VALID_TAG_NUSSU).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":109,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":115,"author":{"gitId":"tomascherian"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":116,"author":{"gitId":"tomascherian"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":117,"author":{"gitId":"tomascherian"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_CS2103 + START_TIME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withDate(VALID_DATE_CS2103)","lastModifiedDate":"2022-04-11"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"                .withStartTime(VALID_START_TIME_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":128,"author":{"gitId":"tomascherian"},"content":"        // name","lastModifiedDate":"2022-04-11"},{"lineNumber":129,"author":{"gitId":"tomascherian"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":130,"author":{"gitId":"tomascherian"},"content":"        String userInput \u003d targetIndex.getOneBased() + MEETING_NAME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":131,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":132,"author":{"gitId":"tomascherian"},"content":"                new EditMeetingDescriptorBuilder().withName(VALID_MEETING_NAME_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":133,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":134,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":135,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":136,"author":{"gitId":"tomascherian"},"content":"        // date","lastModifiedDate":"2022-04-11"},{"lineNumber":137,"author":{"gitId":"tomascherian"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":138,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withDate(VALID_DATE_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":139,"author":{"gitId":"tomascherian"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":140,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":141,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":142,"author":{"gitId":"tomascherian"},"content":"        // start time","lastModifiedDate":"2022-04-11"},{"lineNumber":143,"author":{"gitId":"tomascherian"},"content":"        userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":144,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withStartTime(VALID_START_TIME_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":145,"author":{"gitId":"tomascherian"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":146,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":147,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":148,"author":{"gitId":"tomascherian"},"content":"        // end time","lastModifiedDate":"2022-04-11"},{"lineNumber":149,"author":{"gitId":"tomascherian"},"content":"        userInput \u003d targetIndex.getOneBased() + END_TIME_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":150,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withEndTime(VALID_END_TIME_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":151,"author":{"gitId":"tomascherian"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":152,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":153,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":154,"author":{"gitId":"tomascherian"},"content":"        // tags","lastModifiedDate":"2022-04-11"},{"lineNumber":155,"author":{"gitId":"tomascherian"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_CS2103;","lastModifiedDate":"2022-04-11"},{"lineNumber":156,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptorBuilder().withTags(VALID_TAG_CS2103).build();","lastModifiedDate":"2022-04-11"},{"lineNumber":157,"author":{"gitId":"tomascherian"},"content":"        expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":158,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":159,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":160,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":161,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":162,"author":{"gitId":"tomascherian"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-04-11"},{"lineNumber":163,"author":{"gitId":"tomascherian"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEETING;","lastModifiedDate":"2022-04-11"},{"lineNumber":164,"author":{"gitId":"tomascherian"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-04-11"},{"lineNumber":165,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":166,"author":{"gitId":"tomascherian"},"content":"        EditMeetingDescriptor descriptor \u003d new EditMeetingDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-04-11"},{"lineNumber":167,"author":{"gitId":"tomascherian"},"content":"        EditMeetingCommand expectedCommand \u003d new EditMeetingCommand(targetIndex, descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":168,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":169,"author":{"gitId":"tomascherian"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-04-11"},{"lineNumber":170,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":171,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":171}},{"path":"src/test/java/seedu/address/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-31"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-31"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2022-03-31"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-31"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-31"}],"authorContributionMap":{"tomascherian":19}},{"path":"src/test/java/seedu/address/logic/parser/FindMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.FindMeetingCommand;","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"class FindMeetingCommandParserTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"    private FindMeetingCommandParser parser \u003d new FindMeetingCommandParser();","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public void parse_noFieldsSpecified_failure() {","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"        assertParseFailure(parser, \"   \",","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMeetingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":19}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    private static final String INVALID_TELEGRAM \u003d \"#\";","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"YiFei2"},"content":"    private static final String INVALID_TAG \u003d \"/friend\";","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    private static final String VALID_TELEGRAM \u003d \"krahu_01\";","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"YiFei2"},"content":"    private static final String VALID_TAG_1 \u003d \"friend!\";","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"YiFei2"},"content":"    private static final String VALID_TAG_2 \u003d \"2nd neighbour\";","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_TELEGRAM));","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"rahulprasad01"},"content":"        Telegram expectedAddress \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"rahulprasad01"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"rahulprasad01"},"content":"        Telegram expectedAddress \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-03-10"},{"lineNumber":125,"author":{"gitId":"rahulprasad01"},"content":"        assertEquals(expectedAddress, ParserUtil.parseTelegram(addressWithWhitespace));","lastModifiedDate":"2022-03-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"YiFei2":3,"rahulprasad01":13,"-":180}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        Meeting meeting \u003d new MeetingBuilder().withName(\"Project Discussion\")","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"                .withDate(\"10/02/2022\").withStartTime(\"1830\").withEndTime(\"1930\")","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"                .withParticipants(ALICE)","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"                .withTags(\"teammates\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        Meeting editedMeeting \u003d new MeetingBuilder(meeting).withDate(\"23/02/2022\").build();","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        List\u003cMeeting\u003e newMeetings \u003d Arrays.asList(meeting, editedMeeting);","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newMeetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"        private final ObservableList\u003cContact\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"tomascherian"},"content":"        private final ObservableList\u003cMeeting\u003e meetings \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"rahulprasad01"},"content":"        AddressBookStub(Collection\u003cContact\u003e persons, Collection\u003cMeeting\u003e meetings) {","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"            this.meetings.setAll(meetings);","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"rahulprasad01"},"content":"        public ObservableList\u003cContact\u003e getPersonList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"tomascherian"},"content":"        @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"        public ObservableList\u003cMeeting\u003e getMeetingList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"            return meetings;","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tomascherian":16,"cpwill01":3,"YiFei2":1,"rahulprasad01":11,"-":93}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"tomascherian"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-31"},{"lineNumber":124,"author":{"gitId":"tomascherian"},"content":"        for (String name : keywords) {","lastModifiedDate":"2022-03-31"},{"lineNumber":125,"author":{"gitId":"tomascherian"},"content":"            nameSet.add(new Name(name));","lastModifiedDate":"2022-03-31"},{"lineNumber":126,"author":{"gitId":"tomascherian"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":127,"author":{"gitId":"tomascherian"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(nameSet));","lastModifiedDate":"2022-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tomascherian":8,"rahulprasad01":1,"-":129}},{"path":"src/test/java/seedu/address/model/contact/ContactTagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-04-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-10"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-10"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-10"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"public class ContactTagContainsKeywordsPredicateTest {","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"    private final String firstTagName \u003d \"Family\";","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"    private final String secondTagName \u003d \"Friends\";","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"    private final String thirdTagName \u003d \"Colleagues\";","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"    private final String mixedCaseFirstTagName \u003d \"fAmiLY\";","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    private final String mixedCaseSecondTagName \u003d \"friENDS\";","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    private final Tag firstTag \u003d new Tag(firstTagName);","lastModifiedDate":"2022-04-10"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"    private final Tag secondTag \u003d new Tag(secondTagName);","lastModifiedDate":"2022-04-10"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"    private final Tag thirdTag \u003d new Tag(thirdTagName);","lastModifiedDate":"2022-04-10"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    public void equals() {","lastModifiedDate":"2022-04-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e firstPredicateKeywordSet \u003d Collections.singleton(firstTag);","lastModifiedDate":"2022-04-10"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e secondPredicateKeywordSet \u003d Set.of(firstTag, secondTag);","lastModifiedDate":"2022-04-10"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-04-10"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2022-04-10"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-04-10"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-04-10"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-10"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-04-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"        // different tag -\u003e returns false","lastModifiedDate":"2022-04-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-04-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"    public void test_emptyKeywords_returnsTrue() {","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate predicate \u003d new ContactTagContainsKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"    public void test_tagHasKeywords_returnsTrue() {","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        // One keyword, one tag","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"                new ContactTagContainsKeywordsPredicate(Collections.singleton(firstTag));","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"        // One keyword, multiple tags","lastModifiedDate":"2022-04-10"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new ContactTagContainsKeywordsPredicate(Collections.singleton(firstTag));","lastModifiedDate":"2022-04-10"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"        // Multiple matching keywords","lastModifiedDate":"2022-04-10"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-04-10"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(firstTagName + \" \" + secondTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-04-10"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-04-10"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"        // Mixed-case contact tag","lastModifiedDate":"2022-04-10"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-04-10"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"                new PersonBuilder().withTags(mixedCaseFirstTagName, mixedCaseSecondTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"    @Test","lastModifiedDate":"2022-04-10"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    public void test_tagDoesNotHaveKeywords_returnsFalse() {","lastModifiedDate":"2022-04-10"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-04-10"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"        ContactTagContainsKeywordsPredicate predicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(thirdTag));","lastModifiedDate":"2022-04-10"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"        // Non-matching keyword due to non-full match","lastModifiedDate":"2022-04-10"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new ContactTagContainsKeywordsPredicate(Set.of(new Tag(firstTagName + \" \" + secondTagName)));","lastModifiedDate":"2022-04-10"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":94,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-10"},{"lineNumber":95,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-04-10"}],"authorContributionMap":{"tomascherian":95}},{"path":"src/test/java/seedu/address/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class ContactTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"        Contact person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"                .withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"YiFei2"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2022-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"YiFei2"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"YiFei2"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2022-04-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"YiFei2"},"content":"        assertTrue(BOB.isSameContact(editedBob));","lastModifiedDate":"2022-04-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"YiFei2"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"YiFei2"},"content":"        assertTrue(BOB.isSameContact(editedBob));","lastModifiedDate":"2022-04-10"},{"lineNumber":53,"author":{"gitId":"YiFei2"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"YiFei2"},"content":"        // different name, same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"YiFei2"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-04-10"},{"lineNumber":56,"author":{"gitId":"YiFei2"},"content":"        assertTrue(BOB.isSameContact(editedAlice));","lastModifiedDate":"2022-04-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"        Contact aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cpwill01":1,"YiFei2":11,"rahulprasad01":13,"-":72}},{"path":"src/test/java/seedu/address/model/contact/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rahulprasad01":1,"-":67}},{"path":"src/test/java/seedu/address/model/contact/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    private final String firstKeyword \u003d \"Alice\";","lastModifiedDate":"2022-04-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"    private final String secondKeyword \u003d \"Benson\";","lastModifiedDate":"2022-04-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"    private final String thirdKeyword \u003d \"Carl\";","lastModifiedDate":"2022-04-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"    private final String mixedCaseFirstKeyword \u003d \"aLiCE\";","lastModifiedDate":"2022-04-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"    private final Name firstContactName \u003d new Name(firstKeyword);","lastModifiedDate":"2022-04-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"    private final Name secondContactName \u003d new Name(secondKeyword);","lastModifiedDate":"2022-04-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"    private final Name thirdContactName \u003d new Name(thirdKeyword);","lastModifiedDate":"2022-04-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"        Set\u003cName\u003e firstPredicateKeywordList \u003d Collections.singleton(firstContactName);","lastModifiedDate":"2022-04-10"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"        Set\u003cName\u003e secondPredicateKeywordList \u003d Set.of(firstContactName, secondContactName);","lastModifiedDate":"2022-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-04-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Collections.singleton(firstContactName));","lastModifiedDate":"2022-04-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Set.of(firstContactName, secondContactName));","lastModifiedDate":"2022-04-10"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(firstKeyword + \" \" + secondKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Set.of(secondContactName, thirdContactName));","lastModifiedDate":"2022-04-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(firstKeyword + \" \" + thirdKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Set.of(firstContactName));","lastModifiedDate":"2022-04-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(mixedCaseFirstKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"                new NameContainsKeywordsPredicate(Set.of(new Name(\"aL\")));","lastModifiedDate":"2022-04-10"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Set.of(thirdContactName));","lastModifiedDate":"2022-04-10"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(firstKeyword + \" \" + secondKeyword).build()));","lastModifiedDate":"2022-04-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"rahulprasad01"},"content":"        // Keywords match phone, email and telegram, but does not match name","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Set.of(new Name(\"Alicia\"),","lastModifiedDate":"2022-04-10"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"                new Name(\"kry02\")));","lastModifiedDate":"2022-04-10"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(firstKeyword).withPhone(\"12345\")","lastModifiedDate":"2022-04-10"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"                .withEmail(\"alice@email.com\").withTelegram(\"kry02\").build()));","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tomascherian":30,"rahulprasad01":3,"-":53}},{"path":"src/test/java/seedu/address/model/contact/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rahulprasad01":1,"-":39}},{"path":"src/test/java/seedu/address/model/contact/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"rahulprasad01":1,"-":39}},{"path":"src/test/java/seedu/address/model/contact/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"rahulprasad01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"public class TelegramTest {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"        String invalidPhone \u003d \"#\";","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Telegram(invalidPhone));","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    @Test","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"        // null phone number","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidId(null));","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"        // invalid phone numbers","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(Telegram.isValidId(\"%\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(Telegram.isValidId(\"*\")); // empty string","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(Telegram.isValidId(\"#\")); // Invalid arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(Telegram.isValidId(\"@#\")); // Invalid arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"        assertFalse(Telegram.isValidId(\"@#$*\")); // Invalid arguments","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"        // Valid telegram ids","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(Telegram.isValidId(\"rA1_\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(Telegram.isValidId(\"kP1_\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        assertTrue(Telegram.isValidId(\"kD2_\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"rahulprasad01":39}},{"path":"src/test/java/seedu/address/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rahulprasad01"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setContact(null, ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setContact(ALICE, null));","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniquePersonList.setContact(ALICE, ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"rahulprasad01"},"content":"        uniquePersonList.setContact(ALICE, ALICE);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"rahulprasad01"},"content":"        Contact editedAlice \u003d new PersonBuilder(ALICE).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"rahulprasad01"},"content":"        uniquePersonList.setContact(ALICE, editedAlice);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"rahulprasad01"},"content":"        uniquePersonList.setContact(ALICE, BOB);","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniquePersonList.setContact(ALICE, BOB));","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cContact\u003e) null));","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"rahulprasad01"},"content":"        List\u003cContact\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-09"},{"lineNumber":165,"author":{"gitId":"rahulprasad01"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2022-03-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":22,"-":150}},{"path":"src/test/java/seedu/address/model/meeting/MeetingNameHasKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"class MeetingNameHasKeywordsPredicateTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    private final String firstKeyword \u003d \"CS2103T\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    private final String secondKeyword \u003d \"NUSSU\";","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    private final String thirdKeyword \u003d \"CS2102\";","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    private final String mixedCaseFirstKeyword \u003d \"cS2103t\";","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    private final MeetingName firstMeetingName \u003d new MeetingName(firstKeyword);","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private final MeetingName secondMeetingName \u003d new MeetingName(secondKeyword);","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private final MeetingName thirdMeetingName \u003d new MeetingName(thirdKeyword);","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingName\u003e firstPredicateKeywordSet \u003d Collections.singleton(firstMeetingName);","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingName\u003e secondPredicateKeywordSet \u003d Set.of(firstMeetingName, secondMeetingName);","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate firstPredicate \u003d new MeetingNameHasKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    public void test_emptyKeywords_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate predicate \u003d new MeetingNameHasKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"    public void test_meetingNameHasKeywords_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        // One keyword","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Collections.singleton(firstMeetingName));","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        // Multiple keywords, Multiple matching keywords","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingNameHasKeywordsPredicate(Set.of(firstMeetingName, secondMeetingName));","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withName(firstKeyword + \" \" + secondKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        // Multiple keywords, Only one matching keyword","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingNameHasKeywordsPredicate(Set.of(firstMeetingName, secondMeetingName));","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        // Mixed-case meeting name","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingNameHasKeywordsPredicate(Set.of(firstMeetingName));","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withName(mixedCaseFirstKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    public void test_meetingNameDoesNotHaveKeywords_returnsFalse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"        // Non-matching keywords","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"        MeetingNameHasKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"                new MeetingNameHasKeywordsPredicate(Set.of(secondMeetingName, thirdMeetingName));","lastModifiedDate":"2022-04-07"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"        // Non-matching keyword due to non-full match","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingNameHasKeywordsPredicate(Set.of(new MeetingName(firstKeyword + \" \" + secondKeyword)));","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withName(firstKeyword).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":89}},{"path":"src/test/java/seedu/address/model/meeting/MeetingOccursOnDatesPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-04-07"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-04-07"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-07"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-07"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-07"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-07"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-04-07"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"class MeetingOccursOnDatesPredicateTest {","lastModifiedDate":"2022-04-07"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    private final String firstSearchDate \u003d \"01/04/2022\";","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    private final String secondSearchDate \u003d \"22/05/2022\";","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    private final String thirdSearchDate \u003d \"18/06/2022\";","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    private final String differentFormatFirstSearchDate \u003d \"01-04-2022\";","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    private final MeetingDate firstMeetingDate \u003d new MeetingDate(firstSearchDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private final MeetingDate secondMeetingDate \u003d new MeetingDate(secondSearchDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private final MeetingDate thirdMeetingDate \u003d new MeetingDate(thirdSearchDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    public void equals() {","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingDate\u003e firstPredicateDateSet \u003d Collections.singleton(firstMeetingDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"        Set\u003cMeetingDate\u003e secondPredicateDateSet \u003d Set.of(firstMeetingDate, secondMeetingDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate firstPredicate \u003d new MeetingOccursOnDatesPredicate(firstPredicateDateSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate secondPredicate \u003d new MeetingOccursOnDatesPredicate(secondPredicateDateSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(firstPredicateDateSet);","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-04-07"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-04-07"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-04-07"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    public void test_emptyKeywords_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate predicate \u003d new MeetingOccursOnDatesPredicate(Collections.emptySet());","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"    public void test_meetingOccursOnDates_returnsTrue() {","lastModifiedDate":"2022-04-07"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        // One date","lastModifiedDate":"2022-04-07"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate predicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Collections.singleton(firstMeetingDate));","lastModifiedDate":"2022-04-07"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withDate(firstSearchDate).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"        // Search for multiple dates","lastModifiedDate":"2022-04-07"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingOccursOnDatesPredicate(Set.of(firstMeetingDate, secondMeetingDate));","lastModifiedDate":"2022-04-07"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withDate(firstSearchDate).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withDate(secondSearchDate).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        // Matching date, different format","lastModifiedDate":"2022-04-07"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingOccursOnDatesPredicate(Set.of(firstMeetingDate));","lastModifiedDate":"2022-04-07"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withDate(differentFormatFirstSearchDate).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-04-07"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"    public void test_meetingDoesNotOccurOnDate_returnsFalse() {","lastModifiedDate":"2022-04-07"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        // Non-matching date","lastModifiedDate":"2022-04-07"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        MeetingOccursOnDatesPredicate predicate \u003d","lastModifiedDate":"2022-04-07"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"                new MeetingOccursOnDatesPredicate(Set.of(secondMeetingDate, thirdMeetingDate));","lastModifiedDate":"2022-04-07"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withDate(firstSearchDate).build()));","lastModifiedDate":"2022-04-07"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"cpwill01":80}},{"path":"src/test/java/seedu/address/model/meeting/MeetingTagHasKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.model.meeting;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"public class MeetingTagHasKeywordsPredicateTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    private final String firstTagName \u003d \"Academic\";","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"    private final String secondTagName \u003d \"Internship\";","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    private final String thirdTagName \u003d \"Leisure\";","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    private final String mixedCaseFirstTagName \u003d \"AcaDeMiC\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    private final String mixedCaseSecondTagName \u003d \"iNTernShIp\";","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private final Tag firstTag \u003d new Tag(firstTagName);","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private final Tag secondTag \u003d new Tag(secondTagName);","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    private final Tag thirdTag \u003d new Tag(thirdTagName);","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        Set\u003cTag\u003e firstPredicateKeywordSet \u003d Collections.singleton(firstTag);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"        Set\u003cTag\u003e secondPredicateKeywordSet \u003d Set.of(firstTag, secondTag);","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate firstPredicate \u003d new MeetingTagHasKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate secondPredicate \u003d new MeetingTagHasKeywordsPredicate(secondPredicateKeywordSet);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"                new MeetingTagHasKeywordsPredicate(firstPredicateKeywordSet);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"    public void test_emptyKeywords_returnsTrue() {","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate predicate \u003d new MeetingTagHasKeywordsPredicate(Collections.emptySet());","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"    public void test_tagHasKeywords_returnsTrue() {","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        // One keyword, one tag","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate predicate \u003d new MeetingTagHasKeywordsPredicate(Collections.singleton(firstTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"        // One keyword, multiple tags","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingTagHasKeywordsPredicate(Collections.singleton(firstTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"        // Multiple matching keywords","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(firstTagName + \" \" + secondTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withTags(firstTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        // Mixed-case meeting tag","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(firstTag, secondTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"        assertTrue(predicate.test(","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"                new MeetingBuilder().withTags(mixedCaseFirstTagName, mixedCaseSecondTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"    public void test_tagDoesNotHaveKeywords_returnsFalse() {","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"cpwill01"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"        MeetingTagHasKeywordsPredicate predicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(thirdTag));","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"        // Non-matching keyword due to non-full match","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"        predicate \u003d new MeetingTagHasKeywordsPredicate(Set.of(new Tag(firstTagName + \" \" + secondTagName)));","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withTags(firstTagName, secondTagName).build()));","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"cpwill01":93}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class JsonAdaptedContactTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    private static final String INVALID_TELEGRAM \u003d \"#\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"YiFei2"},"content":"    private static final String INVALID_TAG \u003d \"/friend\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"rahulprasad01"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_TELEGRAM, VALID_TAGS);","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"rahulprasad01"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"rahulprasad01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2022-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_TELEGRAM, invalidTags);","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cpwill01":1,"YiFei2":1,"rahulprasad01":18,"-":90}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.storage.JsonAdaptedMeeting.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalMeetings.CS2103T;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"public class JsonAdaptedMeetingTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"    private static final String INVALID_MEETING_NAME \u003d \"CS2!03@\";","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    private static final String INVALID_DATE \u003d \"10 12 2022\";","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private static final String INVALID_START_TIME \u003d \"12:30\";","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"    private static final String INVALID_END_TIME \u003d \"2559\";","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    private static final String INVALID_ARCHIVESTATUS \u003d \"yes\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"YiFei2"},"content":"    private static final String INVALID_TAG \u003d \"/friend\";","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    private static final String VALID_MEETING_NAME \u003d CS2103T.getName().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    private static final String VALID_DATE \u003d CS2103T.getDate().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    private static final String VALID_START_TIME \u003d CS2103T.getStartTime().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"    private static final String VALID_END_TIME \u003d CS2103T.getEndTime().toString();","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    private static final String VALID_ARCHIVESTATUS \u003d CS2103T.getArchiveStatus().toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d CS2103T.getTags().stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_PARTICIPANTS \u003d CS2103T.getParticipants().stream()","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"            .map(participant -\u003e new JsonAdaptedPerson(participant.contact))","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_validMeetingDetails_returnsMeeting() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(CS2103T);","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"        assertEquals(CS2103T, meeting.toModelType());","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidMeetingName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(INVALID_MEETING_NAME, VALID_DATE, VALID_START_TIME,","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"rahulprasad01"},"content":"                VALID_END_TIME, VALID_ARCHIVESTATUS, VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d MeetingName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_nullMeetingName_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(null, VALID_DATE, VALID_START_TIME,","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"                VALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"                VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MeetingName.class.getSimpleName());","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedMeeting(VALID_MEETING_NAME, INVALID_DATE, VALID_START_TIME,","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"rahulprasad01"},"content":"                        VALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"cpwill01"},"content":"                        VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d MeetingDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_NAME, null, VALID_START_TIME,","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"rahulprasad01"},"content":"                VALID_END_TIME, VALID_ARCHIVESTATUS, VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MeetingDate.class.getSimpleName());","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedMeeting(VALID_MEETING_NAME, VALID_DATE, INVALID_START_TIME,","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"rahulprasad01"},"content":"                        VALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"cpwill01"},"content":"                        VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d StartTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_NAME, VALID_DATE, null,","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"rahulprasad01"},"content":"                VALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"cpwill01"},"content":"                VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StartTime.class.getSimpleName());","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedMeeting(VALID_MEETING_NAME, VALID_DATE, VALID_START_TIME,","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"rahulprasad01"},"content":"                        INVALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"cpwill01"},"content":"                        VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d EndTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":111,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"rahulprasad01"},"content":"        JsonAdaptedMeeting meeting \u003d new JsonAdaptedMeeting(VALID_MEETING_NAME, VALID_DATE,","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"rahulprasad01"},"content":"                VALID_START_TIME, null, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"cpwill01"},"content":"                VALID_PARTICIPANTS, VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"cpwill01"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EndTime.class.getSimpleName());","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"cpwill01"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"cpwill01"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"cpwill01"},"content":"        JsonAdaptedMeeting meeting \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"rahulprasad01"},"content":"                new JsonAdaptedMeeting(VALID_MEETING_NAME, VALID_DATE,","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"rahulprasad01"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_ARCHIVESTATUS,","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"cpwill01"},"content":"                        VALID_PARTICIPANTS, invalidTags);","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, meeting::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"cpwill01":110,"YiFei2":1,"rahulprasad01":19}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cpwill01":1,"-":108}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"    private static final Path INVALID_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMeetingAddressBook.json\");","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    private static final Path DUPLICATE_MEETING_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMeetingAddressBook.json\");","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_typicalPersonsAndMeetingsFile_success() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_invalidMeetingFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEETING_FILE,","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"    public void toModelType_duplicateMeetings_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEETING_FILE,","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MEETING,","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"cpwill01":20,"-":43}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"cpwill01"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressoc.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cpwill01":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cpwill01":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    public AddressBookBuilder withPerson(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rahulprasad01":2,"-":32}},{"path":"src/test/java/seedu/address/testutil/EditMeetingDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import java.util.Collections;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"tomascherian"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import seedu.address.logic.commands.EditMeetingCommand.EditMeetingDescriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":"public class EditMeetingDescriptorBuilder {","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"    private EditMeetingDescriptor descriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder() {","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder(EditMeetingDescriptor descriptor) {","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"        this.descriptor \u003d new EditMeetingDescriptor(descriptor);","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"tomascherian"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder(Meeting meeting) {","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"        descriptor \u003d new EditMeetingDescriptor();","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"        descriptor.setMeetingName(meeting.getName());","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"        descriptor.setMeetingDate(meeting.getDate());","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"        descriptor.setStartTime(meeting.getStartTime());","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"        descriptor.setEndTime(meeting.getEndTime());","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        descriptor.setTags(meeting.getTags());","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"        descriptor.setParticipantsIndex(Collections.emptySet());","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code MeetingName} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"        descriptor.setMeetingName(new MeetingName(name));","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code MeetingDate} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        descriptor.setMeetingDate(new MeetingDate(date));","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code StartTime} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder withStartTime(String startTime) {","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"        descriptor.setStartTime(new StartTime(startTime));","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code EndTime} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder withEndTime(String endTime) {","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"        descriptor.setEndTime(new EndTime(endTime));","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMeetingDescriptor}","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"     * that we are building.","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    public EditMeetingDescriptor build() {","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"        return descriptor;","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"tomascherian":89}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    public EditPersonDescriptorBuilder(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"    public EditPersonDescriptorBuilder withTelegram(String id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"rahulprasad01"},"content":"        descriptor.setTelegram(new Telegram(id));","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":11,"-":77}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tomascherian"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"tomascherian"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"tomascherian"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.EndTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.meeting.MeetingArchiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"YiFei2"},"content":"import seedu.address.model.meeting.Participant;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.meeting.StartTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"tomascherian"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"tomascherian"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"tomascherian"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"tomascherian"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"tomascherian"},"content":"public class MeetingBuilder {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"tomascherian"},"content":"    public static final String DEFAULT_NAME \u003d \"Project Meeting\";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"rahulprasad01"},"content":"    public static final String DEFAULT_DATE \u003d \"01/04/2022\";","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tomascherian"},"content":"    public static final String DEFAULT_START_TIME \u003d \"1800\";","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"tomascherian"},"content":"    public static final String DEFAULT_END_TIME \u003d \"1900\";","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"    public static final boolean DEFAULT_ARCHIVESTATUS \u003d false;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"tomascherian"},"content":"    private MeetingName name;","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"tomascherian"},"content":"    private MeetingDate date;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"tomascherian"},"content":"    private StartTime startTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"tomascherian"},"content":"    private EndTime endTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"rahulprasad01"},"content":"    private MeetingArchiveStatus archiveStatus;","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"YiFei2"},"content":"    private Set\u003cParticipant\u003e participants;","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"tomascherian"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"tomascherian"},"content":"     *  Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder() {","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"tomascherian"},"content":"        name \u003d new MeetingName(DEFAULT_NAME);","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"tomascherian"},"content":"        date \u003d new MeetingDate(DEFAULT_DATE);","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"tomascherian"},"content":"        startTime \u003d new StartTime(DEFAULT_START_TIME);","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"tomascherian"},"content":"        endTime \u003d new EndTime(DEFAULT_END_TIME);","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"        archiveStatus \u003d new MeetingArchiveStatus(DEFAULT_ARCHIVESTATUS);","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"YiFei2"},"content":"        participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"tomascherian"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"tomascherian"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"tomascherian"},"content":"        name \u003d meetingToCopy.getName();","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"tomascherian"},"content":"        date \u003d meetingToCopy.getDate();","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"tomascherian"},"content":"        startTime \u003d meetingToCopy.getStartTime();","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"tomascherian"},"content":"        endTime \u003d meetingToCopy.getEndTime();","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"rahulprasad01"},"content":"        archiveStatus \u003d meetingToCopy.getArchiveStatus();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"YiFei2"},"content":"        participants \u003d new HashSet\u003cParticipant\u003e(meetingToCopy.getParticipants());","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"YiFei2"},"content":"        tags \u003d new HashSet\u003cTag\u003e(meetingToCopy.getTags());","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code MeetingName} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder withName(String name) {","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"tomascherian"},"content":"        this.name \u003d new MeetingName(name);","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code MeetingDate} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder withDate(String date) {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"tomascherian"},"content":"        this.date \u003d new MeetingDate(date);","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":76,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":77,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":78,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code StartTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":81,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder withStartTime(String startTime) {","lastModifiedDate":"2022-03-10"},{"lineNumber":82,"author":{"gitId":"tomascherian"},"content":"        this.startTime \u003d new StartTime(startTime);","lastModifiedDate":"2022-03-10"},{"lineNumber":83,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":86,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":87,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code EndTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":88,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":89,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder withEndTime(String endTime) {","lastModifiedDate":"2022-03-10"},{"lineNumber":90,"author":{"gitId":"tomascherian"},"content":"        this.endTime \u003d new EndTime(endTime);","lastModifiedDate":"2022-03-10"},{"lineNumber":91,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":92,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":93,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":94,"author":{"gitId":"rahulprasad01"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"rahulprasad01"},"content":"     * Sets the {@code Archive} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"rahulprasad01"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"rahulprasad01"},"content":"    public MeetingBuilder withArchiveStatus(String state) {","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"rahulprasad01"},"content":"        this.archiveStatus \u003d new MeetingArchiveStatus(Boolean.valueOf(state));","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"rahulprasad01"},"content":"        return this;","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"rahulprasad01"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":103,"author":{"gitId":"tomascherian"},"content":"     * Sets the {@code ParticipantsList} of the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":104,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":105,"author":{"gitId":"YiFei2"},"content":"    public MeetingBuilder withParticipants(Contact ... contacts) {","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"YiFei2"},"content":"        this.participants \u003d SampleDataUtil.getParticipantSet(contacts);","lastModifiedDate":"2022-03-12"},{"lineNumber":107,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":108,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":109,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":110,"author":{"gitId":"tomascherian"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":111,"author":{"gitId":"tomascherian"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"tomascherian"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":113,"author":{"gitId":"tomascherian"},"content":"    public MeetingBuilder withTags(String ... tags) {","lastModifiedDate":"2022-03-10"},{"lineNumber":114,"author":{"gitId":"tomascherian"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2022-03-10"},{"lineNumber":115,"author":{"gitId":"tomascherian"},"content":"        return this;","lastModifiedDate":"2022-03-10"},{"lineNumber":116,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"tomascherian"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":118,"author":{"gitId":"tomascherian"},"content":"    public Meeting build() {","lastModifiedDate":"2022-03-10"},{"lineNumber":119,"author":{"gitId":"rahulprasad01"},"content":"        return new Meeting(name, date, startTime, endTime, participants, archiveStatus, tags);","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"tomascherian"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":121,"author":{"gitId":"tomascherian"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"tomascherian":98,"YiFei2":8,"rahulprasad01":15}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Telegram;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"rahulprasad01"},"content":"    public static final String DEFAULT_ID \u003d \"aB_01\";","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"rahulprasad01"},"content":"    private Telegram id;","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"        id \u003d new Telegram(DEFAULT_ID);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"    public PersonBuilder(Contact personToCopy) {","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"        id \u003d personToCopy.getTelegram();","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"rahulprasad01"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"rahulprasad01"},"content":"    public PersonBuilder withTelegram(String id) {","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"rahulprasad01"},"content":"        this.id \u003d new Telegram(id);","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"rahulprasad01"},"content":"    public Contact build() {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"rahulprasad01"},"content":"        return new Contact(name, phone, email, id, tags);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"rahulprasad01":15,"-":81}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import seedu.address.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"rahulprasad01"},"content":"    public static String getAddCommand(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    public static String getPersonDetails(Contact person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"        sb.append(PREFIX_TELEGRAM + person.getTelegram().telegramId + \" \");","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"rahulprasad01"},"content":"        descriptor.getTelegram().ifPresent(id -\u003e sb.append(PREFIX_TELEGRAM).append(id.telegramId).append(\" \"));","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"cpwill01":1,"rahulprasad01":12,"-":53}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"    public static Contact getPerson(Model model, Index index) {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rahulprasad01":3,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":" * A utility class containing a list of {@code Person} and {@code Meeting} objects to be used in tests.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"    public static final List\u003cContact\u003e CONTACT_LIST \u003d TypicalPersons.getTypicalPersons();","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"    public static final List\u003cMeeting\u003e MEETING_LIST \u003d TypicalMeetings.getTypicalMeetings();","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"    private TypicalAddressBook() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":"     * Returns an {@code AddressBook} with all the typical persons and meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"        for (Contact person : CONTACT_LIST) {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"            ab.addPerson(person);","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"        for (Meeting meeting : MEETING_LIST) {","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"            ab.addMeeting(meeting);","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"        return ab;","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"cpwill01":37}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"tomascherian"},"content":"    public static final Index INDEX_FIRST_MEETING \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"tomascherian"},"content":"    public static final Index INDEX_SECOND_MEETING \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"tomascherian"},"content":"    public static final Index INDEX_THIRD_MEETING \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"tomascherian":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalMeetings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cpwill01"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"cpwill01"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"cpwill01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"cpwill01"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"cpwill01"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.Meeting;","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.meeting.MeetingName;","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"cpwill01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"cpwill01"},"content":"/**","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"cpwill01"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"cpwill01"},"content":" */","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"cpwill01"},"content":"public class TypicalMeetings {","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"cpwill01"},"content":"    public static final String CS2103T_NAME \u003d \"CS2103T project\";","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"cpwill01"},"content":"    public static final String CS2103T_DATE \u003d \"30/04/2022\";","lastModifiedDate":"2022-04-09"},{"lineNumber":27,"author":{"gitId":"cpwill01"},"content":"    public static final String CS2103T_TAG \u003d \"v1point2\";","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"cpwill01"},"content":"    public static final String NUSSU_NAME \u003d \"NUSSU meeting\";","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"cpwill01"},"content":"    public static final String NUSSU_DATE \u003d \"20/06/2022\";","lastModifiedDate":"2022-04-09"},{"lineNumber":30,"author":{"gitId":"cpwill01"},"content":"    public static final String NUSSU_TAG \u003d \"important\";","lastModifiedDate":"2022-04-07"},{"lineNumber":31,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"cpwill01"},"content":"    public static final Meeting CS2103T \u003d new MeetingBuilder().withName(CS2103T_NAME).withDate(CS2103T_DATE)","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"            .withStartTime(\"1600\").withEndTime(\"1700\").withArchiveStatus(\"false\")","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cpwill01"},"content":"            .withParticipants(ALICE, BENSON).withTags(CS2103T_TAG).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    public static final Meeting CS2101 \u003d new MeetingBuilder().withName(\"CS2101 project\").withDate(\"15/05/2022\")","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"rahulprasad01"},"content":"            .withStartTime(\"1900\").withEndTime(\"2000\").withArchiveStatus(\"false\")","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"            .withParticipants(BENSON, CARL).withTags(\"OP2\").build();","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"    public static final Meeting NUSSU \u003d new MeetingBuilder().withName(NUSSU_NAME).withDate(NUSSU_DATE)","lastModifiedDate":"2022-04-07"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"            .withStartTime(\"1600\").withEndTime(\"1700\").withArchiveStatus(\"false\")","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cpwill01"},"content":"            .withParticipants(DANIEL, ELLE).withTags(NUSSU_TAG).build();","lastModifiedDate":"2022-04-07"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    public static final Meeting DANCE_CLUB \u003d new MeetingBuilder().withName(\"Dance exco meeting\").withDate(\"22/07/2022\")","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"            .withStartTime(\"1700\").withEndTime(\"1800\").withArchiveStatus(\"false\").build();","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"cpwill01"},"content":"    public static final Meeting COMPUTING_CLUB \u003d new MeetingBuilder().withName(\"Computing club meeting\")","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"rahulprasad01"},"content":"            .withDate(\"30/08/2022\").withStartTime(\"1600\").withEndTime(\"1700\")","lastModifiedDate":"2022-03-31"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"            .withArchiveStatus(\"false\").withParticipants(ELLE, FIONA).build();","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"cpwill01"},"content":"    public static final MeetingName MEETING_NAME_MATCHING_CS2103T \u003d new MeetingName(CS2103T_NAME);","lastModifiedDate":"2022-04-07"},{"lineNumber":48,"author":{"gitId":"cpwill01"},"content":"    public static final MeetingName MEETING_NAME_MATCHING_NUSSU \u003d new MeetingName(NUSSU_NAME);","lastModifiedDate":"2022-04-07"},{"lineNumber":49,"author":{"gitId":"cpwill01"},"content":"    public static final MeetingDate MEETING_DATE_MATCHING_CS2103T \u003d new MeetingDate(CS2103T_DATE);","lastModifiedDate":"2022-04-07"},{"lineNumber":50,"author":{"gitId":"cpwill01"},"content":"    public static final MeetingDate MEETING_DATE_MATCHING_NUSSU \u003d new MeetingDate(NUSSU_DATE);","lastModifiedDate":"2022-04-07"},{"lineNumber":51,"author":{"gitId":"cpwill01"},"content":"    public static final Tag TAG_MATCHING_CS2103T \u003d new Tag(CS2103T_TAG);","lastModifiedDate":"2022-04-07"},{"lineNumber":52,"author":{"gitId":"cpwill01"},"content":"    public static final Tag TAG_MATCHING_NUSSU \u003d new Tag(NUSSU_TAG);","lastModifiedDate":"2022-04-07"},{"lineNumber":53,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":54,"author":{"gitId":"cpwill01"},"content":"    private TypicalMeetings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"cpwill01"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"cpwill01"},"content":"    /**","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"cpwill01"},"content":"     * Returns a {@code List} with all the typical meetings.","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"cpwill01"},"content":"     */","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"cpwill01"},"content":"    public static List\u003cMeeting\u003e getTypicalMeetings() {","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"cpwill01"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103T, CS2101, NUSSU, DANCE_CLUB, COMPUTING_CLUB));","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"cpwill01"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"cpwill01"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"cpwill01"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"cpwill01":56,"rahulprasad01":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"rahulprasad01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"rahulprasad01"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"rahulprasad01"},"content":"            .withTelegram(\"aliC_e02\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"rahulprasad01"},"content":"            .withTelegram(\"bensoN_07\")","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(\"heinz@example.com\").withTelegram(\"carL_9\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"cpwill01"},"content":"            .withEmail(\"cornelia@example.com\").withTelegram(\"dan_the_man\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"cpwill01"},"content":"            .withEmail(\"werner@example.com\").withTelegram(\"elle_or_L\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(\"lydia@example.com\").withTelegram(\"fionA_87\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(\"anna@example.com\").withTelegram(\"george_besT01\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(\"stefan@example.com\").withTelegram(\"hoo_nA001\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(\"hans@example.com\").withTelegram(\"i_0dA\").build();","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(VALID_EMAIL_AMY).withTelegram(VALID_TELEGRAM_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"rahulprasad01"},"content":"    public static final Contact BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"rahulprasad01"},"content":"            .withEmail(VALID_EMAIL_BOB).withTelegram(VALID_TELEGRAM_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"rahulprasad01"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"rahulprasad01"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"rahulprasad01"},"content":"    public static List\u003cContact\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":65,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"rahulprasad01"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"cpwill01":2,"rahulprasad01":28,"-":37}}]
