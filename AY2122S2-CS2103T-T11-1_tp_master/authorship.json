[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S2-CS2103T-T11-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T11-1/tp/branch/master/graph/badge.svg?token\u003d2D312VMBNN)](https://codecov.io/gh/AY2122S2-CS2103T-T11-1/tp)","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"### Overview","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s information. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 emergency contacts, medical information and visits through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"* For the detailed documentation of this project, see the **[Medbook Product Website](https://ay2122s2-cs2103t-t11-1.github.io/tp/)**.","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"### Acknowledgement","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sibinhho99-nus":1,"clement0010":7,"-":8}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"run {","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"clement0010":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"### Loo Chee Kean","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/cheekean5848.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"[[github](https://github.com/cheekean5848)]","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"[[portfolio](team/cheekean5848.md)]","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"* Role: Team Lead, Deliverables and deadlines","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"* Responsibilities: Logic","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"### Clement Tee","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/clement0010.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"[[github](http://github.com/clement0010)]","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"[[portfolio](team/clement0010.md)]","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"* Role: Code quality, Scheduling and tracking","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"### Si Binh Ho","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/sibinhho99-nus.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"[[github](http://github.com/sibinhho99-nus)]","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"[[portfolio](team/sibinhho99-nus.md)]","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"* Role: Developer, Integration","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"* Responsibilities: Storage","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"### Joey Chance","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/joey-chance.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"[[github](http://github.com/joey-chance)]","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"[[portfolio](team/joey-chance.md)]","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"* Role: Developer, Testing","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"* Responsibilities: Model","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"### Justin Lam","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"\u003cimg src\u003d\"images/juslam19.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"[[github](http://github.com/juslam19)]","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"[[portfolio](team/juslam19.md)]","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"* Role: Documentation","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"* Responsibilities: Ui","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"cheekean5848":27,"juslam19":3,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"## **Table of Content**","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"- [**Design**](#design)","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"  - [Dynamic Ui Rendering](#dynamic-ui-rendering)","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    - [Design Consideration](#design-consideration)","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-1)","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"  - [Create](#create)","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    - [Design Consideration](#design-consideration-1)","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-2)","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    - [Usage](#usage)","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"  - [View](#view)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    - [Design Consideration](#design-consideration-2)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-3)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    - [Usage](#usage-1)","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"  - [Safe Delete](#safe-delete)","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    - [Design Consideration](#design-consideration-3)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-4)","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    - [Usage](#usage-2)","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"  - [Find](#find)","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    - [Design Consideration](#design-consideration-4)","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-5)","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    - [Usage](#usage-3)","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"  - [Summary](#summary)","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    - [Implementation](#implementation-6)","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    - [Usage](#usage-4)","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"  - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-T11-1/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"clement0010"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"clement0010"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-T11-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"joey-chance"},"content":"The sections below give more details on how the following features are implemented.","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"clement0010"},"content":"* Dynamic Ui Rendering","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"clement0010"},"content":"* Create","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"clement0010"},"content":"* View","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"clement0010"},"content":"* Safe Delete","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"clement0010"},"content":"* Find","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"clement0010"},"content":"* Summary (WIP)","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"clement0010"},"content":"\u003c!-- Clement --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"clement0010"},"content":"### Dynamic Ui Rendering","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"clement0010"},"content":"#### Design Consideration","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"clement0010"},"content":"WIP","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"clement0010"},"content":"WIP - Insert UML","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"clement0010"},"content":"\u003c!-- Joey --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"joey-chance"},"content":"### Add","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"joey-chance"},"content":"The add mechanism is facilitated by `MedBook`. It allows users to create and store records belonging to a patient.","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"joey-chance"},"content":"These records include a `Patient`\u0027s `Contact` details, `Medical` information, `Consultation` notes,`Prescription` and","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"joey-chance"},"content":"`TestResult`. For each of the records, there is a corresponding class to add the record into the `MedBook`. ","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"joey-chance"},"content":"Example: `TestResult` can be added into the `MedBook` using the `AddTestResultCommand` which allows users to add a new ","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"joey-chance"},"content":"and unique record regarding the results of a medical test taken if this record is not a duplicate.","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"joey-chance"},"content":"It extends the abstract class `Command` and has additional fields to store the patient\u0027s `NRIC` and their","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"joey-chance"},"content":"corresponding records.","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"joey-chance"},"content":"It implements the abstract method `execute` to add and store the record in `MedBook` and this operation is exposed in","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"joey-chance"},"content":"the `LogicManager` class.","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"joey-chance"},"content":"#### Design Consideration","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"joey-chance"},"content":"Aspect: How add executes:","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"joey-chance"},"content":"* Alternative 1: Extends `AddCommand` class","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"joey-chance"},"content":"  * Pros: easy to follow AB3\u0027s OOP design","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"joey-chance"},"content":"  * Cons: more code is needed to make the subclasses compatible with `AddCommand` and this design may also violate the","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"joey-chance"},"content":"    Liskov Substitution Principle since the subclasses are more restrictive","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"joey-chance"},"content":"* Alternative 2 (current choice): Extends `Command` class","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"joey-chance"},"content":"  * Pros: easy to implement because the abstract class `Command` only has one abstract method","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"joey-chance"},"content":"  * Cons: commands that aim to do the same thing (add records to the `MedBook`) are not grouped together and this may","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"joey-chance"},"content":"    not be an intuitive approach to OOP","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"joey-chance"},"content":"\u003cimg src\u003d\"images/AllAddCommandsClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"clement0010"},"content":"#### Usage","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"joey-chance"},"content":"Given below is an activity diagram which shows the example usage scenario for when a user adds the `Medical` information","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"joey-chance"},"content":"for a `Patient` and how the add mechanism behaves at each step:","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"joey-chance"},"content":"\u003cimg src\u003d\"images/AddMedicalActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":248,"author":{"gitId":"clement0010"},"content":"\u003c!-- Justin --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"clement0010"},"content":"### View","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"clement0010"},"content":"#### Design Consideration","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"juslam19"},"content":"##### Aspects: How view executes:","lastModifiedDate":"2022-03-26"},{"lineNumber":252,"author":{"gitId":"juslam19"},"content":"* Alternative 1 (current choice): type in the type, along with the arguments that specify view boundaries","lastModifiedDate":"2022-03-26"},{"lineNumber":253,"author":{"gitId":"juslam19"},"content":"    * Pros: Straightforward to implement, works well.","lastModifiedDate":"2022-03-26"},{"lineNumber":254,"author":{"gitId":"juslam19"},"content":"    * Cons: Cumbersome to type out, esp if a lot of parameters are needed.","lastModifiedDate":"2022-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"juslam19"},"content":"The view mechanism is facilitated by `MedBook`. It allows users to view various items within the provided parameters ","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"juslam19"},"content":"issued in the command. This is achieved by using a filtered list for each type, and then filtering the list ","lastModifiedDate":"2022-03-26"},{"lineNumber":260,"author":{"gitId":"juslam19"},"content":"according to the given parameters. These types include a `Patient`\u0027s `Contact` details, `Medical` information, ","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"juslam19"},"content":"`Consultation` notes,`Prescription` and `TestResult`. For each of the records types, there is a corresponding class ","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"juslam19"},"content":"to view the record types into the `MedBook`.","lastModifiedDate":"2022-03-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":264,"author":{"gitId":"juslam19"},"content":"The view mechanism is facilitated by `CommandType`. It implements `CommandType#parseViewCommandType()` which parse the","lastModifiedDate":"2022-03-26"},{"lineNumber":265,"author":{"gitId":"juslam19"},"content":"type of view command, and the arguments passed in the command string, which specify the boundaries of which elements to","lastModifiedDate":"2022-03-26"},{"lineNumber":266,"author":{"gitId":"juslam19"},"content":"include in the filtered list. From here, let `XXX` be the type determined from `CommandType#parseViewCommandType()`.","lastModifiedDate":"2022-03-26"},{"lineNumber":267,"author":{"gitId":"juslam19"},"content":"It then creates a new instance of `ViewXXXCommandParser`, which parses the view command","lastModifiedDate":"2022-03-26"},{"lineNumber":268,"author":{"gitId":"juslam19"},"content":"according to how the type in meant to be parsed, and then creates a new instance of `ViewXXXCommand`, which extends","lastModifiedDate":"2022-03-26"},{"lineNumber":269,"author":{"gitId":"juslam19"},"content":"Command. It implements the abstract method `execute` to invoke `Model` and update `filteredXXXList` in `MedBook`.","lastModifiedDate":"2022-03-26"},{"lineNumber":270,"author":{"gitId":"juslam19"},"content":"This operation is exposed in the `LogicManager` class. `UI` is then updated accordingly, displaying in the Main Window","lastModifiedDate":"2022-03-26"},{"lineNumber":271,"author":{"gitId":"juslam19"},"content":"the desired filtered list.","lastModifiedDate":"2022-03-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":273,"author":{"gitId":"juslam19"},"content":"Example: `view t/consultation i/S1234567L` makes `MedBook` display the `filteredConsultationList` which","lastModifiedDate":"2022-03-26"},{"lineNumber":274,"author":{"gitId":"juslam19"},"content":"has been filtered beforehand according to the given parameter of patient ID S1234567L.","lastModifiedDate":"2022-03-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":276,"author":{"gitId":"juslam19"},"content":"The following sequence diagram shows view consultation works:","lastModifiedDate":"2022-03-26"},{"lineNumber":277,"author":{"gitId":"juslam19"},"content":"\u003cimg src\u003d\"images/ViewSequenceDiagram.png\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"clement0010"},"content":"#### Usage","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"juslam19"},"content":"Given below is an example usage scenario about how `view t/consultation` works:","lastModifiedDate":"2022-03-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":283,"author":{"gitId":"juslam19"},"content":"Step 1: The user launches the application for the first time, The `CommandType` will be","lastModifiedDate":"2022-03-26"},{"lineNumber":284,"author":{"gitId":"juslam19"},"content":"initialized with default state, the is viewing the patient panel list.","lastModifiedDate":"2022-03-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":286,"author":{"gitId":"juslam19"},"content":"Step 2: The user types in view t/consultation i/S1234567L. This command  will call `CommandType#parseVewCommandType` ","lastModifiedDate":"2022-03-26"},{"lineNumber":287,"author":{"gitId":"juslam19"},"content":"to parse what is the current type, which is consultation. ","lastModifiedDate":"2022-03-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":289,"author":{"gitId":"juslam19"},"content":"From here, let `XXX` be the type determined in `CommandType#parseViewCommandType()`.","lastModifiedDate":"2022-03-26"},{"lineNumber":290,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":291,"author":{"gitId":"juslam19"},"content":"Step 3: It then creates a new instance of `ViewXXXCommandParser` and passes the arguments into the new instance.","lastModifiedDate":"2022-03-26"},{"lineNumber":292,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":293,"author":{"gitId":"juslam19"},"content":"Step 4: This then creates a new instance of `ViewXXXCommand`, which extends Command. Its `execute` method invokes ","lastModifiedDate":"2022-03-26"},{"lineNumber":294,"author":{"gitId":"juslam19"},"content":"Model\u0027s `Model#updateFilteredXXXList` to update the `filteredXXXList` according to the argument passed into the method.","lastModifiedDate":"2022-03-26"},{"lineNumber":295,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":296,"author":{"gitId":"juslam19"},"content":"Step 5: `UI` is then updated accordingly, displaying in the Main Window the desired filtered list.","lastModifiedDate":"2022-03-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"clement0010"},"content":"\u003c!-- Chee Kean --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"clement0010"},"content":"### Safe Delete","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"cheekean5848"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"cheekean5848"},"content":"##### Aspects: How delete executes:","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"cheekean5848"},"content":"* Alternative 1 (current choice): delete the index with the current view","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"cheekean5848"},"content":"  * Pros: Easy to implement","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"cheekean5848"},"content":"  * Cons: The user needs to view the field before he/she can perform the delete actions.","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"cheekean5848"},"content":"* Alternative 2: delete the field by specifying the NRIC, index and the type of field.","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"cheekean5848"},"content":"  * Pros: The user can delete any field at any page.","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"cheekean5848"},"content":"  * Cons: Harder to implement, it is not very intuitive for a user to delete a field without viewing it.","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":314,"author":{"gitId":"cheekean5848"},"content":"The delete mechanism is facilitated bby `CommandType`. It extends MedBook","lastModifiedDate":"2022-03-25"},{"lineNumber":315,"author":{"gitId":"cheekean5848"},"content":"with the latest view state, stored internally as a currentViewType.","lastModifiedDate":"2022-03-25"},{"lineNumber":316,"author":{"gitId":"cheekean5848"},"content":"It implements `CommandType#parseDeleteCommandType()` which parse the type","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"cheekean5848"},"content":"of delete command according to the latest view type.","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":319,"author":{"gitId":"cheekean5848"},"content":"The following sequence diagram shows delete prescription works:","lastModifiedDate":"2022-03-25"},{"lineNumber":320,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/DeleteSequenceDiagram.png\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":322,"author":{"gitId":"clement0010"},"content":"#### Usage","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"cheekean5848"},"content":"Given below is an example usage scenario and how the delete prescription works:","lastModifiedDate":"2022-03-25"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":325,"author":{"gitId":"cheekean5848"},"content":"Step 1: The user launches the application for the first time, The `CommandType` will be","lastModifiedDate":"2022-03-25"},{"lineNumber":326,"author":{"gitId":"cheekean5848"},"content":"initialized with default state, the is viewing the patient panel list.","lastModifiedDate":"2022-03-25"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":328,"author":{"gitId":"cheekean5848"},"content":"Step 2: The user view t/prescription i/S1234567L, `Command Type` will change the `viewCommandType` to prescription type.","lastModifiedDate":"2022-03-25"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"cheekean5848"},"content":"Step 3: The user decide to delete the 2nd prescription of this patient, The user executes `delete 2`","lastModifiedDate":"2022-03-25"},{"lineNumber":331,"author":{"gitId":"cheekean5848"},"content":"command. This command  will call `CommandType#parseDeleteCommandType` to parse what is the current type, which is","lastModifiedDate":"2022-03-25"},{"lineNumber":332,"author":{"gitId":"cheekean5848"},"content":"prescription. It will then delete the 2nd prescription from prescription model and save to storage","lastModifiedDate":"2022-03-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"clement0010"},"content":"\u003c!-- Si Binh --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"clement0010"},"content":"### Find","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"sibinhho99-nus"},"content":"The `Find` command is used to find the patient whose names contain any of the given keywords. ","lastModifiedDate":"2022-03-25"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"clement0010"},"content":"#### Design Consideration","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"clement0010"},"content":"WIP","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"sibinhho99-nus"},"content":"`FindCommandParser` parses input, builds a `NameContainsKeywordsPredicate` and returns a `FindCommand` with needed name predicate.","lastModifiedDate":"2022-03-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"sibinhho99-nus"},"content":"`FindCommand` extends the abstract class `Command`. ","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"sibinhho99-nus"},"content":"It implements the abstract method `execute` to invoke `Model` and update the list of displayed patients in `MedBook`. ","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"sibinhho99-nus"},"content":"This operation is exposed in the `LogicManager` class. ","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"sibinhho99-nus"},"content":"`UI` is then updated accordingly.","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"clement0010"},"content":"WIP - Insert UML and activity diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"clement0010"},"content":"#### Usage","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"clement0010"},"content":"WIP","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":361,"author":{"gitId":"clement0010"},"content":"### Summary","lastModifiedDate":"2022-03-25"},{"lineNumber":362,"author":{"gitId":"clement0010"},"content":"#### Implementation","lastModifiedDate":"2022-03-25"},{"lineNumber":363,"author":{"gitId":"clement0010"},"content":"WIP - Insert UML and activity diagram","lastModifiedDate":"2022-03-25"},{"lineNumber":364,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":365,"author":{"gitId":"clement0010"},"content":"#### Usage","lastModifiedDate":"2022-03-25"},{"lineNumber":366,"author":{"gitId":"clement0010"},"content":"WIP","lastModifiedDate":"2022-03-25"},{"lineNumber":367,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":368,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2022-03-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2022-03-25"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":377,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-25"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":379,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2022-03-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"cheekean5848"},"content":"Our target users would be doctors who need to keep track of their patient\u0027s medical information, health status and appointments.","lastModifiedDate":"2022-03-06"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"cheekean5848"},"content":"**Value proposition**: MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s medical details and scheduling appointments. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 medical information, billing and appointments through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-06"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹ | I want to â€¦â€‹                                                                  | So that I canâ€¦â€‹                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"clement0010"},"content":"| -------- | ------- | ----------------------------------------------------------------------------- | ------------------------------------------------------------ |","lastModifiedDate":"2022-03-06"},{"lineNumber":395,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | add, update and delete a patient\u0027s profile with their personal information    | keep track of my patientsâ€™ data                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":396,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve a patient\u0027s past diagnoses based on their name                       | have more information to make diagnoses                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":397,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve a patient\u0027s medicine administration history based on their name      | have more information to make diagnoses                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":398,"author":{"gitId":"clement0010"},"content":"| `* * *`  | user    | view the progress of my patient\u0027s condition by viewing their health analytics | check if they are healing or getting better                  |","lastModifiedDate":"2022-03-06"},{"lineNumber":399,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | to create patient medical information                                         | so that I can retrieve the record in the future efficiently. |","lastModifiedDate":"2022-03-06"},{"lineNumber":400,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | doctor  | make prescriptions (add, update and delete a medicine list and export it      |                                                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":401,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | I can add, update and delete a patient\u0027s test results                         | can make diagnoses                                           |","lastModifiedDate":"2022-03-06"},{"lineNumber":402,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve a patient\u0027s visit history based on their name                        | have more information to make diagnoses                      |","lastModifiedDate":"2022-03-06"},{"lineNumber":403,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve the contact details of the patient from the address book             | communicate with the patient effectively                     |","lastModifiedDate":"2022-03-06"},{"lineNumber":404,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve patient\u0027s medical history based on a given date                      | pinpoint the patient\u0027s cause of disease more efficiently     |","lastModifiedDate":"2022-03-06"},{"lineNumber":405,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | retrieve the medical history, information of the patient                      | assess the patient more accurately and quickly               |","lastModifiedDate":"2022-03-06"},{"lineNumber":406,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | input my patient\u0027s information and medical history                            | store my patientâ€™s medical data                              |","lastModifiedDate":"2022-03-06"},{"lineNumber":407,"author":{"gitId":"cheekean5848"},"content":"| `* * *`  | user    | delete patient\u0027s medical record                                               | better protect their privacy                                 |","lastModifiedDate":"2022-03-06"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"cheekean5848"},"content":"(For all use cases below, the System is the MedBook and the Actor is the user, unless specified otherwise)","lastModifiedDate":"2022-03-06"},{"lineNumber":413,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":414,"author":{"gitId":"clement0010"},"content":"\u003c!-- View a Patientâ€™s Contact Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":415,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":416,"author":{"gitId":"clement0010"},"content":"\u003c!-- Create a Patientâ€™s Contact Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":418,"author":{"gitId":"cheekean5848"},"content":"Use Case: Delete a Patientâ€™s Contact Information","lastModifiedDate":"2022-03-06"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"cheekean5848"},"content":"1.  User requests to list patients","lastModifiedDate":"2022-03-06"},{"lineNumber":423,"author":{"gitId":"cheekean5848"},"content":"2.  MedBook shows a list of patients","lastModifiedDate":"2022-03-06"},{"lineNumber":424,"author":{"gitId":"cheekean5848"},"content":"3.  User requests to delete a specific patient in the list","lastModifiedDate":"2022-03-06"},{"lineNumber":425,"author":{"gitId":"cheekean5848"},"content":"4.  MedBook deletes the patient","lastModifiedDate":"2022-03-15"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"clement0010"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-03-06"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"clement0010"},"content":"- 3a. 3a. The given NRIC is invalid.","lastModifiedDate":"2022-03-06"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"clement0010"},"content":"  - 3a1. MedBook shows an error message.","lastModifiedDate":"2022-03-06"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"clement0010"},"content":"\u003c!-- View a Patientâ€™s Medical Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":442,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":443,"author":{"gitId":"clement0010"},"content":"\u003c!-- Create a Patientâ€™s Medical Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":444,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":445,"author":{"gitId":"clement0010"},"content":"\u003c!-- Delete a Patientâ€™s Medical Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":446,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":447,"author":{"gitId":"clement0010"},"content":"\u003c!-- View a Patientâ€™s Consultations Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":448,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":449,"author":{"gitId":"clement0010"},"content":"\u003c!-- Create a Patientâ€™s Consultations Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":450,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":451,"author":{"gitId":"clement0010"},"content":"\u003c!-- Delete a Patientâ€™s Consultations Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":453,"author":{"gitId":"clement0010"},"content":"\u003c!-- View a Patientâ€™s Prescriptions Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":455,"author":{"gitId":"clement0010"},"content":"\u003c!-- Create a Patientâ€™s Prescriptions Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":457,"author":{"gitId":"clement0010"},"content":"\u003c!-- Delete a Patientâ€™s Prescriptions Information --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":458,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":459,"author":{"gitId":"clement0010"},"content":"\u003c!-- View a Patientâ€™s Tests Result --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":460,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":461,"author":{"gitId":"clement0010"},"content":"\u003c!-- Create a Patientâ€™s Tests Result --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":462,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":463,"author":{"gitId":"clement0010"},"content":"\u003c!-- Delete a Patientâ€™s Tests Result --\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":464,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":465,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":466,"author":{"gitId":"clement0010"},"content":"_{More to be added}_","lastModifiedDate":"2022-03-06"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"cheekean5848"},"content":"1.  Should work on any mainstream OS as long as it has Java 11 or above installed.","lastModifiedDate":"2022-03-06"},{"lineNumber":471,"author":{"gitId":"cheekean5848"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-03-15"},{"lineNumber":472,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"clement0010"},"content":"_{More to be added}_","lastModifiedDate":"2022-03-06"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"clement0010"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-03-06"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":482,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2022-03-25"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":484,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2022-03-25"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":486,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-03-25"},{"lineNumber":487,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2022-03-25"},{"lineNumber":488,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":490,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2022-03-25"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":492,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2022-03-25"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":494,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2022-03-25"},{"lineNumber":495,"author":{"gitId":"clement0010"},"content":"   ","lastModifiedDate":"2022-03-25"},{"lineNumber":496,"author":{"gitId":"clement0010"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-03-25"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":498,"author":{"gitId":"clement0010"},"content":"2. Saving window preferences","lastModifiedDate":"2022-03-25"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2022-03-25"},{"lineNumber":501,"author":{"gitId":"clement0010"},"content":"   ","lastModifiedDate":"2022-03-25"},{"lineNumber":502,"author":{"gitId":"clement0010"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":503,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2022-03-25"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":505,"author":{"gitId":"clement0010"},"content":"3. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2022-03-25"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":507,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2022-03-25"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2022-03-25"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-03-25"},{"lineNumber":512,"author":{"gitId":"clement0010"},"content":"   ","lastModifiedDate":"2022-03-25"},{"lineNumber":513,"author":{"gitId":"clement0010"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2022-03-25"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":516,"author":{"gitId":"clement0010"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-03-25"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":519,"author":{"gitId":"clement0010"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2022-03-25"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":522,"author":{"gitId":"clement0010"},"content":"2. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2022-03-25"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2022-03-25"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2022-03-25"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2022-03-25"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":530,"author":{"gitId":"clement0010"},"content":"2. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"cheekean5848":44,"sibinhho99-nus":11,"clement0010":143,"juslam19":34,"-":273,"joey-chance":25}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"\u003cimg src \u003d \"images/user-guide/icon.png\" width \u003d \"250\" alt\u003d\"Unable to load image! Try again","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"later.\"\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"## **Table of Contents**","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"  - [Requirement](#requirement)","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"  - [Setup](#setup)","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"- [Features](#features)","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Viewing Help: `help`](#viewing-help-help)","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Adding a Patient: `add`](#adding-a-patient-add)","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Listing all Patients: `view`](#listing-all-patients-view)","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Deleting any Entry: `delete`](#deleting-any-entry-delete)","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"  - [Adding Contact Information: `add t/contact`](#adding-contact-information-add-tcontact)","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"  - [Viewing Contact Information: `view t/contact`](#viewing-contact-information-view-tcontact)","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"  - [Adding Medical Information: `add t/medical`](#adding-medical-information-add-tmedical)","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Viewing Medical Information: `view t/medical`](#viewing-medical-information-view-tmedical)","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"  - [Editing Medical Information: `edit`](#editing-medical-information-edit)","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"  - [Adding Consultation Information: `add t/consultation`](#adding-consultation-information-add-tconsultation)","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"  - [Viewing Past Consultations: `view t/consultation`](#viewing-past-consultations-view-tconsultation)","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"  - [Adding Prescription: `add t/prescription`](#adding-prescription-add-tprescription)","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"  - [Viewing Prescription: `view t/prescription`](#viewing-prescription-view-tprescription)","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"  - [Adding Test Result: `add t/test`](#adding-test-result-add-ttest)","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"  - [Viewing Test Result: `view t/test`](#viewing-test-result-view-ttest)","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"### Requirement","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"- Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"- Download the latest `medbook.jar` from [here](https://github.com/AY2122S2-CS2103T-T11-1/tp/releases).","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"### Setup","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"1. Copy the file to the folder you want to use as the home folder for your MedBook.","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"2. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"3. Type the command in the command box and press Enter to execute it. e.g. typing help and pressing Enter will open the help window. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"* Items with `â€¦`  after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"  e.g. `[t/TAG]â€¦ ` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"### Viewing Help: `help`","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" alt\u003d\"Unable to load image! Try again later.\"\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"### Adding a Patient: `add`","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"Adds a patient to MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"Format: `add i/NRIC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...`","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"* `add i/S1234567L n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"### Listing all Patients: `view`","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"Shows a list of patients in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"cheekean5848"},"content":"Format: `view`","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"### Deleting any Entry: `delete`","lastModifiedDate":"2022-03-27"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"Deletes a specified entry (patient, contact, medical information,...) from MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"* We can only delete the entry only if the display panel is displaying the entry.","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"* The index refers to the index number shown in the displayed list.","lastModifiedDate":"2022-03-27"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"* The index must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"* `view t/prescription i/S1234567L` followed by `delete 2` deletes the second prescription of the patient displayed on the screen.","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"* `view` followed by `delete 1` deletes the first patient displayed on the screen.","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"cheekean5848"},"content":"### Adding Contact Information: `add t/contact`","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"Adds a patient\u0027s emergency contact to MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"cheekean5848"},"content":"Format: `add t/contact i/NRIC n/NAME r/RELATIONSHIP p/PHONE_NUMBER e/EMAIL a/ADDRESS`","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"* `add t/contact i/S1234567L n/Rihanna r/Mother p/80008000 e/rihanna@gmail.com a/COM1`","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"cheekean5848"},"content":"### Viewing Contact Information: `view t/contact`","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"sibinhho99-nus"},"content":"Views a patientâ€™s emergency contacts from MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":123,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"cheekean5848"},"content":"Format: `view t/contact i/NRIC`","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"cheekean5848"},"content":"* `/view t/contact i/S1234567L`","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"cheekean5848"},"content":"### Adding Medical Information: `add t/medical`","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"sibinhho99-nus"},"content":"Adds a patient\u0027s medical information to MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"Format: `add t/medical i/NRIC [a/AGE] [bt/BLOOD_TYPE] [md/MEDICATION] [ht/HEIGHT] [wt/WEIGHT]","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"  [il/ILLNESSES] [su/SURGERIES] [fh/FAMILY_HISTORY] [ih/IMMUNIZATION_HISTORY] [gd/GENDER] [et/ETHNICITY]`","lastModifiedDate":"2022-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"Examples:","lastModifiedDate":"2022-03-06"},{"lineNumber":136,"author":{"gitId":"cheekean5848"},"content":"* `add t/medical i/S1234567L bt/O ht/185 cm`","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"### Viewing Medical Information: `view t/medical`","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"Displays medical information of a patient from MedBook. If no NRIC is specified, displays all medical information entries.","lastModifiedDate":"2022-03-27"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"Format:  `view t/medical [i/NRIC]`","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"* `view t/medical`","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"cheekean5848"},"content":"* `view t/medical i/S1234567L`","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"### Editing Medical Information: `edit`","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"Edits an existing medical information entry in MedBook when a list of medical information entries is being displayed.","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"Format:  `edit INDEX [i/NRIC] [a/AGE] [bt/BLOOD_TYPE] [md/MEDICATION] [ht/HEIGHT] [wt/WEIGHT]","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"sibinhho99-nus"},"content":"[il/ILLNESSES] [su/SURGERIES] [fh/FAMILY_HISTORY] [ih/IMMUNIZATION_HISTORY] [gd/GENDER] [et/ETHNICITY]`","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"* `view t/medical` followed by `edit 1 i/S1234567L bt/B` updates NRIC and blood type of first medical information entry displayed on the screen.","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"cheekean5848"},"content":"### Adding Consultation Information: `add t/consultation`","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"cheekean5848"},"content":"Adds a consultation report of a patient to MedBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"Format: `add t/consultation i/NRIC dt/DATE tm/TIME n/NOTES`","lastModifiedDate":"2022-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-03-06"},{"lineNumber":165,"author":{"gitId":"cheekean5848"},"content":"* `add t/consultation i/S1234567L dt/2021-09-15 tm/18-00 n/Inflammation in the throat and windpipe, short and shallow breath, laboured breathing. Most likely has Upper Respiratory Infection.`","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"cheekean5848"},"content":"### Viewing Past Consultations: `view t/consultation`","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"Views all past consultations of a patient in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"cheekean5848"},"content":"Format: `view t/consultation i/NRIC`","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"cheekean5848"},"content":"* `view t/consultation i/S1234567L`","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"cheekean5848"},"content":"### Adding Prescription: `add t/prescription`","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"sibinhho99-nus"},"content":"Adds a medical prescription of a patient in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"cheekean5848"},"content":"Format: `add t/prescription i/NRIC n/DRUG_NAME dt/DATE s/INSTRUCTION`","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"cheekean5848"},"content":"* `add t/prescription i/S1234567L n/Amoxicillin dt/2021-09-15 s/2 tablets after meal everyday.`","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"cheekean5848"},"content":"### Viewing Prescription: `view t/prescription`","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"sibinhho99-nus"},"content":"Views a medical prescription of a patient in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"cheekean5848"},"content":"Format: `view t/prescription i/NRIC`","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"cheekean5848"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"cheekean5848"},"content":"* `view t/prescription i/S1234567L`","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"cheekean5848"},"content":"### Adding Test Result: `add t/test`","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"sibinhho99-nus"},"content":"Adds a test result taken by a patient in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"cheekean5848"},"content":"Format: `add t/test i/NRIC dt/DATE mt/MEDICAL_TEST r/RESULT`","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"cheekean5848"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"cheekean5848"},"content":"* `add t/test i/S1234567L dt/2019-09-15 mt/CT Scan r/Brain Cancer`","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"cheekean5848"},"content":"### Viewing Test Result: `view t/test`","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"sibinhho99-nus"},"content":"Views all the test results taken by a patient in MedBook.","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"cheekean5848"},"content":"Format: `view t/test i/NRIC`","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"cheekean5848"},"content":"Examples:","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"cheekean5848"},"content":"* `view t/test i/S1234567L`","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":213,"author":{"gitId":"clement0010"},"content":"## FAQ","lastModifiedDate":"2022-03-06"},{"lineNumber":214,"author":{"gitId":"joey-chance"},"content":"Q: How do I transfer my data to another Computer?","lastModifiedDate":"2022-03-06"},{"lineNumber":215,"author":{"gitId":"joey-chance"},"content":"A: Install the app on the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MedBook folder.","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"clement0010"},"content":"## Command Summary","lastModifiedDate":"2022-03-06"},{"lineNumber":218,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":219,"author":{"gitId":"joey-chance"},"content":"| Action | Format Example |","lastModifiedDate":"2022-03-06"},{"lineNumber":220,"author":{"gitId":"joey-chance"},"content":"| :----- | :------------- |","lastModifiedDate":"2022-03-07"},{"lineNumber":221,"author":{"gitId":"sibinhho99-nus"},"content":"| View Help | `help` |","lastModifiedDate":"2022-03-27"},{"lineNumber":222,"author":{"gitId":"sibinhho99-nus"},"content":"| Add a Patient | `add i/NRIC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...` |","lastModifiedDate":"2022-03-27"},{"lineNumber":223,"author":{"gitId":"sibinhho99-nus"},"content":"| List all Patients | `view` |","lastModifiedDate":"2022-03-27"},{"lineNumber":224,"author":{"gitId":"sibinhho99-nus"},"content":"| Delete any Entry | `delete INDEX` |","lastModifiedDate":"2022-03-27"},{"lineNumber":225,"author":{"gitId":"sibinhho99-nus"},"content":"| Add Contact Information | `add t/contact i/NRIC n/NAME r/RELATIONSHIP p/PHONE_NUMBER e/EMAIL a/ADDRESS` |","lastModifiedDate":"2022-03-27"},{"lineNumber":226,"author":{"gitId":"sibinhho99-nus"},"content":"| View Contact Information | `view t/contact i/NRIC` |","lastModifiedDate":"2022-03-27"},{"lineNumber":227,"author":{"gitId":"sibinhho99-nus"},"content":"| Add Medical Information | `add t/medical i/NRIC [a/AGE] [bt/BLOOD_TYPE] [md/MEDICATION] [ht/HEIGHT] [wt/WEIGHT] [il/ILLNESSES] [su/SURGERIES] [fh/FAMILY_HISTORY] [ih/IMMUNIZATION_HISTORY] [gd/GENDER] [et/ETHNICITY]` |","lastModifiedDate":"2022-03-27"},{"lineNumber":228,"author":{"gitId":"sibinhho99-nus"},"content":"| View Medical Information | `view t/medical [i/NRIC]` |","lastModifiedDate":"2022-03-27"},{"lineNumber":229,"author":{"gitId":"sibinhho99-nus"},"content":"| Edit Medical Information | `edit INDEX [i/NRIC] [a/AGE] [bt/BLOOD_TYPE] [md/MEDICATION] [ht/HEIGHT] [wt/WEIGHT] [il/ILLNESSES] [su/SURGERIES] [fh/FAMILY_HISTORY] [ih/IMMUNIZATION_HISTORY] [gd/GENDER] [et/ETHNICITY]` |","lastModifiedDate":"2022-03-27"},{"lineNumber":230,"author":{"gitId":"sibinhho99-nus"},"content":"| Add Consultation Information | `add t/consultation i/NRIC dt/DATE tm/TIME n/NOTES` |","lastModifiedDate":"2022-03-27"},{"lineNumber":231,"author":{"gitId":"sibinhho99-nus"},"content":"| View Past Consultations | `view t/consultation i/NRIC` |","lastModifiedDate":"2022-03-27"},{"lineNumber":232,"author":{"gitId":"sibinhho99-nus"},"content":"| Add Prescription | `add t/prescription i/NRIC n/DRUG_NAME dt/DATE s/INSTRUCTION` |","lastModifiedDate":"2022-03-27"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"| View Prescription | `view t/prescription i/NRIC` |","lastModifiedDate":"2022-03-27"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"| Add Test Result | `add t/test i/NRIC dt/DATE mt/MEDICAL_TEST r/RESULT` |","lastModifiedDate":"2022-03-27"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"| View Test Result| `view t/test i/NRIC` |","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"cheekean5848":40,"sibinhho99-nus":60,"clement0010":34,"-":94,"joey-chance":7}},{"path":"docs/diagrams/AddMedicalActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"(*) --\u003e \"User enters add t/medical command\"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"if \"NRIC exists in MedBook\" then","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"  --\u003e if \"No medical record found for this patient\" then","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"        --\u003e \"Add medical information\"","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"        --\u003e \"Stores it in MedBook\"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"        --\u003e (*)","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"      else","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"        --\u003e \"Duplicate found, don\u0027t add\"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"        --\u003e [Ending Process] (*)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"else","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"  --\u003e \"No patient found, don\u0027t add\"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"  --\u003e [Ending Process] (*)","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joey-chance":14}},{"path":"docs/diagrams/AllAddCommandsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"package Logic {","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"Class AddConsultationCommand {","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"    {method} CommandResult execute(Model)","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"Class AddContactCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"Class AddMedicalCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"Class AddPrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"Class AddTestResultCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"Class LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"AddConsultationCommand -up-|\u003e Command","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"AddContactCommand -up-|\u003e Command","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"AddMedicalCommand -up-|\u003e Command","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"AddPrescriptionCommand -up-|\u003e Command","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"AddTestResultCommand -up-|\u003e Command","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joey-chance":31}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"participant \"CommandType\" as CommandType LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"participant \":DeletePrescriptionCommandParser\" as DeletePrescriptionCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"participant \"d:DeletePrescriptionCommand\" as DeletePrescriptionCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"AddressBookParser -\u003e CommandType : parseDeleteCommandType(\"delete 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"activate CommandType","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"create DeletePrescriptionCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"CommandType -\u003e DeletePrescriptionCommandParser : parse(\"delete 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"activate DeletePrescriptionCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"create DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommandParser -\u003e DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"activate DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommand --\u003e DeletePrescriptionCommandParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"deactivate DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommandParser --\u003e CommandType : d","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"deactivate DeletePrescriptionCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommandParser -[hidden]-\u003e CommandType","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"destroy DeletePrescriptionCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"CommandType --\u003e AddressBookParser : d","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"deactivate CommandType","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"LogicManager -\u003e DeletePrescriptionCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"activate DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommand -\u003e Model : deletePrescription(1)","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"Model --\u003e DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"CommandResult --\u003e DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"DeletePrescriptionCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"deactivate DeletePrescriptionCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"cheekean5848":27,"-":42}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"title: MedBook","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"### Overview","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s information. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 emergency contacts, medical information and visits through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"* For the detailed documentation of this project, see the **[Medbook Product Website](https://ay2122s2-cs2103t-t11-1.github.io/tp/)**.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"### Acknowledgement","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sibinhho99-nus":1,"clement0010":9,"-":11}},{"path":"docs/team/cheekean5848.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"layout: page","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"title: Chee Kean\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"### Project: MedBook","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s medical details and scheduling appointments. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 medical information, billing and appointments through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"* **Code contributed**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"* **Enhancement implemented**:","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"* **Contributions to the UG**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"* **Contributions to the DG**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"cheekean5848":20}},{"path":"docs/team/clement0010.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"layout: page","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"title: Clement Tee\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"### Project: MedBook","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"MedBook is a **desktop app fir health monitoring system for healthcare professionals via a Command Line Interface** (","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"CLI)  that simplifies tracking a patientâ€™s medical details and scheduling appointments. MedBook delivers a seamless","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"workflow for doctors and healthcare professionals to search for or update patients\u0027 medical information, billing and","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"appointments through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dclement\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zA\u003dclement0010\u0026zR\u003dAY2122S2-CS2103T-T11-1%2Ftp%5Bmaster%5D\u0026zACS\u003dNaN\u0026zS\u003d2022-02-18\u0026zFS\u003dclement\u0026zU\u003d2022-03-06\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse\u0026tabAuthor\u003dclement0010\u0026tabRepo\u003dAY2122S2-CS2103T-T11-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"* **Project management**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"* **Documentation**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"* **Community**: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"* **Tools**: to be added soon","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"clement0010":26}},{"path":"docs/team/joey-chance.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"layout: page","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"title: Joey Chance\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"# Overview","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s medical details and scheduling appointments. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 medical information, billing and appointments through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"# Summary of Contributions","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"## Code Contributed: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"## Enhancements Implemented: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"## Contributions to the UG: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"## Contributions to the DG: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"## Contributions to Team-Based Tasks: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"## Review/mentoring Contributions: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"## Contributions Beyond the Project Team: to be added soon","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"joey-chance":14}},{"path":"docs/team/juslam19.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"---","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"layout: page","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"title: Justin Lam\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"---","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"# Overview","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s medical details and scheduling appointments. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 medical information, billing and appointments through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"# Summary of Contributions","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"## Code Contributed: to be added soon","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"## Enhancements Implemented: to be added soon","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"## Contributions to the UG: Entire \"Consultation\" section","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"## Contributions to the DG: Entire \"View\" Section","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"## Contributions to Team-Based Tasks: to be added soon","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"## Review/mentoring Contributions: to be added soon","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"## Contributions Beyond the Project Team: to be added soon","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"juslam19":14}},{"path":"docs/team/sibinhho99-nus.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"layout: page","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"title: Si Binh\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"---","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"# Overview","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"MedBook is a health monitoring system for healthcare professionals that simplifies tracking a patientâ€™s information. MedBook delivers a seamless workflow for doctors and healthcare professionals to search for or update patients\u0027 emergency contacts, medical information and visits through a simple and easy-to-use platform.","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"# Summary of Contributions","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"## Code Contributed: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"## Enhancements Implemented: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"## Contributions to the UG: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"## Contributions to the DG: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"## Contributions to Team-Based Tasks: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"## Review/mentoring Contributions: to be added soon","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"## Contributions Beyond the Project Team: to be added soon","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"sibinhho99-nus":14}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"            + \": Edits the remark of the patient identified \"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"cheekean5848"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"cheekean5848"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of patient data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the patientâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a patient.","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"cheekean5848"},"content":"Create a new `Remark` in `seedu.address.model.patient`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"cheekean5848"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each patient.","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"cheekean5848"},"content":"Simply add the following to [`seedu.address.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"cheekean5848"},"content":"public PersonCard(Person patient, int displayedIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"cheekean5848"},"content":"    remark.setText(patient.getRemark().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"cheekean5848"},"content":"        Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"cheekean5848"},"content":"        Person editedPatient \u003d new Person(","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"cheekean5848"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"cheekean5848"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"cheekean5848"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"cheekean5848"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"cheekean5848"},"content":"    private String generateSuccessMessage(Person patientToEdit) {","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"cheekean5848"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2022-03-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"cheekean5848":20,"-":381}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"The `address` field in `Patient` is actually an instance of the `seedu.address.model.patient.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Letâ€™s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"  \"patients\": [ {","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheekean5848":1,"juslam19":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"cheekean5848"},"content":"       Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"cheekean5848"},"content":"       Person editedPatient \u003d createEditedPerson(patientToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"cheekean5848"},"content":"       if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"cheekean5848"},"content":"       model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"cheekean5848"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"cheekean5848"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the patient data.","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"cheekean5848"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ patients.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"cheekean5848"},"content":"     FYI, The \u0027filtered list\u0027 is the list of patients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the patients so that the user can see the edited patient along with all other patients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"cheekean5848"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of patients is being tracked.","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"cheekean5848"},"content":"        patients.addAll(","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheekean5848":10,"-":291}},{"path":"gradle.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"org.gradle.parallel\u003dfalse","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"org.gradle.jvmargs\u003d-XX:MaxMetaspaceSize\u003d512m -XX:+HeapDumpOnOutOfMemoryError -Xmx1024m -Dfile.encoding\u003dutf-8","lastModifiedDate":"2018-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-04-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"# TODO: This is a workaround for a JDK11 bug which causes test coverage upload to fail.","lastModifiedDate":"2019-04-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Remove it when https://bugs.openjdk.java.net/browse/JDK-8221253 is fixed.","lastModifiedDate":"2019-04-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"systemProp.jdk.tls.client.protocols\u003d\"TLSv1,TLSv1.1,TLSv1.2\"","lastModifiedDate":"2019-04-23"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"systemProp.http.proxyHost\u003d[PROXY SERVER] systemProp.http.proxyPort\u003d[PROXY PORT]","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"-":6,"joey-chance":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"juslam19":1,"-":183}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONTACTS_LISTED_OVERVIEW \u003d \"%1$d contacts listed! Belongs to: %2$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSULTATION_LISTED_OVERVIEW \u003d \"%1$d consultations listed! Belongs to: %2$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_MEDICALS_LISTED_NO_NRIC \u003d \"%1$d medical information listed!\";","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_MEDICALS_LISTED_OVERVIEW \u003d \"%1$d medical information listed! Belongs to: %2$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_PRESCRIPTIONS_LISTED_OVERVIEW \u003d \"%1$d prescription listed! Belongs to: %2$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"            \"The contact index provided is invalid\";","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"            \"The prescription index provided is invalid\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_TEST_RESULTS_LISTED_OVERVIEW \u003d \"%1$d test results listed! Belongs to: %2$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_DUPLICATE_CONSULTATION \u003d \"Duplicate consultation found!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_INVALID_TEST_RESULT_INDEX \u003d \"The test result index provided is invalid\";","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_INVALID_MEDICAL_INFORMATION_INDEX \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"            \"The medical information index provided is invalid\";","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_INVALID_CONSULTATION_INDEX \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"            \"The consultation index provided is invalid\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":3,"sibinhho99-nus":4,"clement0010":2,"juslam19":5,"-":12,"joey-chance":2}},{"path":"src/main/java/seedu/address/commons/util/history/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.commons.util.history;","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import java.util.List;","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"public class CommandHistory {","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"    private static final int LIMIT \u003d 50;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"    private List\u003cString\u003e history;","lastModifiedDate":"2022-03-26"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"    private int pointer;","lastModifiedDate":"2022-03-26"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"     * Construct a {@code CommandHistory}","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"    public CommandHistory() {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"        pointer \u003d 0;","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"     * Save the @code text into command history.","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"     * @param text The command to be saved","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"     * */","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"    public void save(String text) {","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"        if (history.size() \u003d\u003d LIMIT) {","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"            history.remove(0);","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"        history.add(text);","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"        pointer \u003d history.size();","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"     * Navigate to previous command history by one step.","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"     * */","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    public String previous() {","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"        if (history.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"            return \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        } else if (pointer \u003d\u003d 0) {","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"            return history.get(pointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"            pointer--;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"            return history.get(pointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"     * Navigate to next command history by one step.","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"     * */","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"    public String next() {","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"        if (pointer \u003d\u003d history.size() - 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"            pointer++;","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"            return \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        } else if (pointer \u003e history.size() - 1) {","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"            return \"\";","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"            pointer++;","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"            return history.get(pointer);","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"cheekean5848":58}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    /** Returns an unmodifiable view of the filtered list of prescriptions */","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    /** Returns an unmodifiable view of the filtered list of contacts */","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    /** Returns an unmodifiable view of the filtered list of consultations */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cConsultation\u003e getFilteredConsultationList();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"    /** Returns an unmodifiable view of the filtered list of medicals */","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    ObservableList\u003cMedical\u003e getFilteredMedicalList();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    /** Returns an unmodifiable view of the filtered list of test results */","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"    ObservableList\u003cTestResult\u003e getFilteredTestResultList();","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheekean5848":3,"sibinhho99-nus":2,"juslam19":13,"-":50,"joey-chance":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"        return model.getFilteredContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"        return model.getFilteredConsultationList();","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"    public ObservableList\u003cMedical\u003e getFilteredMedicalList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"        return model.getFilteredMedicalList();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"cheekean5848"},"content":"        return model.getFilteredPrescriptionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joey-chance"},"content":"    public ObservableList\u003cTestResult\u003e getFilteredTestResultList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joey-chance"},"content":"        return model.getFilteredTestResultList();","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheekean5848":8,"sibinhho99-nus":5,"juslam19":14,"-":79,"joey-chance":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":" * Adds a person to the Medbook.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"            + PREFIX_TAG + \"diabetic \"","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"            + PREFIX_TAG + \"hypertension\";","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    private final Patient toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"        CommandType.setViewCommandType(CommandType.DEFAULT);","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":6,"clement0010":6,"-":57,"joey-chance":1}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    /** The application should show relevant view to the user. */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    private CommandType commandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"        this.commandType \u003d CommandType.DEFAULT;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        this.commandType \u003d CommandType.DEFAULT;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"     * {@code commandType} and other fields set to their default value.","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    public CommandResult(String feedbackToUser, CommandType commandType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"    public CommandType getCommandType() {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"        return commandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clement0010":18,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/CommandType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.consultations.AddConsultationCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.consultations.DeleteConsultationCommandParser;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.consultations.EditConsultationCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.consultations.ViewConsultationCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.contact.AddContactCommandParser;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.contact.DeleteContactCommandParser;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.contact.ViewContactCommandParser;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.medical.AddMedicalCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.medical.DeleteMedicalCommandParser;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.medical.EditMedicalCommandParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.medical.ViewMedicalCommandParser;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.prescription.AddPrescriptionCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.prescription.DeletePrescriptionCommandParser;","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.prescription.EditPrescriptionCommandParser;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.prescription.ViewPrescriptionCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.testresult.AddTestResultCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.testresult.DeleteTestResultCommandParser;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.testresult.EditTestResultCommandParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.testresult.FindTestResultCommandParser;","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.testresult.ViewTestResultCommandParser;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"public enum CommandType {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    DEFAULT, CONTACT, MEDICAL, CONSULTATION, PRESCRIPTION, TEST;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Command type should be either contact, medical, \"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"            + \"consultation, prescription or test\";","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"    private static CommandType viewCommandType \u003d DEFAULT;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    private static String getFirstPrefixType(String text) {","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"        int index \u003d text.indexOf(\u0027 \u0027);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"        if (index \u003e -1) { // Check if there is more than one word.","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"            return text.substring(0, index).trim(); // Extract first word.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"        } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"            return text; // Text is the first word itself.","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"    public static void setViewCommandType(CommandType commandType) {","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        viewCommandType \u003d commandType;","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"     * Parses {@code String commandType} into a {@code CommandType}.","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"    public static CommandType parseCommandType(String commandType) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        requireNonNull(commandType);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"        String trimmedCommandType \u003d getFirstPrefixType(commandType.trim());","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        switch (trimmedCommandType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        case \"contact\":","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"            return CONTACT;","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"        case \"medical\":","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"            return MEDICAL;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"        case \"consultation\":","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"            return CONSULTATION;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"        case \"prescription\":","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"            return PRESCRIPTION;","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"        case \"test\":","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"            return TEST;","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"     * Returns command related to adding information to patients in Medbook.","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"     * @param commandType user input command type","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"     * @param arguments   user input arguments","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"    public static Command parseAddCommandType(String commandType, String arguments) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"        requireNonNull(commandType);","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"        CommandType parsedCommandType \u003d parseCommandType(commandType);","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"        switch(parsedCommandType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d CONTACT;","lastModifiedDate":"2022-03-18"},{"lineNumber":85,"author":{"gitId":"juslam19"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"juslam19"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d MEDICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"            return new AddMedicalCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"            viewCommandType \u003d CONSULTATION;","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"            return new AddConsultationCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d PRESCRIPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":94,"author":{"gitId":"cheekean5848"},"content":"            return new AddPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"        case TEST:","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d TEST;","lastModifiedDate":"2022-03-18"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"            return new AddTestResultCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"joey-chance"},"content":"     * Returns command related to viewing information to patients in Medbook.","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"     * @param commandType user input command type","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"     * @param arguments user input arguments","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"juslam19"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"juslam19"},"content":"    public static Command parseViewCommandType(String commandType, String arguments) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"juslam19"},"content":"        requireNonNull(commandType);","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"juslam19"},"content":"        CommandType parsedCommandType \u003d parseCommandType(commandType);","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"juslam19"},"content":"        switch(parsedCommandType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d CONTACT;","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"            return new ViewContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d MEDICAL;","lastModifiedDate":"2022-03-18"},{"lineNumber":120,"author":{"gitId":"sibinhho99-nus"},"content":"            return new ViewMedicalCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"            viewCommandType \u003d CONSULTATION;","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"            return new ViewConsultationCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d PRESCRIPTION;","lastModifiedDate":"2022-03-18"},{"lineNumber":126,"author":{"gitId":"cheekean5848"},"content":"            return new ViewPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"juslam19"},"content":"        case TEST:","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"            viewCommandType \u003d TEST;","lastModifiedDate":"2022-03-18"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"            return new ViewTestResultCommandParser().parse(arguments);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"juslam19"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns command related to editing information in MedBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param arguments user input arguments","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Command parseEditCommandType(String arguments) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"sibinhho99-nus"},"content":"        switch (viewCommandType) {","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"sibinhho99-nus"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(\"To be implemented\");","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"sibinhho99-nus"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"sibinhho99-nus"},"content":"            return new EditMedicalCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"juslam19"},"content":"            return new EditConsultationCommandParser().parse(arguments);","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"cheekean5848"},"content":"            return new EditPrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"        case TEST:","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"joey-chance"},"content":"            return new EditTestResultCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"        default:","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"joey-chance"},"content":"     * Returns command related to deleting information to patients in MedBook.","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"juslam19"},"content":"     * @param arguments user input arguments","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"juslam19"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"cheekean5848"},"content":"    public static Command parseDeleteCommandType(String arguments) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":166,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":167,"author":{"gitId":"cheekean5848"},"content":"        switch (viewCommandType) {","lastModifiedDate":"2022-03-18"},{"lineNumber":168,"author":{"gitId":"juslam19"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"clement0010"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"juslam19"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"            return new DeleteMedicalCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":172,"author":{"gitId":"juslam19"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"juslam19"},"content":"            return new DeleteConsultationCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"juslam19"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"cheekean5848"},"content":"            return new DeletePrescriptionCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"joey-chance"},"content":"        case TEST:","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"joey-chance"},"content":"            return new DeleteTestResultCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"joey-chance"},"content":"        default:","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"cheekean5848"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":184,"author":{"gitId":"joey-chance"},"content":"     * Returns command related to finding information of patients in MedBook.","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"joey-chance"},"content":"     * @param arguments user input arguments","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"joey-chance"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"joey-chance"},"content":"    public static Command parseFindCommandType(String arguments) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"joey-chance"},"content":"        switch (viewCommandType) {","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"joey-chance"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(\"To be implemented\");","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"joey-chance"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(\"To be implemented\");","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"joey-chance"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(\"To be implemented\");","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"joey-chance"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(\"To be implemented\");","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"joey-chance"},"content":"        case TEST:","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"joey-chance"},"content":"            return new FindTestResultCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"joey-chance"},"content":"        default:","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"joey-chance"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":25,"sibinhho99-nus":29,"clement0010":3,"juslam19":107,"joey-chance":42}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        Patient patientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        model.deletePerson(patientToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete));","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"cheekean5848"},"content":"        Patient patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"        Patient editedPatient \u003d createEditedPerson(patientToEdit, editPersonDescriptor);","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"cheekean5848"},"content":"        if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"    private static Patient createEditedPerson(Patient patientToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"cheekean5848"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(patientToEdit.getNric());","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"cheekean5848"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"cheekean5848"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"cheekean5848"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"        return new Patient(updatedNric, updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"        private Nric nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"clement0010"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"clement0010"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2022-03-13"},{"lineNumber":170,"author":{"gitId":"clement0010"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":171,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":172,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":173,"author":{"gitId":"clement0010"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2022-03-13"},{"lineNumber":174,"author":{"gitId":"clement0010"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2022-03-13"},{"lineNumber":175,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":176,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"clement0010"},"content":"                    \u0026\u0026 getNric().equals(e.getNric())","lastModifiedDate":"2022-03-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cheekean5848":18,"clement0010":16,"-":207}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting MedBook as requested ...\";","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cheekean5848":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cheekean5848":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"        CommandType.setViewCommandType(CommandType.DEFAULT);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":3,"clement0010":1,"-":21,"joey-chance":1}},{"path":"src/main/java/seedu/address/logic/commands/ViewedNric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"public class ViewedNric {","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"    private static Nric viewedNric \u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"    public static Nric getViewedNric() {","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"        return viewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"    public static void setViewedNric(Nric nric) {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"        viewedNric \u003d nric;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"joey-chance":15}},{"path":"src/main/java/seedu/address/logic/commands/consultation/AddConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationWithPredicates;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"public class AddConsultationCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"    public static final String COMMAND_WORD \u003d \"add \";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONSULTATION;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a consultation of patient in Medbook. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TYPE + \"consultation \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NRIC + \"OWNER_NRIC \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"            + PREFIX_FEE + \"FEE \"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NOTES + \"NOTES \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TYPE + \"consultation \"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DATE + \"19-09-2020 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TIME + \"19-00 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DIAGNOSIS + \"Upper respiratory infection. Patient was having cough, sneezing fits. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"            + PREFIX_FEE + \"54.00 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NOTES + \"Should get more cough drops. \";","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New consultation added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_DUPLICATE_CONSULTATION \u003d \"This consultation already \"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"                                                                + \"exists in patient consultation list\";","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_MISSING_PATIENT \u003d \"This patient does not exists in Medbook\";","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    // Identifier","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"    private final Nric ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"    private final Consultation toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"     * Creates an AddConsultationCommand to add the specified {@code Consultation}","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"    public AddConsultationCommand(Nric ownerNric, Consultation consultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"        requireNonNull(ownerNric);","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"        requireNonNull(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"        toAdd \u003d consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"        if (!model.hasPerson(new NricPredicate(ownerNric))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"        if (model.hasConsultation(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONSULTATION);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"        model.addConsultation(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"        model.updateFilteredConsultationList(new ConsultationWithPredicates(ownerNric));","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"juslam19":82}},{"path":"src/main/java/seedu/address/logic/commands/consultation/DeleteConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands.consultation;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":" * Lists all consultation in the address book to the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"public class DeleteConsultationCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    public static final String COMMAND_WORD \u003d \"delete \";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONSULTATION;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"            + \": Deletes the consultation on the filtered consultation list that \"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"            + \"matches the filtered list index.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"            + PREFIX_INDEX + \"1 \";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSULTATION_DELETE_OVERVIEW \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"            \"Delete consultation successful: index %1$s \\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"            + \"Remaining consultations in filtered list shown below.\";","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_INVALID_CONSULTATION_INDEX \u003d","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"            \"The consultation index provided is invalid\";","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"     * Creates an ViewConsultationCommand to view the specified {@code Patient}","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    public DeleteConsultationCommand(Index targetIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"        List\u003cConsultation\u003e lastShownList \u003d model.getFilteredConsultationList();","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"                    String.format(","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"                            MESSAGE_CONSULTATION_DELETE_OVERVIEW, targetIndex),","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"                    COMMAND_TYPE);","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"        Consultation consultationToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"        model.deleteConsultation(consultationToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"            return new CommandResult(String.format(MESSAGE_CONSULTATION_DELETE_OVERVIEW, targetIndex.getOneBased()),","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"                    CommandType.DEFAULT);","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(String.format(MESSAGE_CONSULTATION_DELETE_OVERVIEW, targetIndex.getOneBased()),","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"                || (other instanceof DeleteConsultationCommand // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteConsultationCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"clement0010":5,"juslam19":70}},{"path":"src/main/java/seedu/address/logic/commands/consultation/EditConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands.consultation;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Time;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":" * Edits the details of an existing consultation in MedBook.","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"public class EditConsultationCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONSULTATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"            + \": Edits the details of the consultation identified \"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"            + \"by the index number used in the displayed consultation list. \"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"            + \"Parameters besides index are OPTIONAL.\"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"            + \"INDEX \"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NRIC + \"OWNER_NRIC \"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DIAGNOSIS + \"DIAGNOSIS \"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"            + PREFIX_FEE + \"FEE \"","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NOTES + \"NOTES \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"            + \"1 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"            + PREFIX_DATE + \"19-09-2020 \"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TIME + \"19-00 \";","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_EDIT_TEST_RESULT_SUCCESS \u003d \"Edited Consultation Information: %1$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"    private final EditConsultationDescriptor editConsultationDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"     * @param targetIndex of the consultation in the filtered consultation list to edit","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"     * @param editConsultationDescriptor details to edit the consultation with","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"    public EditConsultationCommand(Index targetIndex, EditConsultationDescriptor editConsultationDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        this.editConsultationDescriptor \u003d editConsultationDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        List\u003cConsultation\u003e lastShownList \u003d model.getFilteredConsultationList();","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONSULTATION_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"        Consultation consultation \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"        Consultation editedConsultation \u003d createEditedConsultation(consultation, editConsultationDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"        model.setConsultation(consultation, editedConsultation);","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TEST_RESULT_SUCCESS, editedConsultation), COMMAND_TYPE);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"juslam19"},"content":"    private static Consultation createEditedConsultation(Consultation consultation,","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"juslam19"},"content":"                                                     EditConsultationDescriptor editConsultationDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"juslam19"},"content":"        assert consultation !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"juslam19"},"content":"        Nric updatedNric \u003d editConsultationDescriptor.getNric().orElse(consultation.getNric());","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"        Date updatedDate \u003d editConsultationDescriptor.getDate().orElse(consultation.getDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"        Time updatedTime \u003d editConsultationDescriptor.getTime().orElse(consultation.getTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"        ConsultationDiagnosis updatedDiagnosis \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.getDiagnosis().orElse(consultation.getDiagnosis());","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"        ConsultationFee updatedFee \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.getFee().orElse(consultation.getFee());","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"juslam19"},"content":"        ConsultationNotes updatedNotes \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.getNotes().orElse(consultation.getNotes());","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"        return new Consultation(updatedNric,","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"juslam19"},"content":"                updatedDate,","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"juslam19"},"content":"                updatedTime,","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"juslam19"},"content":"                updatedDiagnosis,","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"juslam19"},"content":"                updatedFee,","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"                updatedNotes","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"juslam19"},"content":"                || (other instanceof EditConsultationCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 targetIndex.equals(((EditConsultationCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"     * Stores the details to edit the consultation with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"     * corresponding field value of the consultation.","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"    public static class EditConsultationDescriptor {","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"        private Nric nric;","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"        private Date date;","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"        private Time time;","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"        private ConsultationDiagnosis diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"        private ConsultationFee fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"        private ConsultationNotes notes;","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"juslam19"},"content":"        public EditConsultationDescriptor() {}","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"juslam19"},"content":"        /**","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"juslam19"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"juslam19"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"juslam19"},"content":"         */","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"        public EditConsultationDescriptor(EditConsultationDescriptor toCopy) {","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"juslam19"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"juslam19"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"juslam19"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"juslam19"},"content":"            setDiagnosis(toCopy.diagnosis);","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"juslam19"},"content":"            setFee(toCopy.fee);","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"juslam19"},"content":"            setNotes(toCopy.notes);","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"juslam19"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"juslam19"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"juslam19"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"juslam19"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cTime\u003e getTime() {","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"juslam19"},"content":"        public void setTime(Time time) {","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"juslam19"},"content":"            this.time \u003d time;","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cConsultationDiagnosis\u003e getDiagnosis() {","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(diagnosis);","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":171,"author":{"gitId":"juslam19"},"content":"        public void setDiagnosis(ConsultationDiagnosis diagnosis) {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"juslam19"},"content":"            this.diagnosis \u003d diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cConsultationFee\u003e getFee() {","lastModifiedDate":"2022-03-28"},{"lineNumber":176,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(fee);","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":179,"author":{"gitId":"juslam19"},"content":"        public void setFee(ConsultationFee fee) {","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"juslam19"},"content":"            this.fee \u003d fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"juslam19"},"content":"        public Optional\u003cConsultationNotes\u003e getNotes() {","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"juslam19"},"content":"            return Optional.ofNullable(notes);","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"juslam19"},"content":"        public void setNotes(ConsultationNotes notes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"juslam19"},"content":"            this.notes \u003d notes;","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"juslam19"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"juslam19"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"juslam19"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"juslam19"},"content":"                return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"juslam19"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"juslam19"},"content":"            if (!(other instanceof EditCommand.EditPersonDescriptor)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"juslam19"},"content":"                return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"juslam19"},"content":"            // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"juslam19"},"content":"            EditConsultationDescriptor e \u003d (EditConsultationDescriptor) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"juslam19"},"content":"            return getNric().equals(e.getNric())","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"juslam19"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"juslam19"},"content":"                    \u0026\u0026 getTime().equals(e.getTime())","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"juslam19"},"content":"                    \u0026\u0026 getDiagnosis().equals(e.getDiagnosis())","lastModifiedDate":"2022-03-28"},{"lineNumber":210,"author":{"gitId":"juslam19"},"content":"                    \u0026\u0026 getFee().equals(e.getFee())","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"juslam19"},"content":"                    \u0026\u0026 getNotes().equals(e.getNotes());","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"juslam19":214}},{"path":"src/main/java/seedu/address/logic/commands/consultation/ViewConsultationCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands.consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.commands.contact.AddContactCommand.MESSAGE_MISSING_PATIENT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationWithPredicates;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":" * Lists all consultations in the address book to the user.","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"public class ViewConsultationCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    public static final String COMMAND_WORD \u003d \"view \";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONSULTATION;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"            + \": Shows consultations that \"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"            + \"matches the specified owner NRIC, and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"            + \"Parameters: TYPE, OWNER NRIC\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TYPE + \"consultation \"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NRIC + \"S1234567L\";","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    private final Nric ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"     * Creates an ViewConsultationCommand to view the specified {@code Patient}","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"    public ViewConsultationCommand(Nric ownerNric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"        requireNonNull(ownerNric);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        model.updateFilteredConsultationList(new ConsultationWithPredicates(ownerNric));","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        if (!model.hasPerson(new NricPredicate(ownerNric))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        ObservableList\u003cPatient\u003e personList \u003d model.getPersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        String nameAndNric \u003d \"\";","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"        for (Patient patient : personList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"            if (patient.getNric().equals(ownerNric)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"                nameAndNric \u003d patient.getName().toString() + \" / \" + ownerNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"                String.format(Messages.MESSAGE_CONSULTATION_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"                        model.getFilteredConsultationList().size(), nameAndNric),","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"clement0010":1,"juslam19":69}},{"path":"src/main/java/seedu/address/logic/commands/contact/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.commands.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.ContactWithNricPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONTACT;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + PREFIX_TYPE + \"contact\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \": Adds a contact to patient in MedBook. \"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TYPE + \"contact \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NRIC + \"OWNER_NRIC \"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"            + PREFIX_TYPE + \"contact \"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            + PREFIX_NAME + \"John Smith \"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"            + PREFIX_PHONE + \"88888888 \"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"            + PREFIX_EMAIL + \"johns@example.com \"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"            + PREFIX_ADDRESS + \"21 Lower Kent Ridge Road, Singapore 119077 \";","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in patient contact list\";","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_MISSING_PATIENT \u003d \"This patient does not exists in Medbook\";","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    // Identifier","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    private final Nric ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    private final Contact toAdd;","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"     * Creates an AddContactCommand to add the specified {@code Patient}","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"    public AddContactCommand(Nric ownerNric, Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        requireNonNull(ownerNric);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        requireNonNull(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"        toAdd \u003d contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"        if (!model.hasPerson(new NricPredicate(ownerNric))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"        if (model.hasContact(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        model.addContact(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"        model.updateFilteredContactList(new ContactWithNricPredicate(ownerNric));","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), COMMAND_TYPE);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":1,"clement0010":7,"juslam19":67,"joey-chance":3}},{"path":"src/main/java/seedu/address/logic/commands/contact/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.logic.commands.contact;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.util.List;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONTACT;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Deleted contact: %1$s\";","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        Contact contactToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        model.deleteContact(contactToDelete);","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        // Display patient screen when current view list is empty","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"                    CommandType.DEFAULT);","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"clement0010":61}},{"path":"src/main/java/seedu/address/logic/commands/contact/ViewContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.logic.commands.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.contact.AddContactCommand.MESSAGE_MISSING_PATIENT;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.ContactWithNricPredicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"public class ViewContactCommand extends Command {","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.CONTACT;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + PREFIX_TYPE + \"contact \"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \": Lists all contacts whose names contain any of \"","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"            + \"the specified owner NRIC and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"            + \"Parameters: OWNER NRIC\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TYPE + \"contact \" + PREFIX_NRIC + \"S1234567L\";","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    private final Nric ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * Creates an ViewContactCommand to view the specified {@code Patient}","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    public ViewContactCommand(Nric ownerNric) {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        requireNonNull(ownerNric);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        model.updateFilteredContactList(new ContactWithNricPredicate(ownerNric));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        if (!model.hasPerson(new NricPredicate(ownerNric))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"                String.format(Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"                        model.getFilteredContactList().size(), ownerNric),","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":3,"clement0010":49,"joey-chance":5}},{"path":"src/main/java/seedu/address/logic/commands/medical/AddMedicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNICITY;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_HISTORY;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMMUNIZATION_HISTORY;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURGERIES;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.MedicalWithNricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"public class AddMedicalCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.MEDICAL;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds medical information of a patient to MedBook. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_TYPE + \"medical \"","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_BLOODTYPE + \"BLOODTYPE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_MEDICATION + \"MEDICATION \"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ILLNESSES + \"ILLNESSES \"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_SURGERIES + \"SURGERIES \"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_FAMILY_HISTORY + \"FAMILY_HISTORY \"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_IMMUNIZATION_HISTORY + \"IMMUNIZATION_HISTORY \"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ETHNICITY + \"ETHNICITY \"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_TYPE + \"medical \"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_AGE + \"22 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_BLOODTYPE + \"O \"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_MEDICATION + \"Paracetamol 500mg twice a day; Atarvastatin 20mg once a day \"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_HEIGHT + \"185 cm \"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_WEIGHT + \"70 kg \"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ILLNESSES + \"Mild fever; High cholesterol \"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_SURGERIES + \"Appendectomy \"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_FAMILY_HISTORY + \"Has family history of high blood pressure \"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_IMMUNIZATION_HISTORY + \"MMR; 6 in 1; Hepatitis B \"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ETHNICITY + \"Chinese \";","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New medical information added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_MISSING_PATIENT \u003d \"This patient does not exist in MedBook\";","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_DUPLICATE_MEDICAL \u003d \"Medical information for this patient already exist.\";","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"    // Identifier","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Nric patientNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Medical toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"     * Creates an AddMedicalCommand to add medical information to the specified {@code Patient}","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"    public AddMedicalCommand(Nric patientNric, Medical medical) {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(patientNric);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"        toAdd \u003d medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!model.hasPerson(new NricPredicate(patientNric))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"        if (model.hasMedical(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEDICAL);","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"        model.addMedical(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"        model.updateFilteredMedicalList(new MedicalWithNricPredicate(patientNric));","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":98}},{"path":"src/main/java/seedu/address/logic/commands/medical/DeleteMedicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":" * Deletes medical information identified using its displayed index from MedBook.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"public class DeleteMedicalCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.MEDICAL;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"            + \": Deletes the medical information identified by the \"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"index number used in the displayed medical information list.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_DELETE_MEDICAL_SUCCESS \u003d \"Deleted Medical Information: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    public DeleteMedicalCommand(Index targetIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"        List\u003cMedical\u003e lastShownList \u003d model.getFilteredMedicalList();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEDICAL_INFORMATION_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"        Medical medicalToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        model.deleteMedical(medicalToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEDICAL_SUCCESS, medicalToDelete), COMMAND_TYPE);","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof DeleteMedicalCommand // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteMedicalCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sibinhho99-nus":54,"clement0010":3}},{"path":"src/main/java/seedu/address/logic/commands/medical/EditMedicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNICITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_HISTORY;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMMUNIZATION_HISTORY;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURGERIES;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Age;","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.BloodType;","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Ethnicity;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.FamilyHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Gender;","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Height;","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Illnesses;","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.ImmunizationHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medication;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Surgeries;","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Weight;","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":" * Edits the details of an existing medical information in MedBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"public class EditMedicalCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.MEDICAL;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"            + \": Edits the details of the medical information identified \"","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"by the index number used in the displayed medical information list. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_BLOODTYPE + \"BLOODTYPE \"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_MEDICATION + \"MEDICATION \"","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_HEIGHT + \"HEIGHT \"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_WEIGHT + \"WEIGHT \"","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ILLNESSES + \"ILLNESSES \"","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_SURGERIES + \"SURGERIES \"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_FAMILY_HISTORY + \"FAMILY_HISTORY \"","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_IMMUNIZATION_HISTORY + \"IMMUNIZATION_HISTORY \"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_ETHNICITY + \"ETHNICITY\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"            + PREFIX_BLOODTYPE + \"B\";","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_EDIT_MEDICAL_SUCCESS \u003d \"Edited Medical Information: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"    private final EditMedicalDescriptor editMedicalDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"     * @param targetIndex of the medical information in the filtered medical information list to edit","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param editMedicalDescriptor details to edit the medical information with","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"joey-chance"},"content":"    public EditMedicalCommand(Index targetIndex, EditMedicalDescriptor editMedicalDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"        this.editMedicalDescriptor \u003d editMedicalDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"        List\u003cMedical\u003e lastShownList \u003d model.getFilteredMedicalList();","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEDICAL_INFORMATION_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"        Medical medicalToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"        Medical editedMedical \u003d createEditedMedical(medicalToEdit, editMedicalDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"        model.setMedical(medicalToEdit, editedMedical);","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEDICAL_SUCCESS, editedMedical), COMMAND_TYPE);","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"    private static Medical createEditedMedical(Medical medicalToEdit,","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"sibinhho99-nus"},"content":"                                               EditMedicalCommand.EditMedicalDescriptor editMedicalDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"        assert medicalToEdit !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"sibinhho99-nus"},"content":"        Nric updatedNric \u003d editMedicalDescriptor.getNric().orElse(medicalToEdit.getPatientNric());","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"        Age updatedAge \u003d editMedicalDescriptor.getAge().orElse(medicalToEdit.getAge());","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"sibinhho99-nus"},"content":"        BloodType updatedBloodType \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getBloodType().orElse(medicalToEdit.getBloodType());","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"sibinhho99-nus"},"content":"        Medication updatedMedication \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getMedication().orElse(medicalToEdit.getMedication());","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"sibinhho99-nus"},"content":"        Height updatedHeight \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getHeight().orElse(medicalToEdit.getHeight());","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"        Weight updatedWeight \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getWeight().orElse(medicalToEdit.getWeight());","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"sibinhho99-nus"},"content":"        Illnesses updatedIllnesses \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getIllnesses().orElse(medicalToEdit.getIllnesses());","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"sibinhho99-nus"},"content":"        Surgeries updatedSurgeries \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getSurgeries().orElse(medicalToEdit.getSurgeries());","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"sibinhho99-nus"},"content":"        FamilyHistory updatedFamilyHistory \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getFamilyHistory().orElse(medicalToEdit.getFamilyHistory());","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"sibinhho99-nus"},"content":"        ImmunizationHistory updatedImmunizationHistory \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getImmunizationHistory().orElse(medicalToEdit.getImmunizationHistory());","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"sibinhho99-nus"},"content":"        Gender updatedGender \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getGender().orElse(medicalToEdit.getGender());","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"sibinhho99-nus"},"content":"        Ethnicity updatedEthnicity \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.getEthnicity().orElse(medicalToEdit.getEthnicity());","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Medical(updatedNric,","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedAge,","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedBloodType,","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedMedication,","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedHeight,","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedWeight,","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedIllnesses,","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedSurgeries,","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedFamilyHistory,","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedImmunizationHistory,","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedGender,","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"                updatedEthnicity","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"        );","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof EditMedicalCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 targetIndex.equals(((EditMedicalCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"     * Stores the details to edit the medical information with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"sibinhho99-nus"},"content":"     * corresponding field value of the medical information.","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"sibinhho99-nus"},"content":"    public static class EditMedicalDescriptor {","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"        private Nric nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"        private Age age;","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"        private BloodType bloodType;","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"        private Medication medication;","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"sibinhho99-nus"},"content":"        private Height height;","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"sibinhho99-nus"},"content":"        private Weight weight;","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"sibinhho99-nus"},"content":"        private Illnesses illnesses;","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"        private Surgeries surgeries;","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"        private FamilyHistory familyHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"sibinhho99-nus"},"content":"        private ImmunizationHistory immunizationHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"sibinhho99-nus"},"content":"        private Gender gender;","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"sibinhho99-nus"},"content":"        private Ethnicity ethnicity;","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"sibinhho99-nus"},"content":"        public EditMedicalDescriptor() {}","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"        /**","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"         */","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"sibinhho99-nus"},"content":"        public EditMedicalDescriptor(EditMedicalCommand.EditMedicalDescriptor toCopy) {","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"sibinhho99-nus"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"sibinhho99-nus"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"sibinhho99-nus"},"content":"            setBloodType(toCopy.bloodType);","lastModifiedDate":"2022-03-25"},{"lineNumber":177,"author":{"gitId":"sibinhho99-nus"},"content":"            setMedication(toCopy.medication);","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"sibinhho99-nus"},"content":"            setHeight(toCopy.height);","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"sibinhho99-nus"},"content":"            setWeight(toCopy.weight);","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"sibinhho99-nus"},"content":"            setIllnesses(toCopy.illnesses);","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"sibinhho99-nus"},"content":"            setSurgeries(toCopy.surgeries);","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"sibinhho99-nus"},"content":"            setFamilyHistory(toCopy.familyHistory);","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"sibinhho99-nus"},"content":"            setImmunizationHistory(toCopy.immunizationHistory);","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"sibinhho99-nus"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-03-25"},{"lineNumber":185,"author":{"gitId":"sibinhho99-nus"},"content":"            setEthnicity(toCopy.ethnicity);","lastModifiedDate":"2022-03-25"},{"lineNumber":186,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":187,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":188,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2022-03-25"},{"lineNumber":189,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2022-03-25"},{"lineNumber":190,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":191,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":192,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2022-03-25"},{"lineNumber":193,"author":{"gitId":"sibinhho99-nus"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":194,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":195,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":196,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2022-03-25"},{"lineNumber":197,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2022-03-25"},{"lineNumber":198,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":199,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":200,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2022-03-25"},{"lineNumber":201,"author":{"gitId":"sibinhho99-nus"},"content":"            this.age \u003d age;","lastModifiedDate":"2022-03-25"},{"lineNumber":202,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":203,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":204,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cBloodType\u003e getBloodType() {","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(bloodType);","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":207,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":208,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setBloodType(BloodType bloodType) {","lastModifiedDate":"2022-03-25"},{"lineNumber":209,"author":{"gitId":"sibinhho99-nus"},"content":"            this.bloodType \u003d bloodType;","lastModifiedDate":"2022-03-25"},{"lineNumber":210,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":211,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":212,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cMedication\u003e getMedication() {","lastModifiedDate":"2022-03-25"},{"lineNumber":213,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(medication);","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":215,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":216,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setMedication(Medication medication) {","lastModifiedDate":"2022-03-25"},{"lineNumber":217,"author":{"gitId":"sibinhho99-nus"},"content":"            this.medication \u003d medication;","lastModifiedDate":"2022-03-25"},{"lineNumber":218,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":219,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cHeight\u003e getHeight() {","lastModifiedDate":"2022-03-25"},{"lineNumber":221,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(height);","lastModifiedDate":"2022-03-25"},{"lineNumber":222,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":223,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":224,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setHeight(Height height) {","lastModifiedDate":"2022-03-25"},{"lineNumber":225,"author":{"gitId":"sibinhho99-nus"},"content":"            this.height \u003d height;","lastModifiedDate":"2022-03-25"},{"lineNumber":226,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":227,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":228,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cWeight\u003e getWeight() {","lastModifiedDate":"2022-03-25"},{"lineNumber":229,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(weight);","lastModifiedDate":"2022-03-25"},{"lineNumber":230,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":231,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":232,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setWeight(Weight weight) {","lastModifiedDate":"2022-03-25"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2022-03-25"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":236,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cIllnesses\u003e getIllnesses() {","lastModifiedDate":"2022-03-25"},{"lineNumber":237,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(illnesses);","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":240,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setIllnesses(Illnesses illnesses) {","lastModifiedDate":"2022-03-25"},{"lineNumber":241,"author":{"gitId":"sibinhho99-nus"},"content":"            this.illnesses \u003d illnesses;","lastModifiedDate":"2022-03-25"},{"lineNumber":242,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":243,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":244,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cSurgeries\u003e getSurgeries() {","lastModifiedDate":"2022-03-25"},{"lineNumber":245,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(surgeries);","lastModifiedDate":"2022-03-25"},{"lineNumber":246,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":247,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":248,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setSurgeries(Surgeries surgeries) {","lastModifiedDate":"2022-03-25"},{"lineNumber":249,"author":{"gitId":"sibinhho99-nus"},"content":"            this.surgeries \u003d surgeries;","lastModifiedDate":"2022-03-25"},{"lineNumber":250,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":251,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":252,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cFamilyHistory\u003e getFamilyHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":253,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(familyHistory);","lastModifiedDate":"2022-03-25"},{"lineNumber":254,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":255,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":256,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setFamilyHistory(FamilyHistory familyHistory) {","lastModifiedDate":"2022-03-25"},{"lineNumber":257,"author":{"gitId":"sibinhho99-nus"},"content":"            this.familyHistory \u003d familyHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":258,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":259,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":260,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cImmunizationHistory\u003e getImmunizationHistory() {","lastModifiedDate":"2022-03-25"},{"lineNumber":261,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(immunizationHistory);","lastModifiedDate":"2022-03-25"},{"lineNumber":262,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":263,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":264,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setImmunizationHistory(ImmunizationHistory immunizationHistory) {","lastModifiedDate":"2022-03-25"},{"lineNumber":265,"author":{"gitId":"sibinhho99-nus"},"content":"            this.immunizationHistory \u003d immunizationHistory;","lastModifiedDate":"2022-03-25"},{"lineNumber":266,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":267,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":268,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-03-25"},{"lineNumber":269,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-03-25"},{"lineNumber":270,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":272,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-03-25"},{"lineNumber":273,"author":{"gitId":"sibinhho99-nus"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-03-25"},{"lineNumber":274,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"sibinhho99-nus"},"content":"        public Optional\u003cEthnicity\u003e getEthnicity() {","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"sibinhho99-nus"},"content":"            return Optional.ofNullable(ethnicity);","lastModifiedDate":"2022-03-25"},{"lineNumber":278,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setEthnicity(Ethnicity ethnicity) {","lastModifiedDate":"2022-03-25"},{"lineNumber":281,"author":{"gitId":"sibinhho99-nus"},"content":"            this.ethnicity \u003d ethnicity;","lastModifiedDate":"2022-03-25"},{"lineNumber":282,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":284,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"sibinhho99-nus"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"sibinhho99-nus"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":287,"author":{"gitId":"sibinhho99-nus"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"sibinhho99-nus"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":289,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":290,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":291,"author":{"gitId":"sibinhho99-nus"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"sibinhho99-nus"},"content":"            if (!(other instanceof EditCommand.EditPersonDescriptor)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"sibinhho99-nus"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"sibinhho99-nus"},"content":"            // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":297,"author":{"gitId":"sibinhho99-nus"},"content":"            EditMedicalCommand.EditMedicalDescriptor e \u003d (EditMedicalCommand.EditMedicalDescriptor) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":298,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"sibinhho99-nus"},"content":"            return getNric().equals(e.getNric())","lastModifiedDate":"2022-03-25"},{"lineNumber":300,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getAge().equals(e.getAge())","lastModifiedDate":"2022-03-25"},{"lineNumber":301,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getBloodType().equals(e.getBloodType())","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getMedication().equals(e.getMedication())","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getHeight().equals(e.getHeight())","lastModifiedDate":"2022-03-25"},{"lineNumber":304,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getWeight().equals(e.getWeight())","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getIllnesses().equals(e.getIllnesses())","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getSurgeries().equals(e.getSurgeries())","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getFamilyHistory().equals(e.getFamilyHistory())","lastModifiedDate":"2022-03-25"},{"lineNumber":308,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getImmunizationHistory().equals(e.getImmunizationHistory())","lastModifiedDate":"2022-03-25"},{"lineNumber":309,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u0026\u0026 getEthnicity().equals(e.getEthnicity());","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"sibinhho99-nus":311,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/commands/medical/ViewMedicalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.commands.medical;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.commands.contact.AddContactCommand.MESSAGE_MISSING_PATIENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.MedicalWithNricPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"public class ViewMedicalCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.MEDICAL;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"            + \": Lists all medical information whose owner\u0027s name contain any of \"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"the specified owner NRIC and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Parameters: OWNER NRIC\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TYPE + \"medical \" + PREFIX_NRIC + \"S1234567G\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"     * Creates an ViewMedicalCommand to view the medical information of specified {@code Patient}","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    public ViewMedicalCommand(Nric nric) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        if (nric \u003d\u003d null) { // No nric specified, display all medical information","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"            model.updateFilteredMedicalList(Model.PREDICATE_SHOW_ALL_MEDICALS);","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(Messages.MESSAGE_MEDICALS_LISTED_NO_NRIC,","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"                            model.getFilteredMedicalList().size()),","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                    COMMAND_TYPE);","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"        } else { // Nric specified, find and display medical details for patient with specifed nric","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"            model.updateFilteredMedicalList(new MedicalWithNricPredicate(nric));","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"            if (!model.hasPerson(new NricPredicate(nric))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"                throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"            return new CommandResult(","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(Messages.MESSAGE_MEDICALS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"                            model.getFilteredMedicalList().size(), nric),","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"                    COMMAND_TYPE);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-20"}],"authorContributionMap":{"sibinhho99-nus":60}},{"path":"src/main/java/seedu/address/logic/commands/prescription/AddPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.commands.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUCTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionWithNricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"public class AddPrescriptionCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.PRESCRIPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a medical prescription of a patient in Medbook. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_TYPE + \"PRESCRIPTION_TYPE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NRIC + \"OWNER_NRIC \"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NAME + \"DRUG_NAME \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"            + PREFIX_INSTRUCTION + \"INSTRUCTION \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_TYPE + \"prescription \"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"            + PREFIX_NRIC + \"S1234567P \"","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NAME + \"Acetaminophen \"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_DATE + \"2022-02-22 \"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_INSTRUCTION + \"2 tablets after meal everyday \";","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New medical prescription added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"This medical prescription already exist\";","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_MISSING_PATIENT \u003d \"This patient does not exists in Medbook\";","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"    private final Prescription toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"     * Creates an AddPrescriptionCommand to add the specified {@code Patient}","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"    public AddPrescriptionCommand(Nric nric, Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        toAdd \u003d prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"        if (!model.hasPerson(new NricPredicate(nric))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"        if (model.hasPrescription(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        model.addPrescription(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"        model.updateFilteredPrescriptionList(new PrescriptionWithNricPredicate(nric));","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":72,"clement0010":2}},{"path":"src/main/java/seedu/address/logic/commands/prescription/DeletePrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.commands.prescription;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import java.util.List;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"public class DeletePrescriptionCommand extends Command {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.PRESCRIPTION;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"            + \": Deletes the prescription identified by the index number used in the displayed prescription list.\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_DELETE_PRESCRIPTION_SUCCESS \u003d \"Deleted Prescription: %1$s\";","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    public DeletePrescriptionCommand(Index targetIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-18"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPrescription\u003e lastShownList \u003d model.getFilteredPrescriptionList();","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PRESCRIPTION_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        Prescription prescriptionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        model.deletePrescription(prescriptionToDelete);","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS, prescriptionToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"                    CommandType.DEFAULT);","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PRESCRIPTION_SUCCESS, prescriptionToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-18"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-18"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof DeletePrescriptionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-18"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePrescriptionCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"cheekean5848":53,"clement0010":8}},{"path":"src/main/java/seedu/address/logic/commands/prescription/EditPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.commands.prescription;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUCTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.DrugName;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Instruction;","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"public class EditPrescriptionCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.PRESCRIPTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"            + \": Edits the details of the prescription identified \"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"            + \"by the index number used in the displayed prescription information list. \"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NRIC + \"PATIENT_NRIC \"","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NAME + \"DRUG_NAME \"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_INSTRUCTION + \"INSTRUCTION \\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"            + PREFIX_INSTRUCTION + \"1 tablet per day\";","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_EDIT_PRESCRIPTION_SUCCESS \u003d \"Edited Prescription Information: %1$s\";","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"    private final EditPrescriptionCommand.EditPrescriptionDescriptor editPrescriptionDescriptor;","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"     * @param targetIndex of the prescription information in the filtered test result information list to edit","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"     * @param editPrescriptionDescriptor details to edit the test result information with","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"    public EditPrescriptionCommand(Index targetIndex,","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"                                   EditPrescriptionCommand.EditPrescriptionDescriptor editPrescriptionDescriptor) {","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        this.editPrescriptionDescriptor \u003d editPrescriptionDescriptor;","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-29"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPrescription\u003e lastShownList \u003d model.getFilteredPrescriptionList();","lastModifiedDate":"2022-03-29"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEST_RESULT_INDEX);","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        Prescription prescription \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-29"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        Prescription editedPrescription \u003d createEditedPrescription(prescription, editPrescriptionDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"        model.setPrescription(prescription, editedPrescription);","lastModifiedDate":"2022-03-29"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PRESCRIPTION_SUCCESS, editedPrescription), COMMAND_TYPE);","lastModifiedDate":"2022-03-29"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"    private static Prescription createEditedPrescription(Prescription prescription,","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"                                                     EditPrescriptionCommand.EditPrescriptionDescriptor","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"                                                             editPrescriptionDescriptor) {","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"        assert prescription !\u003d null;","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"cheekean5848"},"content":"        Nric updatedNric \u003d editPrescriptionDescriptor.getNric().orElse(prescription.getPrescriptionTarget());","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"        DrugName updatedDrugName \u003d editPrescriptionDescriptor.getDrugName().orElse(prescription.getDrugName());","lastModifiedDate":"2022-03-29"},{"lineNumber":82,"author":{"gitId":"cheekean5848"},"content":"        PrescriptionDate updatedPrescriptionDate \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":83,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor.getPrescriptionDate().orElse(prescription.getPrescriptionDate());","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"        Instruction updatedInstruction \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":85,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor.getInstruction().orElse(prescription.getInstruction());","lastModifiedDate":"2022-03-29"},{"lineNumber":86,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"        return new Prescription(updatedNric,","lastModifiedDate":"2022-03-29"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"                updatedDrugName,","lastModifiedDate":"2022-03-29"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"                updatedPrescriptionDate,","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"cheekean5848"},"content":"                updatedInstruction","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":94,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":97,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof EditPrescriptionCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":98,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 targetIndex.equals(((EditPrescriptionCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":100,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"cheekean5848"},"content":"     * Stores the details to edit the test result information with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-29"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"     * corresponding field value of the test result information.","lastModifiedDate":"2022-03-29"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"cheekean5848"},"content":"    public static class EditPrescriptionDescriptor {","lastModifiedDate":"2022-03-29"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"        private Nric nric;","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"        private DrugName drugName;","lastModifiedDate":"2022-03-29"},{"lineNumber":108,"author":{"gitId":"cheekean5848"},"content":"        private PrescriptionDate date;","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"cheekean5848"},"content":"        private Instruction instruction;","lastModifiedDate":"2022-03-29"},{"lineNumber":110,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":111,"author":{"gitId":"cheekean5848"},"content":"        public EditPrescriptionDescriptor() {}","lastModifiedDate":"2022-03-29"},{"lineNumber":112,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":113,"author":{"gitId":"cheekean5848"},"content":"        /**","lastModifiedDate":"2022-03-29"},{"lineNumber":114,"author":{"gitId":"cheekean5848"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"cheekean5848"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"         */","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"        public EditPrescriptionDescriptor(EditPrescriptionCommand.EditPrescriptionDescriptor toCopy) {","lastModifiedDate":"2022-03-29"},{"lineNumber":118,"author":{"gitId":"cheekean5848"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2022-03-29"},{"lineNumber":119,"author":{"gitId":"cheekean5848"},"content":"            setDrugName(toCopy.drugName);","lastModifiedDate":"2022-03-29"},{"lineNumber":120,"author":{"gitId":"cheekean5848"},"content":"            setPrescriptionDate(toCopy.date);","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"cheekean5848"},"content":"            setResult(toCopy.instruction);","lastModifiedDate":"2022-03-29"},{"lineNumber":122,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":123,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":124,"author":{"gitId":"cheekean5848"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2022-03-29"},{"lineNumber":125,"author":{"gitId":"cheekean5848"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2022-03-29"},{"lineNumber":126,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":127,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2022-03-29"},{"lineNumber":129,"author":{"gitId":"cheekean5848"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2022-03-29"},{"lineNumber":130,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":131,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":132,"author":{"gitId":"cheekean5848"},"content":"        public Optional\u003cDrugName\u003e getDrugName() {","lastModifiedDate":"2022-03-29"},{"lineNumber":133,"author":{"gitId":"cheekean5848"},"content":"            return Optional.ofNullable(drugName);","lastModifiedDate":"2022-03-29"},{"lineNumber":134,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":135,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":136,"author":{"gitId":"cheekean5848"},"content":"        public void setDrugName(DrugName drugName) {","lastModifiedDate":"2022-03-29"},{"lineNumber":137,"author":{"gitId":"cheekean5848"},"content":"            this.drugName \u003d drugName;","lastModifiedDate":"2022-03-29"},{"lineNumber":138,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":139,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":140,"author":{"gitId":"cheekean5848"},"content":"        public Optional\u003cPrescriptionDate\u003e getPrescriptionDate() {","lastModifiedDate":"2022-03-29"},{"lineNumber":141,"author":{"gitId":"cheekean5848"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-03-29"},{"lineNumber":142,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":143,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":144,"author":{"gitId":"cheekean5848"},"content":"        public void setPrescriptionDate(PrescriptionDate prescriptionDate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":145,"author":{"gitId":"cheekean5848"},"content":"            this.date \u003d prescriptionDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":146,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":147,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":148,"author":{"gitId":"cheekean5848"},"content":"        public Optional\u003cInstruction\u003e getInstruction() {","lastModifiedDate":"2022-03-29"},{"lineNumber":149,"author":{"gitId":"cheekean5848"},"content":"            return Optional.ofNullable(instruction);","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"cheekean5848"},"content":"        public void setResult(Instruction instruction) {","lastModifiedDate":"2022-03-29"},{"lineNumber":153,"author":{"gitId":"cheekean5848"},"content":"            this.instruction \u003d instruction;","lastModifiedDate":"2022-03-29"},{"lineNumber":154,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":155,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":156,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":157,"author":{"gitId":"cheekean5848"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":158,"author":{"gitId":"cheekean5848"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"cheekean5848"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"cheekean5848"},"content":"                return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":163,"author":{"gitId":"cheekean5848"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"cheekean5848"},"content":"            if (!(other instanceof EditPrescriptionCommand.EditPrescriptionDescriptor)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":165,"author":{"gitId":"cheekean5848"},"content":"                return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":166,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":167,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":168,"author":{"gitId":"cheekean5848"},"content":"            // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":169,"author":{"gitId":"cheekean5848"},"content":"            EditPrescriptionCommand.EditPrescriptionDescriptor e \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"cheekean5848"},"content":"                    (EditPrescriptionCommand.EditPrescriptionDescriptor) other;","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"cheekean5848"},"content":"            return getNric().equals(e.getNric())","lastModifiedDate":"2022-03-29"},{"lineNumber":173,"author":{"gitId":"cheekean5848"},"content":"                    \u0026\u0026 getDrugName().equals(e.getDrugName())","lastModifiedDate":"2022-03-29"},{"lineNumber":174,"author":{"gitId":"cheekean5848"},"content":"                    \u0026\u0026 getPrescriptionDate().equals(e.getPrescriptionDate())","lastModifiedDate":"2022-03-29"},{"lineNumber":175,"author":{"gitId":"cheekean5848"},"content":"                    \u0026\u0026 getInstruction().equals(e.getInstruction());","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cheekean5848":178}},{"path":"src/main/java/seedu/address/logic/commands/prescription/ViewPrescriptionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.commands.prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.commands.contact.AddContactCommand.MESSAGE_MISSING_PATIENT;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionWithNricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"public class ViewPrescriptionCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.PRESCRIPTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all cotnact whose names contain any of \"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"            + \"the specified owner NRIC and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"            + \"Parameters: OWNER NRIC\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"            + \"Example: \" + COMMAND_WORD + \" S1234567L\";","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"     * Creates an ViewContactCommand to view the specified {@code Patient}","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    public ViewPrescriptionCommand(Nric nric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        model.updateFilteredPrescriptionList(new PrescriptionWithNricPredicate(nric));","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        if (!model.hasPerson(new NricPredicate(nric))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"                String.format(Messages.MESSAGE_PRESCRIPTIONS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"                        model.getFilteredPrescriptionList().size(), nric),","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":50}},{"path":"src/main/java/seedu/address/logic/commands/testresult/AddTestResultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALTEST;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESULT;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TESTDATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResultWithNricPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"public class AddTestResultCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_TYPE + \"test\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \": Adds the results of a test taken for a patient in the MedBook. \"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_NRIC + \"PATIENT_NRIC \"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_TESTDATE + \"TEST_DATE \"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_MEDICALTEST + \"MEDICAL_TEST \"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"            + PREFIX_RESULT + \"TEST_RESULT \\n\"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_TYPE + \"test \"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_TESTDATE + \"2022-03-16 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_MEDICALTEST + \"CT Scan \"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_RESULT + \"Brain damage \";","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New test result added: %1$s\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_DUPLICATE_TESTRESULT \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"            \"This test result already exists in patient test results list\";","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_MISSING_PATIENT \u003d \"This patient does not exists in MedBook\";","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"    // Identifier","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    private final Nric patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"    private final TestResult toAdd;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"     * Creates an AddTestResultCommand to add the specified {@code TestResult}","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"    public AddTestResultCommand(Nric patientNric, TestResult testResult) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(patientNric);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        toAdd \u003d testResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"        if (!model.hasPerson(new NricPredicate(patientNric))) {","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"        if (model.hasTestResult(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joey-chance"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TESTRESULT);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"        model.addTestResult(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joey-chance"},"content":"        model.updateFilteredTestResultList(new TestResultWithNricPredicate(patientNric));","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joey-chance"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"clement0010":1,"joey-chance":75}},{"path":"src/main/java/seedu/address/logic/commands/testresult/DeleteTestResultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands.testresult;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"public class DeleteTestResultCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.TEST;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" INDEX\"","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"            + \": Deletes the test result identified by the index number used in the displayed test result list.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_DELETE_TEST_RESULT_SUCCESS \u003d \"Deleted Test Result: %1$s\";","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    public DeleteTestResultCommand(Index targetIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"        List\u003cTestResult\u003e lastShownList \u003d model.getFilteredTestResultList();","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEST_RESULT_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        TestResult testResultToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        model.deleteTestResult(testResultToDelete);","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_TEST_RESULT_SUCCESS, testResultToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"                    CommandType.DEFAULT);","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TEST_RESULT_SUCCESS, testResultToDelete),","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof DeleteTestResultCommand // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTestResultCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"clement0010":6,"joey-chance":56}},{"path":"src/main/java/seedu/address/logic/commands/testresult/EditTestResultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands.testresult;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALTEST;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESULT;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TESTDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import java.util.List;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.MedicalTest;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.Result;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":" * Edits the details of an existing test result information in MedBook.","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"public class EditTestResultCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.TEST;","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"            + \": Edits the details of the test result identified \"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"            + \"by the index number used in the displayed test result information list. \"","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_NRIC + \"PATIENT_NRIC \"","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_TESTDATE + \"TEST_DATE \"","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_MEDICALTEST + \"MEDICAL_TEST \"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_RESULT + \"TEST_RESULT \\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_NRIC + \"S1234567L \"","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"            + PREFIX_RESULT + \"Brain damage\";","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_EDIT_TEST_RESULT_SUCCESS \u003d \"Edited Test Result Information: %1$s\";","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"    private final EditTestResultDescriptor editTestResultDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"     * @param targetIndex of the test result information in the filtered test result information list to edit","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"     * @param editTestResultDescriptor details to edit the test result information with","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"    public EditTestResultCommand(Index targetIndex, EditTestResultDescriptor editTestResultDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"        this.editTestResultDescriptor \u003d editTestResultDescriptor;","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"        List\u003cTestResult\u003e lastShownList \u003d model.getFilteredTestResultList();","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TEST_RESULT_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"joey-chance"},"content":"        TestResult testResult \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"joey-chance"},"content":"        TestResult editedTestResult \u003d createEditedTestResult(testResult, editTestResultDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"        model.setTestResult(testResult, editedTestResult);","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"joey-chance"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TEST_RESULT_SUCCESS, editedTestResult), COMMAND_TYPE);","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"joey-chance"},"content":"    private static TestResult createEditedTestResult(TestResult testResult,","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"                                               EditTestResultDescriptor editTestResultDescriptor) {","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"joey-chance"},"content":"        assert testResult !\u003d null;","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"joey-chance"},"content":"        Nric updatedNric \u003d editTestResultDescriptor.getNric().orElse(testResult.getPatientNric());","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"joey-chance"},"content":"        TestDate updatedTestDate \u003d editTestResultDescriptor.getTestDate().orElse(testResult.getTestDate());","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"joey-chance"},"content":"        MedicalTest updatedMedicalTest \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.getMedicalTest().orElse(testResult.getMedicalTest());","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"joey-chance"},"content":"        Result updatedResult \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.getResult().orElse(testResult.getResult());","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"joey-chance"},"content":"        return new TestResult(updatedNric,","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"joey-chance"},"content":"                updatedTestDate,","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"joey-chance"},"content":"                updatedMedicalTest,","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"joey-chance"},"content":"                updatedResult","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"joey-chance"},"content":"        );","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof EditTestResultCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 targetIndex.equals(((EditTestResultCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"joey-chance"},"content":"     * Stores the details to edit the test result information with. Each non-empty field value will replace the","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"joey-chance"},"content":"     * corresponding field value of the test result information.","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"joey-chance"},"content":"    public static class EditTestResultDescriptor {","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"joey-chance"},"content":"        private Nric nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"joey-chance"},"content":"        private TestDate testDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"joey-chance"},"content":"        private MedicalTest medicalTest;","lastModifiedDate":"2022-03-25"},{"lineNumber":108,"author":{"gitId":"joey-chance"},"content":"        private Result result;","lastModifiedDate":"2022-03-25"},{"lineNumber":109,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":110,"author":{"gitId":"joey-chance"},"content":"        public EditTestResultDescriptor() {}","lastModifiedDate":"2022-03-25"},{"lineNumber":111,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":112,"author":{"gitId":"joey-chance"},"content":"        /**","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"joey-chance"},"content":"         * Copy constructor.","lastModifiedDate":"2022-03-25"},{"lineNumber":114,"author":{"gitId":"joey-chance"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-03-25"},{"lineNumber":115,"author":{"gitId":"joey-chance"},"content":"         */","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"joey-chance"},"content":"        public EditTestResultDescriptor(EditTestResultDescriptor toCopy) {","lastModifiedDate":"2022-03-25"},{"lineNumber":117,"author":{"gitId":"joey-chance"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"joey-chance"},"content":"            setTestDate(toCopy.testDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"joey-chance"},"content":"            setMedicalTest(toCopy.medicalTest);","lastModifiedDate":"2022-03-25"},{"lineNumber":120,"author":{"gitId":"joey-chance"},"content":"            setResult(toCopy.result);","lastModifiedDate":"2022-03-25"},{"lineNumber":121,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":122,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":123,"author":{"gitId":"joey-chance"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2022-03-25"},{"lineNumber":124,"author":{"gitId":"joey-chance"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2022-03-25"},{"lineNumber":125,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":126,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":127,"author":{"gitId":"joey-chance"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2022-03-25"},{"lineNumber":128,"author":{"gitId":"joey-chance"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2022-03-25"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"joey-chance"},"content":"        public Optional\u003cTestDate\u003e getTestDate() {","lastModifiedDate":"2022-03-25"},{"lineNumber":132,"author":{"gitId":"joey-chance"},"content":"            return Optional.ofNullable(testDate);","lastModifiedDate":"2022-03-25"},{"lineNumber":133,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"joey-chance"},"content":"        public void setTestDate(TestDate testDate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"joey-chance"},"content":"            this.testDate \u003d testDate;","lastModifiedDate":"2022-03-25"},{"lineNumber":137,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":138,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":139,"author":{"gitId":"joey-chance"},"content":"        public Optional\u003cMedicalTest\u003e getMedicalTest() {","lastModifiedDate":"2022-03-25"},{"lineNumber":140,"author":{"gitId":"joey-chance"},"content":"            return Optional.ofNullable(medicalTest);","lastModifiedDate":"2022-03-25"},{"lineNumber":141,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":143,"author":{"gitId":"joey-chance"},"content":"        public void setMedicalTest(MedicalTest medicalTest) {","lastModifiedDate":"2022-03-25"},{"lineNumber":144,"author":{"gitId":"joey-chance"},"content":"            this.medicalTest \u003d medicalTest;","lastModifiedDate":"2022-03-25"},{"lineNumber":145,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":146,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"joey-chance"},"content":"        public Optional\u003cResult\u003e getResult() {","lastModifiedDate":"2022-03-25"},{"lineNumber":148,"author":{"gitId":"joey-chance"},"content":"            return Optional.ofNullable(result);","lastModifiedDate":"2022-03-25"},{"lineNumber":149,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":150,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"joey-chance"},"content":"        public void setResult(Result result) {","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"joey-chance"},"content":"            this.result \u003d result;","lastModifiedDate":"2022-03-25"},{"lineNumber":153,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":154,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":155,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":156,"author":{"gitId":"joey-chance"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"joey-chance"},"content":"            // short circuit if same object","lastModifiedDate":"2022-03-25"},{"lineNumber":158,"author":{"gitId":"joey-chance"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-25"},{"lineNumber":159,"author":{"gitId":"joey-chance"},"content":"                return true;","lastModifiedDate":"2022-03-25"},{"lineNumber":160,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"joey-chance"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"cheekean5848"},"content":"            if (!(other instanceof EditTestResultCommand.EditTestResultDescriptor)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":164,"author":{"gitId":"joey-chance"},"content":"                return false;","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"joey-chance"},"content":"            // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"joey-chance"},"content":"            EditTestResultDescriptor e \u003d (EditTestResultDescriptor) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"joey-chance"},"content":"            return getNric().equals(e.getNric())","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"joey-chance"},"content":"                    \u0026\u0026 getTestDate().equals(e.getTestDate())","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"joey-chance"},"content":"                    \u0026\u0026 getMedicalTest().equals(e.getMedicalTest())","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"joey-chance"},"content":"                    \u0026\u0026 getResult().equals(e.getResult());","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":176,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"cheekean5848":1,"joey-chance":175}},{"path":"src/main/java/seedu/address/logic/commands/testresult/FindTestResultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands.testresult;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResultContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":" * Finds and lists all test results in address book whose information contains any of the argument keywords.","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"public class FindTestResultCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.TEST;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"            + \": Finds all test results whose information contain any of \"","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"    private final TestResultContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"    public FindTestResultCommand(TestResultContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        model.updateFilteredTestResultList(predicate);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_TEST_RESULTS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"                        model.getFilteredTestResultList().size(), ViewedNric.getViewedNric().toString()), COMMAND_TYPE);","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof FindTestResultCommand // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 predicate.equals(((FindTestResultCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"joey-chance":48}},{"path":"src/main/java/seedu/address/logic/commands/testresult/ViewTestResultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.commands.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.commands.contact.AddContactCommand.MESSAGE_MISSING_PATIENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.NricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResultWithNricPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":" * Lists all test results in the address book to the user.","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"public class ViewTestResultCommand extends Command {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"    public static final CommandType COMMAND_TYPE \u003d CommandType.TEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + PREFIX_TYPE + \"test \" + PREFIX_NRIC + \"PATIENT_NRIC\"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            + \": Lists all test results whose tests contain any of \"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"            + \"the specified patient NRIC and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"            + \"Parameters: PATIENT NRIC\\n\"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TYPE + \"test \" + PREFIX_NRIC + \"S1234567L\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    private final Nric patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"     * Creates an ViewTestResultCommand to view the specified {@code patientNric}","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    public ViewTestResultCommand(Nric patientNric) {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(patientNric);","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        model.updateFilteredTestResultList(new TestResultWithNricPredicate(patientNric));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        if (!model.hasPerson(new NricPredicate(patientNric))) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"            throw new CommandException(MESSAGE_MISSING_PATIENT);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"                String.format(Messages.MESSAGE_TEST_RESULTS_LISTED_OVERVIEW,","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"                        model.getFilteredTestResultList().size(), patientNric),","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"                COMMAND_TYPE);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":57}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d new Patient(nric, name, phone, email, address, tagList);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(null);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"cheekean5848":5,"clement0010":8,"-":51,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandType.parseAddCommandType;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.commands.CommandType.parseDeleteCommandType;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.commands.CommandType.parseEditCommandType;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.commands.CommandType.parseFindCommandType;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandType.parseViewCommandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_TYPE);","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"            if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"                return parseAddCommandType(argMultimap.getValue(PREFIX_TYPE).get(), arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"            return parseEditCommandType(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"            return parseDeleteCommandType(arguments);","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"            return parseFindCommandType(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"            if (argMultimap.getValue(PREFIX_TYPE).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"                return parseViewCommandType(argMultimap.getValue(PREFIX_TYPE).get(), arguments);","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"            return new ViewCommand();","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":5,"sibinhho99-nus":2,"clement0010":13,"-":68,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"        private final int startPosition;","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"sibinhho99-nus":1,"-":147}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_TYPE \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"    /* Consultation Prefixes */","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"dt/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"tm/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_DIAGNOSIS \u003d new Prefix(\"dg/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_FEE \u003d new Prefix(\"fe/\");","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    public static final Prefix PREFIX_NOTES \u003d new Prefix(\"nt/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    public static final Prefix PREFIX_INSTRUCTION \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    public static final Prefix PREFIX_MEDICALTEST \u003d new Prefix(\"mt/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public static final Prefix PREFIX_RESULT \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"    public static final Prefix PREFIX_TESTDATE \u003d new Prefix(\"td/\");","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_BLOODTYPE \u003d new Prefix(\"bt/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_MEDICATION \u003d new Prefix(\"md/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_HEIGHT \u003d new Prefix(\"ht/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_WEIGHT \u003d new Prefix(\"wt/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_ILLNESSES \u003d new Prefix(\"il/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_SURGERIES \u003d new Prefix(\"su/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_FAMILY_HISTORY \u003d new Prefix(\"fh/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_IMMUNIZATION_HISTORY \u003d new Prefix(\"ih/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"gd/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final Prefix PREFIX_ETHNICITY \u003d new Prefix(\"et/\");","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cheekean5848":1,"sibinhho99-nus":11,"juslam19":9,"-":14,"joey-chance":4}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"clement0010":6,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheekean5848":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Time;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Age;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.BloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.FamilyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Height;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.ImmunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.DrugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.MedicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.Result;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"        requireNonNull(nric);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String age} into an {@code Age}.","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Age(age.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String bloodType} into a {@code BloodType}.","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"    public static BloodType parseBloodType(String bloodType) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(bloodType);","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(BloodType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"sibinhho99-nus"},"content":"        return new BloodType(bloodType.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String medication} into a {@code Medication}.","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Medication parseMedication(String medication) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(medication);","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Medication.isValidMedication(medication)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Medication.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Medication(medication.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String height} into a {@code Height}.","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Height parseHeight(String height) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(height);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Height.isValidHeight(height)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Height(height.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String weight} into a {@code Weight}.","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Weight parseWeight(String weight) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(weight);","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Weight(weight.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String illnesses} into a {@code Illnesses}.","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Illnesses parseIllnesses(String illnesses) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(illnesses);","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Illnesses.isValidIllnesses(illnesses)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Illnesses.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Illnesses(illnesses.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":193,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String surgeries} into a {@code Surgeries}.","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Surgeries parseSurgeries(String surgeries) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(surgeries);","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Surgeries.isValidSurgeries(surgeries)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Surgeries.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Surgeries(surgeries.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String familyHistory} into a {@code FamilyHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"sibinhho99-nus"},"content":"    public static FamilyHistory parseFamilyHistory(String familyHistory) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(familyHistory);","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!FamilyHistory.isValidFamilyHistory(familyHistory)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(FamilyHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"sibinhho99-nus"},"content":"        return new FamilyHistory(familyHistory.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String immunizationHistory} into a {@code ImmunizationHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"sibinhho99-nus"},"content":"    public static ImmunizationHistory parseImmunizationHistory(String immunizationHistory) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(immunizationHistory);","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!FamilyHistory.isValidFamilyHistory(immunizationHistory)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(ImmunizationHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":227,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"sibinhho99-nus"},"content":"        return new ImmunizationHistory(immunizationHistory.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Gender(gender.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses a {@code String ethnicity} into a {@code Ethnicity}.","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"sibinhho99-nus"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":247,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":248,"author":{"gitId":"sibinhho99-nus"},"content":"    public static Ethnicity parseEthnicity(String ethnicity) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":249,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(ethnicity);","lastModifiedDate":"2022-03-15"},{"lineNumber":250,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Gender.isValidGender(ethnicity)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":251,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":252,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":253,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Ethnicity(ethnicity.trim());","lastModifiedDate":"2022-03-15"},{"lineNumber":254,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":255,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"cheekean5848"},"content":"     * Parses a {@code String name} into an {@code DrugName}.","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"cheekean5848"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"cheekean5848"},"content":"    public static DrugName parseDrugName(String name) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"cheekean5848"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"cheekean5848"},"content":"        if (!DrugName.isValidName(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(DrugName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"cheekean5848"},"content":"        return new DrugName(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"cheekean5848"},"content":"     * Parses a {@code String date} into an {@code PrescriptionDate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"cheekean5848"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"cheekean5848"},"content":"    public static PrescriptionDate parsePrescriptionDate(String date) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"cheekean5848"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"cheekean5848"},"content":"        if (!PrescriptionDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(PrescriptionDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"cheekean5848"},"content":"        return new PrescriptionDate(trimmedDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"cheekean5848"},"content":"     * Parses a {@code String instruction} into an {@code Instruction}.","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"cheekean5848"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the given {@code instruction} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"cheekean5848"},"content":"    public static Instruction parseInstruction(String instruction) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(instruction);","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"cheekean5848"},"content":"        String trimmedInstruction \u003d instruction.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"cheekean5848"},"content":"        if (!Instruction.isValidInstruction(trimmedInstruction)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(Instruction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"cheekean5848"},"content":"        return new Instruction(instruction);","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":320,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":342,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":343,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":344,"author":{"gitId":"juslam19"},"content":"    // Starts here","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":346,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":347,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String time} into an {@code time}.","lastModifiedDate":"2022-03-17"},{"lineNumber":348,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":349,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":350,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2022-03-17"},{"lineNumber":351,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":352,"author":{"gitId":"juslam19"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":353,"author":{"gitId":"juslam19"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-15"},{"lineNumber":354,"author":{"gitId":"juslam19"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":357,"author":{"gitId":"juslam19"},"content":"        return new Time(time);","lastModifiedDate":"2022-03-15"},{"lineNumber":358,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":359,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":361,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String date} into an {@code date}.","lastModifiedDate":"2022-03-17"},{"lineNumber":362,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":363,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":364,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-03-17"},{"lineNumber":365,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":366,"author":{"gitId":"juslam19"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":367,"author":{"gitId":"juslam19"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-15"},{"lineNumber":368,"author":{"gitId":"juslam19"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":369,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":370,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":371,"author":{"gitId":"juslam19"},"content":"        return new Date(date);","lastModifiedDate":"2022-03-15"},{"lineNumber":372,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":373,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":374,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":375,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String diagnosis} into an {@code consultationDiagnosis}.","lastModifiedDate":"2022-03-28"},{"lineNumber":376,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":377,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":378,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code consultationDiagnosis} is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":379,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":380,"author":{"gitId":"juslam19"},"content":"    public static ConsultationDiagnosis parseDiagnosis(String diagnosis) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":381,"author":{"gitId":"juslam19"},"content":"        return new ConsultationDiagnosis(diagnosis);","lastModifiedDate":"2022-03-28"},{"lineNumber":382,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":383,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":384,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":385,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String fee} into an {@code consultationFee}.","lastModifiedDate":"2022-03-28"},{"lineNumber":386,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":387,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":388,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code consultationFee} is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":390,"author":{"gitId":"juslam19"},"content":"    public static ConsultationFee parseFee(String fee) {","lastModifiedDate":"2022-03-28"},{"lineNumber":391,"author":{"gitId":"juslam19"},"content":"        return new ConsultationFee(fee);","lastModifiedDate":"2022-03-28"},{"lineNumber":392,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":393,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":394,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":395,"author":{"gitId":"juslam19"},"content":"     * Parses a {@code String notes} into an {@code consultationNotes}.","lastModifiedDate":"2022-03-28"},{"lineNumber":396,"author":{"gitId":"juslam19"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-17"},{"lineNumber":397,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-17"},{"lineNumber":398,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the given {@code consultationNotes} is invalid.","lastModifiedDate":"2022-03-28"},{"lineNumber":399,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":400,"author":{"gitId":"juslam19"},"content":"    public static ConsultationNotes parseNotes(String notes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":401,"author":{"gitId":"juslam19"},"content":"        return new ConsultationNotes(notes);","lastModifiedDate":"2022-03-28"},{"lineNumber":402,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":403,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":404,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":405,"author":{"gitId":"joey-chance"},"content":"     * Parses a {@code String testDate} into a {@code TestDate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":406,"author":{"gitId":"joey-chance"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":407,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":408,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the given {@code testDate} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":409,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":410,"author":{"gitId":"joey-chance"},"content":"    public static TestDate parseTestDate(String testDate) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":411,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(testDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":412,"author":{"gitId":"joey-chance"},"content":"        String trimmedName \u003d testDate.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":413,"author":{"gitId":"joey-chance"},"content":"        if (!TestDate.isValidTestDate(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":414,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(TestDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":415,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":416,"author":{"gitId":"joey-chance"},"content":"        return new TestDate(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":417,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":418,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":419,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":420,"author":{"gitId":"joey-chance"},"content":"     * Parses a {@code String medicalTest} into a {@code MedicalTest}.","lastModifiedDate":"2022-03-15"},{"lineNumber":421,"author":{"gitId":"joey-chance"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":422,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":423,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the given {@code medicalTest} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":424,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":425,"author":{"gitId":"joey-chance"},"content":"    public static MedicalTest parseMedicalTest(String medicalTest) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":426,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(medicalTest);","lastModifiedDate":"2022-03-15"},{"lineNumber":427,"author":{"gitId":"joey-chance"},"content":"        String trimmedName \u003d medicalTest.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":428,"author":{"gitId":"joey-chance"},"content":"        if (!MedicalTest.isValidMedicalTest(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":429,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(MedicalTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":430,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":431,"author":{"gitId":"joey-chance"},"content":"        return new MedicalTest(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":432,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":433,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":434,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":435,"author":{"gitId":"joey-chance"},"content":"     * Parses a {@code String result} into a {@code Result}.","lastModifiedDate":"2022-03-15"},{"lineNumber":436,"author":{"gitId":"joey-chance"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-15"},{"lineNumber":437,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":438,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the given {@code result} is invalid.","lastModifiedDate":"2022-03-15"},{"lineNumber":439,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":440,"author":{"gitId":"joey-chance"},"content":"    public static Result parseResult(String result) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":441,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(result);","lastModifiedDate":"2022-03-15"},{"lineNumber":442,"author":{"gitId":"joey-chance"},"content":"        String trimmedName \u003d result.trim();","lastModifiedDate":"2022-03-15"},{"lineNumber":443,"author":{"gitId":"joey-chance"},"content":"        if (!Result.isValidResult(trimmedName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":444,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(Result.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":445,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":446,"author":{"gitId":"joey-chance"},"content":"        return new Result(trimmedName);","lastModifiedDate":"2022-03-15"},{"lineNumber":447,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":448,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cheekean5848":49,"sibinhho99-nus":146,"juslam19":86,"-":120,"joey-chance":47}},{"path":"src/main/java/seedu/address/logic/parser/consultations/AddConsultationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.parser.consultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.consultation.AddConsultationCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Time;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"public class AddConsultationCommandParser implements Parser\u003cAddConsultationCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"     * Parses the given {@code String} of arguments in the context of the AddConsultationCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     * and returns an AddConsultationCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    public AddConsultationCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC, PREFIX_DATE, PREFIX_TIME, PREFIX_DIAGNOSIS,","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"                        PREFIX_FEE, PREFIX_NOTES);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC, PREFIX_DATE, PREFIX_TIME, PREFIX_NOTES,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"                PREFIX_DIAGNOSIS, PREFIX_FEE, PREFIX_NOTES)","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddConsultationCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        Nric ownerNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"        Time time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        ConsultationDiagnosis diagnosis \u003d ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        ConsultationFee fee \u003d ParserUtil.parseFee(argMultimap.getValue(PREFIX_FEE).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"        ConsultationNotes notes \u003d ParserUtil.parseNotes(argMultimap.getValue(PREFIX_NOTES).get());","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(ownerNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        Consultation consultation \u003d new Consultation(ownerNric, date, time, diagnosis, fee, notes);","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"        return new AddConsultationCommand(ownerNric, consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"juslam19":66,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/consultations/DeleteConsultationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.parser.consultations;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.consultation.DeleteConsultationCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"public class DeleteConsultationCommandParser {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteConsultationCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"     * and returns an DeleteConsultationCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    public DeleteConsultationCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"            Index targetIndex \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"            return new DeleteConsultationCommand(targetIndex);","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteConsultationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"juslam19":39}},{"path":"src/main/java/seedu/address/logic/parser/consultations/EditConsultationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.parser.consultations;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTES;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.consultation.EditConsultationCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":" * Parses input arguments and creates a new EditConsultationCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"public class EditConsultationCommandParser {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"     * Parses the given {@code String} of arguments in the context of the EditConsultationCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     * and returns an EditConsultationCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"    public EditConsultationCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_DATE,","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"                    PREFIX_TIME, PREFIX_DIAGNOSIS, PREFIX_FEE, PREFIX_NOTES);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"            EditConsultationCommand.EditConsultationDescriptor editConsultationDescriptor \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"                    new EditConsultationCommand.EditConsultationDescriptor();","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setNric(ParserUtil.parseNric(","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setDate(ParserUtil.parseDate(","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setTime(ParserUtil.parseTime(","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setDiagnosis(ParserUtil.parseDiagnosis(","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_DIAGNOSIS).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_FEE).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setFee(ParserUtil.parseFee(","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_FEE).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"            if (argMultimap.getValue(PREFIX_NOTES).isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"                editConsultationDescriptor.setNotes(ParserUtil.parseNotes(","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"                        argMultimap.getValue(PREFIX_NOTES).get()));","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"            return new EditConsultationCommand(index, editConsultationDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditConsultationCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"juslam19":70}},{"path":"src/main/java/seedu/address/logic/parser/consultations/ViewConsultationCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.logic.parser.consultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.consultation.ViewConsultationCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"public class ViewConsultationCommandParser {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewConsultationCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"     * and returns an ViewConsultationCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    public ViewConsultationCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC)","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"                        ViewConsultationCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"        Nric ownerNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(ownerNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"        return new ViewConsultationCommand(ownerNric);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"juslam19":45,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/contact/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.logic.parser.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.contact.AddContactCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactCommand","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     * and returns an AddContactCommand object for execution.","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"                PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        Nric ownerNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(ownerNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        Contact contact \u003d new Contact(ownerNric, name, phone, email, address, tagList);","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        return new AddContactCommand(ownerNric, contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-29"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"cheekean5848":2,"clement0010":64,"joey-chance":3}},{"path":"src/main/java/seedu/address/logic/parser/contact/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.logic.parser.contact;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.contact.DeleteContactCommand;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":" * Parses input arguments and creates a new DeleteContactCommand object","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"public class DeleteContactCommandParser {","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteContactCommand","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"     * and returns a DeleteContactCommand object for execution.","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        try {","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"clement0010":29}},{"path":"src/main/java/seedu/address/logic/parser/contact/ViewContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.logic.parser.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.commands.contact.ViewContactCommand;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"public class ViewContactCommandParser {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewContactCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"     * and returns an ViewContactCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    public ViewContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC)","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        Nric ownerNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(ownerNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        return new ViewContactCommand(ownerNric);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":4,"clement0010":40,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/medical/AddMedicalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNICITY;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_HISTORY;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMMUNIZATION_HISTORY;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURGERIES;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.medical.AddMedicalCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Age;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.BloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.FamilyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Height;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.ImmunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"public class AddMedicalCommandParser implements Parser\u003cAddMedicalCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String EMPTY_PLACEHOLDER \u003d \"nil\";","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"     * and returns an AddContactCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"    public AddMedicalCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"        ArgumentMultimap argMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC, PREFIX_AGE, PREFIX_BLOODTYPE,","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"                PREFIX_MEDICATION, PREFIX_HEIGHT, PREFIX_WEIGHT, PREFIX_ILLNESSES, PREFIX_SURGERIES,","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"                PREFIX_FAMILY_HISTORY, PREFIX_IMMUNIZATION_HISTORY, PREFIX_GENDER, PREFIX_ETHNICITY);","lastModifiedDate":"2022-03-27"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddMedicalCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"        Age age \u003d ParserUtil.parseAge(","lastModifiedDate":"2022-03-27"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_AGE).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"        BloodType bloodtype \u003d ParserUtil.parseBloodType(","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_BLOODTYPE).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"        Medication medication \u003d ParserUtil.parseMedication(","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_MEDICATION).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"        Height height \u003d ParserUtil.parseHeight(","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_HEIGHT).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"        Weight weight \u003d ParserUtil.parseWeight(","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_WEIGHT).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"        Illnesses illnesses \u003d ParserUtil.parseIllnesses(","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_ILLNESSES).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"        Surgeries surgeries \u003d ParserUtil.parseSurgeries(","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_SURGERIES).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"        FamilyHistory familyHistory \u003d ParserUtil.parseFamilyHistory(","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_FAMILY_HISTORY).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"        ImmunizationHistory immunizationHistory \u003d ParserUtil.parseImmunizationHistory(","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_IMMUNIZATION_HISTORY).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"        Gender gender \u003d ParserUtil.parseGender(","lastModifiedDate":"2022-03-27"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_GENDER).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"        Ethnicity ethnicity \u003d ParserUtil.parseEthnicity(","lastModifiedDate":"2022-03-27"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"                argMultimap.getValue(PREFIX_ETHNICITY).orElse(EMPTY_PLACEHOLDER));","lastModifiedDate":"2022-03-27"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"        Medical medical \u003d new Medical(patientNric, age, bloodtype, medication, height, weight, illnesses, surgeries,","lastModifiedDate":"2022-03-27"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"                familyHistory, immunizationHistory, gender, ethnicity);","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(patientNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"        return new AddMedicalCommand(patientNric, medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":97,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/medical/DeleteMedicalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.medical.DeleteMedicalCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":" * Parses input arguments and creates a new DeleteMedicalCommand object","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"public class DeleteMedicalCommandParser {","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMedicalCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"     * and returns a DeleteMedicalCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    public DeleteMedicalCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"            return new DeleteMedicalCommand(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"sibinhho99-nus":30}},{"path":"src/main/java/seedu/address/logic/parser/medical/EditMedicalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BLOODTYPE;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNICITY;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FAMILY_HISTORY;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEIGHT;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ILLNESSES;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMMUNIZATION_HISTORY;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICATION;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURGERIES;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHT;","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.medical.EditMedicalCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":" * Parses input arguments and creates a new EditMedicalCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"public class EditMedicalCommandParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMedicalCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"     * and returns an EditMedicalCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    public EditMedicalCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_NRIC,","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_AGE,","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_BLOODTYPE,","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_MEDICATION,","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_HEIGHT,","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_WEIGHT,","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_ILLNESSES,","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_SURGERIES,","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_FAMILY_HISTORY,","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_IMMUNIZATION_HISTORY,","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_GENDER,","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                    PREFIX_ETHNICITY);","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"            EditMedicalCommand.EditMedicalDescriptor editMedicalDescriptor \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"                    new EditMedicalCommand.EditMedicalDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setAge(ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_BLOODTYPE).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setBloodType(","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseBloodType(argMultimap.getValue(PREFIX_BLOODTYPE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_MEDICATION).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setMedication(","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseMedication(argMultimap.getValue(PREFIX_MEDICATION).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_HEIGHT).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setHeight(ParserUtil.parseHeight(argMultimap.getValue(PREFIX_HEIGHT).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_WEIGHT).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setWeight(ParserUtil.parseWeight(argMultimap.getValue(PREFIX_WEIGHT).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_ILLNESSES).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setIllnesses(","lastModifiedDate":"2022-03-25"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseIllnesses(argMultimap.getValue(PREFIX_ILLNESSES).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_SURGERIES).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setSurgeries(","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseSurgeries(argMultimap.getValue(PREFIX_SURGERIES).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_FAMILY_HISTORY).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setFamilyHistory(","lastModifiedDate":"2022-03-25"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseFamilyHistory(argMultimap.getValue(PREFIX_FAMILY_HISTORY).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_IMMUNIZATION_HISTORY).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setImmunizationHistory(","lastModifiedDate":"2022-03-25"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseImmunizationHistory(argMultimap.getValue(PREFIX_IMMUNIZATION_HISTORY).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"            if (argMultimap.getValue(PREFIX_ETHNICITY).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"                editMedicalDescriptor.setEthnicity(","lastModifiedDate":"2022-03-25"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"                        ParserUtil.parseEthnicity(argMultimap.getValue(PREFIX_ETHNICITY).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"sibinhho99-nus"},"content":"            return new EditMedicalCommand(index, editMedicalDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMedicalCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":106,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":107,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"sibinhho99-nus":107}},{"path":"src/main/java/seedu/address/logic/parser/medical/ViewMedicalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.logic.parser.medical;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.commands.medical.ViewMedicalCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"public class ViewMedicalCommandParser {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMedicalCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * and returns an AddMedicalCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    public ViewMedicalCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE)","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"                    ViewMedicalCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"        Nric nric \u003d null;","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NRIC)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"            nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(nric);","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        return new ViewMedicalCommand(nric);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"sibinhho99-nus":51,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/prescription/AddPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.parser.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUCTION;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.prescription.AddPrescriptionCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.DrugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"public class AddPrescriptionCommandParser implements Parser\u003cAddPrescriptionCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPrescriptionCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"     * and returns an AddPrescriptionCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"    public AddPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC, PREFIX_NAME, PREFIX_DATE,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"                        PREFIX_INSTRUCTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC, PREFIX_NAME,","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"                PREFIX_DATE, PREFIX_INSTRUCTION)","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"                    AddPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        DrugName drugName \u003d ParserUtil.parseDrugName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        PrescriptionDate date \u003d ParserUtil.parsePrescriptionDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"        Instruction instruction \u003d ParserUtil.parseInstruction(argMultimap.getValue(PREFIX_INSTRUCTION).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"        Prescription prescription \u003d new Prescription(nric, drugName, date, instruction);","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(nric);","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        return new AddPrescriptionCommand(nric, prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":61,"joey-chance":3}},{"path":"src/main/java/seedu/address/logic/parser/prescription/DeletePrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.parser.prescription;","lastModifiedDate":"2022-03-18"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.prescription.DeletePrescriptionCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"public class DeletePrescriptionCommandParser {","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePrescriptionCommand","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"     * and returns a DeletePrescriptionCommand object for execution.","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    public DeletePrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"        try {","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"            return new DeletePrescriptionCommand(index);","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"cheekean5848":28}},{"path":"src/main/java/seedu/address/logic/parser/prescription/EditPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.parser.prescription;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSTRUCTION;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.prescription.EditPrescriptionCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":" * Parses input arguments and creates a new EditPrescriptionCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"public class EditPrescriptionCommandParser {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPrescriptionCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"     * and returns an EditPrescriptionCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    public EditPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"        try {","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_DATE,","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"                    PREFIX_INSTRUCTION);","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"            EditPrescriptionCommand.EditPrescriptionDescriptor editPrescriptionDescriptor \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"                    new EditPrescriptionCommand.EditPrescriptionDescriptor();","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"            if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"            if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor.setDrugName(ParserUtil.parseDrugName(","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"                        argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"            if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor.setPrescriptionDate(ParserUtil.parsePrescriptionDate(","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"                        argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"            if (argMultimap.getValue(PREFIX_INSTRUCTION).isPresent()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"                editPrescriptionDescriptor","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"                        .setResult(ParserUtil.parseInstruction(argMultimap.getValue(PREFIX_INSTRUCTION).get()));","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"            return new EditPrescriptionCommand(index, editPrescriptionDescriptor);","lastModifiedDate":"2022-03-29"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-29"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPrescriptionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-29"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"cheekean5848":60}},{"path":"src/main/java/seedu/address/logic/parser/prescription/ViewPrescriptionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.logic.parser.prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.prescription.ViewPrescriptionCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"public class ViewPrescriptionCommandParser {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewPrescriptionCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"     * and returns an AddContactCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    public ViewPrescriptionCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC)","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"                    ViewPrescriptionCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(nric);","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        return new ViewPrescriptionCommand(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":47,"joey-chance":2}},{"path":"src/main/java/seedu/address/logic/parser/testresult/AddTestResultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.parser.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALTEST;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESULT;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TESTDATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.testresult.AddTestResultCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.MedicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.Result;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"public class AddTestResultCommandParser implements Parser\u003cAddTestResultCommand\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTestResultCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"     * and returns an AddTestResultCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    public AddTestResultCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC, PREFIX_TESTDATE, PREFIX_MEDICALTEST,","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"                        PREFIX_RESULT);","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC, PREFIX_TESTDATE, PREFIX_MEDICALTEST,","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"                PREFIX_RESULT)","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTestResultCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        TestDate testDate \u003d ParserUtil.parseTestDate(argMultimap.getValue(PREFIX_TESTDATE).get());","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        MedicalTest medicalTest \u003d ParserUtil.parseMedicalTest(argMultimap.getValue(PREFIX_MEDICALTEST).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        Result result \u003d ParserUtil.parseResult(argMultimap.getValue(PREFIX_RESULT).get());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"        TestResult testResult \u003d new TestResult(patientNric, testDate, medicalTest, result);","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(patientNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"        return new AddTestResultCommand(patientNric, testResult);","lastModifiedDate":"2022-03-29"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":62}},{"path":"src/main/java/seedu/address/logic/parser/testresult/DeleteTestResultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.parser.testresult;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.testresult.DeleteTestResultCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"public class DeleteTestResultCommandParser implements Parser\u003cDeleteTestResultCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTestResultCommand","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"     * and returns a DeleteTestResultCommand object for execution.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    public DeleteTestResultCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"            return new DeleteTestResultCommand(index);","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTestResultCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"joey-chance":31}},{"path":"src/main/java/seedu/address/logic/parser/testresult/EditTestResultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.parser.testresult;","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICALTEST;","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RESULT;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TESTDATE;","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.testresult.EditTestResultCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":" * Parses input arguments and creates a new EditTestResultCommand object","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"public class EditTestResultCommandParser {","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTestResultCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     * and returns an EditTestResultCommand object for execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"    public EditTestResultCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_TESTDATE,","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"                    PREFIX_MEDICALTEST, PREFIX_RESULT);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"            EditTestResultCommand.EditTestResultDescriptor editTestResultDescriptor \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"                    new EditTestResultCommand.EditTestResultDescriptor();","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"            if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"            if (argMultimap.getValue(PREFIX_TESTDATE).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.setTestDate(ParserUtil.parseTestDate(","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"                        argMultimap.getValue(PREFIX_TESTDATE).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"            if (argMultimap.getValue(PREFIX_MEDICALTEST).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.setMedicalTest(ParserUtil.parseMedicalTest(","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"                        argMultimap.getValue(PREFIX_MEDICALTEST).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"            if (argMultimap.getValue(PREFIX_RESULT).isPresent()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"                editTestResultDescriptor.setResult(ParserUtil.parseResult(argMultimap.getValue(PREFIX_RESULT).get()));","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"            return new EditTestResultCommand(index, editTestResultDescriptor);","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTestResultCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"joey-chance":58}},{"path":"src/main/java/seedu/address/logic/parser/testresult/FindTestResultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.parser.testresult;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.testresult.FindTestResultCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResultContainsKeywordsPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":" * Parses input arguments and creates a new FindTestResultCommand object","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"public class FindTestResultCommandParser implements Parser\u003cFindTestResultCommand\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTestResultCommand","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"     * and returns a FindTestResultCommand object for execution.","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    public FindTestResultCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTestResultCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"        return new FindTestResultCommand(new TestResultContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"joey-chance":34}},{"path":"src/main/java/seedu/address/logic/parser/testresult/ViewTestResultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.logic.parser.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TYPE;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.testresult.ViewTestResultCommand;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"public class ViewTestResultCommandParser {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewTestResultCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"     * and returns an ViewTestResultCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public ViewTestResultCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TYPE, PREFIX_NRIC);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TYPE, PREFIX_NRIC)","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"                    ViewTestResultCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        Nric patientNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"        ViewedNric.setViewedNric(patientNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"        return new ViewTestResultCommand(patientNric);","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":48}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.UniqueConsultationList;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.UniqueContactList;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.UniqueMedicalList;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.UniquePersonList;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.UniquePrescriptionList;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.UniqueTestResultList;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    private final UniqueContactList contacts;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    private final UniqueConsultationList consultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    private final UniquePrescriptionList prescriptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    private final UniqueTestResultList testResults;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    private final UniqueMedicalList medicals;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        consultations \u003d new UniqueConsultationList();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"        prescriptions \u003d new UniquePrescriptionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        testResults \u003d new UniqueTestResultList();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        medicals \u003d new UniqueMedicalList();","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"    public void setPersons(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        this.persons.setPersons(patients);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"        setMedicals(newData.getMedicalList());","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"        setConsultations(newData.getConsultationList());","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"        setPrescriptions(newData.getPrescriptionList());","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"joey-chance"},"content":"        setTestResults(newData.getTestResultList());","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"cheekean5848"},"content":"    public boolean hasPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"cheekean5848"},"content":"        return persons.contains(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"    public void addPerson(Patient p) {","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"    public void addPrescription(Prescription p) {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"        prescriptions.add(p);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"    public void removePrescription(Prescription key) {","lastModifiedDate":"2022-03-18"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"        prescriptions.remove(key);","lastModifiedDate":"2022-03-18"},{"lineNumber":108,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":109,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"cheekean5848"},"content":"     * Returns true if a prescription with the same identity as {@code prescription} exists in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"cheekean5848"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"cheekean5848"},"content":"        return prescriptions.contains(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"cheekean5848"},"content":"        this.prescriptions.setPrescriptions(prescriptions);","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(editedPrescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"cheekean5848"},"content":"        prescriptions.setPrescription(target, editedPrescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"cheekean5848"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"cheekean5848"},"content":"        persons.setPerson(target, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"cheekean5848"},"content":"    public void removePerson(Patient key) {","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"juslam19"},"content":"     * Replaces the contents of the contact list with {@code contacts}.","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"juslam19"},"content":"     * {@code contacts} must not contain duplicate contacts.","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"juslam19"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"juslam19"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":152,"author":{"gitId":"juslam19"},"content":"    //// consultation-level operations","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"juslam19"},"content":"     * Returns true if a consultation with the same identity as {@code consultation} exists in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"juslam19"},"content":"    public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"juslam19"},"content":"        requireNonNull(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"juslam19"},"content":"        return consultations.contains(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"juslam19"},"content":"     * Adds a consultation to the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"juslam19"},"content":"     * The consultation must not already exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"juslam19"},"content":"    public void addConsultation(Consultation p) {","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"juslam19"},"content":"        consultations.add(p);","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"juslam19"},"content":"     * Replaces the given consultation {@code target} in the list with {@code editedConsultation}.","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"juslam19"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"juslam19"},"content":"     * The consultation identity of {@code editedConsultation} must not be the same","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"juslam19"},"content":"     * as another existing consultation in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"juslam19"},"content":"    public void setConsultation(Consultation target, Consultation editedConsultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"juslam19"},"content":"        requireNonNull(editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"juslam19"},"content":"        consultations.setConsultation(target, editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":182,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":183,"author":{"gitId":"juslam19"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-15"},{"lineNumber":184,"author":{"gitId":"juslam19"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"juslam19"},"content":"    public void removeConsultation(Consultation key) {","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"juslam19"},"content":"        consultations.remove(key);","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"juslam19"},"content":"     * Replaces the contents of the consultations list with {@code consultations}.","lastModifiedDate":"2022-03-17"},{"lineNumber":192,"author":{"gitId":"juslam19"},"content":"     * {@code consultations} must not contain duplicate consultations.","lastModifiedDate":"2022-03-17"},{"lineNumber":193,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"juslam19"},"content":"    public void setConsultations(List\u003cConsultation\u003e consultations) {","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"juslam19"},"content":"        this.consultations.setConsultations(consultations);","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"juslam19"},"content":"    //// contact-level operations","lastModifiedDate":"2022-03-14"},{"lineNumber":199,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":200,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"juslam19"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":202,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":203,"author":{"gitId":"juslam19"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":204,"author":{"gitId":"juslam19"},"content":"        requireNonNull(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":205,"author":{"gitId":"juslam19"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":206,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":207,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":208,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":209,"author":{"gitId":"juslam19"},"content":"     * Adds a contact to the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":210,"author":{"gitId":"juslam19"},"content":"     * The contact must not already exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":211,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":212,"author":{"gitId":"juslam19"},"content":"    public void addContact(Contact p) {","lastModifiedDate":"2022-03-14"},{"lineNumber":213,"author":{"gitId":"juslam19"},"content":"        contacts.add(p);","lastModifiedDate":"2022-03-14"},{"lineNumber":214,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":215,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":216,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":217,"author":{"gitId":"juslam19"},"content":"     * Replaces the given contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2022-03-14"},{"lineNumber":218,"author":{"gitId":"juslam19"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"juslam19"},"content":"     * The contact identity of {@code editedContact} must not be the same","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"juslam19"},"content":"     * as another existing contact in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"juslam19"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"juslam19"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"juslam19"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"juslam19"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"juslam19"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"juslam19"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"juslam19"},"content":"        contacts.remove(key);","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":239,"author":{"gitId":"joey-chance"},"content":"     * Replaces the contents of the test results list with {@code testResults}.","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"joey-chance"},"content":"     * {@code testResults} must not contain duplicate test results.","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"joey-chance"},"content":"    public void setTestResults(List\u003cTestResult\u003e testResults) {","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"joey-chance"},"content":"        this.testResults.setTestResults(testResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":245,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":246,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"joey-chance"},"content":"     * Replaces the given test result {@code target} in the list with {@code editedTestResults}.","lastModifiedDate":"2022-03-16"},{"lineNumber":248,"author":{"gitId":"joey-chance"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"joey-chance"},"content":"     * The test result identity of {@code editedTestResults} must not be the same","lastModifiedDate":"2022-03-16"},{"lineNumber":250,"author":{"gitId":"joey-chance"},"content":"     * as another existing test result in the address book.","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":252,"author":{"gitId":"joey-chance"},"content":"    public void setTestResults(TestResult target, TestResult editedTestResults) {","lastModifiedDate":"2022-03-16"},{"lineNumber":253,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(editedTestResults);","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"joey-chance"},"content":"        testResults.setTestResult(target, editedTestResults);","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":256,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"joey-chance"},"content":"    //// contact-level operations","lastModifiedDate":"2022-03-15"},{"lineNumber":258,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":259,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":260,"author":{"gitId":"joey-chance"},"content":"     * Returns true if a test result with the same identity as {@code testResult} exists in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":261,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"joey-chance"},"content":"    public boolean hasTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"joey-chance"},"content":"        return testResults.contains(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"joey-chance"},"content":"     * Adds a test result to the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"joey-chance"},"content":"     * The test result must not already exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"joey-chance"},"content":"    public void addTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"joey-chance"},"content":"        testResults.add(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"joey-chance"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"joey-chance"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"joey-chance"},"content":"    public void removeTestResult(TestResult key) {","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"joey-chance"},"content":"        testResults.remove(key);","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"juslam19"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2022-03-14"},{"lineNumber":286,"author":{"gitId":"juslam19"},"content":"                + contacts.asUnmodifiableObservableList().size() + \" contacts\"","lastModifiedDate":"2022-03-16"},{"lineNumber":287,"author":{"gitId":"juslam19"},"content":"                + consultations.asUnmodifiableObservableList().size() + \" consultations\"","lastModifiedDate":"2022-03-17"},{"lineNumber":288,"author":{"gitId":"joey-chance"},"content":"                + testResults.asUnmodifiableObservableList().size() + \" test results\";","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":297,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"sibinhho99-nus"},"content":"    public ObservableList\u003cMedical\u003e getMedicalList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"sibinhho99-nus"},"content":"        return medicals.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":302,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":303,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":304,"author":{"gitId":"juslam19"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-14"},{"lineNumber":305,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cConsultation\u003e getConsultationList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"juslam19"},"content":"        return consultations.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-15"},{"lineNumber":310,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":311,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPrescription\u003e getPrescriptionList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":313,"author":{"gitId":"cheekean5848"},"content":"        return prescriptions.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-14"},{"lineNumber":314,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":315,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":316,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"joey-chance"},"content":"    public ObservableList\u003cTestResult\u003e getTestResultList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"joey-chance"},"content":"        return testResults.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-15"},{"lineNumber":319,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":320,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":325,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons))","lastModifiedDate":"2022-03-14"},{"lineNumber":326,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 contacts.equals(((AddressBook) other).contacts)","lastModifiedDate":"2022-03-16"},{"lineNumber":327,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 consultations.equals(((AddressBook) other).consultations)","lastModifiedDate":"2022-03-17"},{"lineNumber":328,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 testResults.equals(((AddressBook) other).testResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":335,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"sibinhho99-nus"},"content":"     * Adds medical information to the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":339,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":340,"author":{"gitId":"sibinhho99-nus"},"content":"    public void addMedical(Medical m) {","lastModifiedDate":"2022-03-15"},{"lineNumber":341,"author":{"gitId":"sibinhho99-nus"},"content":"        medicals.add(m);","lastModifiedDate":"2022-03-15"},{"lineNumber":342,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":343,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":344,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":345,"author":{"gitId":"sibinhho99-nus"},"content":"     * Removes {@code key} from this {@code MedBook}.","lastModifiedDate":"2022-03-17"},{"lineNumber":346,"author":{"gitId":"sibinhho99-nus"},"content":"     * {@code key} must exist in MedBook.","lastModifiedDate":"2022-03-17"},{"lineNumber":347,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":348,"author":{"gitId":"sibinhho99-nus"},"content":"    public void removeMedical(Medical key) {","lastModifiedDate":"2022-03-17"},{"lineNumber":349,"author":{"gitId":"sibinhho99-nus"},"content":"        medicals.remove(key);","lastModifiedDate":"2022-03-17"},{"lineNumber":350,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":351,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":352,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":353,"author":{"gitId":"sibinhho99-nus"},"content":"    public void setMedical(Medical target, Medical editedMedical) {","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(editedMedical);","lastModifiedDate":"2022-03-16"},{"lineNumber":355,"author":{"gitId":"sibinhho99-nus"},"content":"        medicals.setMedical(target, editedMedical);","lastModifiedDate":"2022-03-16"},{"lineNumber":356,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":357,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":358,"author":{"gitId":"sibinhho99-nus"},"content":"    public void setMedicals(List\u003cMedical\u003e medicals) {","lastModifiedDate":"2022-03-20"},{"lineNumber":359,"author":{"gitId":"sibinhho99-nus"},"content":"        this.medicals.setMedicals(medicals);","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"sibinhho99-nus"},"content":"     * Checks if medical information (for patient with same NRIC) already exists.","lastModifiedDate":"2022-03-15"},{"lineNumber":364,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":365,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean hasMedical(Medical m) {","lastModifiedDate":"2022-03-15"},{"lineNumber":366,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(m);","lastModifiedDate":"2022-03-15"},{"lineNumber":367,"author":{"gitId":"sibinhho99-nus"},"content":"        return medicals.contains(m);","lastModifiedDate":"2022-03-15"},{"lineNumber":368,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheekean5848":41,"sibinhho99-nus":43,"juslam19":122,"-":106,"joey-chance":57}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    Predicate\u003cConsultation\u003e PREDICATE_SHOW_ALL_CONSULTATIONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    Predicate\u003cPrescription\u003e PREDICATE_SHOW_ALL_PRESCRIPTIONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_CONTACTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    Predicate\u003cTestResult\u003e PREDICATE_SHOW_ALL_TEST_RESULTS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"    Predicate\u003cMedical\u003e PREDICATE_SHOW_ALL_MEDICALS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"    boolean hasPerson(Patient patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"    boolean hasPerson(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"    void deletePerson(Patient target);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"cheekean5848"},"content":"    void addPerson(Patient patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"    void addPrescription(Prescription prescription);","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"    void deletePrescription(Prescription target);","lastModifiedDate":"2022-03-18"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"    boolean hasPrescription(Prescription prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"    void setPrescription(Prescription target, Prescription editedPrescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"cheekean5848"},"content":"    void setPerson(Patient target, Patient editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"    ObservableList\u003cPatient\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"    ObservableList\u003cMedical\u003e getFilteredMedicalList();","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"    ObservableList\u003cPrescription\u003e getFilteredPrescriptionList();","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"    /** Returns the person list **/","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"    ObservableList\u003cPatient\u003e getPersonList();","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"    void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"juslam19"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"     * Deletes the given contact.","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"     * The contact must exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"juslam19"},"content":"    void deleteContact(Contact target);","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"juslam19"},"content":"     * Adds the given contact.","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"juslam19"},"content":"     * {@code contact} must not already exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"juslam19"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"juslam19"},"content":"     * Replaces the given contact {@code target} with {@code editedContact}.","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"juslam19"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"juslam19"},"content":"     * The contact identity of {@code editedContact} must not be the same","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"juslam19"},"content":"     * as another existing contact in the address book.","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"juslam19"},"content":"    void setContact(Contact target, Contact editedContact);","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":143,"author":{"gitId":"juslam19"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2022-03-14"},{"lineNumber":144,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":145,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":146,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"juslam19"},"content":"     * Updates the filter of the filtered contact list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"juslam19"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"juslam19"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"juslam19"},"content":"    // Consultation","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"cheekean5848"},"content":"    void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"clement0010"},"content":"    // Consultation","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"clement0010"},"content":"     * Returns true if a consultation with the same identity as {@code consultation} exists in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"clement0010"},"content":"    boolean hasConsultation(Consultation consultation);","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"clement0010"},"content":"     * Deletes the given consultation.","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"clement0010"},"content":"     * The consultation must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"clement0010"},"content":"    void deleteConsultation(Consultation target);","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"clement0010"},"content":"     * Adds the given consultation.","lastModifiedDate":"2022-03-19"},{"lineNumber":172,"author":{"gitId":"clement0010"},"content":"     * {@code consultation} must not already exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":173,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"clement0010"},"content":"    void addConsultation(Consultation consultation);","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"clement0010"},"content":"     * Replaces the given consultation {@code target} with {@code editedConsultation}.","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"clement0010"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"clement0010"},"content":"     * The consultation identity of {@code editedConsultation} must not be the same","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"clement0010"},"content":"     * as another existing consultation in the address book.","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"clement0010"},"content":"    void setConsultation(Consultation target, Consultation editedConsultation);","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"clement0010"},"content":"    /** Returns an unmodifiable view of the filtered consultation list */","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"clement0010"},"content":"    ObservableList\u003cConsultation\u003e getFilteredConsultationList();","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"clement0010"},"content":"     * Updates the filter of the filtered consultation list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"clement0010"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"clement0010"},"content":"    void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate);","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"joey-chance"},"content":"     * Returns true if a test result with the same identity as {@code testResult} exists in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":195,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":196,"author":{"gitId":"joey-chance"},"content":"    boolean hasTestResult(TestResult testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":197,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":198,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":199,"author":{"gitId":"joey-chance"},"content":"     * Deletes the given test result.","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"joey-chance"},"content":"     * The test result must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":201,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":202,"author":{"gitId":"joey-chance"},"content":"    void deleteTestResult(TestResult testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":203,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"joey-chance"},"content":"     * Adds the given test result.","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"joey-chance"},"content":"     * {@code testResult} must not already exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"joey-chance"},"content":"    void addTestResult(TestResult testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":209,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":210,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":211,"author":{"gitId":"joey-chance"},"content":"     * Replaces the given testResult {@code target} with {@code editedTestResult}.","lastModifiedDate":"2022-03-15"},{"lineNumber":212,"author":{"gitId":"joey-chance"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"joey-chance"},"content":"     * The test result identity of {@code editedTestResult} must not be the same","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"joey-chance"},"content":"     * as another existing test result in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"joey-chance"},"content":"    void setTestResult(TestResult target, TestResult editedTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"joey-chance"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2022-03-15"},{"lineNumber":219,"author":{"gitId":"joey-chance"},"content":"    ObservableList\u003cTestResult\u003e getFilteredTestResultList();","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":221,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":222,"author":{"gitId":"joey-chance"},"content":"     * Updates the filter of the filtered test result list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":223,"author":{"gitId":"joey-chance"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":224,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":225,"author":{"gitId":"joey-chance"},"content":"    void updateFilteredTestResultList(Predicate\u003cTestResult\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":226,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":227,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":228,"author":{"gitId":"sibinhho99-nus"},"content":"     * Adds the given medical information.","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"sibinhho99-nus"},"content":"     * {@code medical} must not already exist in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"sibinhho99-nus"},"content":"    void addMedical(Medical medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"    boolean hasMedical(Medical medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"    void deleteMedical(Medical medical);","lastModifiedDate":"2022-03-17"},{"lineNumber":236,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":237,"author":{"gitId":"sibinhho99-nus"},"content":"    void setMedical(Medical target, Medical editedMedical);","lastModifiedDate":"2022-03-25"},{"lineNumber":238,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":239,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":240,"author":{"gitId":"sibinhho99-nus"},"content":"     * Updates the filter of the filtered medical list to filter by the given {@code predicate}. s","lastModifiedDate":"2022-03-15"},{"lineNumber":241,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-15"},{"lineNumber":242,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":243,"author":{"gitId":"sibinhho99-nus"},"content":"    void updateFilteredMedicalList(Predicate\u003cMedical\u003e predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheekean5848":17,"sibinhho99-nus":21,"clement0010":48,"juslam19":41,"-":81,"joey-chance":36}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    private final FilteredList\u003cConsultation\u003e filteredConsultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    private final FilteredList\u003cPrescription\u003e filteredPrescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    private final FilteredList\u003cMedical\u003e filteredMedicals;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    private final FilteredList\u003cTestResult\u003e filteredTestResults;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        filteredConsultations \u003d new FilteredList\u003c\u003e(this.addressBook.getConsultationList());","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"        filteredPrescription \u003d new FilteredList\u003c\u003e(this.addressBook.getPrescriptionList());","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.addressBook.getContactList());","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"        filteredTestResults \u003d new FilteredList\u003c\u003e(this.addressBook.getTestResultList());","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"        filteredMedicals \u003d new FilteredList\u003c\u003e(this.addressBook.getMedicalList());","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"cheekean5848"},"content":"    public boolean hasPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"cheekean5848"},"content":"        return addressBook.hasPerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"    public boolean hasPerson(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"cheekean5848"},"content":"        return !filteredPatients.filtered(predicate).isEmpty();","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"cheekean5848"},"content":"    public void deletePerson(Patient target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"    public void addPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"cheekean5848"},"content":"        addressBook.addPerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"cheekean5848"},"content":"    public void addPrescription(Prescription prescription) {","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"cheekean5848"},"content":"        addressBook.addPrescription(prescription);","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"cheekean5848"},"content":"        updateFilteredPrescriptionList(PREDICATE_SHOW_ALL_PRESCRIPTIONS);","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":139,"author":{"gitId":"cheekean5848"},"content":"    public void deletePrescription(Prescription prescription) {","lastModifiedDate":"2022-03-18"},{"lineNumber":140,"author":{"gitId":"cheekean5848"},"content":"        addressBook.removePrescription(prescription);","lastModifiedDate":"2022-03-18"},{"lineNumber":141,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"cheekean5848"},"content":"    public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"cheekean5848"},"content":"        return addressBook.hasPrescription(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"cheekean5848"},"content":"        addressBook.setPrescription(target, editedPrescription);","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"cheekean5848"},"content":"        return filteredPrescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"sibinhho99-nus"},"content":"    public void addMedical(Medical medical) {","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"        addressBook.addMedical(medical);","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"        updateFilteredMedicalList(PREDICATE_SHOW_ALL_MEDICALS);","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean hasMedical(Medical medical) {","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(medical);","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"sibinhho99-nus"},"content":"        return addressBook.hasMedical(medical);","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"sibinhho99-nus"},"content":"    public void deleteMedical(Medical target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"sibinhho99-nus"},"content":"        addressBook.removeMedical(target);","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":178,"author":{"gitId":"sibinhho99-nus"},"content":"    public void setMedical(Medical target, Medical editedMedical) {","lastModifiedDate":"2022-03-25"},{"lineNumber":179,"author":{"gitId":"sibinhho99-nus"},"content":"        requireAllNonNull(target, editedMedical);","lastModifiedDate":"2022-03-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":181,"author":{"gitId":"sibinhho99-nus"},"content":"        addressBook.setMedical(target, editedMedical);","lastModifiedDate":"2022-03-25"},{"lineNumber":182,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":183,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":184,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"sibinhho99-nus"},"content":"    public ObservableList\u003cMedical\u003e getFilteredMedicalList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":186,"author":{"gitId":"sibinhho99-nus"},"content":"        return filteredMedicals;","lastModifiedDate":"2022-03-15"},{"lineNumber":187,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":188,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":189,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"cheekean5848"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":191,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":193,"author":{"gitId":"cheekean5848"},"content":"        addressBook.setPerson(target, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"cheekean5848"},"content":"        return filteredPatients;","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":207,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":208,"author":{"gitId":"clement0010"},"content":"    public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"juslam19"},"content":"        return addressBook.getPersonList();","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":213,"author":{"gitId":"cheekean5848"},"content":"    public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":215,"author":{"gitId":"cheekean5848"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":218,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Contact \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":219,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":220,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":221,"author":{"gitId":"juslam19"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":222,"author":{"gitId":"juslam19"},"content":"        requireNonNull(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"juslam19"},"content":"        return addressBook.hasContact(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":224,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":225,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":226,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":227,"author":{"gitId":"juslam19"},"content":"    public void deleteContact(Contact target) {","lastModifiedDate":"2022-03-14"},{"lineNumber":228,"author":{"gitId":"juslam19"},"content":"        addressBook.removeContact(target);","lastModifiedDate":"2022-03-14"},{"lineNumber":229,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":230,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":232,"author":{"gitId":"juslam19"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":233,"author":{"gitId":"juslam19"},"content":"        addressBook.addContact(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":234,"author":{"gitId":"juslam19"},"content":"        updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":238,"author":{"gitId":"juslam19"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"juslam19"},"content":"        addressBook.setContact(target, editedContact);","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Contact List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":245,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":246,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":247,"author":{"gitId":"juslam19"},"content":"     * Returns an unmodifiable view of the list of {@code Contact} backed by the internal list of","lastModifiedDate":"2022-03-14"},{"lineNumber":248,"author":{"gitId":"juslam19"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-14"},{"lineNumber":249,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":251,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":252,"author":{"gitId":"juslam19"},"content":"        return filteredContacts;","lastModifiedDate":"2022-03-14"},{"lineNumber":253,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":254,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":255,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":256,"author":{"gitId":"juslam19"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":257,"author":{"gitId":"juslam19"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":258,"author":{"gitId":"juslam19"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":259,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":260,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":261,"author":{"gitId":"joey-chance"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TestResult \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":262,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":263,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":264,"author":{"gitId":"joey-chance"},"content":"    public boolean hasTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":265,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":266,"author":{"gitId":"joey-chance"},"content":"        return addressBook.hasTestResult(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":267,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":270,"author":{"gitId":"joey-chance"},"content":"    public void deleteTestResult(TestResult target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"joey-chance"},"content":"        addressBook.removeTestResult(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"joey-chance"},"content":"    public void addTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"joey-chance"},"content":"        addressBook.addTestResult(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"joey-chance"},"content":"        updateFilteredTestResultList(PREDICATE_SHOW_ALL_TEST_RESULTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"joey-chance"},"content":"    public void setTestResult(TestResult target, TestResult editedTestResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"joey-chance"},"content":"        requireAllNonNull(target, editedTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"joey-chance"},"content":"        addressBook.setTestResults(target, editedTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"joey-chance"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Test Result List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":289,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"joey-chance"},"content":"     * Returns an unmodifiable view of the list of {@code Contact} backed by the internal list of","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"joey-chance"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"joey-chance"},"content":"    public ObservableList\u003cTestResult\u003e getFilteredTestResultList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"joey-chance"},"content":"        return filteredTestResults;","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"joey-chance"},"content":"    public void updateFilteredTestResultList(Predicate\u003cTestResult\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"joey-chance"},"content":"        filteredTestResults.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":304,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":306,"author":{"gitId":"cheekean5848"},"content":"    public void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":307,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":308,"author":{"gitId":"cheekean5848"},"content":"        filteredPrescription.setPredicate(predicate);","lastModifiedDate":"2022-03-14"},{"lineNumber":309,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":310,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":311,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Consultation \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":312,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":313,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":314,"author":{"gitId":"juslam19"},"content":"    public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":315,"author":{"gitId":"juslam19"},"content":"        requireNonNull(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":316,"author":{"gitId":"juslam19"},"content":"        return addressBook.hasConsultation(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":317,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":318,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":319,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":320,"author":{"gitId":"juslam19"},"content":"    public void deleteConsultation(Consultation target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":321,"author":{"gitId":"juslam19"},"content":"        addressBook.removeConsultation(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":322,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":323,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":324,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":325,"author":{"gitId":"juslam19"},"content":"    public void addConsultation(Consultation consultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":326,"author":{"gitId":"juslam19"},"content":"        addressBook.addConsultation(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":327,"author":{"gitId":"juslam19"},"content":"        updateFilteredConsultationList(PREDICATE_SHOW_ALL_CONSULTATIONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":328,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":329,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":330,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":331,"author":{"gitId":"juslam19"},"content":"    public void setConsultation(Consultation target, Consultation editedConsultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":332,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(target, editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":333,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":334,"author":{"gitId":"juslam19"},"content":"        addressBook.setConsultation(target, editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":335,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":337,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":338,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Consultation List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":339,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":340,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":341,"author":{"gitId":"juslam19"},"content":"     * Returns an unmodifiable view of the list of {@code Consultation} backed by the internal list of","lastModifiedDate":"2022-03-17"},{"lineNumber":342,"author":{"gitId":"juslam19"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-15"},{"lineNumber":343,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":344,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":346,"author":{"gitId":"juslam19"},"content":"        return filteredConsultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":347,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":350,"author":{"gitId":"juslam19"},"content":"    public void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":351,"author":{"gitId":"juslam19"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":352,"author":{"gitId":"juslam19"},"content":"        filteredConsultations.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":353,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":354,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"juslam19"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Other Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":357,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":358,"author":{"gitId":"sibinhho99-nus"},"content":"    public void updateFilteredMedicalList(Predicate\u003cMedical\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":360,"author":{"gitId":"sibinhho99-nus"},"content":"        filteredMedicals.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":379,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 filteredContacts.equals(other.filteredContacts)","lastModifiedDate":"2022-03-15"},{"lineNumber":380,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 filteredConsultations.equals(other.filteredConsultations)","lastModifiedDate":"2022-03-15"},{"lineNumber":381,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 filteredPatients.equals(other.filteredPatients)","lastModifiedDate":"2022-03-17"},{"lineNumber":382,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 filteredMedicals.equals(other.filteredMedicals)","lastModifiedDate":"2022-03-16"},{"lineNumber":383,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 filteredPrescription.equals(other.filteredPrescription)","lastModifiedDate":"2022-03-15"},{"lineNumber":384,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 filteredTestResults.equals(other.filteredTestResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheekean5848":51,"sibinhho99-nus":36,"clement0010":2,"juslam19":106,"-":143,"joey-chance":49}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    ObservableList\u003cPatient\u003e getPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    ObservableList\u003cPrescription\u003e getPrescriptionList();","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    ObservableList\u003cMedical\u003e getMedicalList();","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     * Returns an unmodifiable view of the contacts list.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"     * @return","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     * Returns an unmodifiable view of the consultations list.","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"     * This list will not contain any duplicate consultations.","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"     * @return","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    ObservableList\u003cConsultation\u003e getConsultationList();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"     *  Returns an unmodifiable view of the test results list.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"     * This list will not contain any duplicate test results.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"     * @return","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"    ObservableList\u003cTestResult\u003e getTestResultList();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":4,"sibinhho99-nus":2,"juslam19":18,"-":15,"joey-chance":6}},{"path":"src/main/java/seedu/address/model/consultation/Consultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"public class Consultation {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    // Identity fields","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"    private Nric nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    // Data fields","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"    private Date date;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    private Time time;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    private ConsultationDiagnosis diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    private ConsultationFee fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    private ConsultationNotes notes;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     * Every field except notes, prescription, and testsTakenAndResults must be present and not null.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"    public Consultation(Nric nric, Date date, Time time, ConsultationDiagnosis diagnosis,","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"                        ConsultationFee fee, ConsultationNotes notes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(nric, date, time);","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"        this.fee \u003d fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    public Nric getNric() {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"        return nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"    public Date getDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"        return date;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    public Time getTime() {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"        return time;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"    public ConsultationDiagnosis getDiagnosis() {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        return diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"    public ConsultationFee getFee() {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        return fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    public ConsultationNotes getNotes() {","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"        return notes;","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"     * Returns true if both consultations have the same nric, date, time fields.","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"        if (!(other instanceof Consultation)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"        Consultation otherConsultation \u003d (Consultation) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"        return otherConsultation.getNric().equals(getNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 otherConsultation.getDate().equals(getDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 otherConsultation.getTime().equals(getTime());","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"juslam19"},"content":"        return Objects.hash(nric, date, time, diagnosis, fee, notes);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"juslam19"},"content":"        builder.append(getNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"                .append(\"Date: \")","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"                .append(getDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"                .append(\"Time: \")","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"juslam19"},"content":"                .append(getTime())","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"                .append(\"Diagnosis: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"juslam19"},"content":"                .append(getDiagnosis())","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"juslam19"},"content":"                .append(\"; Fee: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"                .append(getFee())","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"                .append(\"; Notes: \")","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"                .append(getNotes());","lastModifiedDate":"2022-03-18"},{"lineNumber":101,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"juslam19"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":106}},{"path":"src/main/java/seedu/address/model/consultation/ConsultationDiagnosis.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation\u0027s Notes in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"public class ConsultationDiagnosis {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Diagnosis can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"    /*","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    private String consultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code ConsultationDiagnosis}.","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"     * @param consultationDiagnosis A valid consultationDiagnosis.","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    public ConsultationDiagnosis(String consultationDiagnosis) {","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"        requireNonNull(consultationDiagnosis);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"        checkArgument(isValidDiagnosis(consultationDiagnosis), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"        this.consultationDiagnosis \u003d consultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     * Returns true if a given string is a valid diagnosis.","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    public static boolean isValidDiagnosis(String test) {","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    public String value() {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"        return consultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        return consultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"                || (other instanceof ConsultationDiagnosis // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 consultationDiagnosis.equals(((ConsultationDiagnosis) other).consultationDiagnosis)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"        return consultationDiagnosis.hashCode();","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"juslam19":60}},{"path":"src/main/java/seedu/address/model/consultation/ConsultationFee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation\u0027s Fee in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"public class ConsultationFee {","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"            \"Fee cannot be blank, and has to have the format: XX.YY, where XX is dollars, YY is cents.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    /*","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"    private static final String VALIDATION_REGEX \u003d \"^([0-9][0-9]).([0-9][0-9])$\";","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    private String consultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code ConsultationFee}.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     * @param consultationFee A valid consultationFee.","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"    public ConsultationFee(String consultationFee) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"        requireNonNull(consultationFee);","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"        checkArgument(isValidFee(consultationFee), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"        this.consultationFee \u003d consultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"     * Returns true if a given string is a valid fee.","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    public static boolean isValidFee(String test) {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    public String value() {","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"        return consultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        return consultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"                || (other instanceof ConsultationFee // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 consultationFee.equals(((ConsultationFee) other).consultationFee)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"        return consultationFee.hashCode();","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"juslam19":63}},{"path":"src/main/java/seedu/address/model/consultation/ConsultationNotes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation\u0027s TestsTakenAndResults in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"public class ConsultationNotes {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"            \"Test Taken And Results can be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"    private String consultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code TestsTakenAndResults}.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"    public ConsultationNotes(String consultationNotes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"        this.consultationNotes \u003d consultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    public String value() {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"        return consultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"        return consultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"                || (other instanceof ConsultationNotes // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 consultationNotes.equals(((ConsultationNotes) other).consultationNotes)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"        return consultationNotes.hashCode();","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":42}},{"path":"src/main/java/seedu/address/model/consultation/ConsultationWithPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"public class ConsultationWithPredicates implements Predicate\u003cConsultation\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"    public ConsultationWithPredicates(Nric nric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"    public boolean test(Consultation consultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"        return consultation.getNric().equals(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"                || (other instanceof ConsultationWithPredicates // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 nric.equals(((ConsultationWithPredicates) other).nric)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"juslam19":25}},{"path":"src/main/java/seedu/address/model/consultation/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation\u0027s date in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"public class Date {","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"            \"Date should not be blank, and should be in the format dd-MM-yyyy\";","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"    private LocalDate date;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    public Date(String date) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    public LocalDate value() {","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"        return date;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"            LocalDate.parse(test, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":66}},{"path":"src/main/java/seedu/address/model/consultation/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":" * Represents a Consultation\u0027s time in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"public class Time {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"            \"Time should not be blank, and should be in format HH-mm (24h time)\";","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    private static final String VALIDATION_REGEX \u003d \"^([2][0-4]|[10][0-9])-([543210][0-9])$\";","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"    private LocalTime time;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"     * @param time A valid time.","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    public Time(String time) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"HH-MM\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    public LocalTime value() {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"        return time;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"        return time.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":67}},{"path":"src/main/java/seedu/address/model/consultation/UniqueConsultationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.exceptions.ConsultationNotFoundException;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.exceptions.DuplicateConsultationException;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":" * A list of consultations that enforces uniqueness between its elements that identify it: nric, date, time.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":" * A consultation is considered unique by comparing using {@code Consultation#equals(Object)}.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":" * As such, adding and updating of","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":" * consultations uses Consultation#equals(Object) for equality so as to ensure that","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":" * the consultation being added or updated is","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":" * unique in terms of identity in the UniqueConsultationList. The removal of a consultation","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":" * uses Consultation#equals(Object) so","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":" * as to ensure that the consultation with the same unique identifiers will be removed.","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":" * @see Consultation#equals(Object)","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"public class UniqueConsultationList implements Iterable\u003cConsultation\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    private final ObservableList\u003cConsultation\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    private final ObservableList\u003cConsultation\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"     * Returns true if the list contains an equivalent consultation as the given argument.","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"    public boolean contains(Consultation toCheck) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"     * Adds a consultation to the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"     * The consultation must not already exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"    public void add(Consultation toAdd) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"            throw new DuplicateConsultationException();","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"     * Replaces the consultation {@code target} in the list with {@code editedConsultation}.","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"     * The consultation identity of {@code editedConsultation} must not be the same","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"     * as another existing consultation in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"    public void setConsultation(Consultation target, Consultation editedConsultation) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(target, editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"            throw new ConsultationNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"        if (!target.equals(editedConsultation) \u0026\u0026 contains(editedConsultation)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"            throw new DuplicateConsultationException();","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        internalList.set(index, editedConsultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"     * Removes the equivalent consultation from the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"     * The consultation must exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"    public void remove(Consultation toRemove) {","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"            throw new ConsultationNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"juslam19"},"content":"    public void setConsultations(UniqueConsultationList replacement) {","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"juslam19"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"     * Replaces the contents of this list with {@code consultations}.","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"juslam19"},"content":"     * {@code consultations} must not contain duplicate consultations.","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"juslam19"},"content":"    public void setConsultations(List\u003cConsultation\u003e consultations) {","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(consultations);","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"        if (!consultationsAreUnique(consultations)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"            throw new DuplicateConsultationException();","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"juslam19"},"content":"        internalList.setAll(consultations);","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"juslam19"},"content":"    public ObservableList\u003cConsultation\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"juslam19"},"content":"    public Iterator\u003cConsultation\u003e iterator() {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"juslam19"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"juslam19"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"                || (other instanceof UniqueConsultationList // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 internalList.equals(((UniqueConsultationList) other).internalList));","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"juslam19"},"content":"     * Returns true if {@code consultations} contains only unique consultations.","lastModifiedDate":"2022-03-17"},{"lineNumber":131,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"juslam19"},"content":"    private boolean consultationsAreUnique(List\u003cConsultation\u003e consultations) {","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"juslam19"},"content":"        for (int i \u003d 0; i \u003c consultations.size() - 1; i++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"            for (int j \u003d i + 1; j \u003c consultations.size(); j++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"juslam19"},"content":"                if (consultations.get(i).equals(consultations.get(j))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"juslam19"},"content":"                    return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"juslam19"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":140,"author":{"gitId":"juslam19"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":141,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":142,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":142}},{"path":"src/main/java/seedu/address/model/consultation/exceptions/ConsultationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":" * Signals that the operation is unable to find the specified consultation.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"public class ConsultationNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":6}},{"path":"src/main/java/seedu/address/model/consultation/exceptions/DuplicateConsultationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.model.consultation.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":" * Signals that the operation will result in duplicate Consultations","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":" * (Consultations are considered duplicates if they have the same","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":" * identifiers: nric, date, time).","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"public class DuplicateConsultationException extends RuntimeException {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"    public DuplicateConsultationException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"        super(\"Operation would result in duplicate consultations\");","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":12}},{"path":"src/main/java/seedu/address/model/contact/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clement0010":1,"-":56}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":" * Represents a Contact in Medbook.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"public class Contact {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    // Identity fields","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    private final Name name;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    private final Phone phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    private final Email email;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    // Relationship fields - owner nric","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    private final Nric ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    // Data fields","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    private final Address address;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    public Contact(Nric ownerNric, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        requireAllNonNull(ownerNric, name, phone, email, address, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        return phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"    public Nric getOwnerNric() {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        return ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"    public Name getName() {","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"        return name;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        return email;","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    public Address getAddress() {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        return address;","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"     * Returns true if both contacts have the same name, number and owner.","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"     * This defines a weaker notion of equality between two contacts.","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"        return otherContact !\u003d null","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getOwnerNric().equals(getOwnerNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getName().equals(getName());","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"     * Returns true if both contacts have the same identity and data fields.","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"     * This defines a stronger notion of equality between two contacts.","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"            return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"            return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"        return otherContact.getName().equals(getName())","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getOwnerNric().equals(getOwnerNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 otherContact.getTags().equals(getTags());","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"        return Objects.hash(phone, email, address, tags);","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"                .append(getName())","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"                .append(\"; Owner NRIC: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":"                .append(getOwnerNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"                .append(getPhone())","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"clement0010"},"content":"                .append(getEmail())","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"clement0010"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"                .append(getAddress());","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"clement0010"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":139,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"cheekean5848":2,"clement0010":137}},{"path":"src/main/java/seedu/address/model/contact/ContactWithNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"public class ContactWithNricPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    public ContactWithNricPredicate(Nric nric) {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"        return contact.getOwnerNric().equals(nric);","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"                || (other instanceof ContactWithNricPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 nric.equals(((ContactWithNricPredicate) other).nric)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":1,"clement0010":24}},{"path":"src/main/java/seedu/address/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clement0010":1,"-":70}},{"path":"src/main/java/seedu/address/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"clement0010":1,"-":52}},{"path":"src/main/java/seedu/address/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":" * A list of contacts that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":" * A contact is considered unique by comparing using {@code Contact#isSameContact(Contact)}.","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":" * As such, adding and updating of contacts uses Contact#isSameContact(Contact)","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":" * for equality to ensure that the contact being added or updated is","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":" * unique in terms of identity in the UniqueContactList. However, the removal of a contact uses Contact#equals(Object)","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":" * to ensure that the contact with exactly the same fields will be removed.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":" *","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":" *","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"     * Returns true if the list contains an equivalent contact as the given argument.","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"     * Adds a contact to the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"     * The contact must not already exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    public void add(Contact toAdd) throws DuplicateContactException {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"     * Replaces the contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing contact in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"     * Removes the equivalent contact from the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"     * The contact must exist in the list.","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"    public void setContacts(UniqueContactList replacement) {","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"     * Replaces the contents of this list with {@code contacts}.","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"     * {@code contacts} must not contain duplicate contacts.","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof UniqueContactList // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 internalList.equals(((UniqueContactList) other).internalList));","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"     * Returns true if {@code contacts} contains only unique contacts.","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"clement0010"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2022-03-13"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"                    return false;","lastModifiedDate":"2022-03-13"},{"lineNumber":133,"author":{"gitId":"clement0010"},"content":"                }","lastModifiedDate":"2022-03-13"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"        return true;","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":138,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"cheekean5848":2,"clement0010":136}},{"path":"src/main/java/seedu/address/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":" * Signals that the operation is unable to find the specified contact.","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"public class ContactNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"clement0010":6}},{"path":"src/main/java/seedu/address/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":" * identity).","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"clement0010":11}},{"path":"src/main/java/seedu/address/model/medical/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s age in MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"public class Age {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"            \"Age should only contain numbers, and it should be at least 1 digits long\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d{1,}|nil]\";","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs a {@code Age}.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param age A valid age.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    public Age(String age) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(age);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"        Pattern p \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        Matcher m \u003d p.matcher(test);","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        return m.lookingAt();","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Age // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Age) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":58}},{"path":"src/main/java/seedu/address/model/medical/BloodType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s blood type in MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBloodType(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"public class BloodType {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Blood type must be either A, B, AB or O.\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"     * Blood type must be either A, B, AB, O, or nil (in case user did not specify it).","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A|B|O|AB|nil]\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code BloodType}.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param address A valid address.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    public BloodType(String address) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidBloodType(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d address;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidBloodType(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"        Pattern p \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"        Matcher m \u003d p.matcher(test);","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"        return m.lookingAt();","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof BloodType // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((BloodType) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":61}},{"path":"src/main/java/seedu/address/model/medical/Ethnicity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s gender in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEthnicity(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class Ethnicity {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Ethinicity can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the familyHistory must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code ImmunizationHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param ethnicity Patient\u0027s ethnicity.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public Ethnicity(String ethnicity) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(ethnicity);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidEthnicity(ethnicity), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidEthnicity(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Ethnicity // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Ethnicity) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/FamilyHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s family history in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFamilyHistory(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class FamilyHistory {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Family history can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the familyHistory must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code FamilyHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param familyHistory Information about the patient\u0027s family history.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public FamilyHistory(String familyHistory) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(familyHistory);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidFamilyHistory(familyHistory), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidFamilyHistory(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof FamilyHistory // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((FamilyHistory) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s gender in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class Gender {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the familyHistory must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code ImmunizationHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param gender Patient\u0027s gender.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/Height.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s height in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHeight(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"public class Height {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Weight can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the height must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs a {@code Height}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param height A valid height.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    public Height(String height) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(height);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidHeight(height), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d height;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidHeight(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Height // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Height) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":58}},{"path":"src/main/java/seedu/address/model/medical/Illnesses.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s illnesses in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIllnesses(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class Illnesses {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Illnesses can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the illness must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code Illnesses}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param illness Information about the patient\u0027s illnesses.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public Illnesses(String illness) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(illness);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidIllnesses(illness), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d illness;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidIllnesses(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Illnesses // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Illnesses) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/ImmunizationHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s immunization history in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidImmunizationHistory(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class ImmunizationHistory {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"            \"Immunization history can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the familyHistory must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code ImmunizationHistory}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param familyHistory Information about the patient\u0027s family history.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    public ImmunizationHistory(String familyHistory) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(familyHistory);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidImmunizationHistory(familyHistory), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidImmunizationHistory(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof ImmunizationHistory // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((ImmunizationHistory) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":58}},{"path":"src/main/java/seedu/address/model/medical/Medical.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Contact in Medbook.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"public class Medical {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"    // Relationship fields","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Nric patientNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    // Data fields","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Age age;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    private final BloodType bloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Medication medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Height height;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Weight weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Illnesses illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Surgeries surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    private final FamilyHistory familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"    private final ImmunizationHistory immunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Gender gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Ethnicity ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    public Medical(Nric patientNric,","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"                   Age age,","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"                   BloodType bloodType,","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"                   Medication medication,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"                   Height height,","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"                   Weight weight,","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"                   Illnesses illnesses,","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"                   Surgeries surgeries,","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"                   FamilyHistory familyHistory,","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"                   ImmunizationHistory immunizationHistory,","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"                   Gender gender,","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"                   Ethnicity ethnicity) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        this.medication \u003d medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        this.height \u003d height;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"        this.illnesses \u003d illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"        this.surgeries \u003d surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"        this.familyHistory \u003d familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"        this.immunizationHistory \u003d immunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"        this.ethnicity \u003d ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"    public Nric getPatientNric() {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"        return patientNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"    public Age getAge() {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"        return age;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"    public BloodType getBloodType() {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"        return bloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"    public Medication getMedication() {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"        return medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"    public Height getHeight() {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"        return height;","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"    public Weight getWeight() {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"        return weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"    public Illnesses getIllnesses() {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"        return illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"    public Surgeries getSurgeries() {","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"        return surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"    public FamilyHistory getFamilyHistory() {","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"        return familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"    public ImmunizationHistory getImmunizationHistory() {","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"        return immunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"        return gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"    public Ethnicity getEthnicity() {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"        return ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if both contacts have the same identity and data fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"sibinhho99-nus"},"content":"     * This defines a stronger notion of equality between two contacts.","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"sibinhho99-nus"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!(other instanceof Medical)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"sibinhho99-nus"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"sibinhho99-nus"},"content":"        Medical otherContact \u003d (Medical) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"sibinhho99-nus"},"content":"        return otherContact.getPatientNric().equals(getPatientNric());","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"sibinhho99-nus"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"sibinhho99-nus"},"content":"        return Objects.hash(patientNric,","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"sibinhho99-nus"},"content":"                age,","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"sibinhho99-nus"},"content":"                bloodType,","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"sibinhho99-nus"},"content":"                medication,","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"                height,","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"                weight,","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"                illnesses,","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"sibinhho99-nus"},"content":"                surgeries,","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"                familyHistory,","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"sibinhho99-nus"},"content":"                immunizationHistory,","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"sibinhho99-nus"},"content":"                gender,","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"                ethnicity);","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"sibinhho99-nus"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"sibinhho99-nus"},"content":"        builder.append(\"Patient NRIC: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getPatientNric())","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Age: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getAge())","lastModifiedDate":"2022-03-15"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Blood type: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":149,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getBloodType())","lastModifiedDate":"2022-03-15"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Medication: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":151,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getMedication())","lastModifiedDate":"2022-03-15"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Height: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getHeight())","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Weight: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getWeight())","lastModifiedDate":"2022-03-15"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Illnesses: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getIllnesses())","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Surgeries: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":159,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getSurgeries())","lastModifiedDate":"2022-03-15"},{"lineNumber":160,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Family history: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getFamilyHistory())","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Immunization history: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getImmunizationHistory())","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Gender \")","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getGender())","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(\"; Ethnicity \")","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"sibinhho99-nus"},"content":"                .append(getEthnicity());","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":172}},{"path":"src/main/java/seedu/address/model/medical/MedicalWithNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"public class MedicalWithNricPredicate implements Predicate\u003cMedical\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"    public MedicalWithNricPredicate(Nric nric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean test(Medical medical) {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"        return medical.getPatientNric().equals(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof MedicalWithNricPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 nric.equals(((MedicalWithNricPredicate) other).nric)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":25}},{"path":"src/main/java/seedu/address/model/medical/Medication.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s medication in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedication(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class Medication {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medication can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code Medication}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param medication Information about the patient\u0027s medication.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public Medication(String medication) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(medication);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidMedication(medication), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidMedication(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Medication // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Medication) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/Surgeries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s surgeries in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSurgeries(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"public class Surgeries {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Surgeries can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the surgery must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs an {@code Surgeries}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param surgery Information about the patient\u0027s surgeries.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    public Surgeries(String surgery) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(surgery);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidSurgeries(surgery), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d surgery;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidSurgeries(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Surgeries // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Surgeries) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":57}},{"path":"src/main/java/seedu/address/model/medical/UniqueMedicalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.exceptions.DuplicateMedicalException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.exceptions.MedicalNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"public class UniqueMedicalList implements Iterable\u003cMedical\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    private final ObservableList\u003cMedical\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    private final ObservableList\u003cMedical\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if the list contains same medical as the given argument.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean contains(Medical toCheck) {","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"     * Adds medical information to the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"     * The medical information must not already exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    public void add(Medical toAdd) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new DuplicateMedicalException();","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    public void setMedical(Medical target, Medical editedMedical) {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"        requireAllNonNull(target, editedMedical);","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new MedicalNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!target.equals(editedMedical) \u0026\u0026 contains(editedMedical)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new DuplicateMedicalException();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"        internalList.set(index, editedMedical);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"     * Removes the equivalent medical from the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"     * The medical must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"    public void remove(Medical toRemove) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new MedicalNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"    public ObservableList\u003cMedical\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"    public Iterator\u003cMedical\u003e iterator() {","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof UniqueMedicalList // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 internalList.equals(((UniqueMedicalList) other).internalList));","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if {@code medicals} contains only unique medical information records.","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"    private boolean medicalAreUnique(List\u003cMedical\u003e medicals) {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"        for (int i \u003d 0; i \u003c medicals.size() - 1; i++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"            for (int j \u003d i + 1; j \u003c medicals.size(); j++) {","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"                if (medicals.get(i).equals(medicals.get(j))) {","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"                    return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"        return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"     * Replaces the contents of this list with {@code medicals}.","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"     * {@code medicals} must not contain duplicate medicals.","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"    public void setMedicals(List\u003cMedical\u003e medicals) {","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"sibinhho99-nus"},"content":"        requireAllNonNull(medicals);","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!medicalAreUnique(medicals)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new DuplicateMedicalException();","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"sibinhho99-nus"},"content":"        internalList.setAll(medicals);","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":113}},{"path":"src/main/java/seedu/address/model/medical/Weight.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":" * Represents a Person\u0027s Weight in the MedBook.","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidWeight(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"public class Weight {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Height can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"     * The first character of the Weight must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs a {@code Weight}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"     * @param weight A valid Weight.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    public Weight(String weight) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"        requireNonNull(weight);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"        checkArgument(isValidWeight(weight), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"        value \u003d weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"     * Returns true if given string is valid.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    public static boolean isValidWeight(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                || (other instanceof Weight // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 value.equals(((Weight) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":58}},{"path":"src/main/java/seedu/address/model/medical/exceptions/DuplicateMedicalException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":" * Signals that the operation will result in duplicate Medication","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":" * (Medical are considered duplicates if they have the same identity).","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"public class DuplicateMedicalException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"    public DuplicateMedicalException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"        super(\"Operation would result in duplicate medical information\");","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":11}},{"path":"src/main/java/seedu/address/model/medical/exceptions/MedicalNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.model.medical.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":" * Signals that the operation is unable to find the specified medical information.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"public class MedicalNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":6}},{"path":"src/main/java/seedu/address/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":1,"-":58}},{"path":"src/main/java/seedu/address/model/patient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheekean5848":4,"-":27}},{"path":"src/main/java/seedu/address/model/patient/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":" * Represents a Person\u0027s NRIC in Medbook.","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"public class Nric {","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"            \"NRIC should be alphanumeric, starting with either S, T, F, G, M, followed by 7 digits \"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"                    + \"and ending with any character.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[STFGM]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    public final String value;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"     * Constructs a {@code Nric}.","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"     * @param nric A valid National Registration Identity Card number.","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    public Nric(String nric) {","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"        requireNonNull(nric);","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"        value \u003d nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    public String toString() {","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        return value;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"                || (other instanceof Nric // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 value.equals(((Nric) other).value)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"cheekean5848":1,"clement0010":51}},{"path":"src/main/java/seedu/address/model/patient/NricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"public class NricPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    public NricPredicate(Nric nric) {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"        return patient.getNric().equals(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"                || (other instanceof NricPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 nric.equals(((NricPredicate) other).nric)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":4,"clement0010":19}},{"path":"src/main/java/seedu/address/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":" * Represents a Person in Medbook.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"public class Patient {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    public Patient(Nric nric, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"        requireAllNonNull(nric, name, phone, email, address, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    public Nric getNric() {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        return nric;","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"    public boolean isSamePerson(Patient otherPatient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"cheekean5848"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getNric().equals(getNric());","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"cheekean5848"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"cheekean5848"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"cheekean5848"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getNric().equals(getNric())","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getAddress().equals(getAddress())","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPatient.getTags().equals(getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"juslam19"},"content":"        builder.append(getNric())","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"                .append(getName())","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheekean5848":15,"juslam19":17,"-":105}},{"path":"src/main/java/seedu/address/model/patient/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":" * @see Patient#isSamePerson(Patient)","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"public class UniquePersonList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"    public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"        if (!target.isSamePerson(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"    public void setPersons(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"        if (!personsAreUnique(patients)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"cheekean5848"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"cheekean5848"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"                \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"cheekean5848"},"content":"    private boolean personsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"cheekean5848"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"cheekean5848"},"content":"                if (patients.get(i).isSamePerson(patients.get(j))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":24,"juslam19":1,"-":112}},{"path":"src/main/java/seedu/address/model/patient/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cheekean5848":1,"-":10}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"cheekean5848":1,"-":5}},{"path":"src/main/java/seedu/address/model/prescription/DrugName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"public class DrugName {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"            \"Drug names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"    /*","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    public final String drugName;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"     * Constructs a {@code DrugName}.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"    public DrugName(String name) {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"        drugName \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        return drugName.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        return drugName;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof DrugName // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 drugName.equals(((DrugName) other).drugName)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":50}},{"path":"src/main/java/seedu/address/model/prescription/Instruction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"public class Instruction {","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Instruction can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"     * Constructs an {@code Instruction}.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"     * @param instruction A valid instruction.","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    public Instruction(String instruction) {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(instruction);","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"        checkArgument(isValidInstruction(instruction), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"        value \u003d instruction;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    public static boolean isValidInstruction(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof Instruction // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 value.equals(((Instruction) other).value)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":45}},{"path":"src/main/java/seedu/address/model/prescription/Prescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"public class Prescription {","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"    private final Nric patient;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"    private final DrugName name;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"    private final PrescriptionDate date;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"    private final Instruction instruction;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    public Prescription(Nric patient, DrugName name, PrescriptionDate date, Instruction instruction) {","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"    public Nric getPrescriptionTarget() {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"        return patient;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    public DrugName getDrugName() {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"        return name;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    public PrescriptionDate getPrescriptionDate() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        return date;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    public Instruction getInstruction() {","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        return instruction;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        if (!(other instanceof Prescription)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"        Prescription otherPrescription \u003d (Prescription) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        return otherPrescription.getPrescriptionTarget().equals(getPrescriptionTarget())","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPrescription.getDrugName().equals(getDrugName())","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPrescription.getPrescriptionDate().equals(getPrescriptionDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 otherPrescription.getInstruction().equals(getInstruction());","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"        return Objects.hash(patient, name, date, instruction);","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"        builder.append(getPrescriptionTarget())","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"                .append(\"; DrugName: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"                .append(getDrugName())","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"                .append(getPrescriptionDate())","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"                .append(\"; Instruction: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"                .append(getInstruction());","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":76}},{"path":"src/main/java/seedu/address/model/prescription/PrescriptionDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"public class PrescriptionDate {","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"            \"Prescription Date can only be in the format: YYYY-MM-DD\";","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}\\\\-(0[1-9]|1[012])\\\\-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"     * Constructs an {@code PrescriptionDate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"     * @param value A valid date.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    public PrescriptionDate(String value) {","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"        checkArgument(isValidDate(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"        date \u003d LocalDate.parse(value);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        return date.toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof PrescriptionDate // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 date.equals(((PrescriptionDate) other).date)); // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":48}},{"path":"src/main/java/seedu/address/model/prescription/PrescriptionWithNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"public class PrescriptionWithNricPredicate implements Predicate\u003cPrescription\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"    public PrescriptionWithNricPredicate(Nric nric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"    public boolean test(Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"        return prescription.getPrescriptionTarget().equals(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof PrescriptionWithNricPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 nric.equals(((PrescriptionWithNricPredicate) other).nric)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":26}},{"path":"src/main/java/seedu/address/model/prescription/UniquePrescriptionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.exceptions.DuplicatePrescriptionException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.exceptions.PrescriptionNotFoundException;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"public class UniquePrescriptionList implements Iterable\u003cPrescription\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    private final ObservableList\u003cPrescription\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"    private final ObservableList\u003cPrescription\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"     * Returns true if the list contains same prescription as the given argument.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"    public boolean contains(Prescription toCheck) {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"     * Adds a prescription to the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"     * The prescription must not already exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"    public void add(Prescription toAdd) {","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(target, editedPrescription);","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"        if (!target.equals(editedPrescription) \u0026\u0026 contains(editedPrescription)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        internalList.set(index, editedPrescription);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"     * Removes the equivalent prescription from the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"     * The prescription must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"    public void remove(Prescription toRemove) {","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"            throw new PrescriptionNotFoundException();","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescriptions(UniquePrescriptionList replacement) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"    public void setPrescriptions(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"        requireAllNonNull(prescriptions);","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"        if (!prescriptionAreUnique(prescriptions)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"            throw new DuplicatePrescriptionException();","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"        internalList.setAll(prescriptions);","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"    public ObservableList\u003cPrescription\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"cheekean5848"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"cheekean5848"},"content":"    public Iterator\u003cPrescription\u003e iterator() {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"cheekean5848"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"                || (other instanceof UniquePrescriptionList // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 internalList.equals(((UniquePrescriptionList) other).internalList));","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"cheekean5848"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"cheekean5848"},"content":"    private boolean prescriptionAreUnique(List\u003cPrescription\u003e prescriptions) {","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"        for (int i \u003d 0; i \u003c prescriptions.size() - 1; i++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"            for (int j \u003d i + 1; j \u003c prescriptions.size(); j++) {","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"cheekean5848"},"content":"                if (prescriptions.get(i).equals(prescriptions.get(j))) {","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"cheekean5848"},"content":"                    return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"cheekean5848"},"content":"                }","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"cheekean5848"},"content":"        return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":115}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/DuplicatePrescriptionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"public class DuplicatePrescriptionException extends RuntimeException {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"    public DuplicatePrescriptionException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"        super(\"Operation would result in duplicate prescription\");","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":7}},{"path":"src/main/java/seedu/address/model/prescription/exceptions/PrescriptionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.prescription.exceptions;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"public class PrescriptionNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":4}},{"path":"src/main/java/seedu/address/model/testresult/MedicalTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":" * Represents a Medical Test in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMedicalTest(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"public class MedicalTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medical tests can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"     * The first character of the medical test must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     * Constructs an {@code MedicalTest}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"     * @param medicalTest A valid medical test.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"    public MedicalTest(String medicalTest) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(medicalTest);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"        checkArgument(isValidMedicalTest(medicalTest), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"        value \u003d medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"     * Returns true if a given string is a valid medical test.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    public static boolean isValidMedicalTest(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof MedicalTest // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 value.equals(((MedicalTest) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":57}},{"path":"src/main/java/seedu/address/model/testresult/Result.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":" * Represents a Test\u0027s result in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidResult(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"public class Result {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Results can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"    /*","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"     * The first character of the result must not be a whitespace,","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    public final String value;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     * Constructs an {@code Result}.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"     * @param result A valid result.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"    public Result(String result) {","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(result);","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"        checkArgument(isValidResult(result), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"        value \u003d result;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    public static boolean isValidResult(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"        return value;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof Result // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 value.equals(((Result) other).value)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":57}},{"path":"src/main/java/seedu/address/model/testresult/TestDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":" * Represents a TestResult\u0027s test date in the address book.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTestDate(String)}","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"public class TestDate {","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Test dates must be in the form of YYYY-MM-DD\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"     * Constructs an {@code TestDate}.","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     * @param testDate A valid test date.","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public TestDate(String testDate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(testDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"        checkArgument(isValidTestDate(testDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        date \u003d LocalDate.parse(testDate);","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"    public static boolean isValidTestDate(String test) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"        return true;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        return date.format(DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof TestDate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 date.equals(((TestDate) other).date)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"        return date.hashCode();","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":60}},{"path":"src/main/java/seedu/address/model/testresult/TestResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":" * Represents a TestResult in Medbook.","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"public class TestResult {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"    // Relationship fields - patient nric","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"    private final Nric patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"    // Data fields","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"    private final TestDate testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    private final MedicalTest medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    private final Result result;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"    public TestResult(Nric patientNric, TestDate testDate, MedicalTest medicalTest, Result result) {","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"        requireAllNonNull(patientNric, testDate, medicalTest, result);","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"        this.testDate \u003d testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"        this.medicalTest \u003d medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"        this.result \u003d result;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"    public Nric getPatientNric() {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        return patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    public TestDate getTestDate() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"        return testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"    public MedicalTest getMedicalTest() {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"        return medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"    public Result getResult() {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        return result;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"     * Returns true if both test results have the same patient, date, medical test taken and test result.","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"     * This defines a weaker notion of equality between two test results.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"    public boolean isSameTestResult(TestResult otherTestResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"        if (otherTestResult \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"        return otherTestResult !\u003d null","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getPatientNric().equals(getPatientNric())","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getTestDate().equals(getTestDate())","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getMedicalTest().equals(getMedicalTest())","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getResult().equals(getResult());","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joey-chance"},"content":"     * Returns true if both contacts have the same data fields.","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joey-chance"},"content":"     * This defines a stronger notion of equality between two test results.","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joey-chance"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joey-chance"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joey-chance"},"content":"        if (!(other instanceof TestResult)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joey-chance"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joey-chance"},"content":"        TestResult otherTestResult \u003d (TestResult) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joey-chance"},"content":"        return otherTestResult.getPatientNric().equals(getPatientNric())","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getTestDate().equals(getTestDate())","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getMedicalTest().equals(getMedicalTest())","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 otherTestResult.getResult().equals(getResult());","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joey-chance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joey-chance"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joey-chance"},"content":"        return Objects.hash(testDate, medicalTest, result);","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joey-chance"},"content":"    public String toString() {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joey-chance"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"        builder.append(\"Patient NRIC: \")","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"joey-chance"},"content":"                .append(getPatientNric())","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"joey-chance"},"content":"                .append(\"; Test Date: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joey-chance"},"content":"                .append(getTestDate())","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joey-chance"},"content":"                .append(\"; Test Taken: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joey-chance"},"content":"                .append(getMedicalTest())","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joey-chance"},"content":"                .append(\"; Test Results: \")","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joey-chance"},"content":"                .append(getResult());","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joey-chance"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":109}},{"path":"src/main/java/seedu/address/model/testresult/TestResultContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-29"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import java.util.List;","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.logic.commands.ViewedNric;","lastModifiedDate":"2022-03-29"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-29"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":" * Tests that a {@code Person}\u0027s {@code TestResult} matches any of the keywords given.","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"public class TestResultContainsKeywordsPredicate implements Predicate\u003cTestResult\u003e {","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"    public TestResultContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    public boolean test(TestResult testResult) {","lastModifiedDate":"2022-03-29"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"        return StringUtil.containsWordIgnoreCase(testResult.getPatientNric().toString(),","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"                    ViewedNric.getViewedNric().toString())","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 (keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(testResult.getTestDate().toString(), keyword))","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"                || keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(testResult.getMedicalTest().toString(), keyword))","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"                || keywords.stream()","lastModifiedDate":"2022-03-29"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(testResult.getResult().toString(), keyword)));","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-29"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof TestResultContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-29"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 keywords.equals(((TestResultContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-29"}],"authorContributionMap":{"joey-chance":38}},{"path":"src/main/java/seedu/address/model/testresult/TestResultWithNricPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"public class TestResultWithNricPredicate implements Predicate\u003cTestResult\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"    private final Nric nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"    public TestResultWithNricPredicate(Nric nric) {","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"    public boolean test(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"        return testResult.getPatientNric().equals(nric);","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof TestResultWithNricPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 nric.equals(((TestResultWithNricPredicate) other).nric)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":25}},{"path":"src/main/java/seedu/address/model/testresult/UniqueTestResultList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.exceptions.DuplicateTestResultException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.exceptions.TestResultNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":" * A list of test results that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":" * A test results is considered unique by comparing using {@code TestResult#isSameTestResult(TestResult)}. As such,","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":" * adding and updating of test results uses TestResult#isSameTestResult(TestResult) for equality so as to ensure that","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":" * the test result being added or updated is unique in terms of identity in the UniqueTestResultList. However, the","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":" * removal of a test result uses TestResult#equals(Object) so as to ensure that the test result with exactly the same","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":" * fields will be removed.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":" *","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":" *","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":" * @see TestResult#isSameTestResult(TestResult)","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"public class UniqueTestResultList implements Iterable\u003cTestResult\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"    private final ObservableList\u003cTestResult\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    private final ObservableList\u003cTestResult\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"     * Returns true if the list contains an equivalent test result as the given argument.","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"    public boolean contains(TestResult toCheck) {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"     * Adds a test result to the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"     * The test result must not already exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"    public void add(TestResult toAdd) {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"            throw new DuplicateTestResultException();","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"     * Replaces the test result {@code target} in the list with {@code editedTestResult}.","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"     * The test result identity of {@code editedTestResult} must not be the same as another existing test result in the","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"     * list.","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"    public void setTestResult(TestResult target, TestResult editedTestResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"        requireAllNonNull(target, editedTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"            throw new TestResultNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"        if (!target.isSameTestResult(editedTestResult) \u0026\u0026 contains(editedTestResult)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"            throw new DuplicateTestResultException();","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"        internalList.set(index, editedTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"joey-chance"},"content":"     * Removes the equivalent test result from the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"joey-chance"},"content":"     * The test result must exist in the list.","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joey-chance"},"content":"    public void remove(TestResult toRemove) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joey-chance"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joey-chance"},"content":"            throw new TestResultNotFoundException();","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joey-chance"},"content":"    public void setTestResults(UniqueTestResultList replacement) {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joey-chance"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joey-chance"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"joey-chance"},"content":"     * Replaces the contents of this list with {@code testResults}.","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joey-chance"},"content":"     * {@code testResults} must not contain duplicate testResults.","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":93,"author":{"gitId":"joey-chance"},"content":"    public void setTestResults(List\u003cTestResult\u003e testResults) {","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"joey-chance"},"content":"        requireAllNonNull(testResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":95,"author":{"gitId":"joey-chance"},"content":"        if (!testResultsAreUnique(testResults)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"joey-chance"},"content":"            throw new DuplicateTestResultException();","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"joey-chance"},"content":"        internalList.setAll(testResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":101,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"joey-chance"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"joey-chance"},"content":"    public ObservableList\u003cTestResult\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"joey-chance"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":110,"author":{"gitId":"joey-chance"},"content":"    public Iterator\u003cTestResult\u003e iterator() {","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"joey-chance"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"joey-chance"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"joey-chance"},"content":"                || (other instanceof UniqueTestResultList // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"joey-chance"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTestResultList) other).internalList));","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"joey-chance"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"joey-chance"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"joey-chance"},"content":"     * Returns true if {@code testResults} contains only unique testResults.","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"    private boolean testResultsAreUnique(List\u003cTestResult\u003e testResults) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joey-chance"},"content":"        for (int i \u003d 0; i \u003c testResults.size() - 1; i++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joey-chance"},"content":"            for (int j \u003d i + 1; j \u003c testResults.size(); j++) {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joey-chance"},"content":"                if (testResults.get(i).isSameTestResult(testResults.get(j))) {","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joey-chance"},"content":"                    return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joey-chance"},"content":"                }","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"joey-chance"},"content":"        return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":139,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":139}},{"path":"src/main/java/seedu/address/model/testresult/exceptions/DuplicateTestResultException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":" * Signals that the operation will result in duplicate TestResults (TestResults are considered duplicates if they belong","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":" * to the same NRIC and have the same medical test and results).","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"public class DuplicateTestResultException extends RuntimeException {","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"    public DuplicateTestResultException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"        super(\"Operation would result in duplicate test results\");","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"juslam19":1,"joey-chance":11}},{"path":"src/main/java/seedu/address/model/testresult/exceptions/TestResultNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.model.testresult.exceptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":" * Signals that the operation is unable to find the specified test result.","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"public class TestResultNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.MedicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.Result;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    public static Patient[] getSamplePersons() {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        return new Patient[] {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234567L\"), new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"                    new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234568L\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"                    new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234569L\"), new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"                    new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234560L\"), new Name(\"David Li\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"                    new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234561L\"), new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"            new Patient(new Nric(\"S1234562L\"), new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"    public static TestResult[] getSampleTestResults() {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        return new TestResult[] {","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"            new TestResult(new Nric(\"S1234567L\"), new TestDate(\"2020-03-01\"), new MedicalTest(\"X-Ray Scan\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"                    new Result(\"Fractured wrist\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"            new TestResult(new Nric(\"S1234568L\"), new TestDate(\"2022-12-01\"), new MedicalTest(\"CT Scan\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"                    new Result(\"Stroke\")),","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"            new TestResult(new Nric(\"S1234569L\"), new TestDate(\"2021-06-09\"), new MedicalTest(\"Blood Pressure\"),","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"                    new Result(\"Systolic: 154; Diastolic: 99\"))","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"        };","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"        for (Patient samplePatient : getSamplePersons()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"            sampleAb.addPerson(samplePatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"        for (TestResult sampleTestResult : getSampleTestResults()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"            sampleAb.addTestResult(sampleTestResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"cheekean5848":13,"clement0010":9,"-":46,"joey-chance":17}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedConsultation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationDiagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationFee;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.ConsultationNotes;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Date;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Time;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":" * Jackson-friendly version of {@link Consultation}.","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"class JsonAdaptedConsultation {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Consultation\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    private final String ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    private final String date;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    private final String time;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"    private final String diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"    private final String fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    private final String notes;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"     * Constructs a {@code JsonAdaptedConsultation} with the given consultation details.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    public JsonAdaptedConsultation(@JsonProperty(\"ownerNric\") String ownerNric, @JsonProperty(\"date\") String date,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"                              @JsonProperty(\"time\") String time, @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"                              @JsonProperty(\"fee\") String fee, @JsonProperty(\"notes\")","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"                                               String notes) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"        this.fee \u003d fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"     * Converts a given {@code Consultation} into this class for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"    public JsonAdaptedConsultation(Consultation source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        ownerNric \u003d source.getNric().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"        date \u003d source.getDate().value().format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"        time \u003d source.getTime().value().format(DateTimeFormatter.ofPattern(\"HH-mm\"));","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        diagnosis \u003d source.getDiagnosis().value();","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        fee \u003d source.getFee().value();","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"        notes \u003d source.getNotes().value();","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"     * Converts this Jackson-friendly adapted consultation object into the model\u0027s {@code Consultation} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted consultation.","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"    public Consultation toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        if (ownerNric \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"        if (!Nric.isValidNric(ownerNric)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"        final String modelOwnerNric \u003d ownerNric;","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"juslam19"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"juslam19"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"        final String modelDate \u003d date;","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"juslam19"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"juslam19"},"content":"        if (!Time.isValidTime(time)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"        final String modelTime \u003d time;","lastModifiedDate":"2022-03-15"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"juslam19"},"content":"        if (diagnosis \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"juslam19"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, ConsultationDiagnosis.class.getSimpleName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"        if (!ConsultationDiagnosis.isValidDiagnosis(diagnosis)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(ConsultationDiagnosis.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"juslam19"},"content":"        final String modelDiagnosis \u003d diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"juslam19"},"content":"        if (fee \u003d\u003d null) {","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, ConsultationFee.class.getSimpleName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"juslam19"},"content":"        if (!ConsultationFee.isValidFee(fee)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"juslam19"},"content":"            throw new IllegalValueException(ConsultationFee.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"juslam19"},"content":"        final String modelFee \u003d fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"juslam19"},"content":"        final String modelNotes \u003d notes;","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"        return new Consultation(new Nric(modelOwnerNric), new Date(modelDate), new Time(modelTime),","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"juslam19"},"content":"                new ConsultationDiagnosis(modelDiagnosis), new ConsultationFee(modelFee),","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"juslam19"},"content":"                new ConsultationNotes(modelNotes));","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":121}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import java.util.List;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"class JsonAdaptedContact {","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    private final String ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    private final String name;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    private final String phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    private final String email;","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    private final String address;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"     * Constructs a {@code JsonAdaptedContact} with the given contact details.","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    public JsonAdaptedContact(@JsonProperty(\"ownerNric\") String ownerNric, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"          @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"          @JsonProperty(\"address\") String address, @JsonProperty(\"tagged\")","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"              List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        this.ownerNric \u003d ownerNric;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"        ownerNric \u003d source.getOwnerNric().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"        final List\u003cTag\u003e contactTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"            contactTags.add(tag.toModelType());","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"        if (ownerNric \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"        if (!Nric.isValidNric(ownerNric)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"        final Nric modelOwnerNric \u003d new Nric(ownerNric);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-03-14"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-14"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(contactTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"        return new Contact(modelOwnerNric, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":2,"clement0010":119}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedical.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Age;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.BloodType;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Ethnicity;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.FamilyHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Gender;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Height;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Illnesses;","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.ImmunizationHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medication;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Surgeries;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Weight;","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"public class JsonAdaptedMedical {","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String nric;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String age;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String bloodType;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String medication;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String weight;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String height;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String illnesses;","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String surgeries;","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String familyHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String immunizationHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String gender;","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    private final String ethnicity;","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructs a {@code JsonAdaptedMedical} with the given prescription details.","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    public JsonAdaptedMedical(@JsonProperty(\"nric\") String nric,","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"age\") String age,","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"bloodType\") String bloodType,","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"medication\") String medication,","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"weight\") String weight,","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"height\") String height,","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"illnesses\") String illnesses,","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"surgeries\") String surgeries,","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"familyHistory\") String familyHistory,","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"immunizationHistory\") String immunizationHistory,","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"                              @JsonProperty(\"ethnicity\") String ethnicity","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"                              ) {","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"        this.age \u003d age;","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"        this.bloodType \u003d bloodType;","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"        this.medication \u003d medication;","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"        this.height \u003d height;","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"        this.illnesses \u003d illnesses;","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"        this.surgeries \u003d surgeries;","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"        this.familyHistory \u003d familyHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"        this.immunizationHistory \u003d immunizationHistory;","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"        this.ethnicity \u003d ethnicity;","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"     * Converts a given {@code Medical} into this class for Jackson use.","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"    public JsonAdaptedMedical(Medical source) {","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"        nric \u003d source.getPatientNric().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"        age \u003d source.getAge().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"        bloodType \u003d source.getBloodType().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"        medication \u003d source.getMedication().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"        weight \u003d source.getWeight().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"        height \u003d source.getHeight().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"        illnesses \u003d source.getIllnesses().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"        surgeries \u003d source.getSurgeries().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"        familyHistory \u003d source.getFamilyHistory().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"        immunizationHistory \u003d source.getImmunizationHistory().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"        ethnicity \u003d source.getEthnicity().value;","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"     * Converts this Jackson-friendly adapted prescription object into the model\u0027s {@code Medical} object.","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted prescription.","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"sibinhho99-nus"},"content":"    public Medical toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"sibinhho99-nus"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"sibinhho99-nus"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"sibinhho99-nus"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Age.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"sibinhho99-nus"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"        if (bloodType \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"sibinhho99-nus"},"content":"                            BloodType.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!BloodType.isValidBloodType(bloodType)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"sibinhho99-nus"},"content":"        final BloodType modelBloodType \u003d new BloodType(bloodType);","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"sibinhho99-nus"},"content":"        if (medication \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"sibinhho99-nus"},"content":"                            Medication.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":129,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Medication.isValidMedication(medication)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"        final Medication modelMedication \u003d new Medication(medication);","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"sibinhho99-nus"},"content":"        if (weight \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Weight.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Weight.isValidWeight(weight)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Weight.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"sibinhho99-nus"},"content":"        final Weight modelWeight \u003d new Weight(weight);","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":144,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"sibinhho99-nus"},"content":"        if (height \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Height.class.getSimpleName()));","lastModifiedDate":"2022-03-19"},{"lineNumber":147,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Height.isValidHeight(weight)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Height.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"sibinhho99-nus"},"content":"        final Height modelHeight \u003d new Height(height);","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"sibinhho99-nus"},"content":"        if (illnesses \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"sibinhho99-nus"},"content":"                            Illnesses.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Illnesses.isValidIllnesses(illnesses)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Illnesses.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"sibinhho99-nus"},"content":"        final Illnesses modelIllnesses \u003d new Illnesses(illnesses);","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"sibinhho99-nus"},"content":"        if (surgeries \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"                            Surgeries.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Surgeries.isValidSurgeries(surgeries)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":173,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Surgeries.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"sibinhho99-nus"},"content":"        final Surgeries modelSurgeries \u003d new Surgeries(surgeries);","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"sibinhho99-nus"},"content":"        if (familyHistory \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"sibinhho99-nus"},"content":"                            FamilyHistory.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!FamilyHistory.isValidFamilyHistory(familyHistory)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(FamilyHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"sibinhho99-nus"},"content":"        final FamilyHistory modelFamilyHistory \u003d new FamilyHistory(familyHistory);","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"sibinhho99-nus"},"content":"        if (immunizationHistory \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"sibinhho99-nus"},"content":"                            ImmunizationHistory.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!ImmunizationHistory.isValidImmunizationHistory(immunizationHistory)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(ImmunizationHistory.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"sibinhho99-nus"},"content":"        final ImmunizationHistory modelImmunizationHistory \u003d new ImmunizationHistory(immunizationHistory);","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"sibinhho99-nus"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"sibinhho99-nus"},"content":"                            Gender.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"sibinhho99-nus"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"sibinhho99-nus"},"content":"        if (ethnicity \u003d\u003d null) {","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"sibinhho99-nus"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"sibinhho99-nus"},"content":"                            Ethnicity.class.getSimpleName())","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"sibinhho99-nus"},"content":"            );","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!Ethnicity.isValidEthnicity(ethnicity)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new IllegalValueException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"sibinhho99-nus"},"content":"        final Ethnicity modelEthnicity \u003d new Ethnicity(ethnicity);","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"sibinhho99-nus"},"content":"        return new Medical(modelNric,","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelAge,","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelBloodType,","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelMedication,","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelHeight,","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelWeight,","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelIllnesses,","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelSurgeries,","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelFamilyHistory,","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelImmunizationHistory,","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelGender,","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"sibinhho99-nus"},"content":"                            modelEthnicity","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"sibinhho99-nus"},"content":"                );","lastModifiedDate":"2022-03-19"},{"lineNumber":240,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":241,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"sibinhho99-nus":241}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contact list contains duplicate contact(s).\";","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    private final String nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"nric\") String nric, @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"    public JsonAdaptedPerson(Patient source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d new Patient(modelNric, modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"cheekean5848"},"content":"        return patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheekean5848":8,"clement0010":21,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPrescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.DrugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.PrescriptionDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"public class JsonAdaptedPrescription {","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    private final String nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    private final String drugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    private final String date;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    private final String instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"     * Constructs a {@code JsonAdaptedPrescription} with the given prescription details.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    public JsonAdaptedPrescription(@JsonProperty(\"nric\") String nric, @JsonProperty(\"drugname\") String drugname,","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"                              @JsonProperty(\"date\") String date, @JsonProperty(\"instruction\") String instruction) {","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        this.drugName \u003d drugname;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"     * Converts a given {@code Prescription} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    public JsonAdaptedPrescription(Prescription source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"        nric \u003d source.getPrescriptionTarget().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        drugName \u003d source.getDrugName().drugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        date \u003d source.getPrescriptionDate().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        instruction \u003d source.getInstruction().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"     * Converts this Jackson-friendly adapted prescription object into the model\u0027s {@code Prescription} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted prescription.","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"    public Prescription toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"        if (drugName \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"                    DrugName.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"        if (!DrugName.isValidName(drugName)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        final DrugName modelDrugName \u003d new DrugName(drugName);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"                    PrescriptionDate.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"        if (!PrescriptionDate.isValidDate(date)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"        final PrescriptionDate modelDate \u003d new PrescriptionDate(date);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"        if (instruction \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"                    Instruction.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"cheekean5848"},"content":"        if (!Instruction.isValidInstruction(instruction)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"cheekean5848"},"content":"        final Instruction modelInstruction \u003d new Instruction(instruction);","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"        return new Prescription(modelNric, modelDrugName, modelDate, modelInstruction);","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":90}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTestResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.MedicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.Result;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":" * Jackson-friendly version of {@link TestResult}.","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"class JsonAdaptedTestResult {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Test result\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    private final String patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    private final String testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"    private final String medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"    private final String result;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"     * Constructs a {@code JsonAdaptedTestResult} with the given test result details.","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    public JsonAdaptedTestResult(@JsonProperty(\"patientNric\") String patientNric, @JsonProperty(\"date\") String testDate,","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"                                 @JsonProperty(\"medicalTest\") String medicalTest,","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"                                 @JsonProperty(\"result\") String result) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"        this.patientNric \u003d patientNric;","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"        this.testDate \u003d testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        this.medicalTest \u003d medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"        this.result \u003d result;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"     * Converts a given {@code TestResult} into this class for Jackson use.","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"    public JsonAdaptedTestResult(TestResult source) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"        patientNric \u003d source.getPatientNric().value;","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        testDate \u003d source.getTestDate().toString();","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        medicalTest \u003d source.getMedicalTest().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        result \u003d source.getResult().value;","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code TestResult} object.","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted test result.","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"    public TestResult toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        if (patientNric \u003d\u003d null) {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"        if (!Nric.isValidNric(patientNric)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"        final Nric modelPatientNric \u003d new Nric(patientNric);","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"        if (testDate \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"                    TestDate.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"        if (!TestDate.isValidTestDate(testDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(TestDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"joey-chance"},"content":"        final TestDate modelDate \u003d new TestDate(testDate);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"joey-chance"},"content":"        if (medicalTest \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"joey-chance"},"content":"                    MedicalTest.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"joey-chance"},"content":"        if (!MedicalTest.isValidMedicalTest(medicalTest)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(MedicalTest.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"joey-chance"},"content":"        final MedicalTest modelMedicalTest \u003d new MedicalTest(medicalTest);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"joey-chance"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Result.class.getSimpleName()));","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"joey-chance"},"content":"        if (!Result.isValidResult(result)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"joey-chance"},"content":"            throw new IllegalValueException(Result.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"joey-chance"},"content":"        final Result modelResult \u003d new Result(result);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"joey-chance"},"content":"        return new TestResult(modelPatientNric, modelDate, modelMedicalTest, modelResult);","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":91}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"sibinhho99-nus":1,"juslam19":1,"-":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contact list contains duplicate person(s).\";","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    public static final String MESSAGE_DUPLICATE_MEDICAL \u003d","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"            \"Medical information list contains duplicate medical details.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    public static final String MESSAGE_DUPLICATE_CONSULTATION \u003d \"Consultation list contains duplicate consultation(s).\";","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    public static final String MESSAGE_DUPLICATE_PRESCRIPTION \u003d \"Prescription list contains duplicate person(s).\";","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    public static final String MESSAGE_DUPLICATE_TEST_RESULT \u003d \"Test result list contains duplicate test(s).\";","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    private final List\u003cJsonAdaptedMedical\u003e medicals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    private final List\u003cJsonAdaptedConsultation\u003e consultations \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    private final List\u003cJsonAdaptedTestResult\u003e testResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    private final List\u003cJsonAdaptedPrescription\u003e prescriptions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons, contacts and test results.","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"                                       @JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts,","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"                                       @JsonProperty(\"medicals\") List\u003cJsonAdaptedMedical\u003e medicals,","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"                                       @JsonProperty(\"consultations\") List\u003cJsonAdaptedConsultation\u003e consultations,","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"                                       @JsonProperty(\"prescriptions\") List\u003cJsonAdaptedPrescription\u003e prescriptions,","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"                                       @JsonProperty(\"testResults\") List\u003cJsonAdaptedTestResult\u003e testResults) {","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        if (!contacts.isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"            this.contacts.addAll(contacts);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!medicals.isEmpty()) {","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"            this.medicals.addAll(medicals);","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"        if (!consultations.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"            this.consultations.addAll(consultations);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"        if (!prescriptions.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"            this.prescriptions.addAll(prescriptions);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"        if (!testResults.isEmpty()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"            this.testResults.addAll(testResults);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"        medicals.addAll(source.getMedicalList().stream().map(JsonAdaptedMedical::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"        prescriptions.addAll(source.getPrescriptionList().stream().map(JsonAdaptedPrescription::new)","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"cheekean5848"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"        consultations.addAll(source.getConsultationList().stream().map(","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"                                JsonAdaptedConsultation::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"joey-chance"},"content":"        testResults.addAll(source.getTestResultList().stream().map(JsonAdaptedTestResult::new)","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"joey-chance"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"cheekean5848"},"content":"            Patient patient \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"            if (addressBook.hasPerson(patient)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"            addressBook.addPerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2022-03-14"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2022-03-14"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":"            if (addressBook.hasContact(contact)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2022-03-14"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"            addressBook.addContact(contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"sibinhho99-nus"},"content":"        for (JsonAdaptedMedical jsonAdaptedMedical: medicals) {","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"sibinhho99-nus"},"content":"            Medical medical \u003d jsonAdaptedMedical.toModelType();","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"sibinhho99-nus"},"content":"            if (addressBook.hasMedical(medical)) {","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"sibinhho99-nus"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEDICAL);","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"sibinhho99-nus"},"content":"            addressBook.addMedical(medical);","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"cheekean5848"},"content":"        for (JsonAdaptedPrescription jsonAdaptedPrescription : prescriptions) {","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"cheekean5848"},"content":"            Prescription prescription \u003d jsonAdaptedPrescription.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"            if (addressBook.hasPrescription(prescription)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"cheekean5848"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PRESCRIPTION);","lastModifiedDate":"2022-03-15"},{"lineNumber":119,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"cheekean5848"},"content":"            addressBook.addPrescription(prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"        for (JsonAdaptedConsultation jsonAdaptedConsultation : consultations) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"            Consultation consultation \u003d jsonAdaptedConsultation.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"            if (addressBook.hasConsultation(consultation)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONSULTATION);","lastModifiedDate":"2022-03-15"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"juslam19"},"content":"            addressBook.addConsultation(consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"        for (JsonAdaptedTestResult jsonAdaptedTestResult : testResults) {","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joey-chance"},"content":"            TestResult testResult \u003d jsonAdaptedTestResult.toModelType();","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"joey-chance"},"content":"            if (addressBook.hasTestResult(testResult)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"joey-chance"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TEST_RESULT);","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"joey-chance"},"content":"            addressBook.addTestResult(testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheekean5848":17,"sibinhho99-nus":16,"clement0010":15,"juslam19":15,"-":56,"joey-chance":20}},{"path":"src/main/java/seedu/address/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"sibinhho99-nus":1,"-":46}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sibinhho99-nus":2,"-":75}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.util.history.CommandHistory;","lastModifiedDate":"2022-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        commandHistory \u003d new CommandHistory();","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"            commandHistory.save(commandText);","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"    private void handleNavigateHistory(KeyCode keyCode) {","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"        if (keyCode \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"            commandTextField.setText(commandHistory.previous());","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"        } else if (keyCode \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"            commandTextField.setText(commandHistory.next());","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"cheekean5848"},"content":"    private void handleOnKeyPressed(KeyEvent event) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"        KeyCode keyCode \u003d event.getCode();","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        switch (keyCode) {","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        case ENTER:","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"cheekean5848"},"content":"            handleCommandEntered();","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"        case UP:","lastModifiedDate":"2022-03-27"},{"lineNumber":73,"author":{"gitId":"cheekean5848"},"content":"        case DOWN:","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"cheekean5848"},"content":"            handleNavigateHistory(keyCode);","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"            break;","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"        default:","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"cheekean5848":29,"-":84}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-t11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"clement0010":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.logic.commands.CommandType;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"import seedu.address.ui.consultation.ConsultationListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"import seedu.address.ui.contact.ContactListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.ui.medical.MedicalListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.ui.prescription.PrescriptionListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"import seedu.address.ui.testresult.TestResultListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Logic logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"    private ConsultationListPanel consultationListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    private MedicalListPanel medicalListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"    private PrescriptionListPanel prescriptionListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"    private TestResultListPanel testResultListPanel;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"cheekean5848"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2022-03-18"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredContactList());","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"        consultationListPanel \u003d new ConsultationListPanel(logic.getFilteredConsultationList());","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"sibinhho99-nus"},"content":"        medicalListPanel \u003d new MedicalListPanel(logic.getFilteredMedicalList());","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"        prescriptionListPanel \u003d new PrescriptionListPanel(logic.getFilteredPrescriptionList());","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"        testResultListPanel \u003d new TestResultListPanel(logic.getFilteredTestResultList());","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"cheekean5848"},"content":"        personListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":156,"author":{"gitId":"juslam19"},"content":"     * Sets the stackpane size based on {@code commandType}.","lastModifiedDate":"2022-03-14"},{"lineNumber":157,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":158,"author":{"gitId":"juslam19"},"content":"    public void setDisplayListPane(CommandType commandType) {","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"juslam19"},"content":"        switch (commandType) {","lastModifiedDate":"2022-03-14"},{"lineNumber":161,"author":{"gitId":"juslam19"},"content":"        case CONTACT:","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"juslam19"},"content":"            personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"juslam19"},"content":"            personListPanelPlaceholder.getChildren().add(contactListPanel.getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"juslam19"},"content":"            return;","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"juslam19"},"content":"        case CONSULTATION:","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"juslam19"},"content":"            personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"juslam19"},"content":"            personListPanelPlaceholder.getChildren().add(consultationListPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"juslam19"},"content":"            return;","lastModifiedDate":"2022-03-15"},{"lineNumber":169,"author":{"gitId":"sibinhho99-nus"},"content":"        case MEDICAL:","lastModifiedDate":"2022-03-15"},{"lineNumber":170,"author":{"gitId":"sibinhho99-nus"},"content":"            personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":171,"author":{"gitId":"sibinhho99-nus"},"content":"            personListPanelPlaceholder.getChildren().add(medicalListPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":172,"author":{"gitId":"sibinhho99-nus"},"content":"            return;","lastModifiedDate":"2022-03-15"},{"lineNumber":173,"author":{"gitId":"cheekean5848"},"content":"        case PRESCRIPTION:","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"cheekean5848"},"content":"            personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":175,"author":{"gitId":"cheekean5848"},"content":"            personListPanelPlaceholder.getChildren().add(prescriptionListPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"cheekean5848"},"content":"            return;","lastModifiedDate":"2022-03-15"},{"lineNumber":177,"author":{"gitId":"joey-chance"},"content":"        case TEST:","lastModifiedDate":"2022-03-15"},{"lineNumber":178,"author":{"gitId":"joey-chance"},"content":"            personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":179,"author":{"gitId":"joey-chance"},"content":"            personListPanelPlaceholder.getChildren().add(testResultListPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":180,"author":{"gitId":"joey-chance"},"content":"            return;","lastModifiedDate":"2022-03-15"},{"lineNumber":181,"author":{"gitId":"juslam19"},"content":"        default:","lastModifiedDate":"2022-03-14"},{"lineNumber":182,"author":{"gitId":"cheekean5848"},"content":"            personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"cheekean5848"},"content":"            personListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":185,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":215,"author":{"gitId":"cheekean5848"},"content":"    public PatientListPanel getPersonListPanel() {","lastModifiedDate":"2022-03-18"},{"lineNumber":216,"author":{"gitId":"cheekean5848"},"content":"        return patientListPanel;","lastModifiedDate":"2022-03-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"juslam19"},"content":"            setDisplayListPane(commandResult.getCommandType());","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheekean5848":14,"sibinhho99-nus":10,"juslam19":28,"-":188,"joey-chance":7}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    public final Patient patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    private Label nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2022-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        nric.setText(patient.getNric().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        address.setText(patient.getAddress().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        email.setText(patient.getEmail().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"        patient.getTags().stream()","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"cheekean5848"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"cheekean5848"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheekean5848":14,"clement0010":2,"-":64}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Patients\";","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    private ListView\u003cPatient\u003e personListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        personListView.setItems(patientList);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"    class PersonListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheekean5848":11,"clement0010":5,"-":39}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/MedBook.png\";","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Logic logic;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheekean5848":1,"sibinhho99-nus":1,"clement0010":1,"-":85}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"     * @return","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheekean5848":1,"-":88}},{"path":"src/main/java/seedu/address/ui/consultation/ConsultationCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.ui.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":" * An UI component that displays information of a {@code Consultation}.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"public class ConsultationCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"    private static final String FXML \u003d \"consultation/ConsultationListCard.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    public final Consultation consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"    private Label id;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    private Label nric;","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    private Label date;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"    private Label diagnosis;","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"    private Label fee;","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"    private Label notes;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"     * Creates a {@code ConsultationCard} with the given {@code Consultation} and index to display.","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"    public ConsultationCard(Consultation consultation, int displayedIndex) {","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"        this.consultation \u003d consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"        nric.setText(consultation.getNric().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"        date.setText(consultation.getDate().toString() + \", \" + consultation.getTime().toString());","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"        fee.setText(consultation.getFee().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"        diagnosis.setText(consultation.getDiagnosis().toString());","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"        if (consultation.getNotes().toString().equals(\"\")) {","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"            notes.setText(\"N/A\");","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"        } else {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"            notes.setText(consultation.getNotes().toString());","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"juslam19"},"content":"        if (!(other instanceof ConsultationCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"juslam19"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"juslam19"},"content":"        ConsultationCard card \u003d (ConsultationCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"juslam19"},"content":"        return consultation.equals(card.consultation);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":70}},{"path":"src/main/java/seedu/address/ui/consultation/ConsultationListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"package seedu.address.ui.consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":" * Panel containing the list of consultations.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"public class ConsultationListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Contacts\";","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"    private static final String FXML \u003d \"consultation/ConsultationListPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ConsultationListPanel.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"    private ListView\u003cConsultation\u003e consultationListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"    private ObservableList\u003cPatient\u003e personList;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"     * Creates a {@code ConsultationListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    public ConsultationListPanel(ObservableList\u003cConsultation\u003e consultationList) {","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"        consultationListView.setItems(consultationList);","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"        consultationListView.setCellFactory(listView -\u003e new ConsultationListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Consultation} using a {@code ConsultationCard}.","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"    class ConsultationListViewCell extends ListCell\u003cConsultation\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"        protected void updateItem(Consultation consultation, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"            super.updateItem(consultation, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"            if (empty || consultation \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"                setGraphic(new ConsultationCard(consultation, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"}","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"clement0010":6,"juslam19":54}},{"path":"src/main/java/seedu/address/ui/contact/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.ui.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":" * An UI component that displays information of a {@code Contact}.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"    private static final String FXML \u003d \"contact/ContactListCard.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    public final Contact contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"    private Label name;","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    private Label id;","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    private Label phone;","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    private Label address;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"    private Label email;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"     * Creates a {@code ContactCode} with the given {@code Contact} and index to display.","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"    public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"        name.setText(contact.getName().fullName);","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        phone.setText(contact.getPhone().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"        address.setText(contact.getAddress().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        email.setText(contact.getEmail().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"        contact.getTags().stream()","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-14"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-14"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"            return true;","lastModifiedDate":"2022-03-14"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"            return false;","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"        // state check","lastModifiedDate":"2022-03-14"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-14"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"                \u0026\u0026 contact.equals(card.contact);","lastModifiedDate":"2022-03-14"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"clement0010":78}},{"path":"src/main/java/seedu/address/ui/contact/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"package seedu.address.ui.contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Contacts\";","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    private static final String FXML \u003d \"contact/ContactListPanel.fxml\";","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    private ListView\u003cContact\u003e contactListView;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    @FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"     * Creates a {@code ContactListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"    public ContactListPanel(ObservableList\u003cContact\u003e contactList) {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        super(FXML);","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        contactListView.setItems(contactList);","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"        contactListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"    class ContactListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"        protected void updateItem(Contact contact, boolean empty) {","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"            super.updateItem(contact, empty);","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"            if (empty || contact \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"                setText(null);","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"            } else {","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"                setGraphic(new ContactCard(contact, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"            }","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"cheekean5848":1,"clement0010":55}},{"path":"src/main/java/seedu/address/ui/medical/MedicalCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.ui.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"public class MedicalCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"    private static final String FXML \u003d \"medical/MedicalListCard.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"    public final Medical medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label index;","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label age;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label bloodType;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label medication;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label height;","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label weight;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label illnesses;","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label surgeries;","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label familyHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label immunizationHistory;","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label gender;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"sibinhho99-nus"},"content":"    private Label ethnicity;","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"sibinhho99-nus"},"content":"     * Constructor for medical card.","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"sibinhho99-nus"},"content":"    public MedicalCard(Medical medical, int displayedIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"sibinhho99-nus"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"sibinhho99-nus"},"content":"        this.medical \u003d null;","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"sibinhho99-nus"},"content":"        index.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"sibinhho99-nus"},"content":"        nric.setText(\"Patient\u0027s NRIC: \" + medical.getPatientNric().value);","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"sibinhho99-nus"},"content":"        age.setText(\"Age: \" + medical.getAge().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"sibinhho99-nus"},"content":"        bloodType.setText(\"Blood type: \" + medical.getBloodType().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"sibinhho99-nus"},"content":"        medication.setText(\"Medication: \" + medical.getMedication().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"sibinhho99-nus"},"content":"        weight.setText(\"Weight: \" + medical.getWeight().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"sibinhho99-nus"},"content":"        height.setText(\"Height: \" + medical.getHeight().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"sibinhho99-nus"},"content":"        illnesses.setText(\"Illnesses: \" + medical.getIllnesses().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"sibinhho99-nus"},"content":"        surgeries.setText(\"Surgeries: \" + medical.getSurgeries().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"sibinhho99-nus"},"content":"        familyHistory.setText(\"Family history: \" + medical.getFamilyHistory().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"sibinhho99-nus"},"content":"        immunizationHistory.setText(\"Immunization history: \" + medical.getImmunizationHistory().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"sibinhho99-nus"},"content":"        gender.setText(\"Gender: \" + medical.getGender().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"sibinhho99-nus"},"content":"        ethnicity.setText(\"Ethnicity: \" + medical.getEthnicity().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"sibinhho99-nus"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"sibinhho99-nus"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"sibinhho99-nus"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"sibinhho99-nus"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"sibinhho99-nus"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"sibinhho99-nus"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"sibinhho99-nus"},"content":"        if (!(other instanceof MedicalCard)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"sibinhho99-nus"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"sibinhho99-nus"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"sibinhho99-nus"},"content":"        MedicalCard card \u003d (MedicalCard) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"sibinhho99-nus"},"content":"        return nric.getText().equals(card.nric.getText())","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"sibinhho99-nus"},"content":"                \u0026\u0026 medical.equals(card.medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":91,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":91}},{"path":"src/main/java/seedu/address/ui/medical/MedicalListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"package seedu.address.ui.medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"public class MedicalListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Medical Details\";","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"    private static final String FXML \u003d \"medical/MedicalListPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MedicalListPanel.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"    private ListView\u003cMedical\u003e medicalListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"     * Creates a {@code MedicalListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"    public MedicalListPanel(ObservableList\u003cMedical\u003e medicalList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"        medicalListView.setItems(medicalList);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"        medicalListView.setCellFactory(listView -\u003e new MedicalListViewCell());","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"    class MedicalListViewCell extends ListCell\u003cMedical\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"        protected void updateItem(Medical medical, boolean empty) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"            super.updateItem(medical, empty);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"            if (empty || medical \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"                setText(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"sibinhho99-nus"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"sibinhho99-nus"},"content":"                setGraphic(new MedicalCard(medical, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"sibinhho99-nus"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"sibinhho99-nus"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"sibinhho99-nus"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":43,"clement0010":7}},{"path":"src/main/java/seedu/address/ui/prescription/PrescriptionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.ui.prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"public class PrescriptionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"    private static final String FXML \u003d \"prescription/PrescriptionListCard.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"    public final Prescription prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    private Label id;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    private Label drugName;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"    private Label date;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    private Label instruction;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"     * Creates a {@code PrescriptionCode} with the given {@code Prescription} and index to display.","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"    public PrescriptionCard(Prescription prescription, int displayedIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"        this.prescription \u003d prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        drugName.setText(prescription.getDrugName().drugName);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"        date.setText(prescription.getPrescriptionDate().toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        instruction.setText(prescription.getInstruction().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        if (!(other instanceof PrescriptionCard)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        PrescriptionCard card \u003d (PrescriptionCard) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"                \u0026\u0026 prescription.equals(card.prescription);","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":56}},{"path":"src/main/java/seedu/address/ui/prescription/PrescriptionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.ui.prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"public class PrescriptionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Prescriptions\";","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"    private static final String FXML \u003d \"prescription/PrescriptionListPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PrescriptionListPanel.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"    private ListView\u003cPrescription\u003e prescriptionListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"     * Creates a {@code PrescriptionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"    public PrescriptionListPanel(ObservableList\u003cPrescription\u003e prescriptionList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"        prescriptionListView.setItems(prescriptionList);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        prescriptionListView.setCellFactory(listView -\u003e new PrescriptionListViewCell());","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    class PrescriptionListViewCell extends ListCell\u003cPrescription\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        protected void updateItem(Prescription prescription, boolean empty) {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"            super.updateItem(prescription, empty);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"            if (empty || prescription \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"                setText(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"cheekean5848"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"                setGraphic(new PrescriptionCard(prescription, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":43,"clement0010":6}},{"path":"src/main/java/seedu/address/ui/testresult/TestResultCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.ui.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"public class TestResultCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"    private static final String FXML \u003d \"testresult/TestResultListCard.fxml\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"     *","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"    public final TestResult testResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"    private Label id;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    private Label testDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"    private Label medicalTest;","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    private Label result;","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    public TestResultCard(TestResult testResult, int displayedIndex) {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"        this.testResult \u003d testResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"        testDate.setText(testResult.getTestDate().toString());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"        medicalTest.setText(testResult.getMedicalTest().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"        result.setText(testResult.getResult().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"            return true;","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"joey-chance"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"joey-chance"},"content":"        if (!(other instanceof TestResultCard)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"joey-chance"},"content":"            return false;","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"joey-chance"},"content":"        // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"joey-chance"},"content":"        TestResultCard card \u003d (TestResultCard) other;","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"joey-chance"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"joey-chance"},"content":"                \u0026\u0026 testResult.equals(card.testResult);","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":67}},{"path":"src/main/java/seedu/address/ui/testresult/TestResultListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"package seedu.address.ui.testresult;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"public class TestResultListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"    private static final String SCREEN_TITLE \u003d \"Tests\";","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"    private static final String FXML \u003d \"testresult/TestResultListPanel.fxml\";","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TestResultListPanel.class);","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"    private ListView\u003cTestResult\u003e testResultListView;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"    private Label screenTitle;","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"     * Creates a {@code TestResultListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"    public TestResultListPanel(ObservableList\u003cTestResult\u003e testResultList) {","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"        super(FXML);","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"        screenTitle.setText(SCREEN_TITLE);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"joey-chance"},"content":"        testResultListView.setItems(testResultList);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"joey-chance"},"content":"        testResultListView.setCellFactory(listView -\u003e new TestResultListViewCell());","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"joey-chance"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"joey-chance"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code TestResult} using a {@code TestResultCard}.","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"joey-chance"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"joey-chance"},"content":"    class TestResultListViewCell extends ListCell\u003cTestResult\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"joey-chance"},"content":"        protected void updateItem(TestResult testResult, boolean empty) {","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"joey-chance"},"content":"            super.updateItem(testResult, empty);","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"joey-chance"},"content":"            if (empty || testResult \u003d\u003d null) {","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"joey-chance"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"joey-chance"},"content":"                setText(null);","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"joey-chance"},"content":"            } else {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"joey-chance"},"content":"                setGraphic(new TestResultCard(testResult, getIndex() + 1).getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"joey-chance"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"joey-chance"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"joey-chance"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"clement0010":6,"joey-chance":49}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onKeyPressed\u003d\"#handleOnKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"cheekean5848":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":".screen-header {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"clement0010":7,"-":352}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #7e7a7a #7e7a7a #d06651 #7e7a7a !important;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    -fx-background: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clement0010":3,"-":18}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"#helpMessage {","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: gray;","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffbd59;","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#004aad, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"clement0010":9,"-":13}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":".background {","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"    background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":".label {","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":".label-bright {","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":".label-header {","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":".screen-header {","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":".text-field {","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":".tab-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":".table-view {","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"    -fx-base: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":51,"author":{"gitId":"clement0010"},"content":"    -fx-control-inner-background: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"clement0010"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-03-19"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-03-19"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-03-19"},{"lineNumber":64,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"    -fx-border-color:","lastModifiedDate":"2022-03-19"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"        transparent","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"        transparent","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"        transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":72,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":73,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":75,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":76,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":78,"author":{"gitId":"clement0010"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"clement0010"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":86,"author":{"gitId":"clement0010"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-03-19"},{"lineNumber":87,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":88,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: transparent transparent transparent #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":89,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":90,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"clement0010"},"content":".split-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":97,"author":{"gitId":"clement0010"},"content":".list-view {","lastModifiedDate":"2022-03-19"},{"lineNumber":98,"author":{"gitId":"clement0010"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":99,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":100,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":101,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":102,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":103,"author":{"gitId":"clement0010"},"content":".list-cell {","lastModifiedDate":"2022-03-19"},{"lineNumber":104,"author":{"gitId":"clement0010"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":105,"author":{"gitId":"clement0010"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":106,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":107,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":108,"author":{"gitId":"clement0010"},"content":".list-cell:filled #cardPane {","lastModifiedDate":"2022-03-19"},{"lineNumber":109,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":110,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":111,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2022-03-19"},{"lineNumber":112,"author":{"gitId":"clement0010"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2022-03-19"},{"lineNumber":113,"author":{"gitId":"clement0010"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2022-03-19"},{"lineNumber":114,"author":{"gitId":"clement0010"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(150,170,180,0.5), 5, 0, 0, 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":115,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":".list-cell:filled:hover #cardPane {","lastModifiedDate":"2022-03-19"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":120,"author":{"gitId":"clement0010"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(150,170,180,0.5), 15, 0, 0, 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":123,"author":{"gitId":"clement0010"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-03-19"},{"lineNumber":124,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":127,"author":{"gitId":"clement0010"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-03-19"},{"lineNumber":128,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-03-19"},{"lineNumber":132,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #7e7a7a #7e7a7a #ffbd59 #7e7a7a;","lastModifiedDate":"2022-03-19"},{"lineNumber":133,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1 1 3 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0","lastModifiedDate":"2022-03-19"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":137,"author":{"gitId":"clement0010"},"content":".list-cell .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":138,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":139,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":140,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":141,"author":{"gitId":"clement0010"},"content":".cell_big_label {","lastModifiedDate":"2022-03-19"},{"lineNumber":142,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-19"},{"lineNumber":143,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-19"},{"lineNumber":144,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":145,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":146,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":147,"author":{"gitId":"clement0010"},"content":".cell_small_label {","lastModifiedDate":"2022-03-19"},{"lineNumber":148,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-03-19"},{"lineNumber":149,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-03-19"},{"lineNumber":150,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":151,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":152,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":153,"author":{"gitId":"clement0010"},"content":".stack-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":154,"author":{"gitId":"clement0010"},"content":"     -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":155,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":156,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":157,"author":{"gitId":"clement0010"},"content":".pane-with-border {","lastModifiedDate":"2022-03-19"},{"lineNumber":158,"author":{"gitId":"clement0010"},"content":"     -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"clement0010"},"content":"     -fx-border-color: derive(#ffffff, 10%);","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"clement0010"},"content":"     -fx-border-bottom-color: derive(#004aad, 10%);","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"clement0010"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":163,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":164,"author":{"gitId":"clement0010"},"content":".status-bar {","lastModifiedDate":"2022-03-19"},{"lineNumber":165,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":166,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"clement0010"},"content":".result-display {","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":171,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":172,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":173,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":174,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"clement0010"},"content":".result-display .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"clement0010"},"content":".status-bar .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":180,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":181,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":182,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-03-19"},{"lineNumber":183,"author":{"gitId":"clement0010"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-03-19"},{"lineNumber":184,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":185,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":186,"author":{"gitId":"clement0010"},"content":".status-bar-with-border {","lastModifiedDate":"2022-03-19"},{"lineNumber":187,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":188,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: derive(#ffffff, 25%);","lastModifiedDate":"2022-03-19"},{"lineNumber":189,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-19"},{"lineNumber":190,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":191,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":192,"author":{"gitId":"clement0010"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":193,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":194,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":195,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":196,"author":{"gitId":"clement0010"},"content":".grid-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":197,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":198,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: derive(#ffffff, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":199,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-03-19"},{"lineNumber":200,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":201,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":202,"author":{"gitId":"clement0010"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":203,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":204,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":205,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":206,"author":{"gitId":"clement0010"},"content":".context-menu {","lastModifiedDate":"2022-03-19"},{"lineNumber":207,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 50%);","lastModifiedDate":"2022-03-19"},{"lineNumber":208,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":209,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":210,"author":{"gitId":"clement0010"},"content":".context-menu .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":211,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":212,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":213,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":214,"author":{"gitId":"clement0010"},"content":".menu-bar {","lastModifiedDate":"2022-03-19"},{"lineNumber":215,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":216,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":217,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":218,"author":{"gitId":"clement0010"},"content":".menu-bar .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":219,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":220,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":221,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":222,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-03-19"},{"lineNumber":223,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":224,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":225,"author":{"gitId":"clement0010"},"content":".menu .left-container {","lastModifiedDate":"2022-03-19"},{"lineNumber":226,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: white;","lastModifiedDate":"2022-03-19"},{"lineNumber":227,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":228,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":229,"author":{"gitId":"clement0010"},"content":"/*","lastModifiedDate":"2022-03-19"},{"lineNumber":230,"author":{"gitId":"clement0010"},"content":" * Metro style Push Button","lastModifiedDate":"2022-03-19"},{"lineNumber":231,"author":{"gitId":"clement0010"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-03-19"},{"lineNumber":232,"author":{"gitId":"clement0010"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-03-19"},{"lineNumber":233,"author":{"gitId":"clement0010"},"content":" */","lastModifiedDate":"2022-03-19"},{"lineNumber":234,"author":{"gitId":"clement0010"},"content":".button {","lastModifiedDate":"2022-03-19"},{"lineNumber":235,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-03-19"},{"lineNumber":236,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-03-19"},{"lineNumber":237,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-03-19"},{"lineNumber":238,"author":{"gitId":"clement0010"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":239,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":240,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-03-19"},{"lineNumber":241,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":242,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-03-19"},{"lineNumber":243,"author":{"gitId":"clement0010"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-03-19"},{"lineNumber":244,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":245,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":246,"author":{"gitId":"clement0010"},"content":".button:hover {","lastModifiedDate":"2022-03-19"},{"lineNumber":247,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-03-19"},{"lineNumber":248,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":249,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":250,"author":{"gitId":"clement0010"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-03-19"},{"lineNumber":251,"author":{"gitId":"clement0010"},"content":"  -fx-background-color: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":252,"author":{"gitId":"clement0010"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":253,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":254,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":255,"author":{"gitId":"clement0010"},"content":".button:focused {","lastModifiedDate":"2022-03-19"},{"lineNumber":256,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #004aad, #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":257,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":258,"author":{"gitId":"clement0010"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-03-19"},{"lineNumber":259,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":260,"author":{"gitId":"clement0010"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":261,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":262,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":263,"author":{"gitId":"clement0010"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-03-19"},{"lineNumber":264,"author":{"gitId":"clement0010"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-03-19"},{"lineNumber":265,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":266,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":267,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":268,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":269,"author":{"gitId":"clement0010"},"content":".button:default {","lastModifiedDate":"2022-03-19"},{"lineNumber":270,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-03-19"},{"lineNumber":271,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":272,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":273,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":274,"author":{"gitId":"clement0010"},"content":".button:default:hover {","lastModifiedDate":"2022-03-19"},{"lineNumber":275,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-03-19"},{"lineNumber":276,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":277,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":278,"author":{"gitId":"clement0010"},"content":".dialog-pane {","lastModifiedDate":"2022-03-19"},{"lineNumber":279,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":280,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":281,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":282,"author":{"gitId":"clement0010"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-03-19"},{"lineNumber":283,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":284,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":285,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":286,"author":{"gitId":"clement0010"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-03-19"},{"lineNumber":287,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-03-19"},{"lineNumber":288,"author":{"gitId":"clement0010"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-03-19"},{"lineNumber":289,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":290,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":291,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":292,"author":{"gitId":"clement0010"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-03-19"},{"lineNumber":293,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 25%);","lastModifiedDate":"2022-03-19"},{"lineNumber":294,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":295,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":296,"author":{"gitId":"clement0010"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-03-19"},{"lineNumber":297,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-03-19"},{"lineNumber":298,"author":{"gitId":"clement0010"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-03-19"},{"lineNumber":299,"author":{"gitId":"clement0010"},"content":"    -fx-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":300,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":301,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":302,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":303,"author":{"gitId":"clement0010"},"content":".scroll-bar {","lastModifiedDate":"2022-03-19"},{"lineNumber":304,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 20%);","lastModifiedDate":"2022-03-19"},{"lineNumber":305,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":306,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":307,"author":{"gitId":"clement0010"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-03-19"},{"lineNumber":308,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: derive(#ffffff, 50%);","lastModifiedDate":"2022-03-19"},{"lineNumber":309,"author":{"gitId":"clement0010"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-03-19"},{"lineNumber":310,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":311,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":312,"author":{"gitId":"clement0010"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-03-19"},{"lineNumber":313,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":314,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":315,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":316,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":317,"author":{"gitId":"clement0010"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-03-19"},{"lineNumber":318,"author":{"gitId":"clement0010"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-03-19"},{"lineNumber":319,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":320,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":321,"author":{"gitId":"clement0010"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-03-19"},{"lineNumber":322,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-03-19"},{"lineNumber":323,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":324,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":325,"author":{"gitId":"clement0010"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-03-19"},{"lineNumber":326,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":327,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":328,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":329,"author":{"gitId":"clement0010"},"content":"#cardPane {","lastModifiedDate":"2022-03-19"},{"lineNumber":330,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-03-19"},{"lineNumber":331,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #7e7a7a;","lastModifiedDate":"2022-03-19"},{"lineNumber":332,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":333,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":334,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":335,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":336,"author":{"gitId":"clement0010"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-03-19"},{"lineNumber":337,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-03-19"},{"lineNumber":338,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-03-19"},{"lineNumber":339,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":340,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":341,"author":{"gitId":"clement0010"},"content":"#commandTextField {","lastModifiedDate":"2022-03-19"},{"lineNumber":342,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent #ffffff transparent #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":343,"author":{"gitId":"clement0010"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":344,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #7e7a7a #7e7a7a #004aad #7e7a7a;","lastModifiedDate":"2022-03-19"},{"lineNumber":345,"author":{"gitId":"clement0010"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":346,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":347,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1 1 3 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":348,"author":{"gitId":"clement0010"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-03-19"},{"lineNumber":349,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-03-19"},{"lineNumber":350,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":351,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":352,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":353,"author":{"gitId":"clement0010"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-03-19"},{"lineNumber":354,"author":{"gitId":"clement0010"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-03-19"},{"lineNumber":355,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":356,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":357,"author":{"gitId":"clement0010"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-03-19"},{"lineNumber":358,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: transparent, #ffffff, transparent, #ffffff;","lastModifiedDate":"2022-03-19"},{"lineNumber":359,"author":{"gitId":"clement0010"},"content":"    -fx-border-color: #7e7a7a #7e7a7a #004aad #7e7a7a;","lastModifiedDate":"2022-03-19"},{"lineNumber":360,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5 5 0 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":361,"author":{"gitId":"clement0010"},"content":"    -fx-border-width: 1 1 3 1;","lastModifiedDate":"2022-03-19"},{"lineNumber":362,"author":{"gitId":"clement0010"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-03-19"},{"lineNumber":363,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":364,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":365,"author":{"gitId":"clement0010"},"content":"#tags {","lastModifiedDate":"2022-03-19"},{"lineNumber":366,"author":{"gitId":"clement0010"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-03-19"},{"lineNumber":367,"author":{"gitId":"clement0010"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-03-19"},{"lineNumber":368,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"},{"lineNumber":369,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":370,"author":{"gitId":"clement0010"},"content":"#tags .label {","lastModifiedDate":"2022-03-19"},{"lineNumber":371,"author":{"gitId":"clement0010"},"content":"    -fx-text-fill: #004aad;","lastModifiedDate":"2022-03-19"},{"lineNumber":372,"author":{"gitId":"clement0010"},"content":"    -fx-background-color: #ffbd59;","lastModifiedDate":"2022-03-19"},{"lineNumber":373,"author":{"gitId":"clement0010"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-03-19"},{"lineNumber":374,"author":{"gitId":"clement0010"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2022-03-19"},{"lineNumber":375,"author":{"gitId":"clement0010"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-03-19"},{"lineNumber":376,"author":{"gitId":"clement0010"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-03-19"},{"lineNumber":377,"author":{"gitId":"clement0010"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"clement0010":377}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"         title\u003d\"MedBook App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    \u003cImage url\u003d\"@/images/MedBook_32.png\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"        \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cheekean5848":2,"clement0010":2,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clement0010":1,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"  \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"      \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"clement0010":9,"-":8}},{"path":"src/main/resources/view/consultation/ConsultationListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"juslam19"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"208.0\" prefWidth\u003d\"383.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"juslam19"},"content":"  \u003cGridPane prefHeight\u003d\"191.0\" prefWidth\u003d\"312.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"215.0\" prefWidth\u003d\"312.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"juslam19"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"juslam19"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"        \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"juslam19"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"                    \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"                    \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"juslam19"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"juslam19"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\"\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"               \u003cfont\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"        \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$nric\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"juslam19"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"juslam19"},"content":"                \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"juslam19"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"juslam19"},"content":"         \u003cRegion prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"juslam19"},"content":"      \u003cLabel text\u003d\"Diagnosis\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"juslam19"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"juslam19"},"content":"               \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"juslam19"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"juslam19"},"content":"      \u003cLabel fx:id\u003d\"diagnosis\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$diagnosis\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"juslam19"},"content":"         \u003cRegion prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"juslam19"},"content":"      \u003cLabel text\u003d\"Fee\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"juslam19"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"               \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"juslam19"},"content":"      \u003cLabel fx:id\u003d\"fee\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$fee\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"juslam19"},"content":"         \u003cRegion prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"juslam19"},"content":"      \u003cLabel text\u003d\"Notes\"\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"juslam19"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"juslam19"},"content":"               \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"juslam19"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"      \u003cLabel fx:id\u003d\"notes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$notes\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"         \u003cRegion prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"juslam19"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"juslam19"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"juslam19"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"juslam19"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"juslam19"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"juslam19"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"juslam19":62}},{"path":"src/main/resources/view/consultation/ConsultationListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"juslam19"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"juslam19"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"juslam19"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"  \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"    \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"      \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"  \u003cListView fx:id\u003d\"consultationListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"clement0010":9,"juslam19":8}},{"path":"src/main/resources/view/contact/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"clement0010"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"clement0010"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"clement0010"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"clement0010"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"clement0010"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"clement0010"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"clement0010"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"clement0010"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"clement0010"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"clement0010"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"clement0010":36}},{"path":"src/main/resources/view/contact/ContactListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"clement0010"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"            \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"    \u003cListView fx:id\u003d\"contactListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"clement0010":17}},{"path":"src/main/resources/view/medical/MedicalListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"sibinhho99-nus"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"sibinhho99-nus"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"sibinhho99-nus"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"sibinhho99-nus"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"sibinhho99-nus"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"sibinhho99-nus"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"sibinhho99-nus"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"sibinhho99-nus"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"sibinhho99-nus"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"sibinhho99-nus"},"content":"                \u003cLabel fx:id\u003d\"index\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"bloodType\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$bloodType\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"medication\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$medication\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"height\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$height\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"weight\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$weight\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"illnesses\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$illnesses\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"surgeries\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$surgeries\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"familyHistory\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$familyHistory\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"immunizationHistory\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$immunizationHistory\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"sibinhho99-nus"},"content":"            \u003cLabel fx:id\u003d\"ethnicity\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ethnicity\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"sibinhho99-nus"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"sibinhho99-nus"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":44}},{"path":"src/main/resources/view/medical/MedicalListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"sibinhho99-nus"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"            \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"sibinhho99-nus"},"content":"    \u003cListView fx:id\u003d\"medicalListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"sibinhho99-nus"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"sibinhho99-nus":8,"clement0010":9}},{"path":"src/main/resources/view/prescription/PrescriptionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"cheekean5848"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"                \u003cLabel fx:id\u003d\"drugName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"cheekean5848"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"            \u003cLabel fx:id\u003d\"instruction\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$instruction\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":33}},{"path":"src/main/resources/view/prescription/PrescriptionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"cheekean5848"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"            \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"cheekean5848"},"content":"    \u003cListView fx:id\u003d\"prescriptionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"cheekean5848"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"cheekean5848":8,"clement0010":9}},{"path":"src/main/resources/view/testresult/TestResultListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"joey-chance"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"joey-chance"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"joey-chance"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"joey-chance"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"joey-chance"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"joey-chance"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"joey-chance"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"joey-chance"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"joey-chance"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"joey-chance"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"joey-chance"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"joey-chance"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"joey-chance"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"joey-chance"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"                \u003cLabel fx:id\u003d\"medicalTest\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"joey-chance"},"content":"            \u003cLabel fx:id\u003d\"testDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$testDate\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"joey-chance"},"content":"            \u003cLabel fx:id\u003d\"result\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$result\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"joey-chance"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"joey-chance"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"joey-chance"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"joey-chance":33}},{"path":"src/main/resources/view/testresult/TestResultListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joey-chance"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"joey-chance"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"joey-chance"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"    \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"        \u003cLabel fx:id\u003d\"screenTitle\" text\u003d\"\\$screenTitle\" styleClass\u003d\"screen-header\"/\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"clement0010"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"clement0010"},"content":"            \u003cInsets top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"clement0010"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"clement0010"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"joey-chance"},"content":"    \u003cListView fx:id\u003d\"testResultListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"joey-chance"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"clement0010":9,"joey-chance":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"        String listCommand \u003d ViewCommand.COMMAND_WORD;","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"cheekean5848"},"content":"        assertCommandSuccess(listCommand, ViewCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"clement0010"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NRIC_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"cheekean5848"},"content":"        Patient expectedPatient \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.addPerson(expectedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheekean5848":6,"clement0010":2,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"cheekean5848"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.addPerson(validPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPatient), expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        Patient patientInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"        assertCommandFailure(new AddCommand(patientInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cheekean5848":7,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.personsAdded);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        Patient validPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"        Patient alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"        Patient bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"juslam19"},"content":"        public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"cheekean5848"},"content":"        public void addPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":127,"author":{"gitId":"cheekean5848"},"content":"        public void addPrescription(Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":132,"author":{"gitId":"cheekean5848"},"content":"        public void deletePrescription(Prescription target) {","lastModifiedDate":"2022-03-18"},{"lineNumber":133,"author":{"gitId":"cheekean5848"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-18"},{"lineNumber":134,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":135,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":136,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":137,"author":{"gitId":"cheekean5848"},"content":"        public boolean hasPrescription(Prescription prescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":142,"author":{"gitId":"cheekean5848"},"content":"        public void setPrescription(Prescription target, Prescription editedPrescription) {","lastModifiedDate":"2022-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"cheekean5848"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"clement0010"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":162,"author":{"gitId":"cheekean5848"},"content":"        public boolean hasPerson(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"clement0010"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":164,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":165,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":166,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"juslam19"},"content":"        public void deleteConsultation(Consultation target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"juslam19"},"content":"        public void addConsultation(Consultation consultation) {","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"juslam19"},"content":"        public boolean hasConsultation(Consultation consultation) {","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":179,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":180,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":181,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":182,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"cheekean5848"},"content":"        public void deletePerson(Patient target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"cheekean5848"},"content":"        public void setPerson(Patient target, Patient editedPatient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":194,"author":{"gitId":"juslam19"},"content":"        public void setConsultation(Consultation target, Consultation edited) {","lastModifiedDate":"2022-03-17"},{"lineNumber":195,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":196,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":197,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"cheekean5848"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":204,"author":{"gitId":"cheekean5848"},"content":"        public ObservableList\u003cPrescription\u003e getFilteredPrescriptionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":209,"author":{"gitId":"juslam19"},"content":"        public ObservableList\u003cConsultation\u003e getFilteredConsultationList() {","lastModifiedDate":"2022-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":214,"author":{"gitId":"sibinhho99-nus"},"content":"        public ObservableList\u003cMedical\u003e getFilteredMedicalList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"cheekean5848"},"content":"        public void updateFilteredPersonList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":223,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"juslam19"},"content":"        public void updateFilteredConsultationList(Predicate\u003cConsultation\u003e predicate) {","lastModifiedDate":"2022-03-17"},{"lineNumber":225,"author":{"gitId":"juslam19"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":227,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":228,"author":{"gitId":"cheekean5848"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":229,"author":{"gitId":"cheekean5848"},"content":"        public void updateFilteredPrescriptionList(Predicate\u003cPrescription\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":230,"author":{"gitId":"cheekean5848"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":231,"author":{"gitId":"cheekean5848"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":232,"author":{"gitId":"cheekean5848"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":233,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":234,"author":{"gitId":"sibinhho99-nus"},"content":"        public void updateFilteredMedicalList(Predicate\u003cMedical\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":235,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":236,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":237,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":238,"author":{"gitId":"clement0010"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":239,"author":{"gitId":"clement0010"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":240,"author":{"gitId":"clement0010"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-14"},{"lineNumber":241,"author":{"gitId":"clement0010"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":242,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":243,"author":{"gitId":"clement0010"},"content":"        @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":244,"author":{"gitId":"clement0010"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"clement0010"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2022-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"clement0010"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2022-03-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"clement0010"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2022-03-14"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"clement0010"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2022-03-14"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":268,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":269,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"joey-chance"},"content":"        public void addTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":271,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":272,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":273,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":274,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":275,"author":{"gitId":"sibinhho99-nus"},"content":"        public void addMedical(Medical medical) {","lastModifiedDate":"2022-03-15"},{"lineNumber":276,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":277,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":278,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"joey-chance"},"content":"        public boolean hasTestResult(TestResult testResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"joey-chance"},"content":"        public void deleteTestResult(TestResult target) {","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"joey-chance"},"content":"        public void setTestResult(TestResult target, TestResult editedTestResult) {","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"joey-chance"},"content":"        public ObservableList\u003cTestResult\u003e getFilteredTestResultList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":298,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":299,"author":{"gitId":"joey-chance"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":300,"author":{"gitId":"joey-chance"},"content":"        public void updateFilteredTestResultList(Predicate\u003cTestResult\u003e predicate) {","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"joey-chance"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":303,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":304,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":305,"author":{"gitId":"sibinhho99-nus"},"content":"        public boolean hasMedical(Medical medical) {","lastModifiedDate":"2022-03-15"},{"lineNumber":306,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":307,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":308,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":309,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":310,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"sibinhho99-nus"},"content":"        public void setMedical(Medical target, Medical editedContact) {","lastModifiedDate":"2022-03-25"},{"lineNumber":312,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-25"},{"lineNumber":313,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":314,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":315,"author":{"gitId":"sibinhho99-nus"},"content":"        public void deleteMedical(Medical target) {","lastModifiedDate":"2022-03-17"},{"lineNumber":316,"author":{"gitId":"sibinhho99-nus"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-17"},{"lineNumber":317,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":318,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":325,"author":{"gitId":"cheekean5848"},"content":"        private final Patient patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":327,"author":{"gitId":"cheekean5848"},"content":"        ModelStubWithPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":328,"author":{"gitId":"cheekean5848"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":329,"author":{"gitId":"cheekean5848"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":333,"author":{"gitId":"cheekean5848"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":334,"author":{"gitId":"cheekean5848"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":335,"author":{"gitId":"cheekean5848"},"content":"            return this.patient.isSamePerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":343,"author":{"gitId":"cheekean5848"},"content":"        final ArrayList\u003cPatient\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":344,"author":{"gitId":"sibinhho99-nus"},"content":"        final ArrayList\u003cMedical\u003e medicalsAdded \u003d new ArrayList\u003cMedical\u003e();","lastModifiedDate":"2022-03-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":347,"author":{"gitId":"cheekean5848"},"content":"        public boolean hasPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":348,"author":{"gitId":"cheekean5848"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":349,"author":{"gitId":"cheekean5848"},"content":"            return personsAdded.stream().anyMatch(patient::isSamePerson);","lastModifiedDate":"2022-03-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":353,"author":{"gitId":"cheekean5848"},"content":"        public void addPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":354,"author":{"gitId":"cheekean5848"},"content":"            requireNonNull(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":355,"author":{"gitId":"cheekean5848"},"content":"            personsAdded.add(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":362,"author":{"gitId":"sibinhho99-nus"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":363,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":364,"author":{"gitId":"sibinhho99-nus"},"content":"        public void addMedical(Medical medical) {","lastModifiedDate":"2022-03-15"},{"lineNumber":365,"author":{"gitId":"sibinhho99-nus"},"content":"            requireNonNull(medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":366,"author":{"gitId":"sibinhho99-nus"},"content":"            medicalsAdded.add(medical);","lastModifiedDate":"2022-03-15"},{"lineNumber":367,"author":{"gitId":"sibinhho99-nus"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cheekean5848":51,"sibinhho99-nus":34,"clement0010":17,"juslam19":36,"-":200,"joey-chance":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"clement0010"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S7654321T\";","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"clement0010"},"content":"    public static final String VALID_NRIC_BOB \u003d \"S1234568G\";","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"clement0010"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"S12345678\"; // Not ending with a character","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"cheekean5848"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cheekean5848":5,"clement0010":6,"-":123}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        Patient patientToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.deletePerson(patientToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        Patient patientToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, patientToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.deletePerson(patientToDelete);","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cheekean5848":7,"-":102}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        Patient editedPatient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        Patient lastPatient \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        Patient editedPatient \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.setPerson(lastPatient, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"        Patient editedPatient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"        Patient patientInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"cheekean5848"},"content":"        Patient editedPatient \u003d new PersonBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"cheekean5848"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"cheekean5848"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPatient);","lastModifiedDate":"2022-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"        Patient firstPatient \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"cheekean5848"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"cheekean5848"},"content":"        Patient patientInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"cheekean5848"},"content":"                new EditPersonDescriptorBuilder(patientInList).build());","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cheekean5848":20,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cheekean5848":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheekean5848":1,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"cheekean5848"},"content":"        assertCommandSuccess(new ViewCommand(), model, ViewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        assertCommandSuccess(new ViewCommand(), model, ViewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheekean5848":3,"-":36}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        Patient expectedPatient \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"cheekean5848"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"cheekean5848"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"cheekean5848"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"cheekean5848"},"content":"        Patient expectedPatientMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatientMultipleTags));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"        Patient expectedPatient \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"clement0010"},"content":"        assertParseSuccess(parser, NRIC_DESC_AMY + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"cheekean5848"},"content":"                new AddCommand(expectedPatient));","lastModifiedDate":"2022-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"clement0010"},"content":"        // invalid nric","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":122,"author":{"gitId":"clement0010"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2022-03-13"},{"lineNumber":126,"author":{"gitId":"clement0010"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":130,"author":{"gitId":"clement0010"},"content":"                + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-13"},{"lineNumber":131,"author":{"gitId":"clement0010"},"content":"                + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":135,"author":{"gitId":"clement0010"},"content":"                + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"clement0010"},"content":"                + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"clement0010"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"clement0010"},"content":"                        + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"clement0010"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cheekean5848":13,"clement0010":33,"-":105}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(patient));","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"        assertEquals(new AddCommand(patient), command);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"cheekean5848"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(patient).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"cheekean5848"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD) instanceof ViewCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" 3\") instanceof ViewCommand);","lastModifiedDate":"2022-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cheekean5848":10,"-":91}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"clement0010"},"content":"        assertParseFailure(parser, \"1 c/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"cheekean5848":1,"clement0010":4,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"cheekean5848":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"cheekean5848":1,"clement0010":3,"-":192}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.consultation.Consultation;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"sibinhho99-nus"},"content":"import seedu.address.model.medical.Medical;","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.prescription.Prescription;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"joey-chance"},"content":"import seedu.address.model.testresult.TestResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"cheekean5848"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients);","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"cheekean5848"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":96,"author":{"gitId":"clement0010"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"joey-chance"},"content":"        private final ObservableList\u003cTestResult\u003e testResults \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":98,"author":{"gitId":"sibinhho99-nus"},"content":"        private final ObservableList\u003cMedical\u003e medicals \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":99,"author":{"gitId":"cheekean5848"},"content":"        private final ObservableList\u003cPrescription\u003e prescriptions \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"juslam19"},"content":"        private final ObservableList\u003cConsultation\u003e consultations \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"cheekean5848"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients) {","lastModifiedDate":"2022-03-15"},{"lineNumber":103,"author":{"gitId":"cheekean5848"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2022-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"        public ObservableList\u003cPatient\u003e getPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"cheekean5848"},"content":"            return patients;","lastModifiedDate":"2022-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"cheekean5848"},"content":"        public ObservableList\u003cPrescription\u003e getPrescriptionList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":113,"author":{"gitId":"cheekean5848"},"content":"            return prescriptions;","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":117,"author":{"gitId":"juslam19"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":118,"author":{"gitId":"clement0010"},"content":"            return contacts;","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":122,"author":{"gitId":"juslam19"},"content":"        public ObservableList\u003cConsultation\u003e getConsultationList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"            return consultations;","lastModifiedDate":"2022-03-15"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"juslam19"},"content":"        @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":127,"author":{"gitId":"joey-chance"},"content":"        public ObservableList\u003cTestResult\u003e getTestResultList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":128,"author":{"gitId":"joey-chance"},"content":"            return testResults;","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"joey-chance"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":130,"author":{"gitId":"joey-chance"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"sibinhho99-nus"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":132,"author":{"gitId":"sibinhho99-nus"},"content":"        public ObservableList\u003cMedical\u003e getMedicalList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":133,"author":{"gitId":"sibinhho99-nus"},"content":"            return medicals;","lastModifiedDate":"2022-03-15"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"cheekean5848":15,"sibinhho99-nus":5,"clement0010":2,"juslam19":13,"-":97,"joey-chance":6}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson((Patient) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"cheekean5848":3,"-":130}},{"path":"src/test/java/seedu/address/model/patient/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheekean5848":1,"clement0010":2,"-":35}},{"path":"src/test/java/seedu/address/model/patient/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheekean5848":1,"clement0010":2,"-":67}},{"path":"src/test/java/seedu/address/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheekean5848":1,"-":74}},{"path":"src/test/java/seedu/address/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheekean5848":1,"-":39}},{"path":"src/test/java/seedu/address/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"public class PatientTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"cheekean5848"},"content":"        Patient patient \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"cheekean5848"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"clement0010"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"clement0010"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"clement0010"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"        Patient aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cheekean5848":7,"clement0010":5,"-":72}},{"path":"src/test/java/seedu/address/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheekean5848":1,"clement0010":2,"-":39}},{"path":"src/test/java/seedu/address/model/patient/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheekean5848"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"cheekean5848"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"cheekean5848"},"content":"        Patient editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"cheekean5848"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPatient\u003e) null));","lastModifiedDate":"2022-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-03-15"},{"lineNumber":153,"author":{"gitId":"cheekean5848"},"content":"        uniquePersonList.setPersons(patientList);","lastModifiedDate":"2022-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"cheekean5848"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-03-15"},{"lineNumber":162,"author":{"gitId":"cheekean5848"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePatients));","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cheekean5848":11,"-":159}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"juslam19"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"clement0010"},"content":"    private static final String INVALID_NRIC \u003d \"L1231237L\";","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"juslam19"},"content":"    private final String validNric \u003d BENSON.getNric().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"juslam19"},"content":"    private final String validName \u003d BENSON.getName().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"juslam19"},"content":"    private final String validPhone \u003d BENSON.getPhone().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"juslam19"},"content":"    private final String validEmail \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"juslam19"},"content":"    private final String validAddress \u003d BENSON.getAddress().toString();","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"juslam19"},"content":"    private final List\u003cJsonAdaptedTag\u003e validTags \u003d BENSON.getTags().stream()","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(validNric, INVALID_NAME, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"juslam19"},"content":"                        validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"juslam19"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(validNric, null, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"juslam19"},"content":"                validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(INVALID_NRIC, validName, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"juslam19"},"content":"                        validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"clement0010"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"clement0010"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"clement0010"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"clement0010"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"clement0010"},"content":"    @Test","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"clement0010"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"juslam19"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, validName, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"juslam19"},"content":"                validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"clement0010"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(validNric, validName, INVALID_PHONE, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"juslam19"},"content":"                        validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"juslam19"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(validNric, validName, null, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"juslam19"},"content":"                validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(validNric, validName, validPhone, INVALID_EMAIL,","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"juslam19"},"content":"                        validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"juslam19"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(validNric, validName, validPhone, null,","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"juslam19"},"content":"                validAddress, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(validNric, validName, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"juslam19"},"content":"                        INVALID_ADDRESS, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"juslam19"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(validNric, validName, validPhone,","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"juslam19"},"content":"                validEmail, null, validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"juslam19"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(validTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"juslam19"},"content":"                new JsonAdaptedPerson(validNric, validName, validPhone, validEmail,","lastModifiedDate":"2022-03-17"},{"lineNumber":135,"author":{"gitId":"juslam19"},"content":"                        validAddress, invalidTags);","lastModifiedDate":"2022-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheekean5848":2,"clement0010":11,"juslam19":33,"-":93}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"    public AddressBookBuilder withPerson(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"cheekean5848"},"content":"        addressBook.addPerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheekean5848":3,"-":31}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"    public EditPersonDescriptorBuilder(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setNric(patient.getNric());","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"cheekean5848"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"clement0010"},"content":"     * Sets the {@code Nric} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"clement0010"},"content":"    public EditPersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"clement0010"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cheekean5848":10,"clement0010":9,"-":78}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"clement0010"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Nric;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"clement0010"},"content":"    public static final String DEFAULT_NRIC \u003d \"S7654321L\";","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"clement0010"},"content":"    private Nric nric;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"clement0010"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"cheekean5848"},"content":"    public PersonBuilder(Patient patientToCopy) {","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"cheekean5848"},"content":"        nric \u003d patientToCopy.getNric();","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"cheekean5848"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"cheekean5848"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"cheekean5848"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"clement0010"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"clement0010"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"clement0010"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"clement0010"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"clement0010"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"cheekean5848"},"content":"    public Patient build() {","lastModifiedDate":"2022-03-15"},{"lineNumber":107,"author":{"gitId":"cheekean5848"},"content":"        return new Patient(nric, name, phone, email, address, tags);","lastModifiedDate":"2022-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"cheekean5848":12,"clement0010":13,"-":85}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"cheekean5848"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"cheekean5848"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    public static String getPersonDetails(Patient patient) {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"cheekean5848"},"content":"        sb.append(PREFIX_NRIC + patient.getNric().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"cheekean5848"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"cheekean5848"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"cheekean5848"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"clement0010"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.value).append(\" \"));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"cheekean5848":10,"clement0010":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"cheekean5848"},"content":"    public static Patient getPerson(Model model, Index index) {","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheekean5848":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"clement0010"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"cheekean5848"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient ALICE \u003d new PersonBuilder().withNric(\"G1234567L\").withName(\"Alice Pauline\")","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient BENSON \u003d new PersonBuilder().withNric(\"F3918974L\").withName(\"Benson Meier\")","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient CARL \u003d new PersonBuilder().withNric(\"S9535256L\")","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"clement0010"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient DANIEL \u003d new PersonBuilder().withNric(\"G8765253A\")","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"clement0010"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient ELLE \u003d new PersonBuilder().withNric(\"G9482221C\")","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"clement0010"},"content":"            .withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient FIONA \u003d new PersonBuilder().withNric(\"G9482423A\")","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"clement0010"},"content":"            .withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient GEORGE \u003d new PersonBuilder().withNric(\"M9482441C\")","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"clement0010"},"content":"            .withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient HOON \u003d new PersonBuilder().withNric(\"G8482424L\")","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"clement0010"},"content":"            .withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient IDA \u003d new PersonBuilder().withNric(\"G8482131T\")","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"clement0010"},"content":"            .withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient AMY \u003d new PersonBuilder().withNric(VALID_NRIC_AMY)","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"clement0010"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"cheekean5848"},"content":"    public static final Patient BOB \u003d new PersonBuilder().withNric(VALID_NRIC_BOB)","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"clement0010"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"cheekean5848"},"content":"        for (Patient patient : getTypicalPersons()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":79,"author":{"gitId":"cheekean5848"},"content":"            ab.addPerson(patient);","lastModifiedDate":"2022-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"cheekean5848"},"content":"    public static List\u003cPatient\u003e getTypicalPersons() {","lastModifiedDate":"2022-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"cheekean5848":15,"clement0010":11,"-":61}}]
