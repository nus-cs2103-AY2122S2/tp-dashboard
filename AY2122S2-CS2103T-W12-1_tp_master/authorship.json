[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"# TAilor","lastModifiedDate":"2022-02-26"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"TAilor is a **desktop app for managing contacts, optimized for use via a Command Line Interface (CLI)** while still","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"having the benefits of a Graphical User Interface (GUI). If you are a Computer Science Teaching Assistant who can type","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"fast, TAilor can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-26"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"## Usages","lastModifiedDate":"2022-02-26"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"TAilor can (as of v1.2):","lastModifiedDate":"2022-02-26"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"* add, delete, edit and view student\u0027s contact details","lastModifiedDate":"2022-02-26"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"* store the contact details of your students","lastModifiedDate":"2022-02-26"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"* contact students in bulk or individually \u003c/p\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"Additional features can be found in our **[User Guide](docs/UserGuide.md)**.","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"## Contact","lastModifiedDate":"2022-02-26"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"To reach any of our developers, you can find our contact details in **[AboutUs](docs/AboutUs.md)**.","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"## Git","lastModifiedDate":"2022-02-26"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"To get the latest version of TAilor, you can find our latest release at:\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"https://github.com/AY2122S2-CS2103T-W12-1/tp/releases \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"To transfer any data from your current TAilor version to the latest one, refer to our","lastModifiedDate":"2022-02-26"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"**[User Guide](docs/UserGuide.md)**.","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"## Credits","lastModifiedDate":"2022-02-26"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).\u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"For the detailed documentation of this project, see the","lastModifiedDate":"2022-02-26"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"**[Address Book Product Website](https://se-education.org/addressbook-level3)**. \u003cbr\u003e","lastModifiedDate":"2022-02-26"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"FestiveCat":1,"Cyolune":29,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"    archiveName \u003d \u0027TAilor.jar\u0027","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"FestiveCat":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"### Ong Han Yang","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"\u003cimg src\u003d\"images/festivecat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"[ [homepage](http://FestiveCat.github.io/) ]","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"[ [github](https://github.com/FestiveCat) ]","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"[ [portfolio](team/festivecat.md) ]","lastModifiedDate":"2022-02-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"* Role: Member","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"### Kashish Varshney","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"\u003cimg src\u003d\"images/kxshxsh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"[ [github](https://github.com/kxshxsh) ]","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"[ [portfolio](team/kxshxsh.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"* Role: Member","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"### Sumanth Yalamarty","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"\u003cimg src\u003d\"images/s7manth.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"[[github](http://github.com/s7manth)] [[portfolio](team/s7manth.md)]","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"* Role: member","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"### Jan Alfenson Tan","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"\u003cimg src\u003d\"images/cyolune.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"[ [github](https://github.com/Cyolune) ]","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"[ [portfolio](team/cyolune.md) ]","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"* Role: Member","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"zawedcvg"},"content":"### Neeladri Bhuiya","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"zawedcvg"},"content":"\u003cimg src\u003d\"images/zawedcvg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"zawedcvg"},"content":"[ [github](http://github.com/zawedcvg) ]","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"zawedcvg"},"content":"[ [portfolio](team/zawedcvg.md) ]","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"zawedcvg"},"content":"* Role: Member","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"FestiveCat":5,"Cyolune":5,"-":28,"kxshxsh":6,"s7manth":4,"zawedcvg":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"* When called upon to parse a user command, the `TailorParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `TailorParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"\u003cimg src\u003d\"images/ModelClassDiagramV2.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"* stores the contact list data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"* stores the task list data i.e., all `Task` objects (which are contained in a `PriorityTaskList` object).","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects. This diagram is also truncated slightly as it does not show the Task classes.\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"\u003cimg src\u003d\"images/StorageClassDiagramV2.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"* can save contact list data, task list data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"* inherits from `ContactListStorage`, `TaskListStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"FestiveCat"},"content":"### Task Manager feature","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"FestiveCat"},"content":"This Task Manager feature is implemented with reference to how AddressBook/ContactList was implemented.","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"FestiveCat"},"content":"Below shows the important classes that were created:","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":165,"author":{"gitId":"FestiveCat"},"content":"Logic:","lastModifiedDate":"2022-03-22"},{"lineNumber":166,"author":{"gitId":"FestiveCat"},"content":"* NewTaskCommand (and its parser)","lastModifiedDate":"2022-03-22"},{"lineNumber":167,"author":{"gitId":"FestiveCat"},"content":"* RemoveTaskCommand (and its parser)","lastModifiedDate":"2022-03-22"},{"lineNumber":168,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"FestiveCat"},"content":"Model:","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"FestiveCat"},"content":"* DuplicateTaskException","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"FestiveCat"},"content":"* TaskNotFoundException","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"* Deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"FestiveCat"},"content":"* Description","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"FestiveCat"},"content":"* Task (that uses Deadline and Description like how Person uses Name and Phone)","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"FestiveCat"},"content":"* ReadOnlyTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"FestiveCat"},"content":"* PriorityTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"FestiveCat"},"content":"Storage:","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"FestiveCat"},"content":"* JsonAdaptedTask","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"FestiveCat"},"content":"* JsonSerializableTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"FestiveCat"},"content":"* JsonTaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":182,"author":{"gitId":"FestiveCat"},"content":"* TaskListStorage","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":184,"author":{"gitId":"FestiveCat"},"content":"Most of these classes were linked to the respective XYZManager components in a similar way as ContactList.","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"FestiveCat"},"content":"For example, LogicManager now tries to save to the storage\u0027s contact list and task lists:","lastModifiedDate":"2022-03-22"},{"lineNumber":186,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"FestiveCat"},"content":"```","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"FestiveCat"},"content":"            storage.saveContactList(model.getContactList());","lastModifiedDate":"2022-03-22"},{"lineNumber":189,"author":{"gitId":"FestiveCat"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"FestiveCat"},"content":"```","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"FestiveCat"},"content":"The following sequence diagram shows how the newTask operation works:","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"FestiveCat"},"content":"\u003cimg src\u003d\"images/newTask-SequenceDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"FestiveCat"},"content":"The current Task List uses a Priority Queue internally to sort/rank the tasks. Hence, the tasks","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"FestiveCat"},"content":"are prioritised according to the closeness to the deadline. Ie, a Task with a deadline of 1 March","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"FestiveCat"},"content":"will be in front of another Task with deadline of 1 December of the same year.","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"FestiveCat"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"**Aspect: Extendibility**","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"FestiveCat"},"content":"* Extendibility was heavily considered when implementing this feature. For Instance,","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"FestiveCat"},"content":"  * A ReadOnlyTaskList was done instead of just a single TaskList class, to allow for multiple versions of a Task List being","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"FestiveCat"},"content":"    used if desired. Ie perhaps a Task List that is sorted according to a new \"Emergency\" level instead of just date-time.","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"FestiveCat"},"content":"  * Deadline and Description classes were used instead of just a String and a LocalDateTime field to make the codebase more","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"FestiveCat"},"content":"    consistent with one another as seen from Person and its corresponding fields. This also would then allow a consolidated","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"FestiveCat"},"content":"    parsing and checking via the utilities.","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"FestiveCat"},"content":"**Aspect: Conformity**","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"FestiveCat"},"content":"* To allow the entire application to look like it has been coded by one person, the implementation of this task manager","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"FestiveCat"},"content":"  feature was implemented in a similar way as to how AddressBook/ContactList is implemented, along with its interactions","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"FestiveCat"},"content":"  with the XYZManagers.","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"FestiveCat"},"content":"  * An example would be to include a new `TaskListStorage` Interface for the `Storage` Interface to extend from. This","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"FestiveCat"},"content":"    hence provides the methods and an interface/facade for other parts of the code to perform task list operations on.","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"FestiveCat"},"content":"  * Another example would be how the Description and Deadlines for a `Task` are represented as individual classes instead","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"FestiveCat"},"content":"    of a String and a non-wrapped LocalDateTime, respectively. This is similar to how `Person` wraps the individual person","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"FestiveCat"},"content":"    attributes like Name and Phone. This also allows the Description and Deadline objects to be created separately and","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"FestiveCat"},"content":"    allow for finer control over the codebase.","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"FestiveCat"},"content":"* `VersionedAddressBook#commit()` — Saves the current contact list state in its history.","lastModifiedDate":"2022-03-11"},{"lineNumber":230,"author":{"gitId":"FestiveCat"},"content":"* `VersionedAddressBook#undo()` — Restores the previous contact list state from its history.","lastModifiedDate":"2022-03-11"},{"lineNumber":231,"author":{"gitId":"FestiveCat"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone contact list state from its history.","lastModifiedDate":"2022-03-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"FestiveCat"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial contact list state, and the `currentStatePointer` pointing to that single contact list state.","lastModifiedDate":"2022-03-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"FestiveCat"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the contact list. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the contact list after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted contact list state.","lastModifiedDate":"2022-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"FestiveCat"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified contact list state to be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"FestiveCat"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the contact list state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2022-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"FestiveCat"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous contact list state, and restores the contact list to that state.","lastModifiedDate":"2022-03-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"FestiveCat"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the contact list to that state.","lastModifiedDate":"2022-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"FestiveCat"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest contact list state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-03-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"FestiveCat"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the contact list, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2022-03-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"FestiveCat"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all contact list states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-03-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"FestiveCat"},"content":"* **Alternative 1 (current choice):** Saves the entire contact list.","lastModifiedDate":"2022-03-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"s7manth"},"content":"* is a teaching assistant for a computing course","lastModifiedDate":"2022-03-03"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"s7manth"},"content":"**Value proposition**: The app will help to facilitate a Teaching Assistant’s journey within a single module, particularly with some tedious administrative tasks.","lastModifiedDate":"2022-03-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"s7manth"},"content":"Priorities: High (must have), Medium (nice to have), Low (unlikely to have)","lastModifiedDate":"2022-03-03"},{"lineNumber":339,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":340,"author":{"gitId":"s7manth"},"content":"|Priority       |User                                                |Function                                                                                                           |Benefit                                                                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":341,"author":{"gitId":"s7manth"},"content":"|---------------|----------------------------------------------------|-------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-03-03"},{"lineNumber":342,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant,                            |I am able to see my students’ contact details                                                                      |so that I can more easily communicate messages to them                                                     |","lastModifiedDate":"2022-03-03"},{"lineNumber":343,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant,                            |I can send bulk emails to students to remind them of the deadlines or to make general PSAs                         |so that I don’t miss on passing them crucial information                                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":344,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant,                            |I can know the number of students in each of my tutorial classes and their names                                   |This helps me keep track of attendance for each session                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":345,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant,                            |I can “tag” students with various tags                                                                             |so that I can keep track of who to follow up on, who to check up on more often etc                         |","lastModifiedDate":"2022-03-03"},{"lineNumber":346,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant                             |I can manually add new students into my contact list                                                               |so I have alternate methods to add students other than to rely on exporting from a file                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":347,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant                             |I can edit my students’ contact details manually                                                                   |so that if they have any changes to their details, I can keep track of it and still be able to contact them|","lastModifiedDate":"2022-03-03"},{"lineNumber":348,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant                             |I can delete students from my contact list                                                                         |so I can make changes to my student list                                                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":349,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a new Teaching Assistant using this app          |I am able to get help on how to use the app                                                                        |so I can learn how to use this program                                                                     |","lastModifiedDate":"2022-03-03"},{"lineNumber":350,"author":{"gitId":"s7manth"},"content":"|priority.High  |As a Teaching Assistant who makes typos often       |I am able to go back to the mistyped command                                                                       |so I can quickly correct spelling errors made                                                              |","lastModifiedDate":"2022-03-03"},{"lineNumber":351,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant,                            |I can see the upcoming deadlines                                                                                   |so I prepare for it or remind students about it                                                            |","lastModifiedDate":"2022-03-03"},{"lineNumber":352,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant,                            |I can keep track of how my students have been performing                                                           |so that I can better help the students who need more help                                                  |","lastModifiedDate":"2022-03-03"},{"lineNumber":353,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant                             |I can see all the groups that I need to mark/supervise                                                             |so that I can track all my students and groups                                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":354,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant,                            |I can manage consultations with my students with the calender system                                               |so that I can more easily cross-reference my availability with my students                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":355,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant                             |I can know which student’s performance requires review and attention per assignment                                |so that I can reach out and offer help possibly in the form of a consultation.                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":356,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant                             |I can group students under different tutorial classes                                                              |so I can personalize messages to individual classes                                                        |","lastModifiedDate":"2022-03-03"},{"lineNumber":357,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant,                            |I can receive anonymous feedback from my students                                                                  |so that I can help my students in a more effective way.                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":358,"author":{"gitId":"s7manth"},"content":"|priority.Medium|As a Teaching Assistant                             |I can automatically remind students about deadlines and examinations                                               |so that my students will be reminded about the upcoming deadlines easily                                   |","lastModifiedDate":"2022-03-03"},{"lineNumber":359,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant,                            |I can export the necessary numbers about all students in my class from assignment marks to attendance to a CSV file|so that I can perform a better analysis of the semester on whole                                           |","lastModifiedDate":"2022-03-03"},{"lineNumber":360,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant,                            |I can track student\u0027s assignment progress                                                                          |so that I know which student to focus on and give reminders to                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":361,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant who uses different devices  |I can sync my data over different devices                                                                          |so I can use the app over diff devices                                                                     |","lastModifiedDate":"2022-03-03"},{"lineNumber":362,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a first time user                                |I can see sample data                                                                                              |so I can see how the app can be used                                                                       |","lastModifiedDate":"2022-03-03"},{"lineNumber":363,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant for a new class             |I can share an introduction document with my students                                                              |so that they can get to know each other a little bit more before the first session                         |","lastModifiedDate":"2022-03-03"},{"lineNumber":364,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Tech-Savvy Teaching Assistant who uses Telegram|I can create a telegram group and invite all students to it                                                        |so I can communicate to my students using telegram                                                         |","lastModifiedDate":"2022-03-03"},{"lineNumber":365,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Tech-Savvy Teaching Assistant who uses Discord |I can create a discord channel and invite all my students to it                                                    |so I can communicate to my students using discord                                                          |","lastModifiedDate":"2022-03-03"},{"lineNumber":366,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant using Coursemology          |I can receive notifications from Coursemology on the application                                                   |so I can quickly respond to my student’s questions and submissions on Coursemology                         |","lastModifiedDate":"2022-03-03"},{"lineNumber":367,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant who is involved in grading  |I can automatically distribute grades to students easily                                                           |so my students will not have to manually wait or check for the grades to be released                       |","lastModifiedDate":"2022-03-03"},{"lineNumber":368,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant who takes makeup tutorials  |I can add students temporarily to a class                                                                          |so that I can have the students in my mailing list temporarily                                             |","lastModifiedDate":"2022-03-03"},{"lineNumber":369,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant during unprecedented times  |I can instantly create Zoom meetings using the Zoom SDK                                                            |so that I can automate my workflow for sending meeting invitations to the group                            |","lastModifiedDate":"2022-03-03"},{"lineNumber":370,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant                             |I can tag students for plagarism                                                                                   |so I can automatically inform my professors about plagiarism cases                                         |","lastModifiedDate":"2022-03-03"},{"lineNumber":371,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant who is involved in grading  |I can see a graph of trends about my students’ performance individually                                            |so I can track the progress and improvement of my students                                                 |","lastModifiedDate":"2022-03-03"},{"lineNumber":372,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant                             |I can create aliases for websites that are commonly used by students                                               |so that my students and I can access commonly visited websites easily                                      |","lastModifiedDate":"2022-03-03"},{"lineNumber":373,"author":{"gitId":"s7manth"},"content":"|priority.Low   |As a Teaching Assistant teaching multiple modules   |I am able to separate the management of the modules                                                                |so that I can be more organised in my work and teaching                                                    |","lastModifiedDate":"2022-03-03"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"kxshxsh"},"content":"(For all use cases below, the **System** is `TAilor` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-04"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"kxshxsh"},"content":"**Use case 1 (UC1): Importing an existing database**","lastModifiedDate":"2022-03-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"kxshxsh"},"content":"1. User requests to import an existing file","lastModifiedDate":"2022-03-04"},{"lineNumber":385,"author":{"gitId":"kxshxsh"},"content":"2. TAilor requests for the file location","lastModifiedDate":"2022-03-04"},{"lineNumber":386,"author":{"gitId":"kxshxsh"},"content":"3. User specifies the file location","lastModifiedDate":"2022-03-04"},{"lineNumber":387,"author":{"gitId":"kxshxsh"},"content":"4. TAilor uploads the file","lastModifiedDate":"2022-03-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"kxshxsh"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"kxshxsh"},"content":"* 4a. User requests to add more students manually (UC2)","lastModifiedDate":"2022-03-04"},{"lineNumber":394,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":395,"author":{"gitId":"kxshxsh"},"content":"    User case ends","lastModifiedDate":"2022-03-04"},{"lineNumber":396,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":397,"author":{"gitId":"kxshxsh"},"content":"**Use case 2 (UC2): Manually adding students**","lastModifiedDate":"2022-03-04"},{"lineNumber":398,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":399,"author":{"gitId":"kxshxsh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":400,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":401,"author":{"gitId":"kxshxsh"},"content":"1. User uses the \u0027add\u0027 command","lastModifiedDate":"2022-03-04"},{"lineNumber":402,"author":{"gitId":"kxshxsh"},"content":"2. TAilor updates the database with student details","lastModifiedDate":"2022-03-04"},{"lineNumber":403,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":404,"author":{"gitId":"kxshxsh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":405,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":406,"author":{"gitId":"kxshxsh"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":407,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":408,"author":{"gitId":"kxshxsh"},"content":"* 1a. User adds permanent student to the class group","lastModifiedDate":"2022-03-04"},{"lineNumber":409,"author":{"gitId":"kxshxsh"},"content":"    * 1a1. User uses the permanent tag with student details","lastModifiedDate":"2022-03-04"},{"lineNumber":410,"author":{"gitId":"kxshxsh"},"content":"    * 1a2. TAilor adds the student contact details to the respective group\u0027s database","lastModifiedDate":"2022-03-04"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"kxshxsh"},"content":"* 1b. User adds temporary student to the class group","lastModifiedDate":"2022-03-04"},{"lineNumber":416,"author":{"gitId":"kxshxsh"},"content":"    * 1b1. User uses the temporary tag with student details","lastModifiedDate":"2022-03-04"},{"lineNumber":417,"author":{"gitId":"kxshxsh"},"content":"    * 1b2. TAilor asks for validity of temporary tag","lastModifiedDate":"2022-03-04"},{"lineNumber":418,"author":{"gitId":"kxshxsh"},"content":"    * 1b3. User enters the lifespan of the entry","lastModifiedDate":"2022-03-04"},{"lineNumber":419,"author":{"gitId":"kxshxsh"},"content":"    * 1b4. TAilor adds the student contact details to the respective group\u0027s database","lastModifiedDate":"2022-03-04"},{"lineNumber":420,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":421,"author":{"gitId":"kxshxsh"},"content":"      Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":422,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":423,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":424,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":425,"author":{"gitId":"kxshxsh"},"content":"**Use case 3 (UC3): Finding a student**","lastModifiedDate":"2022-03-04"},{"lineNumber":426,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":427,"author":{"gitId":"kxshxsh"},"content":"**MSS**","lastModifiedDate":"2022-03-04"},{"lineNumber":428,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":429,"author":{"gitId":"kxshxsh"},"content":"1. User requests to find student through particular keywords","lastModifiedDate":"2022-03-04"},{"lineNumber":430,"author":{"gitId":"kxshxsh"},"content":"2. TAilor returns contact details of matching student","lastModifiedDate":"2022-03-04"},{"lineNumber":431,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":432,"author":{"gitId":"kxshxsh"},"content":"   Use case ends.","lastModifiedDate":"2022-03-04"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":434,"author":{"gitId":"kxshxsh"},"content":"**Extensions:**","lastModifiedDate":"2022-03-04"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":436,"author":{"gitId":"kxshxsh"},"content":"* 2a. TAilor doesn\u0027t find any matches","lastModifiedDate":"2022-03-04"},{"lineNumber":437,"author":{"gitId":"FestiveCat"},"content":"  * 2a1. TAilor displays an empty list","lastModifiedDate":"2022-03-11"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":439,"author":{"gitId":"kxshxsh"},"content":"    User case ends","lastModifiedDate":"2022-03-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-04"},{"lineNumber":441,"author":{"gitId":"kxshxsh"},"content":"* 2b. TAilor finds more than one matching student","lastModifiedDate":"2022-03-04"},{"lineNumber":442,"author":{"gitId":"kxshxsh"},"content":"  * 2b1. TAilor returns list of matching students","lastModifiedDate":"2022-03-04"},{"lineNumber":443,"author":{"gitId":"kxshxsh"},"content":"  * 2b2. User enters index to select desired student","lastModifiedDate":"2022-03-04"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"kxshxsh"},"content":"    User case ends","lastModifiedDate":"2022-03-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"zawedcvg"},"content":"4. The code should be open source.","lastModifiedDate":"2022-03-02"},{"lineNumber":455,"author":{"gitId":"zawedcvg"},"content":"5. Should not require internet connection.","lastModifiedDate":"2022-03-02"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"zawedcvg"},"content":"* **Tutor**: A tutor is a teaching assistant for a particular module in NUS.","lastModifiedDate":"2022-03-02"},{"lineNumber":464,"author":{"gitId":"zawedcvg"},"content":"* **Module**: The subject being taught by the tutor.","lastModifiedDate":"2022-03-22"},{"lineNumber":465,"author":{"gitId":"zawedcvg"},"content":"* **Group**: A group of students belonging to a particular module managed under a tutor.","lastModifiedDate":"2022-03-22"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"FestiveCat":88,"-":337,"s7manth":38,"kxshxsh":50,"zawedcvg":5}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [TAilor’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"FestiveCat":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"TAilor is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are a Computer Science Teaching","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"Assistant who can type fast, TAilor can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"2. Download the latest `TAilor.jar` from [here](https://github.com/AY2122S2-CS2103T-W12-1/tp/releases).","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TAilor Application.","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"   how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"   will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"   * **`add`**`n/John Doe a/A0123456P e/johnd@example.com m/CS2103T g/W12` : Adds a student","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     named `John Doe` to the Contact List.","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"  e.g. if the command specifies `n/NAME a/STUDENT_NUMBER`, `a/STUDENT_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"  e.g. if you specify `a/A0123456H a/A1111111H`, only `a/A1111111H` will be taken.","lastModifiedDate":"2022-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"Adds a person to the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"Format: `add n/NAME a/STUDENT_NUMBER e/EMAIL m/MOD g/GROUP [t/TAG]…​`","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"* `add n/John Doe a/A1234567L e/johnd@example.com m/CS2030S g/B12G`","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com m/CS2100 g/T1 p/1234567 t/criminal`","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"Shows a list of all persons in the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"Edits an existing person in the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"kxshxsh"},"content":"Format: `edit INDEX [n/NAME] [a/STUDENT_NUMBER] [e/EMAIL] [m/MOD] [g/GROUP] [t/TAG]…​`","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-02-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"kxshxsh"},"content":"*  `edit 1 a/A1122334X e/johndoe@example.com` Edits the studentNumber and email address of the 1st person to ","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"kxshxsh"},"content":"   be `A1122334X` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"Finds persons whose details contain any of the given keywords.","lastModifiedDate":"2022-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"Format: `find PREFIX/KEYWORD [KEYWORD] [PREFIX/KEYWORD [KEYWORD]]…​`","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"* The prefixes used are the same as other commands:","lastModifiedDate":"2022-03-11"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"  * `n/` for name","lastModifiedDate":"2022-03-11"},{"lineNumber":128,"author":{"gitId":"kxshxsh"},"content":"  * `a/` for studentNumber","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"  * `e/` for email","lastModifiedDate":"2022-03-11"},{"lineNumber":130,"author":{"gitId":"zawedcvg"},"content":"  * `m/` for module","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"  * `g/` for group","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"  * `t/` for tags","lastModifiedDate":"2022-03-11"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"* Multiple keywords can be given for each tag.","lastModifiedDate":"2022-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"* Only the specified prefix will be searched","lastModifiedDate":"2022-03-11"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"* For names, only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"* For the rest, partial words will be matched e.g. `exam` will match `abc@example.com`","lastModifiedDate":"2022-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"zawedcvg"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"zawedcvg"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"zawedcvg"},"content":"  ![result for \u0027find n/alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"### Mailing student(s) : `mail`","lastModifiedDate":"2022-02-25"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"Mails a person from the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":151,"author":{"gitId":"FestiveCat"},"content":"Format: `mail [e/EMAIL]…​`","lastModifiedDate":"2022-02-25"},{"lineNumber":152,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":153,"author":{"gitId":"FestiveCat"},"content":"* This opens the default email application on the system with the specified mail address pre-filled at the receiver\u0027s","lastModifiedDate":"2022-02-25"},{"lineNumber":154,"author":{"gitId":"FestiveCat"},"content":"  address.","lastModifiedDate":"2022-02-25"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"* This can be used to specify multiple addresses to send the same mail in a single go as well.","lastModifiedDate":"2022-02-25"},{"lineNumber":156,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":157,"author":{"gitId":"FestiveCat"},"content":"Example:","lastModifiedDate":"2022-02-25"},{"lineNumber":158,"author":{"gitId":"FestiveCat"},"content":"* `mail e/johndoe@example.com` would open the default mail on the system with the \"to\" box filled with the","lastModifiedDate":"2022-02-25"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"  specified mail. Now, the email is ready to be sent to `johndoe@example.com`.","lastModifiedDate":"2022-02-25"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"### Bulk Emails to everyone on the database : `mailall`","lastModifiedDate":"2022-02-25"},{"lineNumber":162,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":163,"author":{"gitId":"FestiveCat"},"content":"Mails everybody in the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":164,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":165,"author":{"gitId":"FestiveCat"},"content":"Format: `mailall`","lastModifiedDate":"2022-02-25"},{"lineNumber":166,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":167,"author":{"gitId":"FestiveCat"},"content":"* Opens the default email application on the system with all email addresses pre-filled in the receiver\u0027s","lastModifiedDate":"2022-02-25"},{"lineNumber":168,"author":{"gitId":"FestiveCat"},"content":"  field.","lastModifiedDate":"2022-02-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"Deletes the specified person from the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"FestiveCat"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"FestiveCat"},"content":"Clears all entries from the student roster.","lastModifiedDate":"2022-02-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"FestiveCat"},"content":"### Adding a new task: `newtask`","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"FestiveCat"},"content":"Adds a new Task with a given description and deadline.","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"FestiveCat"},"content":"Format: `newtask DESCRIPTION by/DATETIME`","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"* Description must be non-empty. Ie, it cannot consist of all spaces.","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"FestiveCat"},"content":"* DATETIME has to be in the format of : `YYYY-MM-DDThh:mm` , where","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"FestiveCat"},"content":"  * YYYY represents a 4-digit year","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"FestiveCat"},"content":"  * MM represents a 2-digit month (so March will be 03, November 11)","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"FestiveCat"},"content":"  * DD represents a 2-digit day (1st day of the month will be 01)","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"FestiveCat"},"content":"  * hh represents the hour, as in 24-hour (ie 3am is 0300, 3pm is 1500)","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"FestiveCat"},"content":"  * mm represents the minute.","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"FestiveCat"},"content":"  * The dashes `-`, colons `:` and the `T` must be in the corresponding positions.","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"FestiveCat"},"content":"  * The Time and Date being input must be valid. Ie, it is not possible to input a task","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"FestiveCat"},"content":"    with a deadline of 31st February.","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":213,"author":{"gitId":"FestiveCat"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"FestiveCat"},"content":"* `newtask Do Homework by/2022-03-21T23:59` creates a task with description of \"Do Homework\" and is due on 21 March 2022, 11:59pm.","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"FestiveCat"},"content":"### Deleting an existing task: `deltask`","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"FestiveCat"},"content":"Deletes the specified person from the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":220,"author":{"gitId":"FestiveCat"},"content":"Format: `deltask INDEX`","lastModifiedDate":"2022-03-22"},{"lineNumber":221,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":222,"author":{"gitId":"FestiveCat"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2022-03-22"},{"lineNumber":223,"author":{"gitId":"FestiveCat"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":224,"author":{"gitId":"FestiveCat"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-03-22"},{"lineNumber":225,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":226,"author":{"gitId":"FestiveCat"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":227,"author":{"gitId":"FestiveCat"},"content":"* `delete 2` deletes the 2nd person in the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":228,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":229,"author":{"gitId":"FestiveCat"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":230,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"FestiveCat"},"content":"TAilor data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2022-02-25"},{"lineNumber":234,"author":{"gitId":"FestiveCat"},"content":"There is no need to save manually.","lastModifiedDate":"2022-02-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"FestiveCat"},"content":"TAilor data are saved as a JSON file `[JAR file location]/data/contactlist.json`.","lastModifiedDate":"2022-03-22"},{"lineNumber":239,"author":{"gitId":"FestiveCat"},"content":"Task List data is also saved as a JSON file `[JAR file location]/data/tasklist.json`. Advanced users are","lastModifiedDate":"2022-03-22"},{"lineNumber":240,"author":{"gitId":"FestiveCat"},"content":"welcome to update the data directly by editing those data files.","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e :exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"FestiveCat"},"content":"If your changes to the data file makes its format invalid, TAilor will discard all data and start","lastModifiedDate":"2022-02-25"},{"lineNumber":244,"author":{"gitId":"FestiveCat"},"content":"with an empty data file at the next run.","lastModifiedDate":"2022-02-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"FestiveCat"},"content":"To reset the files, perform any command that changes the contact list or task list (ie add new task, add new contact).","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"FestiveCat"},"content":"WARNING: This will override the pre-existing data with the new data you entered.","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"FestiveCat"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the","lastModifiedDate":"2022-02-25"},{"lineNumber":256,"author":{"gitId":"FestiveCat"},"content":"       file that contains the data of your previous TAilor home folder.","lastModifiedDate":"2022-02-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"FestiveCat"},"content":"**Add** | `add n/NAME a/STUDENT_NUMBER e/EMAIL m/MODULE g/GROUP [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho a/A1234567Y e/jamesho@example.com m/CS2100 g/W12 t/friend t/colleague`","lastModifiedDate":"2022-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"FestiveCat"},"content":"**Edit** | `edit INDEX [n/NAME] [a/STUDENT_NUMBER] [e/EMAIL] [m/MODULE] [g/GROUP] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2022-03-23"},{"lineNumber":268,"author":{"gitId":"FestiveCat"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-02-25"},{"lineNumber":269,"author":{"gitId":"FestiveCat"},"content":"**Find** | `find PREFIX/KEYWORD [MORE_KEYWORDS] [PREFIX/KEYWORD [MORE_KEYWORDS]]`\u003cbr\u003e e.g., `find n/James Jake a/A0217`","lastModifiedDate":"2022-03-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"FestiveCat"},"content":"**Mail** | `mail`\u003cbr\u003e e.g., `mail e/johndoe@example.com`","lastModifiedDate":"2022-02-25"},{"lineNumber":272,"author":{"gitId":"FestiveCat"},"content":"**Mail All** | `mailall`","lastModifiedDate":"2022-02-25"},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"FestiveCat"},"content":"**New Task** | `newtask DESCRIPTION by/DEADLINE` \u003cbr\u003e e.g., `newtask Do homework by/2022-03-21T12:34`","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"FestiveCat"},"content":"**Delete Task** | `deltask INDEX` \u003cbr\u003e e.g., `deltask 3`","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":112,"-":152,"kxshxsh":7,"zawedcvg":4}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Cyolune"},"content":"    content: \"TAilor\";","lastModifiedDate":"2022-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Cyolune":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveContactList(contactList)","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"kxshxsh":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"ContactList *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"ContactList *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e StudentNumber","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e Mod","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e Group","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"kxshxsh":5}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"participant \":TailorParser\" as TailorParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"LogicManager -\u003e TailorParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"activate TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"TailorParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"DeleteCommandParser --\u003e TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"TailorParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"DeleteCommandParser --\u003e TailorParser : d","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"DeleteCommandParser -[hidden]-\u003e TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"TailorParser --\u003e LogicManager : d","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"deactivate TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"kxshxsh":10}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"Class TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"LogicManager -right-\u003e\"1\" TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"TailorParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"kxshxsh":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyContactList\" as ReadOnlyContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"Class ContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"Class Mod","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"Class Group","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"Class StudentNumber","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"ContactList .up.|\u003e ReadOnlyContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"Model .left.\u003e ReadOnlyContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"ModelManager -left-\u003e \"1\" ContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"ContactList *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e StudentNumber","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e Mod","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"Person *--\u003e Group","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"Name -[hidden]right-\u003e StudentNumber","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"Name -[hidden]right-\u003e Email","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"StudentNumber -[hidden]right-\u003e Mod","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"Mod -[hidden]right-\u003e Group","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":37,"kxshxsh":16}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"Class TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"HiddenOutside ..\u003e TailorParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"TailorParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"TailorParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":34,"kxshxsh":4}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"package \"ContactList Storage\" #F4F6F6{","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nContactListStorage\" as ContactListStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"Class JsonContactListStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"Class JsonSerializableContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"StorageManager -up-\u003e \"1\" ContactListStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"Storage -right-|\u003e ContactListStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"JsonContactListStorage .up.|\u003e ContactListStorage","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"JsonContactListStorage ..\u003e JsonSerializableContactList","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"JsonSerializableContactList --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"kxshxsh":9}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"title: TAilor","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W12-1/tp/branch/master/graph/badge.svg?token\u003dHHSZMMX8BF)](https://codecov.io/gh/AY2122S2-CS2103T-W12-1/tp)","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"**TAilor is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"* If you are interested in using TAilor, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"* If you are interested about developing TAilor, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"FestiveCat":5,"-":14}},{"path":"docs/team/cyolune.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"layout: page","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"title: Jan\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"### Project: TAilor","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"TAilor is a desktop app for managing contacts. The user interacts with it using a CLI, and it has a GUI","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dfestivecat\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"  * **Sample Feature 1**: Sample description","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"    * What it does:","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"    allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"    * Justification:","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"    This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"    * Highlights:","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"    This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    * Credits:","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"    *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"    * Time spent on this (estimate):","lastModifiedDate":"2022-03-01"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"    0mins","lastModifiedDate":"2022-03-01"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-01"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-03-01"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-03-01"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-01"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"  * User Guide (UG):","lastModifiedDate":"2022-03-01"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"    * Reviewed UG for v1.1, made minor formatting and grammatical changes.","lastModifiedDate":"2022-03-01"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"  * Developer Guide (DG):","lastModifiedDate":"2022-03-01"},{"lineNumber":36,"author":{"gitId":"Cyolune"},"content":"    * None yet","lastModifiedDate":"2022-03-01"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":38,"author":{"gitId":"Cyolune"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2022-03-01"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"  * Made team organisation and repository at the beginning.","lastModifiedDate":"2022-03-01"},{"lineNumber":40,"author":{"gitId":"Cyolune"},"content":"  * Transferred half of User Stories into Issues to track.","lastModifiedDate":"2022-03-01"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"* **Project management**:","lastModifiedDate":"2022-03-01"},{"lineNumber":43,"author":{"gitId":"Cyolune"},"content":"  * Drove team meetings forward, increasing productivity.","lastModifiedDate":"2022-03-01"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":45,"author":{"gitId":"Cyolune"},"content":"* **Community**:","lastModifiedDate":"2022-03-01"},{"lineNumber":46,"author":{"gitId":"Cyolune"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#nil]()","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"Cyolune":46}},{"path":"docs/team/festivecat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"layout: page","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"title: Han Yang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"---","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"### Project: TAilor","lastModifiedDate":"2022-02-25"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"TAilor is a desktop app for managing contacts. The user interacts with it using a CLI, and it has a GUI","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-25"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dfestivecat\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"  * **Feature 1**: Extending `Find` command [\\#75]()","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    * What it does:","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"      Originally: `Find` only allows users to search contacts in the database using names.","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"      Now, `Find` allows users to search contacts using names, studentNumber, tags, email etc. (All fields in a Person)","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    * Justification:","lastModifiedDate":"2022-02-25"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"      This feature improves the product significantly because it can be used to find and view the","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"      students/contacts easily. Makes the original command more robust.","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    * Highlights:","lastModifiedDate":"2022-02-25"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"      Incorporated many individual classes for each of the search conditions, as well as a compounded search condition","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"      that allows searching based on all conditions passed into it.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    * Time spent on this (estimate):","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"      210mins","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"  * **Feature 2**: Implementing `Mod` class [\\#72]()","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    * What it does:","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"      This is basically another field/detail about a person, like Name and Email.","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    * Justification:","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"      This feature makes our application more targeted towards our target user, Teaching Assistants.","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"      By having this `Mod` class, Teaching Assistants can now tag students with a certain Class, ie `CS2030S`","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"      To better keep track of their students.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    * Time spent on this (estimate):","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"      150mins","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"  * **Feature 3**: Implementing the Task Manager Functionality [\\#88]()","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    * What it does:","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"      The task manager will help the target audience keep track of tasks for their students better.","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"      For example, a Teaching Assistant can use the task manager to keep track of when certain assignments are due,","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"      which allows them to contact their students if needed.","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    * Justification:","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"      This features allows our application to be more than just any contact management/contact list application.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"      By incorporating this, the target audience now has an in-built feature to assist in their task-tracking activities.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"      This feature can also be extended to be linked to students or Mods or Groups. It can also be extended to use","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"      different priority systems to rank the Tasks.","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"    * Time spent on this (estimate):","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"      600mins","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"  * Add Mod class/field (Pull request [\\#70]())","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"  * Find command (Pull requests [\\#75]())","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"  * User Guide (UG):","lastModifiedDate":"2022-02-25"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"    * Reviewed UG for v1.1, made minor formatting and grammatical changes.","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    * Updated UG for parts I have modified/implemented/extended.","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"      * In particular, I included the extra search parameters that can be used in the Find Command.","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"      * I also incorporated the new Task Manager commands, `newtask` and `deltask` and how they should be used.","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"  * Developer Guide (DG):","lastModifiedDate":"2022-02-25"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    * Changed some \"Address Book\" into \"Contact List\" to better represent the project.","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    * Updated DG for parts I have modified/implemented/extended.","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"      * In particular, I remade the Model and Storage UML diagrams to include the newly implemented Task Manager functionality.","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"      * There is also a section under \"Implementations\" that describes how the Task Manager interacts with the rest of TAilor.","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"* **Contribution to team-based tasks**:","lastModifiedDate":"2022-02-25"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"  * Made team organisation and repository at the beginning.","lastModifiedDate":"2022-02-25"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"  * Transferred half of User Stories into Issues to track.","lastModifiedDate":"2022-02-25"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"  * Incorporated a standardised commit message format: [\\#67]()","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"* **Project management**:","lastModifiedDate":"2022-02-25"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"  * Drove team meetings forward, increasing productivity.","lastModifiedDate":"2022-02-25"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"  * Up-kept a list of deliverables per week, updating it frequently so that everyone","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"  is on the same page.","lastModifiedDate":"2022-03-04"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"* **Community**:","lastModifiedDate":"2022-02-25"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#42]() [\\#52]()","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":76,"kxshxsh":1}},{"path":"docs/team/kxshxsh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"# Kashish\u0027a Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"## Project: TAilor","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"TAilor is a desktop app for managing contacts. The user interacts with it using a CLI, and it has a GUI","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"created with JavaFX. It is written in Java, and has about 10 kLoC. Through TAilor we hope to make most common,","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"tedious administrative tasks, that Teaching Assistants encounter, easier and more efficient to carry out.","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"###Summary of Contributions","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"My contributions to the project can be found below:","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"1. My **Code Contributions** can be found [here](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dkxshxsh\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"2. **Enhancements Implemented**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"3. **Contribution to the User Guide**: the initial version has been worked on rather equally. Specific section","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"   details to be added soon!","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"4. **Contributions to the Developer Guide**: to be added soon.","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"5. **Contributions to team-based tasks**:","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    - played a role in renaming the product","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    - more to be added soon!","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"6. **Reviewing/mentoring Contributions**: to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"7. **Contributions outside the project team:** to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"kxshxsh":23}},{"path":"docs/team/s7manth.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"#Sumanth\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-01"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"---","lastModifiedDate":"2022-03-01"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"##Project: TAilor","lastModifiedDate":"2022-03-01"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"TAilor is a desktop app for managing contacts. The user interacts with it using a CLI, and it has a GUI","lastModifiedDate":"2022-03-01"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-01"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"###Given below are my contributions to the project:","lastModifiedDate":"2022-03-01"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-01"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"- **Code contributed:** [RepoSense Link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003ds7manth\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-01"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"- **Enhancements Implemented:**","lastModifiedDate":"2022-03-01"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"    - Feature: Mail","lastModifiedDate":"2022-03-01"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"      - allows the user to send mails to student(s)","lastModifiedDate":"2022-03-01"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"      - more details to be added soon.","lastModifiedDate":"2022-03-01"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"- **Contribution to the User Guide:**","lastModifiedDate":"2022-03-01"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"    - to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"- **Contribution to the Developer Guide:** to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2022-03-01"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"    - suggested and reinforced the git workflow for the team to follow","lastModifiedDate":"2022-03-01"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    - more to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"- **Community Contribution:**","lastModifiedDate":"2022-03-01"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    - PRs reviewed: to be added","lastModifiedDate":"2022-03-01"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"    - Technical Leadership (through forum contributions): to be added soon","lastModifiedDate":"2022-03-01"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"    - bugs reported: to be added soon","lastModifiedDate":"2022-03-01"}],"authorContributionMap":{"s7manth":25}},{"path":"docs/team/zawedcvg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zawedcvg"},"content":"#Neeladri\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"zawedcvg"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"zawedcvg"},"content":"##Project: TAilor","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"TAilor is a desktop app for managing contacts. The user interacts with it using a CLI, and it has a GUI","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"zawedcvg"},"content":"created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"zawedcvg"},"content":"###Given below are my contributions to the project:","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"zawedcvg"},"content":"- **Code contributed:** [RepoSense Link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dzawedcvg\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"zawedcvg"},"content":"- **Enhancements Implemented:**","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"zawedcvg"},"content":"    - Feature: Groups","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"zawedcvg"},"content":"      - aid in the implementation of an extra parameter \"group\"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"zawedcvg"},"content":"      - add testing for the feature group","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"zawedcvg"},"content":"- **Contribution to the User Guide:**","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"zawedcvg"},"content":"    - Fix user guide to account for the new parameter group","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"zawedcvg"},"content":"- **Contribution to the Developer Guide:**","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"zawedcvg"},"content":"    - Non-Functional requirements","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"zawedcvg"},"content":"    - Glossary","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"zawedcvg"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"zawedcvg"},"content":"    - suggested and reinforced the git workflow for the team to follow","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"zawedcvg"},"content":"    - more to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"zawedcvg"},"content":"- **Community Contribution:**","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"zawedcvg"},"content":"    - PRs reviewed: to be added","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"zawedcvg"},"content":"    - Technical Leadership (through forum contributions): to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"zawedcvg"},"content":"    - bugs reported: to be added soon","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"zawedcvg":27}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their contact list and edit it if required. The command should have the following format:","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":" * Changes the remark of an existing person in the contact list.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-03-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-03-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"FestiveCat"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty contact list!","lastModifiedDate":"2022-03-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"FestiveCat"},"content":"                personToEdit.getMod(), remark, personToEdit.getTags());","lastModifiedDate":"2022-03-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"FestiveCat":4,"-":397}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `mod` field from `Person` class.","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `mod` field can be done similarly.","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"The `mod` field in `Person` is actually an instance of the `seedu.address.model.person.Mod. Since removing the `Mod` class will break the application, we start by identifying `Mod`\u0027s usages. This allows us to see code that depends on `Mod` to function properly and edit them on a case-by-case basis. Right-click the `Mod` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"1. Safe delete the field `mod` in `EditPersonDescriptor`.","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"1. Remove the usages of `mod` and select `Do refactor` when you are done.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `mod` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `mod` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$mod` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"![$mod](../images/remove/$mod.png)","lastModifiedDate":"2022-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"private Label mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"\u003cLabel fx:id\u003d\"studentNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentNumber\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"\u003cLabel fx:id\u003d\"mod\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mod\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `mod` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"kxshxsh"},"content":"    \"studentNumber\": \"9482424\",","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    \"mod\": \"CS2100\"","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"You can go through each individual `json` file and manually remove the `mod` field.","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":14,"-":96,"kxshxsh":2}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [a/STUDENT_NUMBER] [e/EMAIL] ","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"[m/MOD] [g/GROUP] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"            storage.saveContactList(model.getContactList());","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"FestiveCat"},"content":"     * Converts a given {@code ReadOnlyContactList} into this class for Jackson use.","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"FestiveCat"},"content":"     * {@code JsonSerializableContactList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"FestiveCat"},"content":"    public JsonSerializableContactList(ReadOnlyContactList source) {","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"FestiveCat"},"content":"    3.  Save the contact list in the CSV format instead","lastModifiedDate":"2022-03-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"FestiveCat"},"content":"    6.  Add a new entity to the contact list","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":6,"-":294,"kxshxsh":2}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.storage.ContactListStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.storage.JsonContactListStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ContactList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"        ContactListStorage contactListStorage \u003d new JsonContactListStorage(userPrefs.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        storage \u003d new StorageManager(contactListStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"s7manth"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s contact list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"     * The data from the sample contact list will be used instead if {@code storage}\u0027s contact list is not found,","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"s7manth"},"content":"     * or an empty contact list will be used instead if errors occur when reading {@code storage}\u0027s contact list.","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"s7manth"},"content":"        Optional\u003cReadOnlyContactList\u003e contactListOptional;","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        ReadOnlyContactList initialContactList;","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"s7manth"},"content":"            contactListOptional \u003d storage.readContactList();","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"            if (contactListOptional.isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"                logger.info(\"Contact List Data file not found. Will be starting with a sample ContactList\");","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"            initialContactList \u003d contactListOptional.orElseGet(SampleDataUtil::getSampleContactList);","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"            if (taskListOptional.isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"                logger.info(\"Task List data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleDataUtil::getSampleTaskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"s7manth"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ContactList\");","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"            initialContactList \u003d new ContactList();","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"            initialTaskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"s7manth"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactList\");","lastModifiedDate":"2022-03-06"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"            initialContactList \u003d new ContactList();","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"            initialTaskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"        return new ModelManager(initialContactList, userPrefs, initialTaskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"s7manth"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactList\");","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"s7manth"},"content":"        logger.info(\"Starting ContactList \" + MainApp.VERSION);","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"s7manth"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TAilor ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":26,"-":159,"s7manth":14}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.util.StringBuilderUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"        StringBuilderUtil stringBuilderUtil \u003d StringBuilderUtil.getInstance();","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"s7manth"},"content":"        stringBuilderUtil.appendAll(\"Current log level : \", logLevel,","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"s7manth"},"content":"                \"\\nPreference file Location : \", userPrefsFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":62,"author":{"gitId":"s7manth"},"content":"        return stringBuilderUtil.getFormattedOutput();","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":59,"s7manth":6}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.util.StringBuilderUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"    private static final double DEFAULT_HEIGHT \u003d 640;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"s7manth"},"content":"        StringBuilderUtil stringBuilderUtil \u003d StringBuilderUtil.getInstance();","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"s7manth"},"content":"        stringBuilderUtil.appendAll(\"Width : \", windowWidth, \"\\n\",","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"s7manth"},"content":"                \"Height : \", windowHeight, \"\\n\",","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"                \"Position : \", windowCoordinates);","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"s7manth"},"content":"        return stringBuilderUtil.getFormattedOutput();","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":72,"s7manth":9}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":" * Named {@link Logger}s can be obtained from this class","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    private static final String LOG_FILE \u003d \"tailorapp.log\";","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":109,"s7manth":3}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FestiveCat":1,"-":11}},{"path":"src/main/java/seedu/address/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"s7manth"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"s7manth":1}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"s7manth"},"content":"     * Adds new line to the file.","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"s7manth"},"content":"     * @param file The file to add new line to.","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"s7manth"},"content":"     * @throws IOException if the file does not exist.","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"s7manth"},"content":"    public static void addNewLineToFile(Path file) throws IOException {","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"s7manth"},"content":"        Files.write(file, Collections.singleton(\"\"));","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":83,"s7manth":10}},{"path":"src/main/java/seedu/address/commons/util/MailUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import java.awt.Desktop;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import java.net.URI;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"public class MailUtil {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"    public static final String MAIL_TO \u003d \"mailto:\";","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"    public static final String URI_SYNTAX_ERROR_MESSAGE \u003d \"The URI syntax used is incorrect\";","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"    public static final String DESKTOP_NOT_SUPPORTED_MESSAGE \u003d \"The desktop you are using is not supported\";","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    public static final String INTERNAL_DESKTOP_ERROR \u003d \"Internal desktop error\";","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"     * Launches the system default email application.","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"     * @param emailList The list of receiver\u0027s email addresses.","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"     * @throws CommandException if any errors occur while launching the mail application.","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"    public static void launchMail(Email... emailList) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"        Desktop desktop;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"        StringBuilderUtil stringBuilderUtil \u003d StringBuilderUtil.getInstance();","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"            if (Desktop.isDesktopSupported() \u0026\u0026 (desktop \u003d Desktop.getDesktop()).isSupported(Desktop.Action.MAIL)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"                stringBuilderUtil.append(MAIL_TO);","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"s7manth"},"content":"                for (int i \u003d 0; i \u003c emailList.length; ++i) {","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"                    stringBuilderUtil.append(emailList[i]);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"s7manth"},"content":"                    if (i + 1 \u003c emailList.length) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"s7manth"},"content":"                        stringBuilderUtil.append(\",\");","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"                    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"                }","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"                URI mailto \u003d new URI(stringBuilderUtil.getFormattedOutput());","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"                desktop.mail(mailto);","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"s7manth"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"                throw new CommandException(DESKTOP_NOT_SUPPORTED_MESSAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"s7manth"},"content":"            }","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"s7manth"},"content":"        } catch (URISyntaxException uriSyntaxException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"s7manth"},"content":"            throw new CommandException(URI_SYNTAX_ERROR_MESSAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"            throw new CommandException(INTERNAL_DESKTOP_ERROR);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"s7manth"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"s7manth":53}},{"path":"src/main/java/seedu/address/commons/util/StringBuilderUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2022-03-06"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"/**","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":" * A container for StringBuilder specific utility functions","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":" */","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"public class StringBuilderUtil {","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"    private StringBuilder stringBuilder;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"     * Default constructor for the OutputFormatter class.","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"    private StringBuilderUtil() {","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"        this.stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"     * Factory method for the class.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"     * @return An instance of the OutputFormatter class.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"    public static StringBuilderUtil getInstance() {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"        return new StringBuilderUtil();","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"     * Appends objects in a bulk manner into a single string.","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"     * @param objectArray The array of objects to append into the OutputFormatter.","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"    public void appendAll(Object... objectArray) {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"        for (Object o : objectArray) {","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"            if (o \u003d\u003d null) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"                continue;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"            this.stringBuilder.append(o);","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"s7manth"},"content":"        }","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"s7manth"},"content":"     * Appends a single object into the string.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"     * @param object The object to append to the OutputFormatter.","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"    public void append(Object object) {","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"        this.stringBuilder.append(object.toString());","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"s7manth"},"content":"     * Gets the formatted output.","lastModifiedDate":"2022-03-06"},{"lineNumber":47,"author":{"gitId":"s7manth"},"content":"     * @return The formatted output in the form of a single string.","lastModifiedDate":"2022-03-06"},{"lineNumber":48,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"    public String getFormattedOutput() {","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"        return this.stringBuilder.toString();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"s7manth":52}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"     *   Ignores case, and a full word match is not required.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"     *       containsWordIgnoreCaseSubstring(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"     *       containsWordIgnoreCaseSubstring(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"     *       containsWordIgnoreCaseSubstring(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"     *       containsWordIgnoreCaseSubstring(\"AB\", \"ABC\") \u003d\u003d false","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    public static boolean containsWordIgnoreCaseSubstring(String sentence, String word) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        return preppedSentence.contains(preppedWord);","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":23,"-":68}},{"path":"src/main/java/seedu/address/history/InputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"package seedu.address.history;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":" * API of the InputHistory component","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"public interface InputHistory {","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"     * Stores the input entered by the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"     * @param input the user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"    void storeInput(String input);","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"     * Returns a previous input by the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"    String getPreviousUserInput();","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"     * Returns a next input by the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"    String getNextUserInput();","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Cyolune":23}},{"path":"src/main/java/seedu/address/history/InputHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cyolune"},"content":"package seedu.address.history;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"Cyolune"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"Cyolune"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":" * A class to record the commands entered by the user","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"Cyolune"},"content":"public class InputHistoryManager implements InputHistory {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"    private static final int INIT_INPUT_INDEX_VALUE \u003d 0;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"Cyolune"},"content":"    private List\u003cString\u003e previousInputs;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"Cyolune"},"content":"    private int indexPointer;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"Cyolune"},"content":"     * Constructs an {@code InputHistoryManager}","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"Cyolune"},"content":"    public InputHistoryManager() {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"Cyolune"},"content":"        this.previousInputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"Cyolune"},"content":"        this.indexPointer \u003d INIT_INPUT_INDEX_VALUE;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"Cyolune"},"content":"     * Stores the most user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"Cyolune"},"content":"     * @param input the user input.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"Cyolune"},"content":"    public void storeInput(String input) {","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"Cyolune"},"content":"        this.previousInputs.add(input);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"Cyolune"},"content":"        indexPointer \u003d maxInputIndex();","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"     * Returns the previous user input with respect to the pointer.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"    public String getPreviousUserInput() {","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Cyolune"},"content":"        // Return the first input provided by the user at app launch.","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"        if (indexPointer \u003d\u003d INIT_INPUT_INDEX_VALUE) {","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Cyolune"},"content":"            return previousInputs.get(0);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Cyolune"},"content":"        indexPointer--;","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"        return previousInputs.get(indexPointer);","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"Cyolune"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Cyolune"},"content":"     * Returns the next user input with respect to the pointer.","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Cyolune"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Cyolune"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Cyolune"},"content":"    public String getNextUserInput() {","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Cyolune"},"content":"        // Return the most recent input provided by the user.","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Cyolune"},"content":"        if (indexPointer \u003d\u003d maxInputIndex()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Cyolune"},"content":"            return previousInputs.get(indexPointer);","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"Cyolune"},"content":"        indexPointer++;","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"Cyolune"},"content":"        return previousInputs.get(indexPointer);","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"Cyolune"},"content":"    private int maxInputIndex() {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"Cyolune"},"content":"        return previousInputs.size() - 1;","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"Cyolune"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"Cyolune"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"Cyolune":64}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"     * Returns the ContactList.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"     * @see seedu.address.model.Model#getContactList()","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * Returns the user prefs\u0027 contact list file path.","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"FestiveCat":2,"-":44,"s7manth":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.parser.TailorParser;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"    private final TailorParser tailorParser;","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"s7manth"},"content":"        tailorParser \u003d new TailorParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"        Command command \u003d tailorParser.parseCommand(commandText);","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"            storage.saveContactList(model.getContactList());","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"s7manth"},"content":"        return model.getContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"s7manth"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"s7manth"},"content":"        return model.getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"FestiveCat":2,"-":71,"s7manth":9}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":" * Adds a person to the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the class group. \"","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_STUDENT_NUMBER + \"STUDENT_NUMBER \"","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_GROUP + \"GROUP \"","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"zawedcvg"},"content":"            + PREFIX_MOD + \"MOD \"","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_STUDENT_NUMBER + \"A2345678Q\"","lastModifiedDate":"2022-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_GROUP + \"W12-1 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"zawedcvg"},"content":"            + PREFIX_MOD + \"CS2030S\"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the class group\";","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"        Mod currentMod \u003d toAdd.getMod();","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"        String defaultValue \u003d currentMod.getDefaultGroup();","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"        if (defaultValue !\u003d null) {","lastModifiedDate":"2022-03-18"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"            toAdd.setGroup(defaultValue);","lastModifiedDate":"2022-03-18"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"kxshxsh":12,"s7manth":3,"zawedcvg":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":" * Clears the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Class group has been cleared!\";","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"        model.setContactList(new ContactList());","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"s7manth":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":" * Deletes a person identified using it\u0027s displayed index from the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"s7manth":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-23"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":" * Edits the details of an existing person in the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"            + \"[\" + PREFIX_STUDENT_NUMBER + \"STUDENT_NUMBER] \"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP] \"","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"zawedcvg"},"content":"            + \"[\" + PREFIX_MOD + \"MOD] \"","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_STUDENT_NUMBER + \"A0225771X \"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"zawedcvg"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the mod book.\";","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"kxshxsh"},"content":"        StudentNumber updatedStudentNumber \u003d editPersonDescriptor.getStudentNumber()","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"kxshxsh"},"content":"                .orElse(personToEdit.getStudentNumber());","lastModifiedDate":"2022-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"zawedcvg"},"content":"        Mod updatedMod \u003d editPersonDescriptor.getMod().orElse(personToEdit.getMod());","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"kxshxsh"},"content":"        Group updatedGroup \u003d editPersonDescriptor.getGroup().orElse(personToEdit.getGroup());","lastModifiedDate":"2022-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"kxshxsh"},"content":"        return new Person(updatedName, updatedStudentNumber, updatedEmail, updatedMod, updatedGroup, updatedTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"kxshxsh"},"content":"        private StudentNumber studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"zawedcvg"},"content":"        private Mod mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"kxshxsh"},"content":"        private Group group;","lastModifiedDate":"2022-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"kxshxsh"},"content":"            setStudentNumber(toCopy.studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"kxshxsh"},"content":"            setGroup(toCopy.group);","lastModifiedDate":"2022-03-11"},{"lineNumber":150,"author":{"gitId":"zawedcvg"},"content":"            setMod(toCopy.mod);","lastModifiedDate":"2022-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"kxshxsh"},"content":"            return CollectionUtil.isAnyNonNull(name, studentNumber, email, mod, tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"kxshxsh"},"content":"        public void setStudentNumber(StudentNumber studentNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"kxshxsh"},"content":"            this.studentNumber \u003d studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"kxshxsh"},"content":"        public Optional\u003cStudentNumber\u003e getStudentNumber() {","lastModifiedDate":"2022-03-22"},{"lineNumber":174,"author":{"gitId":"kxshxsh"},"content":"            return Optional.ofNullable(studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"zawedcvg"},"content":"        public void setMod(Mod mod) {","lastModifiedDate":"2022-03-13"},{"lineNumber":186,"author":{"gitId":"zawedcvg"},"content":"            this.mod \u003d mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"zawedcvg"},"content":"        public Optional\u003cMod\u003e getMod() {","lastModifiedDate":"2022-03-13"},{"lineNumber":190,"author":{"gitId":"zawedcvg"},"content":"            return Optional.ofNullable(mod);","lastModifiedDate":"2022-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"kxshxsh"},"content":"        public void setGroup(Group group) {","lastModifiedDate":"2022-03-11"},{"lineNumber":194,"author":{"gitId":"kxshxsh"},"content":"            this.group \u003d group;","lastModifiedDate":"2022-03-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":197,"author":{"gitId":"kxshxsh"},"content":"        public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2022-03-11"},{"lineNumber":198,"author":{"gitId":"kxshxsh"},"content":"            return Optional.ofNullable(group);","lastModifiedDate":"2022-03-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"kxshxsh"},"content":"                    \u0026\u0026 getStudentNumber().equals(e.getStudentNumber())","lastModifiedDate":"2022-03-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"zawedcvg"},"content":"                    \u0026\u0026 getMod().equals(e.getMod())","lastModifiedDate":"2022-03-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":202,"kxshxsh":25,"s7manth":1,"zawedcvg":12}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TAilor as requested ...\";","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"s7manth":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.PersonContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" * Finds and lists all persons in contact list whose name contains any of the argument keywords.","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose details contain any of \"","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"            + \"Parameters: PREFIX/KEYWORD [MORE_KEYWORDS] [MORE PREFIX]/[KEYWORDS]...\\n\"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"            + \"Example: \" + COMMAND_WORD + \"n/alice bob charlie p/9123 e/example.com\";","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public FindCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"FestiveCat":7,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":" * Lists all persons in the class group to the user.","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":23,"s7manth":1}},{"path":"src/main/java/seedu/address/logic/commands/MailAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import static seedu.address.commons.util.MailUtil.launchMail;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"public class MailAllCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"    public static final String COMMAND_WORD \u003d \"mailall\";","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Opening app for bulk emailing\";","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"        Email[] emailList \u003d new Email[lastShownList.size()];","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"        int i \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"        for (Person p : lastShownList) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"            emailList[i] \u003d p.getEmail();","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"            i++;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"        launchMail(emailList);","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"s7manth":33}},{"path":"src/main/java/seedu/address/logic/commands/MailCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"import static seedu.address.commons.util.MailUtil.launchMail;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":" * Opens the system default mail app with person identified using it\u0027s","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":" * displayed index from the class group as the receiver.","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"public class MailCommand extends Command {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    public static final String COMMAND_WORD \u003d \"mail\";","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"            + \": Opens the mail box with the email of the person identified by the index number.\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Opening System Default Mail App: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"    private final Index index;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"     * Constructor for the MailCommand class.","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"s7manth"},"content":"     * @param index The index of the person to mail to.","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"    public MailCommand(Index index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"s7manth"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"s7manth"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"     * Executes the mail command.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"s7manth"},"content":"     * @return {@code CommandResult} object that contains the result of the execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"     * @throws CommandException if any noncompliance occurs in the command execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"s7manth"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"s7manth"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"        Person personToMail \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"s7manth"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"s7manth"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"s7manth"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"s7manth"},"content":"        Email email \u003d personToMail.getEmail();","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"s7manth"},"content":"        launchMail(email);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToMail.getName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"s7manth"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"s7manth"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"s7manth"},"content":"                || (other instanceof MailCommand // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"s7manth"},"content":"                \u0026\u0026 index.equals(((MailCommand) other).index)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"s7manth":68}},{"path":"src/main/java/seedu/address/logic/commands/NewTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":" * Adds a task to the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"public class NewTaskCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    public static final String COMMAND_WORD \u003d \"newtask\";","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task manager.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"            + \"Parameters: DESCRIPTION (must be non-empty) \"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"            + PREFIX_DEADLINE + \"DEADLINE \\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"            + \"Example: \" + COMMAND_WORD + \" Submit CS2100 Assignment 1 \"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"            + PREFIX_DEADLINE + \"2022-03-25T23:59\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task manager\";","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    private final Task toAdd;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * Creates a NewTaskCommand to add the specified {@code task}","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    public NewTaskCommand(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        toAdd \u003d task;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof NewTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 toAdd.equals(((NewTaskCommand) other).toAdd));","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":54}},{"path":"src/main/java/seedu/address/logic/commands/RemoveTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":" * Deletes a task identified using it\u0027s displayed index from the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"public class RemoveTaskCommand extends Command {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public static final String COMMAND_WORD \u003d \"deltask\";","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted task: %1$s\";","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a RemoveTaskCommand to remove the specified task in the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"     * @param targetIndex the index, 1 based, to have the task removed.","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public RemoveTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        ReadOnlyTaskList lastShownList \u003d model.getTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof RemoveTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 targetIndex.equals(((RemoveTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":57}},{"path":"src/main/java/seedu/address/logic/commands/SetDefaultGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.UniqueModuleList;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"public class SetDefaultGroupCommand extends Command {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public static final String COMMAND_WORD \u003d \"setDefaultGroup\";","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets a default value for group in the given Mod. \"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_MOD + \"MOD \"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_GROUP + \"GROUP\"","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_GROUP + \"W12-1 \"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"            + PREFIX_MOD + \"CS2103T\";","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Default value for %1$s Module has been set to %2$s successfully!\";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    public static final String MESSAGE_DEFAULT_UPDATE \u003d \"Default value for %1$s has been updated from %2$s to %3$s.\";","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    private final Mod mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    private final String defaultValue;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"     * Constructor for {@code SetDefaultGroupCommand}.","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"     * @param mod The module whose default has to be set.","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"     * @param defaultValue The default value.","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    public SetDefaultGroupCommand(Mod mod, String defaultValue) {","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"        this.mod \u003d mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"        this.defaultValue \u003d defaultValue;","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"        UniqueModuleList moduleList \u003d new UniqueModuleList();","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        if (model.doesModExist(mod)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"            Mod matchingMod \u003d moduleList.retrieveMod(mod).get(); //since guaranteed to not be null","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"            if (model.isDefaultPresent(matchingMod)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"                String prevDefault \u003d model.retrievePrevDefault(matchingMod);","lastModifiedDate":"2022-03-18"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"                return new CommandResult(String.format(MESSAGE_DEFAULT_UPDATE, mod, prevDefault, defaultValue));","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"            model.setDefaultGroup(matchingMod, defaultValue);","lastModifiedDate":"2022-03-18"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        } else {","lastModifiedDate":"2022-03-18"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"            moduleList.add(mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"            model.setDefaultGroup(mod, defaultValue);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, mod, defaultValue));","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"}],"authorContributionMap":{"kxshxsh":60}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":17,"s7manth":2}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_NUMBER, PREFIX_EMAIL, PREFIX_MOD,","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"                        PREFIX_GROUP, PREFIX_TAG);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MOD, PREFIX_STUDENT_NUMBER, PREFIX_EMAIL, PREFIX_GROUP)","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        StudentNumber studentNumber \u003d ParserUtil.parseStudentNumber(argMultimap.getValue(PREFIX_STUDENT_NUMBER).get());","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"zawedcvg"},"content":"        Mod mod \u003d ParserUtil.parseMod(argMultimap.getValue(PREFIX_MOD).get());","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"        Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        Person person \u003d new Person(name, studentNumber, email, mod, group, tagList);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":50,"kxshxsh":8,"zawedcvg":5}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"    public static final Prefix PREFIX_STUDENT_NUMBER \u003d new Prefix(\"a/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"zawedcvg"},"content":"    public static final Prefix PREFIX_MOD \u003d new Prefix(\"m/\");","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"FestiveCat":1,"-":12,"kxshxsh":2,"zawedcvg":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENT_NUMBER,","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                        PREFIX_EMAIL, PREFIX_MOD, PREFIX_TAG);","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_NUMBER).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"            editPersonDescriptor.setStudentNumber(","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"                    ParserUtil.parseStudentNumber(argMultimap.getValue(PREFIX_STUDENT_NUMBER).get()));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        if (argMultimap.getValue(PREFIX_MOD).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"            editPersonDescriptor.setMod(ParserUtil.parseMod(argMultimap.getValue(PREFIX_MOD).get()));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"FestiveCat":3,"-":75,"kxshxsh":6}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.CompoundedPredicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.predicates.GroupContainsKeywordsPredicate;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.ModContainsKeywordsPredicate;","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.predicates.StudentNumberContainsKeywordsPredicate;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        // need to add whitespace for compatibility with tokenizer that was originally used for commands","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        // with index preambles.","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"                ArgumentTokenizer.tokenize(\" \" + trimmedArgs, PREFIX_NAME, PREFIX_STUDENT_NUMBER, PREFIX_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"zawedcvg"},"content":"                        PREFIX_GROUP, PREFIX_MOD, PREFIX_TAG);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates compPreds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_NAME).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"            compPreds.addPredicate(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"        if (argMultimap.getValue(PREFIX_STUDENT_NUMBER).isPresent()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_STUDENT_NUMBER).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"            compPreds.addPredicate(new StudentNumberContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_EMAIL).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"            compPreds.addPredicate(new EmailContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        if (argMultimap.getValue(PREFIX_MOD).isPresent()) { // to be changed to MOD","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_MOD).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"            compPreds.addPredicate(new ModContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_TAG).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"            compPreds.addPredicate(new TagsContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":76,"author":{"gitId":"zawedcvg"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"zawedcvg"},"content":"            String[] keywords \u003d argMultimap.getValue(PREFIX_GROUP).get().split(\"\\\\s+\");","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"zawedcvg"},"content":"            compPreds.addPredicate(new GroupContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"zawedcvg"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        if (compPreds.isEmpty()) {","lastModifiedDate":"2022-03-11"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        return new FindCommand(compPreds);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"FestiveCat":43,"-":31,"kxshxsh":6,"zawedcvg":8}},{"path":"src/main/java/seedu/address/logic/parser/MailCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"s7manth"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":" * Parses input arguments and creates a new MailCommand object","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"public class MailCommandParser implements Parser\u003cMailCommand\u003e {","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"     * Parses the given {@code String} of arguments in the context of the MailCommand","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"     * and returns a MailCommand object for execution.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    public MailCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"            return new MailCommand(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MailCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"s7manth":28}},{"path":"src/main/java/seedu/address/logic/parser/NewTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.NewTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":" * Parses input arguments and creates a new NewTaskCommand object","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"public class NewTaskCommandParser implements Parser\u003cNewTaskCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     * Parses the given {@code String} of arguments in the context of the NewTaskCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     * and returns an NewTaskCommand object for execution.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public NewTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DEADLINE);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        if (!argMultimap.getValue(PREFIX_DEADLINE).isPresent() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        Description desc \u003d ParserUtil.parseDesc(argMultimap.getPreamble());","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        Deadline deadline \u003d ParserUtil.parseDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new Task(desc, deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        return new NewTaskCommand(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":37}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"     * Parses a {@code String studentNumber} into a {@code StudentNumber}.","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"     * @throws ParseException if the given {@code studentNumber} is invalid.","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    public static StudentNumber parseStudentNumber(String studentNumber) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"        String trimmedStudentNumber \u003d studentNumber.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"        if (!StudentNumber.isValidStudentNumber(trimmedStudentNumber)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"            throw new ParseException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"        return new StudentNumber(trimmedStudentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"zawedcvg"},"content":"     * Parses a {@code String mod} into an {@code Mod}.","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"zawedcvg"},"content":"     * @throws ParseException if the given {@code mod} is invalid.","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"zawedcvg"},"content":"    public static Mod parseMod(String mod) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"zawedcvg"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"        String trimmedCode \u003d mod.trim();","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"kxshxsh"},"content":"        if (!Mod.isValidMod(trimmedCode)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"zawedcvg"},"content":"            throw new ParseException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"        return new Mod(trimmedCode);","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"zawedcvg"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":88,"author":{"gitId":"zawedcvg"},"content":"     * Parses a {@code String group} into an {@code Group}","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"zawedcvg"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"zawedcvg"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"zawedcvg"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"zawedcvg"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"        String trimmedGroupId \u003d group.trim();","lastModifiedDate":"2022-03-11"},{"lineNumber":96,"author":{"gitId":"kxshxsh"},"content":"        if (!Group.isValidAddress(trimmedGroupId)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":97,"author":{"gitId":"kxshxsh"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":99,"author":{"gitId":"kxshxsh"},"content":"        return new Group(trimmedGroupId);","lastModifiedDate":"2022-03-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"     * Parses a {@code String desc} into a {@code Description}.","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"     * @throws ParseException if the given {@code desc} is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"    public static Description parseDesc(String desc) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(desc);","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"FestiveCat"},"content":"        String trimmedDesc \u003d desc.trim();","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"FestiveCat"},"content":"        if (!Description.isValidDesc(trimmedDesc)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"FestiveCat"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"FestiveCat"},"content":"        return new Description(trimmedDesc);","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"FestiveCat"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"FestiveCat"},"content":"    public static Deadline parseDeadline(String deadline) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"FestiveCat"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"FestiveCat"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"FestiveCat"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"FestiveCat"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"FestiveCat":31,"-":108,"kxshxsh":22,"zawedcvg":11}},{"path":"src/main/java/seedu/address/logic/parser/RemoveTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" * Parses input arguments and creates a new RemoveTaskCommand object","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"public class RemoveTaskCommandParser implements Parser\u003cRemoveTaskCommand\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveTaskCommand","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * and returns a RemoveTaskCommand object for execution.","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    public RemoveTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"            return new RemoveTaskCommand(index);","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":28}},{"path":"src/main/java/seedu/address/logic/parser/SetDefaultGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-18"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-18"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-18"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.logic.commands.SetDefaultGroupCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"public class SetDefaultGroupCommandParser implements Parser\u003cSetDefaultGroupCommand\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"     * Parses the arguments for the set default group command.","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"     * @param args The arguments for the set default group command.","lastModifiedDate":"2022-03-18"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"     * @return The {@code SetDefaultGroupCommand} object.","lastModifiedDate":"2022-03-18"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"     * @throws ParseException if there are parsing errors.","lastModifiedDate":"2022-03-18"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    public SetDefaultGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MOD, PREFIX_GROUP);","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MOD, PREFIX_GROUP)","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"                    SetDefaultGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"        Mod mod \u003d ParserUtil.parseMod(argMultimap.getValue(PREFIX_MOD).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get());","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"        String defaultValue \u003d group.value;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"        return new SetDefaultGroupCommand(mod, defaultValue);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"kxshxsh":41}},{"path":"src/main/java/seedu/address/logic/parser/TailorParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.MailAllCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.NewTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.logic.commands.SetDefaultGroupCommand;","lastModifiedDate":"2022-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"public class TailorParser {","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\").toLowerCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        case SetDefaultGroupCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"            return new SetDefaultGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"s7manth"},"content":"        case MailCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"s7manth"},"content":"            return new MailCommandParser().parse(arguments);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"s7manth"},"content":"        case MailAllCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"s7manth"},"content":"            return new MailAllCommand();","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"s7manth"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        case NewTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"            return new NewTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        case RemoveTaskCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"            return new RemoveTaskCommandParser().parse(arguments);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FestiveCat":8,"-":74,"s7manth":9,"kxshxsh":5}},{"path":"src/main/java/seedu/address/model/ContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":" * Wraps all data at the class group level","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"public class ContactList implements ReadOnlyContactList {","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"    public ContactList() {}","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"     * Creates an ContactList using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"    public ContactList(ReadOnlyContactList toBeCopied) {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"s7manth"},"content":"     * Resets the existing data of this {@code ContactList} with {@code newData}.","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"s7manth"},"content":"    public void resetData(ReadOnlyContactList newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"s7manth"},"content":"     * Removes {@code key} from this {@code ContactList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"s7manth"},"content":"                || (other instanceof ContactList // instanceof handles nulls","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"s7manth"},"content":"                \u0026\u0026 persons.equals(((ContactList) other).persons));","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":110,"s7manth":10}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     * Returns the user prefs\u0027 contact list file path.","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"     * Sets the user prefs\u0027 contact list file path.","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    void setContactListFilePath(Path contactListFilePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"     * Replaces contact list data with the data in {@code contactList}.","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"s7manth"},"content":"    void setContactList(ReadOnlyContactList contactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"    /** Returns the ContactList */","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"s7manth"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"     * Returns the user prefs\u0027 task list file path.","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"     * Sets the user prefs\u0027 task list file path.","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"     * Replaces task list data with the data in {@code taskList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"    /** Returns the task list */","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contact list.","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"     * The person must exist in the contact list.","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"     * {@code person} must not already exist in the contact list.","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"     * {@code target} must exist in the contact list.","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contact list.","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"kxshxsh"},"content":"     * Checks if the specified mod already has a default value set.","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"kxshxsh"},"content":"     * @param mod the module object meant to be checked","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"kxshxsh"},"content":"     * @return true","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"kxshxsh"},"content":"    boolean isDefaultPresent(Mod mod);","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"kxshxsh"},"content":"    boolean doesModExist(Mod mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":117,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":118,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"kxshxsh"},"content":"     * Retrieves the current default group value for a particular module","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"kxshxsh"},"content":"     * @param mod the module object who\u0027s default value is to be retrieved.","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"kxshxsh"},"content":"     * @return String the default group title.","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"kxshxsh"},"content":"    String retrievePrevDefault(Mod mod);","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"kxshxsh"},"content":"    void setDefaultGroup(Mod mod, String value);","lastModifiedDate":"2022-03-17"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"     * The task must exist in the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"     * Adds the given task.","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"     * {@code task} must not already exist in the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"    void addTask(Task task);","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"FestiveCat":46,"-":75,"kxshxsh":19,"s7manth":4}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.UniqueModuleList;","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":" * Represents the in-memory model of the contact list and task list data.","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"    private final ContactList contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    private final PriorityTaskList taskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * Initializes a ModelManager with the given contactList, userPrefs and taskList.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    public ModelManager(ReadOnlyContactList contactList, ReadOnlyUserPrefs userPrefs, ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        requireAllNonNull(contactList, userPrefs, taskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        logger.fine(\"Initializing with contact list: \" + contactList + \", user prefs \" + userPrefs","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"                + \" and task manager: \" + taskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"        this.contactList \u003d new ContactList(contactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        this.taskList \u003d new PriorityTaskList(taskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"s7manth"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.contactList.getPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        this(new ContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"s7manth"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":77,"author":{"gitId":"s7manth"},"content":"        return userPrefs.getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"s7manth"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":82,"author":{"gitId":"s7manth"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"s7manth"},"content":"        userPrefs.setContactListFilePath(contactListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"s7manth"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"s7manth"},"content":"    public void setContactList(ReadOnlyContactList contactList) {","lastModifiedDate":"2022-03-06"},{"lineNumber":101,"author":{"gitId":"s7manth"},"content":"        this.contactList.resetData(contactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"s7manth"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"s7manth"},"content":"        return contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"s7manth"},"content":"        return contactList.hasPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":117,"author":{"gitId":"s7manth"},"content":"        contactList.removePerson(target);","lastModifiedDate":"2022-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":122,"author":{"gitId":"s7manth"},"content":"        contactList.addPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"s7manth"},"content":"        contactList.setPerson(target, editedPerson);","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"s7manth"},"content":"     * {@code versionedContactList}","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":151,"author":{"gitId":"kxshxsh"},"content":"    public boolean isDefaultPresent(Mod mod) {","lastModifiedDate":"2022-03-17"},{"lineNumber":152,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-17"},{"lineNumber":153,"author":{"gitId":"kxshxsh"},"content":"        return mod.getDefaultGroup() !\u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":154,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":155,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":156,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":157,"author":{"gitId":"kxshxsh"},"content":"    public boolean doesModExist(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":158,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":159,"author":{"gitId":"kxshxsh"},"content":"        return new UniqueModuleList().contains(mod.value);","lastModifiedDate":"2022-03-18"},{"lineNumber":160,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":161,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":162,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"kxshxsh"},"content":"    public String retrievePrevDefault(Mod mod) {","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"kxshxsh"},"content":"        return mod.getDefaultGroup();","lastModifiedDate":"2022-03-18"},{"lineNumber":165,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"kxshxsh"},"content":"    public void setDefaultGroup(Mod mod, String value) {","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"kxshxsh"},"content":"        mod.setDefaultGroup(value);","lastModifiedDate":"2022-03-18"},{"lineNumber":170,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Task Manager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"FestiveCat"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"FestiveCat"},"content":"        if (taskList instanceof PriorityTaskList) {","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"FestiveCat"},"content":"            PriorityTaskList ptl \u003d (PriorityTaskList) taskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"FestiveCat"},"content":"            this.taskList.resetData(ptl);","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"FestiveCat"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"FestiveCat"},"content":"        return taskList.contains(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":188,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"FestiveCat"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(target);","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"FestiveCat"},"content":"        taskList.remove(target);","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"FestiveCat"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"FestiveCat"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":200,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":201,"author":{"gitId":"FestiveCat"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"        return this.taskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":203,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":204,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":205,"author":{"gitId":"FestiveCat"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d OTHERS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"s7manth"},"content":"        return contactList.equals(other.contactList)","lastModifiedDate":"2022-03-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":223,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-03-21"},{"lineNumber":224,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 taskList.equals(other.taskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":60,"-":123,"kxshxsh":24,"s7manth":19}},{"path":"src/main/java/seedu/address/model/ReadOnlyContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" * Unmodifiable view of a contact list","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"public interface ReadOnlyContactList {","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":1,"-":15,"s7manth":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"FestiveCat":1,"-":15,"s7manth":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.util.StringBuilderUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"    private Path contactListFilePath \u003d Paths.get(\"data\" , \"contactlist.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\", \"tasklist.json\");","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"        setContactListFilePath(newUserPrefs.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"s7manth"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":54,"author":{"gitId":"s7manth"},"content":"        return contactListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"s7manth"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"s7manth"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"        this.contactListFilePath \u003d contactListFilePath;","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        return taskListFilePath;","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 contactListFilePath.equals(o.contactListFilePath)","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 taskListFilePath.equals(o.taskListFilePath);","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"s7manth"},"content":"        return Objects.hash(guiSettings, contactListFilePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"s7manth"},"content":"        StringBuilderUtil stringBuilderUtil \u003d StringBuilderUtil.getInstance();","lastModifiedDate":"2022-03-06"},{"lineNumber":95,"author":{"gitId":"s7manth"},"content":"        stringBuilderUtil.appendAll(\"Gui Settings : \", guiSettings,","lastModifiedDate":"2022-03-06"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"                \"\\nLocal contactlist file location : \", contactListFilePath,","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"                \"\\nLocal tasklist file location : \", taskListFilePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"s7manth"},"content":"        return stringBuilderUtil.getFormattedOutput();","lastModifiedDate":"2022-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":13,"-":76,"s7manth":12}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":" * Represents a Person\u0027s email in the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"s7manth":1}},{"path":"src/main/java/seedu/address/model/person/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":" * Represents a Person\u0027s tutorial group in the class.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"public class Group {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Groups can take any values, and it should not be blank\";","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"     * The first character of the Group must not be a whitespace,","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"     * @param group A valid tutorial group.","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    public Group(String group) {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(group);","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"        checkArgument(isValidAddress(group), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"        this.value \u003d group;","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"                || (other instanceof Group // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"                \u0026\u0026 value.equals(((Group) other).value)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"-":46,"kxshxsh":11}},{"path":"src/main/java/seedu/address/model/person/Mod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" * Represents a mod a Person\u0027s is taking.","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMod(String)}","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"public class Mod {","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Mod codes must be in the form of 2-3 Capitalised characters, 4 \"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"            + \"digits then an optional extra capitalised character.\";","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    public static final String DEFAULT_GROUP_MESSAGE_CONSTRAINTS \u003d \"Default group titles within a group must not be \"","lastModifiedDate":"2022-03-18"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"            + \"blank\";","lastModifiedDate":"2022-03-18"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     * The first 2-3 characters of the module code must be capital letters,","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     * followed by 4 digits, and an optional capital letter.","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    public static final String MOD_VALIDATION_REGEX \u003d \"^[A-Z]{2,3}[0-9]{4}[A-Z]?\";","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    public static final String GROUP_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    private String defaultGroup;","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"     * Constructs an {@code Mod}.","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * @param mod A valid mod.","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    public Mod(String mod) {","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        checkArgument(isValidMod(mod), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        value \u003d mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"        this.defaultGroup \u003d null;","lastModifiedDate":"2022-03-18"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"     * Constructor for the {@code Mod} class.","lastModifiedDate":"2022-03-18"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"     * @param mod The module.","lastModifiedDate":"2022-03-18"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"     * @param defaultGrp The default group.","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"    public Mod(String mod, String defaultGrp) {","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(defaultGrp);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        checkArgument(isValidDefaultGroup(defaultGrp), DEFAULT_GROUP_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        value \u003d mod;","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        this.defaultGroup \u003d defaultGrp;","lastModifiedDate":"2022-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if a given string is a valid mod.","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    public static boolean isValidMod(String test) {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"        return test.matches(MOD_VALIDATION_REGEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    public static boolean isValidDefaultGroup(String test) {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"        return test.matches(GROUP_VALIDATION_REGEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"    public String getDefaultGroup() {","lastModifiedDate":"2022-03-18"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"        return defaultGroup;","lastModifiedDate":"2022-03-18"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"    public void setDefaultGroup(String defaultGroup) {","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        this.defaultGroup \u003d defaultGroup;","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof Mod // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 value.equals(((Mod) other).value)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FestiveCat":17,"-":39,"kxshxsh":36}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":" * Represents a Person\u0027s name in the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"FestiveCat":1,"-":57,"s7manth":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.commons.util.StringBuilderUtil;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":" * Represents a Person in the class group.","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    private final StudentNumber studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    private Group group;","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"zawedcvg"},"content":"    private final Mod mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"    public Person(Name name, StudentNumber studentNumber, Email email, Mod mod, Group group, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        requireAllNonNull(name, studentNumber, email, mod, group, tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"zawedcvg"},"content":"        this.mod \u003d mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"    public StudentNumber getStudentNumber() {","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"        return studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"zawedcvg"},"content":"    public Mod getMod() {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"zawedcvg"},"content":"        return mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"zawedcvg"},"content":"    public Group getGroup() {","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"zawedcvg"},"content":"        return group;","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"     * Sets the group allocation for the {@code Person}.","lastModifiedDate":"2022-03-18"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"     * @param groupTitle the String with the desired group title.","lastModifiedDate":"2022-03-18"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"    public void setGroup(String groupTitle) {","lastModifiedDate":"2022-03-18"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"        this.group \u003d new Group(groupTitle);","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"kxshxsh"},"content":"                \u0026\u0026 otherPerson.getStudentNumber().equals(getStudentNumber())","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"kxshxsh"},"content":"                \u0026\u0026 otherPerson.getGroup().equals(getGroup())","lastModifiedDate":"2022-03-11"},{"lineNumber":110,"author":{"gitId":"zawedcvg"},"content":"                \u0026\u0026 otherPerson.getMod().equals(getMod())","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"kxshxsh"},"content":"        return Objects.hash(name, studentNumber, email, mod, group, tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"s7manth"},"content":"        final StringBuilderUtil stringBuilderUtil \u003d StringBuilderUtil.getInstance();","lastModifiedDate":"2022-03-06"},{"lineNumber":123,"author":{"gitId":"kxshxsh"},"content":"        stringBuilderUtil.appendAll(getName(), \"; StudentNumber: \", getStudentNumber(),","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"s7manth"},"content":"                \"; Email: \", getEmail(),","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"kxshxsh"},"content":"                \"; Group: \", getGroup(),","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"zawedcvg"},"content":"                \"; Mod: \", getMod());","lastModifiedDate":"2022-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"s7manth"},"content":"            stringBuilderUtil.append(\"; Tags: \");","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"s7manth"},"content":"            tags.forEach(stringBuilderUtil::append);","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"s7manth"},"content":"        return stringBuilderUtil.getFormattedOutput();","lastModifiedDate":"2022-03-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":100,"s7manth":7,"kxshxsh":21,"zawedcvg":8}},{"path":"src/main/java/seedu/address/model/person/StudentNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":" * Represents a Person\u0027s student number in the class group.","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentNumber(String)}","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"public class StudentNumber {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"            \"Student Numbers should begin with the letter \u0027A\u0027, followed by 7 digits\"","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"                    + \" and finally concluded by one letter.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[aA][0-9]{7}[a-zA-Z]\";","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    public final String value;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"     * Constructs a {@code StudentNumber}.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"     * @param studentNumber A valid student number.","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    public StudentNumber(String studentNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        checkArgument(isValidStudentNumber(studentNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        value \u003d studentNumber.toUpperCase();","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"     * Returns true if a given string is a valid student number.","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"    public static boolean isValidStudentNumber(String test) {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"    public String toString() {","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"        return value;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"                || (other instanceof StudentNumber // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"                \u0026\u0026 value.equals(((StudentNumber) other).value)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"kxshxsh":54}},{"path":"src/main/java/seedu/address/model/person/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-18"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-03-18"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-03-18"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"public class UniqueModuleList implements Iterable\u003cMod\u003e {","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    private static final ArrayList\u003cMod\u003e internalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"     * Returns true if the list contains a module with the same code as the given argument.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    public boolean contains(String moduleCode) {","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"        return internalList.stream().anyMatch(x -\u003e x.value.equalsIgnoreCase(moduleCode));","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-18"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"     * Retrieves the module.","lastModifiedDate":"2022-03-18"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"     * @param mod The module to be retrieved.","lastModifiedDate":"2022-03-18"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"     * @return An optional module.","lastModifiedDate":"2022-03-18"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-18"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"    public Optional\u003cMod\u003e retrieveMod(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"        String modCode \u003d mod.value;","lastModifiedDate":"2022-03-18"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        return internalList.stream().filter(x -\u003e x.value.equalsIgnoreCase(modCode)).findAny();","lastModifiedDate":"2022-03-18"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"    public void add(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"        if (contains(mod.value)) {","lastModifiedDate":"2022-03-18"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"        internalList.add(mod);","lastModifiedDate":"2022-03-18"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"    public void remove(Mod toRemove) {","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"    public Iterator\u003cMod\u003e iterator() {","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"        return (other instanceof UniqueModuleList); // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"    public ArrayList\u003cMod\u003e getList() {","lastModifiedDate":"2022-03-18"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"        return internalList;","lastModifiedDate":"2022-03-18"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-18"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"kxshxsh":78}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":" * persons uses Person#isSamePerson(Person) for equality to ensure that the person being added or updated is","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object)","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":" * to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":134,"s7manth":3}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"kxshxsh":7}},{"path":"src/main/java/seedu/address/model/person/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"public class ModuleNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"    public ModuleNotFoundException() {","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"        super(\"Error 404, module not found!\");","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"kxshxsh":10}},{"path":"src/main/java/seedu/address/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-06"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"    public PersonNotFoundException() {","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"        super(\"Error 404, person not found!\");","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"    }","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"}","lastModifiedDate":"2022-03-06"}],"authorContributionMap":{"-":5,"s7manth":5}},{"path":"src/main/java/seedu/address/model/person/predicates/CompoundedPredicates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"public class CompoundedPredicates extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"    private List\u003cPersonContainsKeywordsPredicate\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public CompoundedPredicates() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        super(null);","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    public void addPredicate(PersonContainsKeywordsPredicate pred) {","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        predicateList.add(pred);","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        // test each predicate, then accumulate them","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        Stream\u003cBoolean\u003e boolStrm \u003d predicateList.stream().map(pred -\u003e pred.test(person));","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        return boolStrm.reduce(true, (next, acc) -\u003e acc \u0026\u0026 next);","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        return predicateList.isEmpty();","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof CompoundedPredicates // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 predicateList.equals(((CompoundedPredicates) other).predicateList)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":37}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class EmailContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"        super(keywords);","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseSubstring(person.getEmail().toString(), keyword));","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":30}},{"path":"src/main/java/seedu/address/model/person/predicates/GroupContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zawedcvg"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"zawedcvg"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"zawedcvg"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"zawedcvg"},"content":" * Tests that a {@code Person}\u0027s {@code Group} matches any of the keywords given.","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"zawedcvg"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"zawedcvg"},"content":"public class GroupContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"zawedcvg"},"content":"    public GroupContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"zawedcvg"},"content":"        super(keywords);","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"zawedcvg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"zawedcvg"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"zawedcvg"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"zawedcvg"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"zawedcvg"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseSubstring(person.getGroup().toString(), keyword));","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"zawedcvg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"zawedcvg"},"content":"    @Override","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"zawedcvg"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"zawedcvg"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"zawedcvg"},"content":"                || (other instanceof GroupContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"zawedcvg"},"content":"                \u0026\u0026 keywords.equals(((GroupContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"zawedcvg"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"zawedcvg"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"zawedcvg":30}},{"path":"src/main/java/seedu/address/model/person/predicates/ModContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * Tests that a {@code Person}\u0027s {@code Mod} matches any of the keywords given.","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class ModContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    public ModContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"        super(keywords);","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseSubstring(person.getMod().toString(),","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"                        keyword));","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof ModContainsKeywordsPredicate //","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"                // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 keywords.equals(((ModContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":32}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class NameContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"        super(keywords);","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"FestiveCat":4,"-":26}},{"path":"src/main/java/seedu/address/model/person/predicates/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public abstract class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    protected final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    public PersonContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":17}},{"path":"src/main/java/seedu/address/model/person/predicates/StudentNumberContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":" * Tests that a {@code Person}\u0027s {@code StudentNumber} matches any of the keywords given.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"public class StudentNumberContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"    public StudentNumberContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"        super(keywords);","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"                .anyMatch(keyword -\u003e","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"                        StringUtil.containsWordIgnoreCaseSubstring(person.getStudentNumber().value, keyword));","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"                || (other instanceof StudentNumberContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"                \u0026\u0026 keywords.equals(((StudentNumberContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"kxshxsh":31}},{"path":"src/main/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class TagsContainsKeywordsPredicate extends PersonContainsKeywordsPredicate {","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"        super(keywords);","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCaseSubstring(person.getTags().toString(),","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"                        \"[\" + keyword + \"]\"));","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-11"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":31}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":" * Represents a Tag in the class group that is attributable to a {@code Person}.","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"s7manth":1}},{"path":"src/main/java/seedu/address/model/tasks/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.time.Month;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" * Represents a Task\u0027s Deadline in the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline}","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"public class Deadline implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"            \"Deadlines should be in the format YYYY-MM-DDTHH:mm. Do not replace the \\\"T\\\". Example: 2022-03-21T19:38\";","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    /*","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     * Deadlines should be in the format YYYY-MM-DD HH:mm exactly.","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     * YYYY can be any 4-digit number","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     * MM can only be 00 to 19","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     * DD can only be 00 to 39","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     * HH can only be 00 to 29","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     * mm can only be 00 to 59","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     * The rest of the spots must be dashes (-) or colons (:) or the character T","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     * Further validation is needed and done for the numerical ranges.","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]{4}-[0-1][0-9]-[0-3][0-9][T][0-2][0-9]:[0-5][0-9]\";","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    public final LocalDateTime deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a {@code Deadline}","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * @param year a valid year","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * @param month a valid month","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * @param day a valid day","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * @param hour a valid hour in 24 hour clock","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     * @param minute a valid minute","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"    public Deadline(int year, int month, int day, int hour, int minute) {","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        checkArgument(isValidDeadline(year, month, day, hour, minute), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"     * @param deadline the deadline used.","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        assert(isValidDeadline(deadline));","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        int[] parsed \u003d splitDeadline(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d LocalDateTime.of(parsed[0], parsed[1], parsed[2], parsed[3], parsed[4]);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if a given input is a valid deadline.","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"     * @param year a year","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"     * @param month a month","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"     * @param day a day","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"     * @param hour an hour in 24 hour clock","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"     * @param minute a minute","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    public static boolean isValidDeadline(int year, int month, int day, int hour, int minute) {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        boolean isValidYear \u003d year \u003e 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        if (!isValidYear) {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"            return false; // these are scattered throughout to short circuit","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"        // if is end of century, check if it is divisible by 400. else, check if divisible by 4","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        boolean isLeap \u003d year % 100 \u003d\u003d 0","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"                ? year % 400 \u003d\u003d 0","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"                : year % 4 \u003d\u003d 0;","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        boolean isValidMonth \u003d month \u003e 0 \u0026\u0026 month \u003c 13; // months 1 to 12 only","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        if (!isValidMonth) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        boolean isValidDay \u003d day \u003e 0 \u0026\u0026 (isLeap","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"                ? day \u003c\u003d Month.of(month).maxLength()","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"                : day \u003c\u003d Month.of(month).minLength());","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        if (!isValidDay) {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        boolean isValidHour \u003d hour \u003e -1 \u0026\u0026 hour \u003c 24; // 0 to 23","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"        if (!isValidHour) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"        boolean isValidMinute \u003d minute \u003e -1 \u0026\u0026 minute \u003c 60; //0 to 59","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"        if (!isValidMinute) {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"        return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"     * Checks if a given {@code String deadline} is valid.","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"     * @param deadline the deadline to check","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"     * @return true if the deadline is valid","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    public static boolean isValidDeadline(String deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        if (!isCorrectFormat(deadline)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"        int[] parsed \u003d splitDeadline(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"        return isValidDeadline(parsed[0], parsed[1], parsed[2], parsed[3], parsed[4]);","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"     * Splits a given {@code String deadline} into the individual year, month, days, hours and minutes.","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"     * @param deadline a correctly-formatted deadline.","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"     * @return an array consisting of the year, month, days, hours and minutes.","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"    private static int[] splitDeadline(String deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"        assert(isCorrectFormat(deadline));","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"        String[] split \u003d deadline.split(\"T\"); //0 is date, 1 is time","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"        String[] splitDate \u003d split[0].split(\"-\");","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"        String[] splitTime \u003d split[1].split(\":\");","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"        return new int[] {","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"                Integer.parseInt(splitDate[0]),","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"                Integer.parseInt(splitDate[1]),","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"                Integer.parseInt(splitDate[2]),","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"                Integer.parseInt(splitTime[0]),","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"                Integer.parseInt(splitTime[1]),","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"        };","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"     * Checks if the given {@code String deadline} is in the correct format of","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"     * {@code YYYY-MM-DDTHH:mm}, Where Y \u003d year, M \u003d month, D \u003d days, H \u003d hour as in 24hour,","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"     * m \u003d minute. All these should be digits.","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"     * T should remain as a constant and should not be changed or replaced.","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"     * The dashes (-), spaces and colon should also be in the correct locations.","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"     * @param deadline the given deadline to check","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"     * @return true if the deadline is in the correct format.","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"    private static boolean isCorrectFormat(String deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"        return deadline.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"        return deadline.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"    public int compareTo(Deadline other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"        return deadline.compareTo(other.deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"FestiveCat"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"        return deadline.hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":174,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":175}},{"path":"src/main/java/seedu/address/model/tasks/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" * Represents a Task\u0027s Deadline in the task manager.","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDesc(String)}","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"public class Description {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    /*","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    public final String desc;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public Description(String description) {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        checkArgument(isValidDesc(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        desc \u003d description;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    public static boolean isValidDesc(String test) {","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        return desc;","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 desc.equals(((Description) other).desc)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        return desc.hashCode();","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":59}},{"path":"src/main/java/seedu/address/model/tasks/PriorityTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":" * Wraps all data at the task list level","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":" * Duplicates are not allowed (by equals comparison)","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"public class PriorityTaskList implements ReadOnlyTaskList {","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    /** The internal representation of the task list is a PQ.*/","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    private PriorityQueue\u003cTask\u003e pq \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a PriorityTaskList. This should be used as the default.","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    public PriorityTaskList() {}","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a PriorityTaskList with a given PriorityQueue to copy from.","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * @param pq the PQ to copy from.","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    public PriorityTaskList(PriorityQueue\u003cTask\u003e pq) {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        this.pq \u003d new PriorityQueue\u003c\u003e(pq);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a PriorityTaskList with a given ReadOnlyTaskList to copy from.","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * Note that Since only PriorityTaskList implements ReadOnlyTaskList, PriorityTaskList","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * is the only class that fits the requirements, and hence only one instanceof check is done.","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * @param other the ReadOnlyTaskList to copy from.","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    public PriorityTaskList(ReadOnlyTaskList other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        Collection\u003cTask\u003e otherList \u003d other.getInternalList();","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        if (otherList instanceof PriorityQueue\u003c?\u003e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"            pq \u003d (PriorityQueue\u003cTask\u003e) otherList;","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        } else {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"            throw new RuntimeException(\"Unsupported Task List\");","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"     * Resets the existing data of this {@code PriorityTaskList} with {@code newData}.","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        pq \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        pq.addAll(newData.getInternalList());","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    public boolean add(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        if (this.contains(task)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        pq.add(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    public boolean remove(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        if (!pq.remove(task)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"    public boolean remove(int index) {","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        if (index \u003e pq.size() || index \u003c 0) {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        Iterator\u003cTask\u003e iterator \u003d pq.iterator();","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        Task toRemove \u003d iterator.next();","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"            toRemove \u003d iterator.next();","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"        pq.remove(toRemove);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"        return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"    public boolean contains(Task task) {","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"        return pq.stream().anyMatch(task::equals);","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"    public Task get(int index) {","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"        if (index \u003e pq.size() || index \u003c 0) {","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"            return null;","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"        Iterator\u003cTask\u003e iterator \u003d pq.iterator();","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"        Task toReturn \u003d iterator.next();","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"        for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"            toReturn \u003d iterator.next();","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"        return toReturn;","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"    public ReadOnlyTaskList getCopy() {","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"        return new PriorityTaskList(this.pq);","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"    public Collection\u003cTask\u003e getInternalList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"        return pq;","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"    public int size() {","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"        return pq.size();","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"            return true;","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList that \u003d (PriorityTaskList) o;","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"        return pq.stream().allMatch(that::contains) \u0026\u0026 that.pq.stream().allMatch(this::contains);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"        return Objects.hash(pq);","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":143}},{"path":"src/main/java/seedu/address/model/tasks/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" * Unmodifiable view of a task list","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"     * @param task the task to add.","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"     * @return true if added successfully.","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    boolean add(Task task);","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     * Removes {@code task} from the task list if it is present.","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"     * @param task the task to delete.","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     * @return true if removed successfully.","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    boolean remove(Task task);","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     * Removes an item at the specified {@code index}.","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     * @param index the index, 0 based.","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * @return true if removed successfully.","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    boolean remove(int index);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     * Checks if the current tasklist contains the specified task. Note that this method","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * relies on {@code Task}\u0027s equals method.","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     * @param task the task to check for","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * @return true if the current tasklist does contain the {@code task}","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    boolean contains(Task task);","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"     * Gets the task with the index specified at {@code index}.","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"     * @param index the index, 0 based.","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    Task get(int index);","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"     * Gets a copy of this object to prevent unintended mutation.","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    ReadOnlyTaskList getCopy();","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    Collection\u003cTask\u003e getInternalList();","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    int size();","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":63}},{"path":"src/main/java/seedu/address/model/tasks/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * Represents a Task in the Task List.","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    private final Description description;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    private final Deadline deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a Task. All fields must not be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public Task(Description description, Deadline deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        requireAllNonNull(description, deadline);","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        return description;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        return deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public int compareTo(Task other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        return this.deadline.compareTo(other.deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"                || (other instanceof Task // instanceof handles nulls","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 description.equals(((Task) other).description)","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"                \u0026\u0026 deadline.equals(((Task) other).deadline)); // state check","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        return Objects.hash(description, deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    public String toString() {","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        return String.format(\"%s, by %s\", description, deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":54}},{"path":"src/main/java/seedu/address/model/tasks/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks.exceptions;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" * description and deadline).","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":11}},{"path":"src/main/java/seedu/address/model/tasks/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks.exceptions;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"        super(\"Error 404, task not found!\");","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":" * Contains utility methods for populating {@code ContactList} with sample data.","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"Alex Yeoh\"), new StudentNumber(\"A8743880A\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"zawedcvg"},"content":"            new Mod(\"CS2030S\"), new Group(\"T01\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"Bernice Yu\"), new StudentNumber(\"A9927275B\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"zawedcvg"},"content":"                new Mod(\"CS2030S\"), new Group(\"T01\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new StudentNumber(\"A9321028C\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"                    new Email(\"charlotte@example.com\"), new Mod(\"CS2030S\"), new Group(\"T02\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"David Li\"), new StudentNumber(\"A9103128D\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"zawedcvg"},"content":"                new Mod(\"CS2030S\"), new Group(\"T03\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new StudentNumber(\"A9249202E\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"zawedcvg"},"content":"                new Mod(\"CS2030S\"), new Group(\"T02\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new StudentNumber(\"A9262441F\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"zawedcvg"},"content":"                new Mod(\"CS2030S\"), new Group(\"T01\"),","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"    public static ReadOnlyContactList getSampleContactList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"        ContactList sampleAb \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        return new Task[] {","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"            new Task(new Description(\"Check CS2100 Assignment 1 submissions\"), new Deadline(\"2022-03-21 18:16\")),","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"            new Task(new Description(\"Mark CS2030S Lab 6\"), new Deadline(\"2022-03-27 23:59\"))","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        };","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList sampleAb \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        for (Task task : getSampleTasks()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"            sampleAb.add(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"        return sampleAb;","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"FestiveCat":19,"-":41,"s7manth":5,"kxshxsh":8,"zawedcvg":7}},{"path":"src/main/java/seedu/address/storage/ContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":" * Represents a storage for {@link ContactList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"s7manth"},"content":"public interface ContactListStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"     * Returns ContactList data as a {@link ReadOnlyContactList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"     * @see #getContactListFilePath()","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"     * Saves the given {@link ReadOnlyContactList} to the storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"     * @param contactList cannot be null.","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"     * @see #saveContactList(ReadOnlyContactList)","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"s7manth"},"content":"    void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":32,"s7manth":14}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"    private final String studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"    private final String group;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zawedcvg"},"content":"    private final String mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"student number\") String studentNumber,","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"zawedcvg"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"mod\") String mod,","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"                             @JsonProperty(\"group\") String group,","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"        this.studentNumber \u003d studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"        this.group \u003d group;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zawedcvg"},"content":"        this.mod \u003d mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"        studentNumber \u003d source.getStudentNumber().value;","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"        group \u003d source.getGroup().value;","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"zawedcvg"},"content":"        mod \u003d source.getMod().value;","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"        if (studentNumber \u003d\u003d null) {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentNumber.class.getSimpleName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"kxshxsh"},"content":"        if (!StudentNumber.isValidStudentNumber(studentNumber)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"            throw new IllegalValueException(StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"        final StudentNumber modelStudentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"zawedcvg"},"content":"        if (mod \u003d\u003d null) {","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"zawedcvg"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Mod.class.getSimpleName()));","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"zawedcvg"},"content":"        if (!Mod.isValidMod(mod)) {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"zawedcvg"},"content":"            throw new IllegalValueException(Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"zawedcvg"},"content":"        final Mod modelMod \u003d new Mod(mod);","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"kxshxsh"},"content":"        if (group \u003d\u003d null) {","lastModifiedDate":"2022-03-11"},{"lineNumber":112,"author":{"gitId":"kxshxsh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Group.class.getSimpleName()));","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":114,"author":{"gitId":"kxshxsh"},"content":"        if (!Group.isValidAddress(group)) {","lastModifiedDate":"2022-03-11"},{"lineNumber":115,"author":{"gitId":"kxshxsh"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":117,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"kxshxsh"},"content":"        final Group modelGroupId \u003d new Group(group);","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"kxshxsh"},"content":"        return new Person(modelName, modelStudentNumber, modelEmail, modelMod, modelGroupId, modelTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"zawedcvg"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":89,"kxshxsh":24,"zawedcvg":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    private final String description;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    private final String deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String description,","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"                           @JsonProperty(\"deadline\") String deadline) {","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d source.getDescription().desc;","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d source.getDeadline().deadline.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        if (!Description.isValidDesc(description)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        final Description modelDesc \u003d new Description(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName()));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        return new Task(modelDesc, modelDeadline);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":68}},{"path":"src/main/java/seedu/address/storage/JsonContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":" * A class to access ContactList data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"public class JsonContactListStorage implements ContactListStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactListStorage.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"    public JsonContactListStorage(Path filePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"        return readContactList(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"     * Similar to {@link #readContactList()}.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"s7manth"},"content":"        Optional\u003cJsonSerializableContactList\u003e jsonContactList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-06"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"                filePath, JsonSerializableContactList.class);","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"        if (!jsonContactList.isPresent()) {","lastModifiedDate":"2022-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"            return Optional.of(jsonContactList.get().toModelType());","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"s7manth"},"content":"        saveContactList(contactList, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"s7manth"},"content":"     * Similar to {@link #saveContactList(ReadOnlyContactList)}.","lastModifiedDate":"2022-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"s7manth"},"content":"    public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"s7manth"},"content":"        requireNonNull(contactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"s7manth"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableContactList(contactList), filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":60,"s7manth":20}},{"path":"src/main/java/seedu/address/storage/JsonSerializableContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":" * An Immutable ContactList that is serializable to JSON format.","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"@JsonRootName(value \u003d \"contactlist\")","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"class JsonSerializableContactList {","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"     * Constructs a {@code JsonSerializableContactList} with the given persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"    public JsonSerializableContactList(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"    public JsonSerializableContactList() {}","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"s7manth"},"content":"     * Converts a given {@code ReadOnlyContactList} into this class for Jackson use.","lastModifiedDate":"2022-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactList}.","lastModifiedDate":"2022-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"    public JsonSerializableContactList(ReadOnlyContactList source) {","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"     * Converts this contact list into the model\u0027s {@code ContactList} object.","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"s7manth"},"content":"    public ContactList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-06"},{"lineNumber":52,"author":{"gitId":"s7manth"},"content":"        ContactList contactList \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"            if (contactList.hasPerson(person)) {","lastModifiedDate":"2022-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"s7manth"},"content":"            contactList.addPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"s7manth"},"content":"        return contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"FestiveCat":2,"-":44,"s7manth":14,"kxshxsh":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":" * An Immutable TaskList that is serializable to JSON format.","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Task list contains duplicate task(s).\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given tasks.","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * Converts a given {@code ReadOnlyContactList} into this class for Jackson use.","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        Collection\u003cTask\u003e srcCollection \u003d source.getInternalList();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        tasks.addAll(srcCollection.stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"     * Converts this task list into the model\u0027s {@code PriorityTaskList} object.","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    public PriorityTaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList priorityTaskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"            if (priorityTaskList.contains(task)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"            }","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"            priorityTaskList.add(task);","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        return priorityTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":61}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactListStorage.class);","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    private Path filePath;","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        return filePath;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"     * Similar to {@link #readTaskList()}.","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        if (!jsonTaskList.isPresent()) {","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"            return Optional.empty();","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        requireNonNull(taskList);","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":78}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"public interface Storage extends ContactListStorage, UserPrefsStorage, TaskListStorage {","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"FestiveCat":10,"-":28,"s7manth":4}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":" * Manages storage of ContactList data in local storage.","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    private ContactListStorage contactListStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    private TaskListStorage taskListStorage;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     * Creates a {@code StorageManager} with the given {@code ContactListStorage}, {@code UserPrefStorage} and {@code","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     * taskListStorage}","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    public StorageManager(ContactListStorage contactListStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"                          TaskListStorage taskListStorage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"        this.contactListStorage \u003d contactListStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"s7manth"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"s7manth"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":58,"author":{"gitId":"s7manth"},"content":"        return contactListStorage.getContactListFilePath();","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"s7manth"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"        return readContactList(contactListStorage.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"s7manth"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"s7manth"},"content":"        return contactListStorage.readContactList(filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"s7manth"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"s7manth"},"content":"        saveContactList(contactList, contactListStorage.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"    public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"s7manth"},"content":"        contactListStorage.saveContactList(contactList, filePath);","lastModifiedDate":"2022-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"        this.saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":35,"-":61,"s7manth":15}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":" * Represents a storage for {@link PriorityTaskList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"public interface TaskListStorage {","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"     * Returns Task list data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"     * @see #getTaskListFilePath()","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     * Saves the given {@link ReadOnlyTaskList} to the storage.","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"     * @param contactList cannot be null.","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    void saveTaskList(ReadOnlyTaskList contactList) throws IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     * @see #saveTaskList(ReadOnlyTaskList)","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    void saveTaskList(ReadOnlyTaskList contactList, Path filePath) throws IOException;","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"FestiveCat":45}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"Cyolune"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"Cyolune"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"Cyolune"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Cyolune"},"content":"import seedu.address.history.InputHistory;","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"Cyolune"},"content":"import seedu.address.history.InputHistoryManager;","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"Cyolune"},"content":"    private final InputHistory inputHistory \u003d new InputHistoryManager();","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"Cyolune"},"content":"    // Define the up key event filter and its behaviour.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"Cyolune"},"content":"    private final EventHandler\u003cKeyEvent\u003e upFilter \u003d keyEvent -\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"Cyolune"},"content":"        if (keyEvent.getCode() !\u003d KeyCode.UP) {","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"Cyolune"},"content":"            return;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"Cyolune"},"content":"        // gets the last user input, then fills the text field with it","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"Cyolune"},"content":"        String prevUserInput \u003d inputHistory.getPreviousUserInput();","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"Cyolune"},"content":"        commandTextField.setText(prevUserInput);","lastModifiedDate":"2022-03-11"},{"lineNumber":40,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"Cyolune"},"content":"        // consumes the up keypress event","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"Cyolune"},"content":"        keyEvent.consume();","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"Cyolune"},"content":"    };","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"Cyolune"},"content":"    // Define the down key event filter and its behaviour.","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"Cyolune"},"content":"    private final EventHandler\u003cKeyEvent\u003e downFilter \u003d keyEvent -\u003e {","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"Cyolune"},"content":"        if (keyEvent.getCode() !\u003d KeyCode.DOWN) {","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"Cyolune"},"content":"            return;","lastModifiedDate":"2022-03-11"},{"lineNumber":49,"author":{"gitId":"Cyolune"},"content":"        }","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":51,"author":{"gitId":"Cyolune"},"content":"        // gets the last user input, then fills the text field with it","lastModifiedDate":"2022-03-11"},{"lineNumber":52,"author":{"gitId":"Cyolune"},"content":"        String prevUserInput \u003d inputHistory.getNextUserInput();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"Cyolune"},"content":"        commandTextField.setText(prevUserInput);","lastModifiedDate":"2022-03-11"},{"lineNumber":54,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"Cyolune"},"content":"        // consumes the up keypress event","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"Cyolune"},"content":"        keyEvent.consume();","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"Cyolune"},"content":"    };","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2022-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2022-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2022-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2022-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-03-11"},{"lineNumber":67,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"Cyolune"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, upFilter);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"Cyolune"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, downFilter);","lastModifiedDate":"2022-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":78,"author":{"gitId":"Cyolune"},"content":"        inputHistory.storeInput(commandText);","lastModifiedDate":"2022-03-11"},{"lineNumber":79,"author":{"gitId":"Cyolune"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"Cyolune":40,"-":85}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"s7manth"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":195,"s7manth":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ContactList level 4\u003c/a\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    private Label studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    private Label mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"zawedcvg"},"content":"    private Label group;","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"zawedcvg"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        studentNumber.setText(person.getStudentNumber().value);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        mod.setText(person.getMod().value);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"zawedcvg"},"content":"        group.setText(person.getGroup().value);","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"FestiveCat":2,"-":72,"s7manth":1,"kxshxsh":2,"zawedcvg":3}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/contact_list_32.png\";","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"s7manth":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"         title\u003d\"Contact List App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"    \u003cImage url\u003d\"@/images/contact_list_32.png\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"FestiveCat":1,"-":58,"s7manth":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"      \u003cLabel fx:id\u003d\"studentNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentNumber\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"      \u003cLabel fx:id\u003d\"mod\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mod\" /\u003e","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"zawedcvg"},"content":"      \u003cLabel fx:id\u003d\"group\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$group\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":1,"-":34,"kxshxsh":1,"zawedcvg":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"s7manth"},"content":"        assertNotNull(AppUtil.getImage(\"/images/contact_list_32.png\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"s7manth":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"import seedu.address.storage.JsonContactListStorage;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"zawedcvg"},"content":"                new JsonContactListStorage(temporaryFolder.resolve(\"data/contactlist.json\"));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"data/tasklist.json\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        StorageManager storage \u003d new StorageManager(contactListStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"        // Setup LogicManager with JsonContactListIoExceptionThrowingStub","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"s7manth"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"s7manth"},"content":"                new JsonContactListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionContactList.json\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        JsonTaskListStorage taskListStorage \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"                new JsonTaskListStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        StorageManager storage \u003d new StorageManager(contactListStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + STUDENT_NUMBER_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_AMY + MOD_DESC_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"s7manth"},"content":"    private static class JsonContactListIoExceptionThrowingStub extends JsonContactListStorage {","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"s7manth"},"content":"        private JsonContactListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"s7manth"},"content":"        public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"FestiveCat":9,"-":145,"kxshxsh":2,"s7manth":9,"zawedcvg":4}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"        Person personInList \u003d model.getContactList().getPersonList().get(0);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"FestiveCat":3,"-":41,"s7manth":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"    protected static class ModelStub implements Model {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"s7manth"},"content":"        public Path getContactListFilePath() {","lastModifiedDate":"2022-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"s7manth"},"content":"        public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"s7manth"},"content":"        public void setContactList(ReadOnlyContactList newData) {","lastModifiedDate":"2022-03-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"s7manth"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":175,"author":{"gitId":"kxshxsh"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":176,"author":{"gitId":"kxshxsh"},"content":"        public boolean isDefaultPresent(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":177,"author":{"gitId":"kxshxsh"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":178,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":179,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":180,"author":{"gitId":"kxshxsh"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":181,"author":{"gitId":"kxshxsh"},"content":"        public boolean doesModExist(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":182,"author":{"gitId":"kxshxsh"},"content":"            return false;","lastModifiedDate":"2022-03-18"},{"lineNumber":183,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":184,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":185,"author":{"gitId":"kxshxsh"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":186,"author":{"gitId":"kxshxsh"},"content":"        public String retrievePrevDefault(Mod mod) {","lastModifiedDate":"2022-03-18"},{"lineNumber":187,"author":{"gitId":"kxshxsh"},"content":"            return null;","lastModifiedDate":"2022-03-18"},{"lineNumber":188,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":189,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":190,"author":{"gitId":"kxshxsh"},"content":"        @Override","lastModifiedDate":"2022-03-18"},{"lineNumber":191,"author":{"gitId":"kxshxsh"},"content":"        public void setDefaultGroup(Mod mod, String value) {","lastModifiedDate":"2022-03-18"},{"lineNumber":192,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"FestiveCat"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"FestiveCat"},"content":"            return false;","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-18"},{"lineNumber":200,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"FestiveCat"},"content":"        public void deleteTask(Task target) {","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":204,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":205,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":206,"author":{"gitId":"FestiveCat"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":207,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"kxshxsh"},"content":"        }","lastModifiedDate":"2022-03-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"FestiveCat"},"content":"    protected static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"FestiveCat"},"content":"    protected static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"s7manth"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"s7manth"},"content":"            return new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"FestiveCat":38,"-":186,"s7manth":8,"kxshxsh":21}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"s7manth"},"content":"    public void execute_emptyContactList_success() {","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"    public void execute_nonEmptyContactList_success() {","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        Model model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"        expectedModel.setContactList(new ContactList());","lastModifiedDate":"2022-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"FestiveCat":3,"-":25,"s7manth":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"    public static final String VALID_STUDENT_NUMBER_AMY \u003d \"A0123456B\";","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"    public static final String VALID_STUDENT_NUMBER_BOB \u003d \"A1234567Z\";","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"zawedcvg"},"content":"    public static final String VALID_GROUP_BOB \u003d \"T01\";","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zawedcvg"},"content":"    public static final String VALID_GROUP_AMY \u003d \"T02\";","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"zawedcvg"},"content":"    public static final String VALID_MOD_AMY \u003d \"CS1101S\";","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"zawedcvg"},"content":"    public static final String VALID_MOD_BOB \u003d \"GER1000\";","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"zawedcvg"},"content":"    public static final String GROUP_DESC_BOB \u003d \" \" + PREFIX_GROUP + VALID_GROUP_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":47,"author":{"gitId":"zawedcvg"},"content":"    public static final String GROUP_DESC_AMY \u003d \" \" + PREFIX_GROUP + VALID_GROUP_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    public static final String STUDENT_NUMBER_DESC_AMY \u003d \" \" + PREFIX_STUDENT_NUMBER + VALID_STUDENT_NUMBER_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"    public static final String STUDENT_NUMBER_DESC_BOB \u003d \" \" + PREFIX_STUDENT_NUMBER + VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"zawedcvg"},"content":"    public static final String MOD_DESC_AMY \u003d \" \" + PREFIX_MOD + VALID_MOD_AMY;","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"zawedcvg"},"content":"    public static final String MOD_DESC_BOB \u003d \" \" + PREFIX_MOD + VALID_MOD_BOB;","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"    public static final String INVALID_STUDENT_NUMBER_DESC \u003d \" \" + PREFIX_STUDENT_NUMBER + \"0123456A\"; // beginning \"A\"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"    // is compulsory in student numbers","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"zawedcvg"},"content":"    public static final String INVALID_MOD_DESC \u003d \" \" + PREFIX_MOD; // empty string not allowed for mods","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALID_DESCRIPTION_HOMEWORK \u003d \"Do homework\";","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALID_DESCRIPTION_ASSIGNMENT \u003d \"Check assignment submissions\";","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALID_DEADLINE_HOMEWORK \u003d \"2022-03-21T21:24\";","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"    public static final String VALID_DEADLINE_ASSIGNMENT \u003d \"1234-05-06T07:08\";","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"    public static final String DEADLINE_HOMEWORK \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"    public static final String DEADLINE_ASSIGNMENT \u003d \" \" + PREFIX_DEADLINE + VALID_DEADLINE_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"    public static final String INVALID_DESCRIPTION \u003d \"\u0026\u0026\"; // symbols not allowed","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    public static final String INVALID_DEADLINE \u003d \"1234-05-06T00:08\"; // Cannot have 0th hour.","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"                .withStudentNumber(VALID_STUDENT_NUMBER_AMY).withEmail(VALID_EMAIL_AMY).withMod(VALID_MOD_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"                .withStudentNumber(VALID_STUDENT_NUMBER_BOB).withEmail(VALID_EMAIL_BOB).withMod(VALID_MOD_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"s7manth"},"content":"     * - the contact list, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"s7manth"},"content":"        ContactList expectedContactList \u003d new ContactList(actualModel.getContactList());","lastModifiedDate":"2022-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":128,"author":{"gitId":"s7manth"},"content":"        assertEquals(expectedContactList, actualModel.getContactList());","lastModifiedDate":"2022-03-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"s7manth"},"content":"     * {@code model}\u0027s contact list.","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"FestiveCat":11,"-":108,"kxshxsh":9,"s7manth":5,"zawedcvg":12}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"s7manth"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"s7manth"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactList().getPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"FestiveCat":16,"-":91,"s7manth":3}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"                new ContactList(model.getContactList()), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withStudentNumber(VALID_STUDENT_NUMBER_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"                .withStudentNumber(VALID_STUDENT_NUMBER_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"                new ContactList(model.getContactList()), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"                new ContactList(model.getContactList()), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"                new ContactList(model.getContactList()), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"s7manth"},"content":"        // edit person in filtered list into a duplicate in contact list","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"        Person personInList \u003d model.getContactList().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"s7manth"},"content":"     * but smaller than size of contact list","lastModifiedDate":"2022-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"s7manth"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2022-03-07"},{"lineNumber":145,"author":{"gitId":"s7manth"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactList().getPersonList().size());","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"FestiveCat":29,"-":140,"kxshxsh":3,"s7manth":6}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"        // different student number -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStudentNumber(VALID_STUDENT_NUMBER_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        // different mod -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMod(VALID_MOD_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"FestiveCat":2,"-":52,"kxshxsh":4}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    private Model model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"FestiveCat":4,"-":79,"s7manth":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        model \u003d new ModelManager(getTypicalContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        expectedModel \u003d new ModelManager(model.getContactList(), new UserPrefs(), new PriorityTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"FestiveCat":5,"-":34,"s7manth":1}},{"path":"src/test/java/seedu/address/logic/commands/NewTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"public class NewTaskCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NewTaskCommand(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d new ModelStubAcceptingTaskAdded();","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        CommandResult commandResult \u003d new NewTaskCommand(validTask).execute(modelStub);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(String.format(NewTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(Arrays.asList(validTask), modelStub.tasks);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        NewTaskCommand newTaskCommand \u003d new NewTaskCommand(validTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        AddCommandTest.ModelStub modelStub \u003d new ModelStubWithTask(validTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"                NewTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e newTaskCommand.execute(modelStub));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        Task homework \u003d new TaskBuilder(HOMEWORK).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        Task assignment \u003d new TaskBuilder(ASSIGNMENT).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        NewTaskCommand addHomeworkCommand \u003d new NewTaskCommand(homework);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        NewTaskCommand addAssignmentCommand \u003d new NewTaskCommand(assignment);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(addHomeworkCommand.equals(addHomeworkCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        NewTaskCommand addHomeworkCommandCopy \u003d new NewTaskCommand(homework);","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(addHomeworkCommand.equals(addHomeworkCommandCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(addHomeworkCommand.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(addHomeworkCommand.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(addHomeworkCommand.equals(addAssignmentCommand));","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"     * A Model stub that contains a single Task.","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    protected static class ModelStubWithTask extends AddCommandTest.ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"        private final Task task;","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        ModelStubWithTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"            this.task \u003d task;","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"            return this.task.equals(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"     * A Model stub that always accept the task being added","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"    protected static class ModelStubAcceptingTaskAdded extends AddCommandTest.ModelStub {","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"        final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"            return tasks.stream().anyMatch(task::equals);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"        public void addTask(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"            requireNonNull(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"            tasks.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"            return new PriorityTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":115}},{"path":"src/test/java/seedu/address/logic/commands/RemoveTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"public class RemoveTaskCommandTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    private Model model \u003d new ModelManager(new ContactList(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        model \u003d new ModelManager(new ContactList(), new UserPrefs(), getTypicalTaskList());","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        Task taskToDelete \u003d new TaskBuilder(HOMEWORK).withDeadline(1, 1, 1, 0, 0).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        model.addTask(taskToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand removeTaskCommand \u003d new RemoveTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        String expectedMessage \u003d String.format(RemoveTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"                new ContactList(), new UserPrefs(), model.getTaskList().getCopy());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        expectedModel.deleteTask(taskToDelete);","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        assertCommandSuccess(removeTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getTaskList().size() + 1);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand removeTaskCommand \u003d new RemoveTaskCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        assertCommandFailure(removeTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand removeTaskCommandFirst \u003d new RemoveTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand removeTaskCommandSecond \u003d new RemoveTaskCommand(INDEX_SECOND);","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(removeTaskCommandFirst.equals(removeTaskCommandFirst));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand removeTaskCommandFirstCopy \u003d new RemoveTaskCommand(INDEX_FIRST);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(removeTaskCommandFirst.equals(removeTaskCommandFirstCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(removeTaskCommandFirst.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(removeTaskCommandFirst.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        // different commands -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(removeTaskCommandFirst.equals(removeTaskCommandSecond));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":70}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MOD_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_NUMBER_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_NUMBER_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"zawedcvg"},"content":"                + MOD_DESC_BOB + GROUP_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"        // multiple student numbers - last student number accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_AMY + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"zawedcvg"},"content":"                + MOD_DESC_BOB + GROUP_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"zawedcvg"},"content":"                + MOD_DESC_BOB + GROUP_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"zawedcvg"},"content":"                + MOD_DESC_BOB + GROUP_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + STUDENT_NUMBER_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"                        + EMAIL_DESC_AMY + MOD_DESC_AMY + GROUP_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + MOD_DESC_BOB,","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"        // missing student number prefix","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_STUDENT_NUMBER_BOB + EMAIL_DESC_BOB + MOD_DESC_BOB,","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + VALID_EMAIL_BOB + MOD_DESC_BOB,","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"zawedcvg"},"content":"        // missing mod prefix","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + VALID_MOD_BOB,","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_STUDENT_NUMBER_BOB + VALID_EMAIL_BOB + VALID_MOD_BOB,","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"kxshxsh"},"content":"        // invalid student number","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_STUDENT_NUMBER_DESC + EMAIL_DESC_BOB + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"kxshxsh"},"content":"                + GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + INVALID_EMAIL_DESC + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + INVALID_MOD_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Mod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB + INVALID_MOD_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"zawedcvg"},"content":"                + GROUP_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"zawedcvg"},"content":"                + MOD_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":88,"kxshxsh":34,"zawedcvg":12}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"FestiveCat":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MOD_DESC;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_NUMBER_DESC;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MOD_DESC_BOB;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_NUMBER_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_AMY;","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_NUMBER_DESC, StudentNumber.MESSAGE_CONSTRAINTS); // invalid","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"kxshxsh"},"content":"        // student number","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MOD_DESC, Mod.MESSAGE_CONSTRAINTS); // invalid mod","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"kxshxsh"},"content":"        // invalid student number followed by valid email","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_NUMBER_DESC + EMAIL_DESC_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"                StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"        // valid student number followed by invalid student number. The test case for invalid student number","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"kxshxsh"},"content":"        // followed by valid student number is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, \"1\" + STUDENT_NUMBER_DESC_BOB + INVALID_STUDENT_NUMBER_DESC,","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"kxshxsh"},"content":"                StudentNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"kxshxsh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"kxshxsh"},"content":"                        + VALID_MOD_AMY + VALID_STUDENT_NUMBER_AMY,","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"kxshxsh"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_NUMBER_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"                + EMAIL_DESC_AMY + MOD_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"kxshxsh"},"content":"                .withStudentNumber(VALID_STUDENT_NUMBER_BOB).withEmail(VALID_EMAIL_AMY).withMod(VALID_MOD_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"kxshxsh"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_NUMBER_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"kxshxsh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentNumber(VALID_STUDENT_NUMBER_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"kxshxsh"},"content":"        // student number","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"kxshxsh"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENT_NUMBER_DESC_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"kxshxsh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStudentNumber(VALID_STUDENT_NUMBER_AMY).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"FestiveCat"},"content":"        // mod","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"FestiveCat"},"content":"        userInput \u003d targetIndex.getOneBased() + MOD_DESC_AMY;","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"FestiveCat"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withMod(VALID_MOD_AMY).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"kxshxsh"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_NUMBER_DESC_AMY + MOD_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"kxshxsh"},"content":"                + TAG_DESC_FRIEND + STUDENT_NUMBER_DESC_AMY + MOD_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"kxshxsh"},"content":"                + STUDENT_NUMBER_DESC_BOB + MOD_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"kxshxsh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withStudentNumber(VALID_STUDENT_NUMBER_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"FestiveCat"},"content":"                .withEmail(VALID_EMAIL_BOB).withMod(VALID_MOD_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"kxshxsh"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_STUDENT_NUMBER_DESC + STUDENT_NUMBER_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"kxshxsh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"kxshxsh"},"content":"                .withStudentNumber(VALID_STUDENT_NUMBER_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"kxshxsh"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_STUDENT_NUMBER_DESC + MOD_DESC_BOB","lastModifiedDate":"2022-03-22"},{"lineNumber":199,"author":{"gitId":"kxshxsh"},"content":"                + STUDENT_NUMBER_DESC_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"kxshxsh"},"content":"        descriptor \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"kxshxsh"},"content":"                new EditPersonDescriptorBuilder().withStudentNumber(VALID_STUDENT_NUMBER_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"FestiveCat"},"content":"                .withMod(VALID_MOD_BOB).build();","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"FestiveCat"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"FestiveCat":22,"-":160,"kxshxsh":35}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.CompoundedPredicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates compPreds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        compPreds.addPredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(compPreds);","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"FestiveCat":7,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/NewTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DEADLINE_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.NewTaskCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"public class NewTaskCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    private NewTaskCommandParser parser \u003d new NewTaskCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    public void parse_allArgsPresent_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        Task expectedTask \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"                new TaskBuilder()","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"                        .withDeadline(VALID_DEADLINE_ASSIGNMENT)","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"                        .withDesc(VALID_DESCRIPTION_ASSIGNMENT).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        // whitespace included preamble","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_DESCRIPTION_ASSIGNMENT + DEADLINE_ASSIGNMENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"                new NewTaskCommand(expectedTask));","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        // multiple deadlines - last deadline accepted","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"                PREAMBLE_WHITESPACE + VALID_DESCRIPTION_ASSIGNMENT + DEADLINE_HOMEWORK + DEADLINE_ASSIGNMENT,","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"                new NewTaskCommand(expectedTask));","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    public void parse_someArgsMissing_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        // missing description","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, DEADLINE_ASSIGNMENT, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        // missing deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION_HOMEWORK, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        // wrong description","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, INVALID_DESCRIPTION + VALID_DEADLINE_HOMEWORK, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        // wrong deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION_ASSIGNMENT + INVALID_DEADLINE, expectedMessage);","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":63}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"    private static final String INVALID_STUDENT_NUMBER \u003d \"z23456B\";","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    private static final String INVALID_MOD \u003d \"example.com\";","lastModifiedDate":"2022-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"    private static final String VALID_STUDENT_NUMBER \u003d \"A0225771K\";","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    private static final String VALID_MOD \u003d \"CS2103T\";","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"kxshxsh"},"content":"    public void parseStudentNumber_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentNumber((String) null));","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"kxshxsh"},"content":"    public void parseStudentNumber_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"kxshxsh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentNumber(INVALID_STUDENT_NUMBER));","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"kxshxsh"},"content":"    public void parseStudentNumber_validValueWithoutWhitespace_returnsStudentNumber() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"kxshxsh"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENT_NUMBER);","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"kxshxsh"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(VALID_STUDENT_NUMBER));","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"kxshxsh"},"content":"    public void parseStudentNumber_validValueWithWhitespace_returnsTrimmedStudentNumber() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"kxshxsh"},"content":"        String studentNumberWithWhitespace \u003d WHITESPACE + VALID_STUDENT_NUMBER + WHITESPACE;","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"kxshxsh"},"content":"        StudentNumber expectedStudentNumber \u003d new StudentNumber(VALID_STUDENT_NUMBER);","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"kxshxsh"},"content":"        assertEquals(expectedStudentNumber, ParserUtil.parseStudentNumber(studentNumberWithWhitespace));","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMod((String) null));","lastModifiedDate":"2022-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMod(INVALID_ADDRESS));","lastModifiedDate":"2022-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD);","lastModifiedDate":"2022-03-11"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(VALID_MOD));","lastModifiedDate":"2022-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_MOD + WHITESPACE;","lastModifiedDate":"2022-03-11"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"        Mod expectedMod \u003d new Mod(VALID_MOD);","lastModifiedDate":"2022-03-11"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(expectedMod, ParserUtil.parseMod(addressWithWhitespace));","lastModifiedDate":"2022-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_MOD));","lastModifiedDate":"2022-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"FestiveCat":14,"-":168,"kxshxsh":14}},{"path":"src/test/java/seedu/address/logic/parser/RemoveTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"public class RemoveTaskCommandParserTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    private RemoveTaskCommandParser parser \u003d new RemoveTaskCommandParser();","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        assertParseSuccess(parser, \"1\", new RemoveTaskCommand(INDEX_FIRST));","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":24}},{"path":"src/test/java/seedu/address/logic/parser/TailorParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"//import seedu.address.logic.commands.MailAllCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"//import seedu.address.logic.commands.MailCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.NewTaskCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.CompoundedPredicates;","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"s7manth"},"content":"public class TailorParserTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"    private final TailorParser parser \u003d new TailorParser();","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-11"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates compPred \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-11"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        compPred.addPredicate(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2022-03-11"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(new FindCommand(compPred), command);","lastModifiedDate":"2022-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"    public void parseCommand_newTask() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"        NewTaskCommand newTaskCommand \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"                (NewTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"                        NewTaskCommand.COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"                                + \" \" + TaskBuilder.DEFAULT_DESCRIPTION","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"                                + \" \" + CliSyntax.PREFIX_DEADLINE + TaskBuilder.DEFAULT_DEADLINE);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(new NewTaskCommand(task), newTaskCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"    public void parseCommand_removeTask() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"        RemoveTaskCommand command \u003d (RemoveTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"                RemoveTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(new RemoveTaskCommand(INDEX_FIRST), command);","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"FestiveCat":35,"-":91,"s7manth":2}},{"path":"src/test/java/seedu/address/model/ContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"public class ContactListTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"    private final ContactList contactList \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"        assertEquals(Collections.emptyList(), contactList.getPersonList());","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.resetData(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"s7manth"},"content":"    public void resetData_withValidReadOnlyContactList_replacesData() {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"        ContactList newData \u003d getTypicalContactList();","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"        contactList.resetData(newData);","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"        assertEquals(newData, contactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMod(VALID_MOD_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"s7manth"},"content":"        ContactListStub newData \u003d new ContactListStub(newPersons);","lastModifiedDate":"2022-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"s7manth"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e contactList.resetData(newData));","lastModifiedDate":"2022-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.hasPerson(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"    public void hasPerson_personNotInContactList_returnsFalse() {","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"s7manth"},"content":"        assertFalse(contactList.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"s7manth"},"content":"    public void hasPerson_personInContactList_returnsTrue() {","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"s7manth"},"content":"        contactList.addPerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"s7manth"},"content":"        assertTrue(contactList.hasPerson(ALICE));","lastModifiedDate":"2022-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"s7manth"},"content":"    public void hasPerson_personWithSameIdentityFieldsInContactList_returnsTrue() {","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"s7manth"},"content":"        contactList.addPerson(ALICE);","lastModifiedDate":"2022-03-06"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMod(VALID_MOD_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"        assertTrue(contactList.hasPerson(editedAlice));","lastModifiedDate":"2022-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"s7manth"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contactList.getPersonList().remove(0));","lastModifiedDate":"2022-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"s7manth"},"content":"     * A stub ReadOnlyContactList whose persons list can violate interface constraints.","lastModifiedDate":"2022-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"s7manth"},"content":"    private static class ContactListStub implements ReadOnlyContactList {","lastModifiedDate":"2022-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"s7manth"},"content":"        ContactListStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"FestiveCat":3,"-":75,"s7manth":24}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"import seedu.address.testutil.ContactListBuilder;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"        assertEquals(new ContactList(), new ContactList(modelManager.getContactList()));","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"s7manth"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setContactListFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    public void setContactListFilePath_validPath_setsContactListFilePath() {","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"s7manth"},"content":"        modelManager.setContactListFilePath(path);","lastModifiedDate":"2022-03-06"},{"lineNumber":74,"author":{"gitId":"s7manth"},"content":"        assertEquals(path, modelManager.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    public void setTaskListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskListFilePath(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"    public void setTaskListFilePath_validPath_setsContactListFilePath() {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        modelManager.setContactListFilePath(path);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(path, modelManager.getContactListFilePath());","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"s7manth"},"content":"    public void hasPerson_personNotInContactList_returnsFalse() {","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"s7manth"},"content":"    public void hasPerson_personInContactList_returnsTrue() {","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"s7manth"},"content":"        ContactList contactList \u003d new ContactListBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"s7manth"},"content":"        ContactList differentContactList \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList taskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"        modelManager \u003d new ModelManager(contactList, userPrefs, taskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(contactList, userPrefs, taskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"s7manth"},"content":"        // different contactList -\u003e returns false","lastModifiedDate":"2022-03-06"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentContactList, userPrefs, taskList)));","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactList, userPrefs, taskList)));","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"s7manth"},"content":"        differentUserPrefs.setContactListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactList, differentUserPrefs, taskList)));","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"        // different task lists -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList diffTaskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"        diffTaskList.add(ASSIGNMENT);","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactList, userPrefs, diffTaskList)));","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"FestiveCat":26,"-":113,"s7manth":13}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setContactListFilePath(null));","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(userPref.equals(userPref));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(userPref.equals(userPref));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(5));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(ASSIGNMENT));","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        // different GUISettings -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        UserPrefs editedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(0, 0, 0, 0);","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        editedPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(editedPrefs));","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        // different contactListFilePath -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        editedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        editedPrefs.setContactListFilePath(Paths.get(\"BAD\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(editedPrefs));","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        // different taskListFilePath -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        editedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        editedPrefs.setTaskListFilePath(Paths.get(\"BAD\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(userPref.equals(editedPrefs));","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"FestiveCat":42,"-":21,"s7manth":2}},{"path":"src/test/java/seedu/address/model/person/ModTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-11"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-11"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-11"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-11"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"public class ModTest {","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Mod(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-11"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2022-03-11"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Mod(invalidAddress));","lastModifiedDate":"2022-03-11"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-11"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public void isValidMod() {","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // null mod","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Mod.isValidMod(null));","lastModifiedDate":"2022-03-11"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // invalid mods","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"\")); // empty string","lastModifiedDate":"2022-03-11"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\" \")); // spaces only","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"cs2030S\")); // non-capital prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"CS2040s\")); // non-capital suffix","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"X1000\")); // 1 character prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"ABCD1000\")); // \u003e3 character prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"CS1100XD\")); // \u003e1 character suffix","lastModifiedDate":"2022-03-11"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"CS100\")); // \u003c4 digits","lastModifiedDate":"2022-03-11"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"CS10000\")); // \u003e4 digits","lastModifiedDate":"2022-03-11"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Mod.isValidMod(\"CS12X34\")); // characters between digits","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        // valid mods","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Mod.isValidMod(\"CS2100\")); // 2 character prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Mod.isValidMod(\"GER1000\")); // 3 character prefix","lastModifiedDate":"2022-03-11"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Mod.isValidMod(\"CS1101S\")); // 2 character prefix, 1 character suffix","lastModifiedDate":"2022-03-11"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Mod.isValidMod(\"NUR1107B\")); // 3 character prefix, 1 character suffix","lastModifiedDate":"2022-03-11"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-11"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-11"}],"authorContributionMap":{"FestiveCat":46}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentNumber(VALID_STUDENT_NUMBER_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"                .withMod(VALID_MOD_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"kxshxsh"},"content":"        // different student number -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"kxshxsh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStudentNumber(VALID_STUDENT_NUMBER_BOB).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        // different mod -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMod(VALID_MOD_BOB).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"FestiveCat":2,"-":83,"kxshxsh":8}},{"path":"src/test/java/seedu/address/model/person/StudentNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"public class StudentNumberTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentNumber(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    public void constructor_invalidStudentNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        String invalidStudentNumber \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentNumber(invalidStudentNumber));","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"    public void isValidStudentNumber() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"        // null student number","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentNumber.isValidStudentNumber(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        // invalid student numbers","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"\")); // empty string","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\" \")); // spaces only","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"A91B\")); // not the desired length","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"AgenZ\")); // non-numeric","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"A9011p041B\")); // alphabets within digits","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"A9312 534B\")); // spaces within digits","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(StudentNumber.isValidStudentNumber(\"B1234567X\")); // begins with capital letter that is not A","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"        // valid student numbers","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(StudentNumber.isValidStudentNumber(\"A0225771K\")); // exact format as desired","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(StudentNumber.isValidStudentNumber(\"A9312153P\")); // another valid number","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(StudentNumber.isValidStudentNumber(\"a1234567b\")); // lowercase letters are allowed","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(StudentNumber.isValidStudentNumber(\"a1234567B\")); // lowercase beginning A letter allowed","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"kxshxsh":42}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMod(VALID_MOD_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withMod(VALID_MOD_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"FestiveCat":3,"-":167}},{"path":"src/test/java/seedu/address/model/person/predicates/CompoundedPredicatesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"public class CompoundedPredicatesTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds1 \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds2 \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds3 \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate emailPred \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"                Arrays.asList(\"example.com\", \"google.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        preds1.addPredicate(emailPred);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        preds2.addPredicate(emailPred);","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        preds3.addPredicate(emailPred);","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate modPred \u003d new ModContainsKeywordsPredicate(","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"                Arrays.asList(\"CS2100\", \"MA1101R\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        preds1.addPredicate(modPred);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        preds2.addPredicate(modPred);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds1.equals(preds1));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        // same contents -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds1.equals(preds2));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(preds1.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"        // different contents -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(preds1.equals(preds3));","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    public void isEmpty_somethingAdded_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        preds.addPredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(preds.isEmpty());","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    public void isEmpty_nothingAdded_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds.isEmpty());","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    public void test_matchingKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate emailPreds \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"google.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate modPreds \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"CS2100\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        Person testPerson \u003d new PersonBuilder().withEmail(\"Alice@google.com.sg\").withMod(\"CS2100\").withName(\"Alice \"","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                + \"Henderson\").withStudentNumber(\"A0123456L\").withTags(\"friend\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        // no predicates","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds.test(testPerson));","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        // one predicate","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        preds.addPredicate(emailPreds);","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds.test(testPerson));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        // multiple predicates","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        preds.addPredicate(modPreds);","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(preds.test(testPerson));","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"    public void test_nonMatchingKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"        CompoundedPredicates preds \u003d new CompoundedPredicates();","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate emailPreds \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"google.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate modPreds \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"CS2100\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        Person testPerson \u003d new PersonBuilder().withEmail(\"Alice@example.com\").withMod(\"CS2100\").withName(\"Alice \"","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"                + \"Henderson\").withStudentNumber(\"A0246813G\").withTags(\"friend\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"        // 1 predicate, non-matching predicate","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"        preds.addPredicate(emailPreds);","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(preds.test(testPerson));","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"        // multiple predicates, 1 non-matching","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"        preds.addPredicate(modPreds);","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(preds.test(testPerson));","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"FestiveCat":94,"kxshxsh":2}},{"path":"src/test/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"                \"example\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"example\", \".com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"google.com\", \"example.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"eXaMpLe.cOm\", \"gOogLe.COm\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"google.com\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"example@example.com\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        // Keywords match student number, name and mod, but does not match email","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Alice\", \"CS2105\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentNumber(\"A0246813G\")","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"                .withEmail(\"alxce@email.com\").withMod(\"CS2105\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"FestiveCat":75,"kxshxsh":2}},{"path":"src/test/java/seedu/address/model/person/predicates/ModContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"public class ModContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate firstPredicate \u003d new ModContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate secondPredicate \u003d new ModContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate firstPredicateCopy \u003d new ModContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        // different mod -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    public void test_modContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate predicate \u003d new ModContainsKeywordsPredicate(Collections.singletonList(\"CS2100\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"CS2100\", \"CS\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"CS2100\", \"CS2030S\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"cS2100\", \"Cs2030s\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    public void test_modDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        ModContainsKeywordsPredicate predicate \u003d new ModContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"MA1101R\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMod(\"CS2100\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"        // Keywords match student number, email and name, but does not match mod","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new ModContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentNumber(\"A0246813G\")","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"                .withEmail(\"alice@email.com\").withMod(\"CS2105\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"FestiveCat":73,"kxshxsh":2}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"        // Keywords match student number, email and mod, but does not match name","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentNumber(\"A0246813G\")","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"                .withEmail(\"alice@email.com\").withMod(\"CS2105\").build()));","lastModifiedDate":"2022-03-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"FestiveCat":2,"-":71,"kxshxsh":2}},{"path":"src/test/java/seedu/address/model/person/predicates/StudentNumberContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kxshxsh"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"kxshxsh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"kxshxsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"kxshxsh"},"content":"public class StudentNumberContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"kxshxsh"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"kxshxsh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"        StudentNumberContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"                new StudentNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"kxshxsh"},"content":"        StudentNumberContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"kxshxsh"},"content":"                new StudentNumberContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"kxshxsh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"        StudentNumberContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"kxshxsh"},"content":"                new StudentNumberContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"kxshxsh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"        // different student number -\u003e returns false","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"kxshxsh"},"content":"    public void test_studentNumberContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"        // One keyword","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"        StudentNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"                new StudentNumberContainsKeywordsPredicate(Collections.singletonList(\"02468\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudentNumber(\"A0246813G\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"        predicate \u003d new StudentNumberContainsKeywordsPredicate(Arrays.asList(\"024\", \"813G\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudentNumber(\"A0246813G\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"kxshxsh"},"content":"        predicate \u003d new StudentNumberContainsKeywordsPredicate(Arrays.asList(\"123\", \"0246\"));","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"kxshxsh"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudentNumber(\"A0246813G\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"kxshxsh"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"    public void test_studentNumberDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"kxshxsh"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"        StudentNumberContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                new StudentNumberContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStudentNumber(\"A0246813G\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"kxshxsh"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"kxshxsh"},"content":"        predicate \u003d new StudentNumberContainsKeywordsPredicate(Arrays.asList(\"23456\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStudentNumber(\"A0246813G\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"        // Keywords match name, email and mod, but does not match student number","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"kxshxsh"},"content":"        predicate \u003d new StudentNumberContainsKeywordsPredicate(Arrays.asList(\"CS2105\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentNumber(\"A0246813G\")","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"kxshxsh"},"content":"                .withEmail(\"alice@email.com\").withMod(\"CS2105\").build()));","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"kxshxsh"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"kxshxsh"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"kxshxsh":76}},{"path":"src/test/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-12"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d new TagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        // One keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        TagsContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"        // Multiple keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"friend\", \"colleagues\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"friend\", \"student\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"fRiEnD\", \"sTuDenT\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    public void test_tagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"        // Zero keywords","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"student\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"kxshxsh"},"content":"        // Keywords match student number, email, name and mod, but does not match tags","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\", \"CS2105\"));","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withStudentNumber(\"A0246813G\")","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"                .withEmail(\"alice@email.com\").withMod(\"CS2105\").withTags(\"friend\", \"colleagues\").build()));","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"FestiveCat":74,"kxshxsh":2}},{"path":"src/test/java/seedu/address/model/tasks/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        String invalidDeadline \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(AssertionError.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // null deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // invalid deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"\")); // empty string","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\" \")); // spaces only","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"homework*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0000-01-01T00:00\")); // invalid year","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-00-01T00:00\")); // invalid month (lower)","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-13-01T00:00\")); // invalid month (upper)","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-01-00T00:00\")); // invalid day (lower)","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-01-32T00:00\")); // invalid day (upper)","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0022-02-29T00:00\")); // invalid non-leap day (upper)","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-01-32T24:00\")); // invalid hour","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Deadline.isValidDeadline(\"0001-01-32T00:60\")); // invalid minute","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        // valid deadline","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Deadline.isValidDeadline(\"0001-01-01T00:00\")); // minimum time allowed","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Deadline.isValidDeadline(\"9999-12-31T23:59\")); // maximum time allowed","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Deadline.isValidDeadline(\"0020-02-29T00:00\")); // valid leap day","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Deadline.isValidDeadline(\"0020-02-28T00:00\")); // valid non-leap day","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":47}},{"path":"src/test/java/seedu/address/model/tasks/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    public void constructor_invalidDesc_throwsIllegalArgumentException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"        String invalidDesc \u003d \"\";","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDesc));","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    public void isValidDesc() {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"        // null description","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDesc(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        // invalid description","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Description.isValidDesc(\"\")); // empty string","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Description.isValidDesc(\" \")); // spaces only","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Description.isValidDesc(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(Description.isValidDesc(\"homework*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        // valid description","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Description.isValidDesc(\"do homework\")); // alphabets only","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Description.isValidDesc(\"12345\")); // numbers only","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Description.isValidDesc(\"do homework the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Description.isValidDesc(\"Do HoMeWorK\")); // with capital letters","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(Description.isValidDesc(\"From the Ghastly Eyrie I can see to the ends of the world and from this \"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"                + \"vantage point I declare with utter certainty that this one is in the bag\")); // long names","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":41}},{"path":"src/test/java/seedu/address/model/tasks/PriorityTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import java.util.Collection;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.exceptions.DuplicateTaskException;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"public class PriorityTaskListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    private PriorityTaskList taskList \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public void constructor() {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(PriorityQueue.class, taskList.getInternalList().getClass());","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public void add_noRepeat_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(taskList.add(task));","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    public void add_repeatedTask_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.add(task));","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"    public void remove_listContainsTask_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        PriorityQueue\u003cTask\u003e pq \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        taskList.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(taskList.remove(task));","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    public void remove_listDoesNotContainsTask_failure() {","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.remove(task));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.resetData(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"    public void resetData_withValidReadOnlyTaskList_replacesData() {","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList newData \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        taskList.resetData(newData);","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(newData, taskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"    public void resetData_withDuplicateTasksthrowsDuplicatePersonException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        Task editedHomework \u003d new TaskBuilder(HOMEWORK).withDeadline(1, 1, 1, 1, 1).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        List\u003cTask\u003e tasks \u003d Arrays.asList(HOMEWORK, editedHomework);","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskListStub newData \u003d new PriorityTaskListStub(tasks);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(AssertionError.class, () -\u003e taskList.resetData(newData));","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.contains(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"    public void contains_taskNotInContactList_returnsFalse() {","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(taskList.contains(HOMEWORK));","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"    public void contains_taskInContactList_returnsTrue() {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"        taskList.add(HOMEWORK);","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(taskList.contains(HOMEWORK));","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"     * A stub ReadOnlyTaskList whose task list can violate interface constraints.","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    private static class PriorityTaskListStub implements ReadOnlyTaskList {","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskListStub(Collection\u003cTask\u003e tasks) {","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"FestiveCat"},"content":"        public boolean add(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"FestiveCat"},"content":"        public boolean remove(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"FestiveCat"},"content":"        public boolean remove(int index) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"FestiveCat"},"content":"        public boolean contains(Task task) {","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"FestiveCat"},"content":"        public Task get(int index) {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"FestiveCat"},"content":"        public ReadOnlyTaskList getCopy() {","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"FestiveCat"},"content":"        public Collection\u003cTask\u003e getInternalList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"FestiveCat"},"content":"        @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"FestiveCat"},"content":"        public int size() {","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":155}},{"path":"src/test/java/seedu/address/model/tasks/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.model.tasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    public void equals() {","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"        Task homework \u003d new TaskBuilder(HOMEWORK).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(HOMEWORK.equals(homework));","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"        assertTrue(HOMEWORK.equals(HOMEWORK));","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(HOMEWORK.equals(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(HOMEWORK.equals(5));","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(HOMEWORK.equals(ASSIGNMENT));","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        // different desc -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        Task editedHomework \u003d new TaskBuilder(HOMEWORK).withDesc(\"huh\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(HOMEWORK.equals(editedHomework));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        editedHomework \u003d new TaskBuilder(HOMEWORK).withDeadline(1, 1, 1, 0, 0).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(HOMEWORK.equals(editedHomework));","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":40}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"zawedcvg"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kxshxsh"},"content":"    private static final String INVALID_STUDENT_NUMBER \u003d \"+651234\";","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"zawedcvg"},"content":"    private static final String INVALID_MOD \u003d \"example.com\";","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"zawedcvg"},"content":"    private static final String INVALID_GROUP \u003d \" \";","lastModifiedDate":"2022-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kxshxsh"},"content":"    private static final String VALID_STUDENT_NUMBER \u003d BENSON.getStudentNumber().toString();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"zawedcvg"},"content":"    private static final String VALID_GROUP \u003d BENSON.getGroup().toString();","lastModifiedDate":"2022-03-11"},{"lineNumber":32,"author":{"gitId":"zawedcvg"},"content":"    private static final String VALID_MOD \u003d BENSON.getMod().toString();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"kxshxsh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_STUDENT_NUMBER, VALID_EMAIL, VALID_MOD, VALID_GROUP,","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"kxshxsh"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_STUDENT_NUMBER, VALID_EMAIL, VALID_MOD,","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"zawedcvg"},"content":"                VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"kxshxsh"},"content":"    public void toModelType_invalidStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kxshxsh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_STUDENT_NUMBER, VALID_EMAIL,","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"kxshxsh"},"content":"                        VALID_MOD, VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"kxshxsh"},"content":"        String expectedMessage \u003d StudentNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"kxshxsh"},"content":"    public void toModelType_nullStudentNumber_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"zawedcvg"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_MOD,","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"zawedcvg"},"content":"                VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":73,"author":{"gitId":"kxshxsh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentNumber.class.getSimpleName());","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"kxshxsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STUDENT_NUMBER, INVALID_EMAIL, VALID_MOD,","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"zawedcvg"},"content":"                VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"kxshxsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STUDENT_NUMBER, null, VALID_MOD,","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"zawedcvg"},"content":"                VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"zawedcvg"},"content":"    public void toModelType_invalidMod_throwsIllegalValueException() {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"kxshxsh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_STUDENT_NUMBER, VALID_EMAIL, INVALID_MOD,","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"zawedcvg"},"content":"                        VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":98,"author":{"gitId":"zawedcvg"},"content":"        String expectedMessage \u003d Mod.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"kxshxsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_STUDENT_NUMBER, VALID_EMAIL, null,","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"zawedcvg"},"content":"                VALID_GROUP, VALID_TAGS);","lastModifiedDate":"2022-03-11"},{"lineNumber":106,"author":{"gitId":"zawedcvg"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Mod.class.getSimpleName());","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"kxshxsh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_STUDENT_NUMBER,","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"kxshxsh"},"content":"                        VALID_EMAIL, VALID_MOD, VALID_GROUP, invalidTags);","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":87,"kxshxsh":18,"zawedcvg":15}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    private static final String INVALID_DESC \u003d \"i am de@d\";","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    private static final String INVALID_DEADLINE \u003d \"i am dead\";","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(HOMEWORK);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(HOMEWORK, task.toModelType());","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_invalidDesc_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"                new JsonAdaptedTask(INVALID_DESC, VALID_DEADLINE_HOMEWORK);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"                new JsonAdaptedTask(VALID_DESCRIPTION_HOMEWORK, INVALID_DEADLINE);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":40}},{"path":"src/test/java/seedu/address/storage/JsonContactListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"s7manth"},"content":"public class JsonContactListStorageTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":23,"author":{"gitId":"s7manth"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonContactListStorageTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"    public void readContactList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e readContactList(null));","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"s7manth"},"content":"    private java.util.Optional\u003cReadOnlyContactList\u003e readContactList(String filePath) throws Exception {","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"s7manth"},"content":"        return new JsonContactListStorage(Paths.get(filePath)).readContactList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"s7manth"},"content":"        assertFalse(readContactList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"s7manth"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"notJsonFormatContactList.json\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"s7manth"},"content":"    public void readContactList_invalidPersonContactList_throwDataConversionException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidPersonContactList.json\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"    public void readContactList_invalidAndValidPersonContactList_throwDataConversionException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"s7manth"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidAndValidPersonContactList.json\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"s7manth"},"content":"    public void readAndSaveContactList_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"s7manth"},"content":"        Path filePath \u003d testFolder.resolve(\"TempContactList.json\");","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"s7manth"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"s7manth"},"content":"        JsonContactListStorage jsonContactListStorage \u003d new JsonContactListStorage(filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"s7manth"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"s7manth"},"content":"        ReadOnlyContactList readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"s7manth"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"s7manth"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"s7manth"},"content":"        readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"s7manth"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"s7manth"},"content":"        jsonContactListStorage.saveContactList(original); // file path not specified","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"s7manth"},"content":"        readBack \u003d jsonContactListStorage.readContactList().get(); // file path not specified","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"s7manth"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2022-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"s7manth"},"content":"    public void saveContactList_nullContactList_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"s7manth"},"content":"     * Saves {@code contactList} at the specified {@code filePath}.","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"s7manth"},"content":"    private void saveContactList(ReadOnlyContactList contactList, String filePath) {","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"s7manth"},"content":"            new JsonContactListStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-06"},{"lineNumber":100,"author":{"gitId":"s7manth"},"content":"                    .saveContactList(contactList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"s7manth"},"content":"    public void saveContactList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"s7manth"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(new ContactList(), null));","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":74,"s7manth":36}},{"path":"src/test/java/seedu/address/storage/JsonSerializableContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"public class JsonSerializableContactListTest {","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"s7manth"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableContactListTest\");","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsContactList.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonContactList.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"s7manth"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonContactList.json\");","lastModifiedDate":"2022-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"s7manth"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"        ContactList contactListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"s7manth"},"content":"        ContactList typicalPersonsContactList \u003d TypicalPersons.getTypicalContactList();","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"s7manth"},"content":"        assertEquals(contactListFromFile, typicalPersonsContactList);","lastModifiedDate":"2022-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"s7manth"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":35,"author":{"gitId":"s7manth"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"s7manth"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"s7manth"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2022-03-06"},{"lineNumber":43,"author":{"gitId":"s7manth"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableContactList.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":31,"s7manth":16}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"public class JsonSerializableTaskListTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaskListTest\");","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"    private static final Path TYPICAL_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTaskTaskList.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    private static final Path INVALID_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskTaskList.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    private static final Path DUPLICATE_TASKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskTaskList.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TASKS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList taskListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList typicalPersonsTaskList \u003d TypicalTasks.getTypicalTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(taskListFromFile, typicalPersonsTaskList);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_invalidTasksFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASKS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"        JsonSerializableTaskList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASKS_FILE,","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"                JsonSerializableTaskList.class).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaskList.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":47}},{"path":"src/test/java/seedu/address/storage/JsonTaskListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"public class JsonTaskListStorageTest {","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaskListStorageTest\");","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"    @TempDir","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    public Path testFolder;","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public void readTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaskList(null));","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    private java.util.Optional\u003cReadOnlyTaskList\u003e readTaskList(String filePath) throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        return new JsonTaskListStorage(Paths.get(filePath)).readTaskList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"                : null;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        assertFalse(readTaskList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"notJsonFormatTaskList.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    public void readTaskList_invalidPersonContactList_throwDataConversionException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidTaskTaskList.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"    public void readTaskList_invalidAndValidPersonContactList_throwDataConversionException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTaskList(\"invalidAndValidTaskTaskList.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"FestiveCat"},"content":"    public void readAndSaveTaskList_allInOrder_success() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"FestiveCat"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaskList.json\");","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"FestiveCat"},"content":"        JsonTaskListStorage jsonTaskListStorage \u003d new JsonTaskListStorage(filePath);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        ReadOnlyTaskList readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(original, new PriorityTaskList(readBack));","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        Task newTask \u003d new TaskBuilder().withDesc(\"newTask here\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        original.add(newTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        original.remove(newTask);","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        jsonTaskListStorage.saveTaskList(original, filePath);","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList(filePath).get();","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(original, new PriorityTaskList(readBack));","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"FestiveCat"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-03-22"},{"lineNumber":82,"author":{"gitId":"FestiveCat"},"content":"        Task newTask2 \u003d new TaskBuilder().withDesc(\"newTask2 here\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"FestiveCat"},"content":"        original.add(newTask2);","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"FestiveCat"},"content":"        jsonTaskListStorage.saveTaskList(original); // file path not specified","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"        readBack \u003d jsonTaskListStorage.readTaskList().get(); // file path not specified","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(original, new PriorityTaskList(readBack));","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"FestiveCat"},"content":"    public void saveContactList_nullContactList_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(null, \"SomeFile.json\"));","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":94,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":96,"author":{"gitId":"FestiveCat"},"content":"     * Saves {@code contactList} at the specified {@code filePath}.","lastModifiedDate":"2022-03-22"},{"lineNumber":97,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":98,"author":{"gitId":"FestiveCat"},"content":"    private void saveTaskList(ReadOnlyTaskList taskList, String filePath) {","lastModifiedDate":"2022-03-22"},{"lineNumber":99,"author":{"gitId":"FestiveCat"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"FestiveCat"},"content":"            new JsonTaskListStorage(Paths.get(filePath))","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"FestiveCat"},"content":"                    .saveTaskList(taskList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"FestiveCat"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"FestiveCat"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"FestiveCat"},"content":"    public void saveTaskList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"FestiveCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaskList(new PriorityTaskList(), null));","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":111}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"zawedcvg"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"data\", \"contactlist.json\"));","lastModifiedDate":"2022-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"zawedcvg":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"s7manth"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactList;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.ReadOnlyTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"s7manth"},"content":"        JsonContactListStorage contactListStorage \u003d new JsonContactListStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"        storageManager \u003d new StorageManager(contactListStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"s7manth"},"content":"    public void contactListReadSave() throws Exception {","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"s7manth"},"content":"         * {@link JsonContactListStorage} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":59,"author":{"gitId":"s7manth"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonContactListStorageTest} class.","lastModifiedDate":"2022-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"s7manth"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"s7manth"},"content":"        storageManager.saveContactList(original);","lastModifiedDate":"2022-03-06"},{"lineNumber":63,"author":{"gitId":"s7manth"},"content":"        ReadOnlyContactList retrieved \u003d storageManager.readContactList().get();","lastModifiedDate":"2022-03-06"},{"lineNumber":64,"author":{"gitId":"s7manth"},"content":"        assertEquals(original, new ContactList(retrieved));","lastModifiedDate":"2022-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"FestiveCat"},"content":"    public void taskListReadSave() throws Exception {","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"        /*","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"FestiveCat"},"content":"         * {@link JsonTaskListStorage} class.","lastModifiedDate":"2022-03-22"},{"lineNumber":72,"author":{"gitId":"FestiveCat"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaskListStorageTest} class.","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"FestiveCat"},"content":"         */","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList original \u003d getTypicalTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":75,"author":{"gitId":"FestiveCat"},"content":"        storageManager.saveTaskList(original);","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"FestiveCat"},"content":"        ReadOnlyTaskList retrieved \u003d storageManager.readTaskList().get();","lastModifiedDate":"2022-03-22"},{"lineNumber":77,"author":{"gitId":"FestiveCat"},"content":"        assertEquals(original, new PriorityTaskList(retrieved));","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"s7manth"},"content":"    public void getContactListFilePath() {","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"s7manth"},"content":"        assertNotNull(storageManager.getContactListFilePath());","lastModifiedDate":"2022-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"FestiveCat"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"FestiveCat"},"content":"    public void getTaskListFilePath() {","lastModifiedDate":"2022-03-22"},{"lineNumber":87,"author":{"gitId":"FestiveCat"},"content":"        assertNotNull(storageManager.getTaskListFilePath());","lastModifiedDate":"2022-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"FestiveCat":20,"-":57,"s7manth":13}},{"path":"src/test/java/seedu/address/testutil/ContactListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"s7manth"},"content":" * A utility class to help with building {@code ContactList} objects.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"s7manth"},"content":" *     {@code ContactList ab \u003d new ContactListBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"s7manth"},"content":"public class ContactListBuilder {","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"s7manth"},"content":"    private ContactList contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"s7manth"},"content":"    public ContactListBuilder() {","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"s7manth"},"content":"        contactList \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"s7manth"},"content":"    public ContactListBuilder(ContactList contactList) {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"        this.contactList \u003d contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"s7manth"},"content":"     * Adds a new {@code Person} to the {@code ContactList} that we are building.","lastModifiedDate":"2022-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"s7manth"},"content":"    public ContactListBuilder withPerson(Person person) {","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"s7manth"},"content":"        contactList.addPerson(person);","lastModifiedDate":"2022-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"s7manth"},"content":"    public ContactList build() {","lastModifiedDate":"2022-03-06"},{"lineNumber":32,"author":{"gitId":"s7manth"},"content":"        return contactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":20,"s7manth":14}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"        descriptor.setStudentNumber(person.getStudentNumber());","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"        descriptor.setMod(person.getMod());","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"     * Sets the {@code StudentNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"kxshxsh"},"content":"    public EditPersonDescriptorBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"        descriptor.setStudentNumber(new StudentNumber(studentNumber));","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"FestiveCat"},"content":"     * Sets the {@code Mod} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"FestiveCat"},"content":"    public EditPersonDescriptorBuilder withMod(String address) {","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"FestiveCat"},"content":"        descriptor.setMod(new Mod(address));","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"FestiveCat":5,"-":77,"kxshxsh":5}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.Mod;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"import seedu.address.model.person.StudentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"kxshxsh"},"content":"    public static final String DEFAULT_STUDENT_NUMBER \u003d \"A0123456B\";","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"zawedcvg"},"content":"    public static final String DEFAULT_GROUP \u003d \"T01\";","lastModifiedDate":"2022-03-11"},{"lineNumber":24,"author":{"gitId":"zawedcvg"},"content":"    public static final String DEFAULT_MOD \u003d \"CS2103T\";","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"kxshxsh"},"content":"    private StudentNumber studentNumber;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"zawedcvg"},"content":"    private Group group;","lastModifiedDate":"2022-03-11"},{"lineNumber":30,"author":{"gitId":"zawedcvg"},"content":"    private Mod mod;","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"        studentNumber \u003d new StudentNumber(DEFAULT_STUDENT_NUMBER);","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"zawedcvg"},"content":"        group \u003d new Group(DEFAULT_GROUP);","lastModifiedDate":"2022-03-11"},{"lineNumber":41,"author":{"gitId":"zawedcvg"},"content":"        mod \u003d new Mod(DEFAULT_MOD);","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"        studentNumber \u003d personToCopy.getStudentNumber();","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"zawedcvg"},"content":"        group \u003d personToCopy.getGroup();","lastModifiedDate":"2022-03-11"},{"lineNumber":53,"author":{"gitId":"zawedcvg"},"content":"        mod \u003d personToCopy.getMod();","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"zawedcvg"},"content":"     * Sets the {@code Mod} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"zawedcvg"},"content":"    public PersonBuilder withMod(String mod) {","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"zawedcvg"},"content":"        this.mod \u003d new Mod(mod);","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"kxshxsh"},"content":"     * Sets the {@code StudentNumber} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"kxshxsh"},"content":"    public PersonBuilder withStudentNumber(String studentNumber) {","lastModifiedDate":"2022-03-22"},{"lineNumber":85,"author":{"gitId":"kxshxsh"},"content":"        this.studentNumber \u003d new StudentNumber(studentNumber);","lastModifiedDate":"2022-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"zawedcvg"},"content":"    /**","lastModifiedDate":"2022-03-11"},{"lineNumber":89,"author":{"gitId":"zawedcvg"},"content":"     * Sets the {@code Group} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-11"},{"lineNumber":90,"author":{"gitId":"zawedcvg"},"content":"     */","lastModifiedDate":"2022-03-11"},{"lineNumber":91,"author":{"gitId":"zawedcvg"},"content":"    public PersonBuilder withGroup(String group) {","lastModifiedDate":"2022-03-11"},{"lineNumber":92,"author":{"gitId":"zawedcvg"},"content":"        this.group \u003d new Group(group);","lastModifiedDate":"2022-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":104,"author":{"gitId":"kxshxsh"},"content":"        return new Person(name, studentNumber, email, mod, group, tags);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":80,"kxshxsh":11,"zawedcvg":16}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2022-03-11"},{"lineNumber":5,"author":{"gitId":"zawedcvg"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MOD;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT_NUMBER;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"kxshxsh"},"content":"        sb.append(PREFIX_STUDENT_NUMBER + person.getStudentNumber().value + \" \");","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"zawedcvg"},"content":"        sb.append(PREFIX_GROUP + person.getGroup().value + \" \");","lastModifiedDate":"2022-03-11"},{"lineNumber":38,"author":{"gitId":"zawedcvg"},"content":"        sb.append(PREFIX_MOD + person.getMod().value + \" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"kxshxsh"},"content":"        descriptor.getStudentNumber().ifPresent(studentNumber -\u003e sb.append(PREFIX_STUDENT_NUMBER)","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"kxshxsh"},"content":"                .append(studentNumber.value).append(\" \"));","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"zawedcvg"},"content":"        descriptor.getMod().ifPresent(mod -\u003e sb.append(PREFIX_MOD).append(mod.value).append(\" \"));","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":56,"kxshxsh":4,"zawedcvg":5}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Deadline;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Description;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do homework\";","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"9234-05-06T07:08\";","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"    private Description description;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"    private Deadline deadline;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"     * Creates a {@code TaskBuilder} with the default values","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"    public TaskBuilder withDesc(String desc) {","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"        this.description \u003d new Description(desc);","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"FestiveCat"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"FestiveCat"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"FestiveCat"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"FestiveCat"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"FestiveCat"},"content":"     * This uses individual year/month/day/hour/minute values","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"FestiveCat"},"content":"    public TaskBuilder withDeadline(int year, int month, int day, int hour, int minute) {","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"FestiveCat"},"content":"        this.deadline \u003d new Deadline(year, month, day, hour, minute);","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"FestiveCat"},"content":"        return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"FestiveCat"},"content":"    public Task build() {","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"FestiveCat"},"content":"        return new Task(description, deadline);","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":58}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"FestiveCat":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MOD_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_AMY;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"kxshxsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_NUMBER_BOB;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"s7manth"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2022-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"zawedcvg"},"content":"            .withMod(\"CS2100\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"kxshxsh"},"content":"            .withStudentNumber(\"A0246813G\").withGroup(\"T01\")","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"zawedcvg"},"content":"            .withMod(\"CS2040S\")","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"kxshxsh"},"content":"            .withEmail(\"johnd@example.com\").withStudentNumber(\"A0123456L\").withGroup(\"T01\")","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"kxshxsh"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withStudentNumber(\"A1234567M\")","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"heinz@example.com\").withMod(\"MA1101R\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"kxshxsh"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withStudentNumber(\"A1357902K\")","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"cornelia@example.com\").withMod(\"MA1521\").withGroup(\"T01\").withTags(\"friends\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"kxshxsh"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withStudentNumber(\"A1234123A\")","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"werner@example.com\").withMod(\"ACC1701X\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"kxshxsh"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withStudentNumber(\"A5678567C\")","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"lydia@example.com\").withMod(\"FIN2704X\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"kxshxsh"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withStudentNumber(\"A7890789X\")","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"anna@example.com\").withMod(\"CS3244\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"kxshxsh"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withStudentNumber(\"A1001001L\")","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"stefan@example.com\").withMod(\"CS2100\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"kxshxsh"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withStudentNumber(\"A0000001S\")","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(\"hans@example.com\").withMod(\"CS2100\").withGroup(\"T01\").build();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"kxshxsh"},"content":"    public static final Person AMY \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"kxshxsh"},"content":"            new PersonBuilder().withName(VALID_NAME_AMY).withStudentNumber(VALID_STUDENT_NUMBER_AMY)","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(VALID_EMAIL_AMY).withMod(VALID_MOD_AMY)","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"zawedcvg"},"content":"            .withGroup(VALID_GROUP_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-11"},{"lineNumber":58,"author":{"gitId":"kxshxsh"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"kxshxsh"},"content":"            .withStudentNumber(VALID_STUDENT_NUMBER_BOB)","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"zawedcvg"},"content":"            .withEmail(VALID_EMAIL_BOB).withMod(VALID_MOD_BOB)","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"zawedcvg"},"content":"            .withGroup(VALID_GROUP_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"s7manth"},"content":"     * Returns an {@code ContactList} with all the typical persons.","lastModifiedDate":"2022-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"s7manth"},"content":"    public static ContactList getTypicalContactList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"s7manth"},"content":"        ContactList ab \u003d new ContactList();","lastModifiedDate":"2022-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":46,"kxshxsh":19,"s7manth":4,"zawedcvg":13}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"FestiveCat"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ASSIGNMENT;","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"FestiveCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_HOMEWORK;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"FestiveCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"FestiveCat"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"FestiveCat"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.PriorityTaskList;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"FestiveCat"},"content":"import seedu.address.model.tasks.Task;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"FestiveCat"},"content":"public class TypicalTasks {","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"FestiveCat"},"content":"    public static final Task HOMEWORK \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"FestiveCat"},"content":"            new TaskBuilder().withDesc(VALID_DESCRIPTION_HOMEWORK).withDeadline(VALID_DEADLINE_HOMEWORK).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"FestiveCat"},"content":"    public static final Task ASSIGNMENT \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"FestiveCat"},"content":"            new TaskBuilder().withDesc(VALID_DESCRIPTION_ASSIGNMENT).withDeadline(VALID_DEADLINE_ASSIGNMENT).build();","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"FestiveCat"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"FestiveCat"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"FestiveCat"},"content":"     * Returns an {@code ContactList} with all the typical persons.","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"FestiveCat"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"FestiveCat"},"content":"    public static PriorityTaskList getTypicalTaskList() {","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"FestiveCat"},"content":"        PriorityTaskList tl \u003d new PriorityTaskList();","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"FestiveCat"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"FestiveCat"},"content":"            tl.add(task);","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"FestiveCat"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"FestiveCat"},"content":"        return tl;","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"FestiveCat"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"FestiveCat"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"FestiveCat"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(HOMEWORK, ASSIGNMENT));","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"FestiveCat"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"FestiveCat"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"FestiveCat":37}}]
