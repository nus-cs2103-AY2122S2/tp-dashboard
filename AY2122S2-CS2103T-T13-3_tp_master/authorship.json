[{"path":".github/PULL_REQUEST_TEMPLATE.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"## Related issues","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"\u003c!-- Please link to the Github issue(s) this PR resolves (type `#` to autocomplete issue) --\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"## Description","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"\u003c!-- Describe your changes --\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"\u003c!-- If it affects UI, screenshots are highly recommended --\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"## How to test","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"\u003c!-- List down the steps to test this, if applicable --\u003e","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"## Other information","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"\u003c!--","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"This section is optional, you may include things like:","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"- What is left to be done after this","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"- Any questions or assistance you may require","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"--\u003e","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"NatalieTanML":16}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"# LinkyTime","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"[![CI Status](https://github.com/AY2122S2-CS2103T-T13-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-T13-3/tp/actions)","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-T13-3/tp/branch/master/graph/badge.svg?token\u003dNOT8TCOLWS)](https://codecov.io/gh/AY2122S2-CS2103T-T13-3/tp)","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"**LinkyTime** is a cross-platform desktop application designed for NUS Computer Science students to efficiently keep track of their online meetings and classes. The application is optimized for use via the Command Line Interface (CLI).","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"## Quick Start","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"* If this is your first time using **LinkyTime**, check out the [_Quick Start_ section of the **User Guide**](https://ay2122s2-cs2103t-t13-3.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"* If you are interested in contributing to **LinkyTime**, the [**Developer Guide**](https://ay2122s2-cs2103t-t13-3.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"* If you would like to learn more about the team behind **LinkyTime**, you may check out [**About Us**](https://ay2122s2-cs2103t-t13-3.github.io/tp/AboutUs.html).","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"## Acknowledgements","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"NatalieTanML":15,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"### Chua Bing Quan","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"\u003cimg src\u003d\"images/chuabingquan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"[[github](https://github.com/chuabingquan)]","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"[[portfolio](team/chuabingquan.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"* Role: Developer","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"* Responsibilities: Software Design","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"justinekoh"},"content":"### Justine Koh Yong Tai","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"justinekoh"},"content":"\u003cimg src\u003d\"images/justinekoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"justinekoh"},"content":"[[github](http://github.com/justinekoh)]","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"justinekoh"},"content":"[[portfolio](team/justinekoh.md)]","lastModifiedDate":"2022-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"* Role: Developer","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"justinekoh"},"content":"* Responsibilities: Software Design, Deadlines and Deliverables","lastModifiedDate":"2022-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xMashedxTomatox"},"content":"### Tan Chen Xiang","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"xMashedxTomatox"},"content":"\u003cimg src\u003d\"images/xmashedxtomatox.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"xMashedxTomatox"},"content":"[[github](https://github.com/xMashedxTomatox)]","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"xMashedxTomatox"},"content":"[[portfolio](team/xmashedxtomatox.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"xMashedxTomatox"},"content":"* Responsibilities: Software Design, Deadlines and Deliverables","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"### Tan Ming Li, Natalie","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"\u003cimg src\u003d\"images/natalietanml.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"[[github](http://github.com/NatalieTanML)]","lastModifiedDate":"2022-02-23"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"[[portfolio](team/natalietanml.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"* Responsibilities: Code Quality, Deadlines and Deliverables","lastModifiedDate":"2022-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Gnoznaug"},"content":"### Zhou GuanZong","lastModifiedDate":"2022-02-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Gnoznaug"},"content":"\u003cimg src\u003d\"images/gnoznaug.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Gnoznaug"},"content":"[[github](http://github.com/Gnoznaug)]","lastModifiedDate":"2022-02-24"},{"lineNumber":57,"author":{"gitId":"Gnoznaug"},"content":"[[portfolio](team/gnoznaug.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Gnoznaug"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"NatalieTanML":5,"chuabingquan":6,"justinekoh":5,"xMashedxTomatox":5,"Gnoznaug":6,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"chuabingquan"},"content":"Aiken Dueet is a Year 2 NUS Computer Science student. He is currently taking his modules online due to COVID-19. He:","lastModifiedDate":"2022-02-22"},{"lineNumber":261,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":262,"author":{"gitId":"chuabingquan"},"content":"* has a need to manage a large number of online meeting links and details","lastModifiedDate":"2022-02-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"chuabingquan"},"content":"**Value proposition**: manage online meeting links much quicker than a typical mouse/GUI driven app","lastModifiedDate":"2022-02-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"NatalieTanML"},"content":"| Priority | As a …                      | I want to …                   | So that I can…                                         |","lastModifiedDate":"2022-02-28"},{"lineNumber":275,"author":{"gitId":"chuabingquan"},"content":"|----------|-----------------------------|-------------------------------|--------------------------------------------------------|","lastModifiedDate":"2022-02-22"},{"lineNumber":276,"author":{"gitId":"chuabingquan"},"content":"| `* * *`  | new user                    | see usage instructions        | refer to instructions if I forget how to use the App   |","lastModifiedDate":"2022-02-22"},{"lineNumber":277,"author":{"gitId":"chuabingquan"},"content":"| `* * *`  | user                        | view all my entries           | view all my entries in one place                       |","lastModifiedDate":"2022-02-22"},{"lineNumber":278,"author":{"gitId":"chuabingquan"},"content":"| `* * *`  | user                        | add a new entry               | add my online lecture details                          |","lastModifiedDate":"2022-02-22"},{"lineNumber":279,"author":{"gitId":"chuabingquan"},"content":"| `* * *`  | user                        | edit an existing entry        | add my online lecture details                          |","lastModifiedDate":"2022-02-22"},{"lineNumber":280,"author":{"gitId":"chuabingquan"},"content":"| `* * *`  | user                        | delete an entry               | remove old entries that I don’t need anymore           |","lastModifiedDate":"2022-02-22"},{"lineNumber":281,"author":{"gitId":"chuabingquan"},"content":"| `* *`    | user with outdated meetings | clear all entries             | remove old entries from the previous semester          |","lastModifiedDate":"2022-02-22"},{"lineNumber":282,"author":{"gitId":"chuabingquan"},"content":"| `* *`    | user                        | open a meeting link           | open my meeting quickly                                |","lastModifiedDate":"2022-02-22"},{"lineNumber":283,"author":{"gitId":"chuabingquan"},"content":"| `* *`    | user with multiple meetings | search for entries            | find an entry matching a specific criteria             |","lastModifiedDate":"2022-02-22"},{"lineNumber":284,"author":{"gitId":"chuabingquan"},"content":"| `*`      | user with multiple meetings | sort entries alphabetically   | easily sieve through my entries in a familiar order    |","lastModifiedDate":"2022-02-22"},{"lineNumber":285,"author":{"gitId":"chuabingquan"},"content":"| `* *`    | user with multiple meetings | sort entries chronologically  | know what is my next upcoming meeting                  |","lastModifiedDate":"2022-02-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"NatalieTanML"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"chuabingquan"},"content":"## Use cases","lastModifiedDate":"2022-02-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"chuabingquan"},"content":"For all use cases below, the **System** is `LinkyTime` and the **Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2022-02-22"},{"lineNumber":292,"author":{"gitId":"chuabingquan"},"content":"All use cases are prefixed with `UC`, followed by a three-digit use case number.","lastModifiedDate":"2022-02-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"chuabingquan"},"content":"### UC-001: List all entries","lastModifiedDate":"2022-02-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"chuabingquan"},"content":"1. User requests to list all entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":299,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows a list of all entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":307,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":308,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":309,"author":{"gitId":"chuabingquan"},"content":"### UC-002: Add an entry","lastModifiedDate":"2022-02-22"},{"lineNumber":310,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":311,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":312,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":313,"author":{"gitId":"chuabingquan"},"content":"1. User requests to add a new entry to the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":314,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime adds a new entry with given parameters in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":316,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":317,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":318,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":319,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":320,"author":{"gitId":"chuabingquan"},"content":"* 1a. The user does not include the required parameters with the command.  ","lastModifiedDate":"2022-02-22"},{"lineNumber":321,"author":{"gitId":"chuabingquan"},"content":"  * 1a1. LinkyTime shows an error message stating which parameters are required.","lastModifiedDate":"2022-02-22"},{"lineNumber":322,"author":{"gitId":"chuabingquan"},"content":"   ","lastModifiedDate":"2022-02-22"},{"lineNumber":323,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":324,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":325,"author":{"gitId":"chuabingquan"},"content":"* 1b. The user does not follow the format of the command.","lastModifiedDate":"2022-02-22"},{"lineNumber":326,"author":{"gitId":"Gnoznaug"},"content":"  * 1b1. LinkyTime shows an error message stating the correct format of the command.","lastModifiedDate":"2022-02-23"},{"lineNumber":327,"author":{"gitId":"chuabingquan"},"content":"   ","lastModifiedDate":"2022-02-22"},{"lineNumber":328,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":329,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":330,"author":{"gitId":"chuabingquan"},"content":"### UC-003: Edit an entry","lastModifiedDate":"2022-02-22"},{"lineNumber":331,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":332,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":333,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":334,"author":{"gitId":"chuabingquan"},"content":"1. User requests to list entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":335,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows the list of entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":336,"author":{"gitId":"chuabingquan"},"content":"3. User requests to edit a specific entry based on the index from the list displayed in step 2.","lastModifiedDate":"2022-02-22"},{"lineNumber":337,"author":{"gitId":"chuabingquan"},"content":"4. LinkyTime edits the entry and saves the changes.","lastModifiedDate":"2022-02-22"},{"lineNumber":338,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":339,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":340,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":341,"author":{"gitId":"NatalieTanML"},"content":"**Extensions**","lastModifiedDate":"2022-02-28"},{"lineNumber":342,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"chuabingquan"},"content":"  * 3a1. LinkyTime shows an error message stating that the given index is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":350,"author":{"gitId":"chuabingquan"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-02-22"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":352,"author":{"gitId":"chuabingquan"},"content":"* 3b. No arguments were given.","lastModifiedDate":"2022-02-22"},{"lineNumber":353,"author":{"gitId":"chuabingquan"},"content":"  * 3b1. LinkyTime shows an error message stating that at least one field must be edited.","lastModifiedDate":"2022-02-22"},{"lineNumber":354,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"chuabingquan"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-02-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":357,"author":{"gitId":"chuabingquan"},"content":"* 3c. The user does not follow the format of the command.","lastModifiedDate":"2022-02-22"},{"lineNumber":358,"author":{"gitId":"chuabingquan"},"content":"  * 3c1. LinkyTime shows an error message stating the correct format of the command.","lastModifiedDate":"2022-02-22"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"chuabingquan"},"content":"### UC-004: Delete an entry","lastModifiedDate":"2022-02-22"},{"lineNumber":363,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":364,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":365,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":366,"author":{"gitId":"chuabingquan"},"content":"1. User requests to list entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":367,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows a list of entries.","lastModifiedDate":"2022-02-22"},{"lineNumber":368,"author":{"gitId":"chuabingquan"},"content":"3. User requests to delete a specific entry in the list based on the index from the list displayed in step 2.","lastModifiedDate":"2022-02-22"},{"lineNumber":369,"author":{"gitId":"chuabingquan"},"content":"4. LinkyTime deletes the entry and saves the changes.","lastModifiedDate":"2022-02-22"},{"lineNumber":370,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":371,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":372,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":373,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":374,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":375,"author":{"gitId":"chuabingquan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":376,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":377,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":378,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":379,"author":{"gitId":"chuabingquan"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":380,"author":{"gitId":"chuabingquan"},"content":"  * 3a1. LinkyTime shows an error message stating that the given index is invalid.","lastModifiedDate":"2022-02-22"},{"lineNumber":381,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":382,"author":{"gitId":"chuabingquan"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-02-22"},{"lineNumber":383,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":384,"author":{"gitId":"chuabingquan"},"content":"### UC-005: Clear all entries","lastModifiedDate":"2022-02-22"},{"lineNumber":385,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":386,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":387,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":388,"author":{"gitId":"chuabingquan"},"content":"1. User chooses to clear all entries in the list.","lastModifiedDate":"2022-02-22"},{"lineNumber":389,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime deletes all entries and saves the changes.","lastModifiedDate":"2022-02-22"},{"lineNumber":390,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":391,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":392,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":393,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":394,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":395,"author":{"gitId":"chuabingquan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":396,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":397,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":398,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":399,"author":{"gitId":"chuabingquan"},"content":"### UC-006: Open a meeting","lastModifiedDate":"2022-02-22"},{"lineNumber":400,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":401,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":402,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":403,"author":{"gitId":"chuabingquan"},"content":"1. User requests to open a meeting link.","lastModifiedDate":"2022-02-22"},{"lineNumber":404,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime opens the default browser with the given link.","lastModifiedDate":"2022-02-22"},{"lineNumber":405,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":406,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":407,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":408,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":409,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":410,"author":{"gitId":"chuabingquan"},"content":"* 2a. The application does not have permissions to open the browser. ","lastModifiedDate":"2022-02-22"},{"lineNumber":411,"author":{"gitId":"chuabingquan"},"content":"  * 2a1. The application displays an error message.","lastModifiedDate":"2022-02-22"},{"lineNumber":412,"author":{"gitId":"chuabingquan"},"content":"  ","lastModifiedDate":"2022-02-22"},{"lineNumber":413,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":414,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":415,"author":{"gitId":"chuabingquan"},"content":"### UC-007: Find entries","lastModifiedDate":"2022-02-22"},{"lineNumber":416,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":417,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":418,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":419,"author":{"gitId":"chuabingquan"},"content":"1. User searches for an entry by a search term.","lastModifiedDate":"2022-02-22"},{"lineNumber":420,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows a list of entries whose name, tags, or date contains the search term.","lastModifiedDate":"2022-02-22"},{"lineNumber":421,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":422,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":423,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":424,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":425,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":426,"author":{"gitId":"chuabingquan"},"content":"* 2a. There are no entries matching the search term.","lastModifiedDate":"2022-02-22"},{"lineNumber":427,"author":{"gitId":"chuabingquan"},"content":"  * 2a1. An empty list is displayed.","lastModifiedDate":"2022-02-22"},{"lineNumber":428,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":429,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":430,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":431,"author":{"gitId":"chuabingquan"},"content":"### UC-008: Sort entries alphabetically","lastModifiedDate":"2022-02-22"},{"lineNumber":432,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":433,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":434,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":435,"author":{"gitId":"chuabingquan"},"content":"1. User chooses to sort entries by A-Z.","lastModifiedDate":"2022-02-22"},{"lineNumber":436,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows a list of entries that is sorted from A-Z.","lastModifiedDate":"2022-02-22"},{"lineNumber":437,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":438,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":439,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":440,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":441,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":442,"author":{"gitId":"chuabingquan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":444,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":445,"author":{"gitId":"chuabingquan"},"content":"   ","lastModifiedDate":"2022-02-22"},{"lineNumber":446,"author":{"gitId":"chuabingquan"},"content":"* 2b. The entries are already sorted from A-Z.","lastModifiedDate":"2022-02-22"},{"lineNumber":447,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":448,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":449,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":450,"author":{"gitId":"chuabingquan"},"content":"### UC-009: Sort entries chronologically","lastModifiedDate":"2022-02-22"},{"lineNumber":451,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":452,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":453,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":454,"author":{"gitId":"chuabingquan"},"content":"1. User chooses to sort entries by the date.","lastModifiedDate":"2022-02-22"},{"lineNumber":455,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime shows a list of entries that is sorted in descending order.","lastModifiedDate":"2022-02-22"},{"lineNumber":456,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":457,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":458,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":459,"author":{"gitId":"chuabingquan"},"content":"**Extensions**","lastModifiedDate":"2022-02-22"},{"lineNumber":460,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":461,"author":{"gitId":"chuabingquan"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-02-22"},{"lineNumber":462,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":463,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":464,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":465,"author":{"gitId":"chuabingquan"},"content":"* 2b. The entries are already sorted by the date.","lastModifiedDate":"2022-02-22"},{"lineNumber":466,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":467,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":468,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":469,"author":{"gitId":"chuabingquan"},"content":"### UC-010: Access help","lastModifiedDate":"2022-02-22"},{"lineNumber":470,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":471,"author":{"gitId":"chuabingquan"},"content":"**MSS**","lastModifiedDate":"2022-02-22"},{"lineNumber":472,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":473,"author":{"gitId":"chuabingquan"},"content":"1. User requests to see the list of commands available.","lastModifiedDate":"2022-02-22"},{"lineNumber":474,"author":{"gitId":"chuabingquan"},"content":"2. LinkyTime opens a dialog box with a link to the User Guide.","lastModifiedDate":"2022-02-22"},{"lineNumber":475,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":476,"author":{"gitId":"chuabingquan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-22"},{"lineNumber":477,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":478,"author":{"gitId":"NatalieTanML"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"chuabingquan"},"content":"2. Should be able to hold up to 1000 entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-02-22"},{"lineNumber":484,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"chuabingquan"},"content":"4. A user should be familiar with the basic commands within half an hour of usage.","lastModifiedDate":"2022-02-22"},{"lineNumber":486,"author":{"gitId":"chuabingquan"},"content":"5. Should be portable to allow transferring of data between different computers.","lastModifiedDate":"2022-02-22"},{"lineNumber":487,"author":{"gitId":"chuabingquan"},"content":"6. Should not require an installer.","lastModifiedDate":"2022-02-22"},{"lineNumber":488,"author":{"gitId":"chuabingquan"},"content":"7. Should not depend on external/remote servers.","lastModifiedDate":"2022-02-22"},{"lineNumber":489,"author":{"gitId":"chuabingquan"},"content":"8. Should not depend on a Database Management System (DBMS).","lastModifiedDate":"2022-02-22"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"NatalieTanML"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2022-02-28"},{"lineNumber":494,"author":{"gitId":"NatalieTanML"},"content":"* **Entry**: A meeting containing the details such as the meeting link, name, date, and other fields.","lastModifiedDate":"2022-02-28"},{"lineNumber":495,"author":{"gitId":"NatalieTanML"},"content":"* **List**: List of all entries that are currently saved in the program. May also be referred to as an entry list, or a meeting entry list.","lastModifiedDate":"2022-02-28"},{"lineNumber":496,"author":{"gitId":"NatalieTanML"},"content":"* **NUS**: The National University of Singapore.","lastModifiedDate":"2022-02-28"},{"lineNumber":497,"author":{"gitId":"chuabingquan"},"content":"* **Command**: A keyword that defines an action for the program to perform when entered into the CLI.","lastModifiedDate":"2022-02-22"},{"lineNumber":498,"author":{"gitId":"chuabingquan"},"content":"* **Search Term**: A substring that is contained in the name/tags of a meeting.","lastModifiedDate":"2022-02-22"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-28"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NatalieTanML":8,"chuabingquan":184,"Gnoznaug":1,"-":358}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"## Introduction","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"**LinkyTime** is a desktop app for NUS students to organize their online meeting links, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, **LinkyTime** can get your meeting management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"## Quick start","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"2. Download the latest `linkytime.jar` from [here](https://github.com/AY2122S2-CS2103T-T13-3/tp/releases).","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the app.","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"4. Double-click the file to start the app. A GUI similar to the one shown below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"    ","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"    ![Ui](images/Ui.png)","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will list all the entries.\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    Some example commands you can try:","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"    * `list` : Lists all meeting entries.","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"    * `add l/https://meet.google.com n/CS2103T Lecture d/Friday 2pm` : Adds a meeting named `CS2103T Lecture` to the list of meeting entries.","lastModifiedDate":"2022-02-28"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"    * `delete 3` : Deletes the 3rd entry shown in the current list.","lastModifiedDate":"2022-02-28"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2022-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"## Command Format","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"  e.g. in `add l/LINK`, `LINK` is a parameter which can be used as `add l/meet.google.com`.","lastModifiedDate":"2022-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"  e.g. `l/LINK [t/TAG]` can be used as `l/meet.google.com t/lecture` or as `l/meet.google.com`.","lastModifiedDate":"2022-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/lecture`, `t/lecture t/cs2103t` etc.","lastModifiedDate":"2022-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"  e.g. if the command specifies `l/LINK n/MEETING_NAME`, `n/MEETING_NAME l/LINK` is also acceptable.","lastModifiedDate":"2022-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-02-23"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"  e.g. if you specify `n/CS2103T Lecture n/CS2103T Tutorial`, only `n/CS2103T Tutorial` will be taken.","lastModifiedDate":"2022-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"NatalieTanML"},"content":"## Features","lastModifiedDate":"2022-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"NatalieTanML"},"content":"This section describes each of the commands and features available in **LinkyTime**.","lastModifiedDate":"2022-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":73,"author":{"gitId":"NatalieTanML"},"content":"### Meeting Entry Management","lastModifiedDate":"2022-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"NatalieTanML"},"content":"#### Add a meeting entry: `add`","lastModifiedDate":"2022-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"justinekoh"},"content":"Adds a meeting entry into the entry list.","lastModifiedDate":"2022-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"NatalieTanML"},"content":"Format: `add n/MEETING_NAME l/LINK d/DATETIME [t/TAG]…​`","lastModifiedDate":"2022-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"NatalieTanML"},"content":"Parameters:","lastModifiedDate":"2022-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":83,"author":{"gitId":"NatalieTanML"},"content":"* `MEETING_NAME` The name of the meeting entry.","lastModifiedDate":"2022-02-23"},{"lineNumber":84,"author":{"gitId":"NatalieTanML"},"content":"* `LINK` The link to the online meeting.","lastModifiedDate":"2022-02-23"},{"lineNumber":85,"author":{"gitId":"NatalieTanML"},"content":"* `DATETIME` The date and starting time of the meeting.","lastModifiedDate":"2022-02-23"},{"lineNumber":86,"author":{"gitId":"NatalieTanML"},"content":"* `TAG` The tags associated with the meeting entry.","lastModifiedDate":"2022-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":90,"author":{"gitId":"NatalieTanML"},"content":"* `add n/CS2103T Lecture l/meet.google.com d/Friday 2pm t/lecture t/cs2103t`","lastModifiedDate":"2022-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"xMashedxTomatox"},"content":"#### List all meeting entries : `list`","lastModifiedDate":"2022-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"xMashedxTomatox"},"content":"View all meeting entries in the entry list and display their respective details.","lastModifiedDate":"2022-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"NatalieTanML"},"content":"Format: `list`","lastModifiedDate":"2022-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"xMashedxTomatox"},"content":"Details include:","lastModifiedDate":"2022-02-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":101,"author":{"gitId":"NatalieTanML"},"content":"* Meeting link","lastModifiedDate":"2022-02-28"},{"lineNumber":102,"author":{"gitId":"xMashedxTomatox"},"content":"* Meeting name","lastModifiedDate":"2022-02-24"},{"lineNumber":103,"author":{"gitId":"NatalieTanML"},"content":"* Meeting date and time","lastModifiedDate":"2022-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"justinekoh"},"content":"#### Delete a meeting entry : `delete`","lastModifiedDate":"2022-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"justinekoh"},"content":"Deletes the specified meeting entry and all associated fields from the entry list.","lastModifiedDate":"2022-02-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"justinekoh"},"content":"* Deletes the meeting entry at the specified `INDEX`.","lastModifiedDate":"2022-02-26"},{"lineNumber":113,"author":{"gitId":"justinekoh"},"content":"* The index refers to the index number shown in the displayed entry list.","lastModifiedDate":"2022-02-26"},{"lineNumber":114,"author":{"gitId":"justinekoh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​ that is within the range of entries.","lastModifiedDate":"2022-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"justinekoh"},"content":"* `list` followed by `delete 2` deletes the 2nd meeting entry in the entry list.","lastModifiedDate":"2022-02-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":120,"author":{"gitId":"NatalieTanML"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2022-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"NatalieTanML"},"content":"Clears all meeting entries from the entry list.","lastModifiedDate":"2022-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":127,"author":{"gitId":"NatalieTanML"},"content":"### General","lastModifiedDate":"2022-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":129,"author":{"gitId":"NatalieTanML"},"content":"#### Viewing help : `help`","lastModifiedDate":"2022-02-23"},{"lineNumber":130,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":131,"author":{"gitId":"NatalieTanML"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-02-23"},{"lineNumber":132,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":133,"author":{"gitId":"NatalieTanML"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2022-02-23"},{"lineNumber":134,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":135,"author":{"gitId":"NatalieTanML"},"content":"Format: `help`","lastModifiedDate":"2022-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":138,"author":{"gitId":"NatalieTanML"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2022-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":145,"author":{"gitId":"NatalieTanML"},"content":"#### Saving the data","lastModifiedDate":"2022-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"chuabingquan"},"content":"Your meeting entries are saved to your computer automatically upon running any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-02-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":150,"author":{"gitId":"NatalieTanML"},"content":"#### Editing the data file","lastModifiedDate":"2022-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":152,"author":{"gitId":"chuabingquan"},"content":"The meeting entries are saved in a JSON file at `[JAR file location]/data/app.json`. Advanced users are welcome to update their entries directly by editing that file.","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":155,"author":{"gitId":"chuabingquan"},"content":"If your changes to the data file makes its format invalid, LinkyTime will discard all data and start with an empty data file on the next run.","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-02-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":159,"author":{"gitId":"NatalieTanML"},"content":"#### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2022-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"NatalieTanML"},"content":"**A**: Install the app in the other computer and overwrite the empty `app.json` data file it creates with the equivalent `app.json` data file from your previous LinkyTime installation.","lastModifiedDate":"2022-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Gnoznaug"},"content":"**Add** | `add n/MEETING_NAME l/LINK d/DATETIME [t/TAG]…​` \u003cbr\u003e e.g., `add n/CS2103T Lecture l/meet.google.com d/Friday 2pm t/lecture t/cs2103t`","lastModifiedDate":"2022-02-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"Gnoznaug"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2022-02-26"},{"lineNumber":179,"author":{"gitId":"Gnoznaug"},"content":"**Clear** | `clear`","lastModifiedDate":"2022-02-26"},{"lineNumber":180,"author":{"gitId":"NatalieTanML"},"content":"**Edit** | _Coming soon_","lastModifiedDate":"2022-02-28"},{"lineNumber":181,"author":{"gitId":"NatalieTanML"},"content":"**Find** | _Coming soon_","lastModifiedDate":"2022-02-28"},{"lineNumber":182,"author":{"gitId":"NatalieTanML"},"content":"**Sort** | _Coming soon_","lastModifiedDate":"2022-02-28"},{"lineNumber":183,"author":{"gitId":"NatalieTanML"},"content":"**Open** | _Coming soon_","lastModifiedDate":"2022-02-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"Gnoznaug"},"content":"**Exit** | `exit`","lastModifiedDate":"2022-02-26"}],"authorContributionMap":{"NatalieTanML":59,"chuabingquan":3,"justinekoh":7,"xMashedxTomatox":4,"Gnoznaug":4,"-":108}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"chuabingquan"},"content":"    content: \"LinkyTime\";","lastModifiedDate":"2022-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"chuabingquan":1,"-":294}},{"path":"docs/team/chuabingquan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"title: Bing Quan\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"### Project: LinkyTime","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"**LinkyTime** is a desktop application for NUS Computer Science students to manage their online meeting links. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAY2122S2-CS2103T-T13-3%2Ftp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dchuabingquan\u0026tabRepo\u003dAY2122S2-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"    * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"    ","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":44}},{"path":"docs/team/gnoznaug.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gnoznaug"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"Gnoznaug"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"Gnoznaug"},"content":"title: GuanZong\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"Gnoznaug"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"Gnoznaug"},"content":"### Project: LinkyTime","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"Gnoznaug"},"content":"**LinkyTime** is a desktop application for NUS Computer Science students to manage their online meeting links. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"Gnoznaug"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"Gnoznaug"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"Gnoznaug"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"Gnoznaug"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"Gnoznaug"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"Gnoznaug"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"Gnoznaug"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAY2122S2-CS2103T-T13-3%2Ftp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dGnoznaug\u0026tabRepo\u003dAY2122S2-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"Gnoznaug"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"Gnoznaug"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"Gnoznaug"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"Gnoznaug"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"Gnoznaug"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"Gnoznaug"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"Gnoznaug"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"Gnoznaug"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"Gnoznaug"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"Gnoznaug"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"Gnoznaug"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"Gnoznaug"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"Gnoznaug"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"Gnoznaug"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"Gnoznaug"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"Gnoznaug"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"Gnoznaug"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"Gnoznaug"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"Gnoznaug"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"Gnoznaug"},"content":"","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"NatalieTanML":1,"Gnoznaug":44}},{"path":"docs/team/justinekoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"justinekoh"},"content":"title: Justine\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"justinekoh"},"content":"### Project: LinkyTime","lastModifiedDate":"2022-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"justinekoh"},"content":"**LinkyTime** is a desktop application for NUS Computer Science students to manage their online meeting links. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAY2122S2-CS2103T-T13-3%2Ftp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djustinekoh\u0026tabRepo\u003dAY2122S2-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"NatalieTanML":1,"justinekoh":3,"-":40}},{"path":"docs/team/natalietanml.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"layout: page","lastModifiedDate":"2022-02-23"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"title: Natalie\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-23"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"---","lastModifiedDate":"2022-02-23"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"### Project: LinkyTime","lastModifiedDate":"2022-02-23"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"**LinkyTime** is a desktop application for NUS Computer Science students to manage their online meeting links. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-23"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-23"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-23"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-23"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-23"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-23"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-23"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-23"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAY2122S2-CS2103T-T13-3%2Ftp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dNatalieTanML\u0026tabRepo\u003dAY2122S2-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"* **Project management**:","lastModifiedDate":"2022-02-23"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-23"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-23"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-23"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-23"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-23"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"    * User Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-23"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-23"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-23"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"* **Community**:","lastModifiedDate":"2022-02-23"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-23"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-23"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-23"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"* **Tools**:","lastModifiedDate":"2022-02-23"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-23"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-23"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    ","lastModifiedDate":"2022-02-23"}],"authorContributionMap":{"NatalieTanML":45}},{"path":"docs/team/xmashedxtomatox.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xMashedxTomatox"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"xMashedxTomatox"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"xMashedxTomatox"},"content":"title: Chen Xiang\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"xMashedxTomatox"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"xMashedxTomatox"},"content":"### Project: LinkyTime","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"xMashedxTomatox"},"content":"**LinkyTime** is a desktop application for NUS Computer Science students to manage their online meeting links. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"xMashedxTomatox"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"xMashedxTomatox"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"xMashedxTomatox"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"xMashedxTomatox"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"xMashedxTomatox"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"xMashedxTomatox"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"xMashedxTomatox"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dAY2122S2-CS2103T-T13-3%2Ftp\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-02-18\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dxMashedxTomatox\u0026tabRepo\u003dAY2122S2-CS2103T-T13-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2022-02-28"},{"lineNumber":21,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"xMashedxTomatox"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"xMashedxTomatox"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"xMashedxTomatox"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"xMashedxTomatox"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"xMashedxTomatox"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"xMashedxTomatox"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"xMashedxTomatox"},"content":"    * User Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"xMashedxTomatox"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"xMashedxTomatox"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"xMashedxTomatox"},"content":"    * Developer Guide:","lastModifiedDate":"2022-02-24"},{"lineNumber":34,"author":{"gitId":"xMashedxTomatox"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-02-24"},{"lineNumber":35,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"xMashedxTomatox"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"xMashedxTomatox"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"xMashedxTomatox"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-02-24"},{"lineNumber":39,"author":{"gitId":"xMashedxTomatox"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-02-24"},{"lineNumber":40,"author":{"gitId":"xMashedxTomatox"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-02-24"},{"lineNumber":41,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":42,"author":{"gitId":"xMashedxTomatox"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":43,"author":{"gitId":"xMashedxTomatox"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-02-24"},{"lineNumber":44,"author":{"gitId":"xMashedxTomatox"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"xMashedxTomatox"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"NatalieTanML":1,"xMashedxTomatox":44}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.storage.JsonLinkyTimeStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.storage.LinkyTimeStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"        LinkyTimeStorage linkyTimeStorage \u003d new JsonLinkyTimeStorage(userPrefs.getLinkyTimeFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, linkyTimeStorage);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"        Optional\u003cReadOnlyLinkyTime\u003e linkyTimeOptional;","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"        ReadOnlyLinkyTime initialData;","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"            linkyTimeOptional \u003d storage.readLinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"chuabingquan"},"content":"            if (!linkyTimeOptional.isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"chuabingquan"},"content":"                logger.info(\"Data file not found. Will be starting with a sample LinkyTime data.\");","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"chuabingquan"},"content":"            }","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"            initialData \u003d linkyTimeOptional.get();","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"chuabingquan"},"content":"            initialData \u003d new LinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"chuabingquan"},"content":"            initialData \u003d new LinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialData);","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuabingquan":22,"-":177}},{"path":"src/main/java/seedu/address/logic/AddressBookLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":" * API of the AddressBookLogic component.","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":" * This interface is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"public interface AddressBookLogic {","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"chuabingquan":28}},{"path":"src/main/java/seedu/address/logic/AddressBookLogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":" * The AddressBookLogicManager of the app.","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":" * This class is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"public class AddressBookLogicManager implements AddressBookLogic {","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"    private final Model model;","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"    private final Storage storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"     * Constructs a {@code AddressBookLogicManager} with the given {@code Model}.","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"    public AddressBookLogicManager(Model model, Storage storage) {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"        final CommandResult commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"        final Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"        return commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"        return model.getAddressBook();","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2022-03-10"},{"lineNumber":66,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":68,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-10"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":71,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":72,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"chuabingquan":72}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"public interface Logic extends AddressBookLogic {","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"     * Returns LinkyTime.","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"     * @see seedu.address.model.Model#getLinkyTime()","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"    ReadOnlyLinkyTime getLinkyTime();","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"    /** Returns an unmodifiable view of the filtered list of meeting entries */","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"    ObservableList\u003cMeetingEntry\u003e getFilteredMeetingEntryList();","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"     * Returns the user prefs\u0027 LinkyTime file path.","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"    Path getLinkyTimeFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chuabingquan":10,"-":40}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.parser.LinkyTimeParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"public class LogicManager extends AddressBookLogicManager implements Logic {","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"    private final LinkyTimeParser linkyTimeParser;","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"        super(model, storage);","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"        linkyTimeParser \u003d new LinkyTimeParser();","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"        // Try to execute the parser for LinkyTime. If it fails, execute the parser for AddressBook.","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"        // This is a temporary patch to allow the AddressBook parser/logic/command test cases to pass while the","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"        // current implementation transitions to LinkyTime\u0027s parser/logic/commands.","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"        // Meanwhile, it\u0027s advisable to transition the existing test cases to the equivalent LinkyTime implementation.","lastModifiedDate":"2022-03-10"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"        // E.g., adding `ListCommand` to the LinkyTime parser would prevent the equivalent `ListCommand` from the","lastModifiedDate":"2022-03-10"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"        // AddressBook parser from executing. As such, the output could be different and the existing `ListCommand` test","lastModifiedDate":"2022-03-10"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"        // cases would fail. TLDR, when you add a new command for the LinkyTime parser that already exists for the","lastModifiedDate":"2022-03-10"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"        // AddressBook parser, modify and repurpose the test cases affected to support the LinkyTime version of the","lastModifiedDate":"2022-03-10"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"        // command instead. Eventually, AddressBook operations would no longer be used and can be safely removed.","lastModifiedDate":"2022-03-10"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"        final CommandResult commandResult;","lastModifiedDate":"2022-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"            final Command command \u003d linkyTimeParser.parseCommand(commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2022-03-10"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"            return super.execute(commandText);","lastModifiedDate":"2022-03-10"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"            storage.saveLinkyTime(model.getLinkyTime());","lastModifiedDate":"2022-03-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"    public ReadOnlyLinkyTime getLinkyTime() {","lastModifiedDate":"2022-03-10"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"        return model.getLinkyTime();","lastModifiedDate":"2022-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"    public ObservableList\u003cMeetingEntry\u003e getFilteredMeetingEntryList() {","lastModifiedDate":"2022-03-10"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"        return model.getFilteredMeetingEntryList();","lastModifiedDate":"2022-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"    public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-10"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"        return model.getLinkyTimeFilePath();","lastModifiedDate":"2022-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chuabingquan":28,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":" * Clears the meeting entry list.","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Meeting entry list has been cleared!\";","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NatalieTanML":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/meetingentry/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.meetingentry;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"public class AddCommand {","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"NatalieTanML":4}},{"path":"src/main/java/seedu/address/logic/commands/person/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NatalieTanML":3,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/person/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NatalieTanML":3,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/person/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"NatalieTanML":3,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/person/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"NatalieTanML":3,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/person/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NatalieTanML":3,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.AddCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.DeleteCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.EditCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.FindCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":" * This class is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"NatalieTanML":9,"chuabingquan":1,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/LinkyTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-03-10"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-10"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-03-10"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-03-10"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-10"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-10"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-10"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-10"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":" * Parses user input.","lastModifiedDate":"2022-03-10"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-10"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"public class LinkyTimeParser {","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-03-10"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-03-10"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-10"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-03-10"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"     *","lastModifiedDate":"2022-03-10"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-03-10"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-10"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-10"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-03-10"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-03-10"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-10"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-03-10"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-03-10"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-03-10"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-03-10"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-03-10"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"        default:","lastModifiedDate":"2022-03-10"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-03-10"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-10"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-10"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-10"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-10"}],"authorContributionMap":{"chuabingquan":48}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.IsRecurring;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.MeetingDateTime;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.MeetingName;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.MeetingUrl;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":129,"author":{"gitId":"NatalieTanML"},"content":"    // region MeetingEntry","lastModifiedDate":"2022-03-08"},{"lineNumber":130,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":131,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":132,"author":{"gitId":"NatalieTanML"},"content":"     * Parses a {@code String meetingName} into a {@code MeetingName}.","lastModifiedDate":"2022-03-08"},{"lineNumber":133,"author":{"gitId":"NatalieTanML"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":134,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":135,"author":{"gitId":"NatalieTanML"},"content":"     * @throws ParseException if the given {@code meetingName} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":136,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":137,"author":{"gitId":"NatalieTanML"},"content":"    public static MeetingName parseMeetingName(String meetingName) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":138,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(meetingName);","lastModifiedDate":"2022-03-08"},{"lineNumber":139,"author":{"gitId":"NatalieTanML"},"content":"        String trimmedMeetingName \u003d meetingName.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":140,"author":{"gitId":"NatalieTanML"},"content":"        if (!MeetingName.isValidName(trimmedMeetingName)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":141,"author":{"gitId":"NatalieTanML"},"content":"            throw new ParseException(MeetingName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"NatalieTanML"},"content":"        return new MeetingName(trimmedMeetingName);","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":147,"author":{"gitId":"NatalieTanML"},"content":"     * Parses a {@code String meetingUrl} into a {@code MeetingUrl}.","lastModifiedDate":"2022-03-08"},{"lineNumber":148,"author":{"gitId":"NatalieTanML"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":149,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":150,"author":{"gitId":"NatalieTanML"},"content":"     * @throws ParseException if the given {@code meetingUrl} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":151,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"NatalieTanML"},"content":"    public static MeetingUrl parseMeetingUrl(String meetingUrl) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(meetingUrl);","lastModifiedDate":"2022-03-08"},{"lineNumber":154,"author":{"gitId":"NatalieTanML"},"content":"        String trimmedMeetingUrl \u003d meetingUrl.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":155,"author":{"gitId":"NatalieTanML"},"content":"        if (!MeetingUrl.isValidUrl(trimmedMeetingUrl)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":156,"author":{"gitId":"NatalieTanML"},"content":"            throw new ParseException(MeetingUrl.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":157,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":158,"author":{"gitId":"NatalieTanML"},"content":"        return new MeetingUrl(trimmedMeetingUrl);","lastModifiedDate":"2022-03-08"},{"lineNumber":159,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":160,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":161,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":162,"author":{"gitId":"NatalieTanML"},"content":"     * Parses a {@code String meetingDateTime} into a {@code MeetingDateTime}.","lastModifiedDate":"2022-03-08"},{"lineNumber":163,"author":{"gitId":"NatalieTanML"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":164,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":165,"author":{"gitId":"NatalieTanML"},"content":"     * @throws ParseException if the given {@code meetingDateTime} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":166,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":167,"author":{"gitId":"NatalieTanML"},"content":"    public static MeetingDateTime parseMeetingDateTime(String meetingDateTime) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":168,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(meetingDateTime);","lastModifiedDate":"2022-03-08"},{"lineNumber":169,"author":{"gitId":"NatalieTanML"},"content":"        String trimmedMeetingDateTime \u003d meetingDateTime.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":170,"author":{"gitId":"NatalieTanML"},"content":"        if (!MeetingDateTime.isValidDateTime(trimmedMeetingDateTime)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":171,"author":{"gitId":"NatalieTanML"},"content":"            throw new ParseException(MeetingDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":172,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":173,"author":{"gitId":"NatalieTanML"},"content":"        return new MeetingDateTime(trimmedMeetingDateTime);","lastModifiedDate":"2022-03-08"},{"lineNumber":174,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":175,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":176,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":177,"author":{"gitId":"NatalieTanML"},"content":"     * Parses a {@code String recurringStatus} into a {@code IsRecurring}.","lastModifiedDate":"2022-03-08"},{"lineNumber":178,"author":{"gitId":"NatalieTanML"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":179,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":180,"author":{"gitId":"NatalieTanML"},"content":"     * @throws ParseException if the given {@code recurringStatus} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":181,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":182,"author":{"gitId":"NatalieTanML"},"content":"    public static IsRecurring parseRecurringStatus(String recurringStatus) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":183,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(recurringStatus);","lastModifiedDate":"2022-03-08"},{"lineNumber":184,"author":{"gitId":"NatalieTanML"},"content":"        String trimmedRecurringStatus \u003d recurringStatus.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":185,"author":{"gitId":"NatalieTanML"},"content":"        if (!IsRecurring.isValidRecurringStatus(trimmedRecurringStatus)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":186,"author":{"gitId":"NatalieTanML"},"content":"            throw new ParseException(IsRecurring.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":187,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":188,"author":{"gitId":"NatalieTanML"},"content":"        return new IsRecurring(trimmedRecurringStatus);","lastModifiedDate":"2022-03-08"},{"lineNumber":189,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":190,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":191,"author":{"gitId":"NatalieTanML"},"content":"    // endregion","lastModifiedDate":"2022-03-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"NatalieTanML":68,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/meetingentry/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.parser.meetingentry;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"public class AddCommandParser {","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"NatalieTanML":4}},{"path":"src/main/java/seedu/address/logic/parser/person/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"NatalieTanML":7,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/person/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NatalieTanML":4,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/person/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NatalieTanML":7,"-":79}},{"path":"src/main/java/seedu/address/logic/parser/person/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"NatalieTanML":3,"-":31}},{"path":"src/main/java/seedu/address/model/AddressBookModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":" * The API of the AddressBook Model component.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":" * This interface is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"public interface AddressBookModel {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"     * Deletes the given person.","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"     * Adds the given person.","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"    void addPerson(Person person);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"chuabingquan"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":67}},{"path":"src/main/java/seedu/address/model/AddressBookModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":" * This class is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"public class AddressBookModelManager implements AddressBookModel {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"     * Initializes an AddressBookModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    public AddressBookModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"        return addressBook;","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"chuabingquan"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"chuabingquan"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"chuabingquan"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"chuabingquan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"chuabingquan"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"chuabingquan"},"content":"        return filteredPersons;","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"chuabingquan"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"chuabingquan"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"chuabingquan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"chuabingquan"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"chuabingquan"},"content":"        if (!(obj instanceof AddressBookModelManager)) {","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"chuabingquan"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"chuabingquan"},"content":"        // state check","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"chuabingquan"},"content":"        final AddressBookModelManager other \u003d (AddressBookModelManager) obj;","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"chuabingquan"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"chuabingquan"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":115}},{"path":"src/main/java/seedu/address/model/AddressBookUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":" * Represents Address Book User\u0027s preferences.","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":" * This class is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"public class AddressBookUserPrefs implements ReadOnlyAddressBookUserPrefs {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"        return addressBookFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"            return true;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"        if (!(other instanceof AddressBookUserPrefs)) { //this handles null as well.","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"            return false;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"        final AddressBookUserPrefs o \u003d (AddressBookUserPrefs) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"        return addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"        return Objects.hash(addressBookFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"        return \"\\nLocal data file location : \" + addressBookFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":57}},{"path":"src/main/java/seedu/address/model/LinkyTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntryList;","lastModifiedDate":"2022-03-10"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":" * Wraps all data of LinkyTime","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":" * Duplicates are not allowed (by .equals comparison)","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"public class LinkyTime implements ReadOnlyLinkyTime {","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"    private final MeetingEntryList meetingEntries;","lastModifiedDate":"2022-03-10"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"    /*","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"     *   among constructors.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        meetingEntries \u003d new MeetingEntryList();","lastModifiedDate":"2022-03-10"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"    public LinkyTime() {}","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"     * Creates a LinkyTime using the MeetingEntries in the {@code toBeCopied}","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"    public LinkyTime(ReadOnlyLinkyTime toBeCopied) {","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"        this();","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"     * Replaces the contents of the meeting entry list with {@code meetingEntries}.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"     * {@code meetingEntries} must not contain duplicate meeting entries.","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"    public void setMeetingEntries(List\u003cMeetingEntry\u003e meetingEntries) {","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"        this.meetingEntries.setMeetingEntries(meetingEntries);","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"     * Resets the existing data of this {@code LinkyTime} with {@code newData}.","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"    public void resetData(ReadOnlyLinkyTime newData) {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"        setMeetingEntries(newData.getMeetingEntryList());","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"    //// meeting-entry-level operations","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"     * Returns true if a meeting entry that is identical to {@code meetingEntry} exists in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"    public boolean hasMeetingEntry(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"chuabingquan"},"content":"        return meetingEntries.contains(meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"     * Adds a meeting entry to LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"chuabingquan"},"content":"     * The meeting entry must not already exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"    public void addMeetingEntry(MeetingEntry m) {","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"        meetingEntries.add(m);","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"     * Replaces the given meeting entry {@code target} in the list with {@code editedMeetingEntry}.","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"     * {@code target} must exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"chuabingquan"},"content":"    public void setMeetingEntry(MeetingEntry target, MeetingEntry editedMeetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(editedMeetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"        meetingEntries.setMeetingEntry(target, editedMeetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"chuabingquan"},"content":"     * Removes {@code key} from {@code LinkyTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"chuabingquan"},"content":"     * {@code key} must exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"chuabingquan"},"content":"    public void removeMeetingEntry(MeetingEntry key) {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"        meetingEntries.remove(key);","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"chuabingquan"},"content":"    //// util methods","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"    public String toString() {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"chuabingquan"},"content":"        return meetingEntries.asUnmodifiableObservableList().size() + \" meeting entries\";","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"chuabingquan"},"content":"        // TODO: refine later","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"    public ObservableList\u003cMeetingEntry\u003e getMeetingEntryList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"        return meetingEntries.asUnmodifiableObservableList();","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"chuabingquan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"chuabingquan"},"content":"                || (other instanceof LinkyTime // instanceof handles nulls","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"chuabingquan"},"content":"                \u0026\u0026 meetingEntries.equals(((LinkyTime) other).meetingEntries));","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"chuabingquan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-09"},{"lineNumber":117,"author":{"gitId":"chuabingquan"},"content":"        return meetingEntries.hashCode();","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"public interface Model extends AddressBookModel {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"    Predicate\u003cMeetingEntry\u003e PREDICATE_SHOW_ALL_MEETING_ENTRIES \u003d unused -\u003e true;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"     * Returns the user prefs\u0027 LinkyTime file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    Path getLinkyTimeFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"     * Sets the user prefs\u0027 LinkyTime file path.","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"    void setLinkyTimeFilePath(Path linkyTimeFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"     * Replaces LinkyTime data with the data in {@code linkyTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"    void setLinkyTime(ReadOnlyLinkyTime linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"    /** Returns LinkyTime */","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"    ReadOnlyLinkyTime getLinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"     * Returns true if a meeting entry that is identical to {@code meetingEntry} exists in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"    boolean hasMeetingEntry(MeetingEntry meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"     * Deletes the given meeting entry.","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"     * The meeting entry must exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"    void deleteMeetingEntry(MeetingEntry target);","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"     * Adds the given meeting entry.","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"chuabingquan"},"content":"     * {@code meetingEntry} must not already exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"    void addMeetingEntry(MeetingEntry meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"     * Replaces the given meeting entry {@code target} with {@code editedMeetingEntry}.","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"     * {@code target} must exist in LinkyTime.","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"chuabingquan"},"content":"    void setMeetingEntry(MeetingEntry target, MeetingEntry editedMeetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"    /** Returns an unmodifiable view of the filtered meeting entry list */","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"    ObservableList\u003cMeetingEntry\u003e getFilteredMeetingEntryList();","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"     * Updates the filter of the filtered meeting entry list to filter by the given {@code predicate}.","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"    void updateFilteredMeetingEntryList(Predicate\u003cMeetingEntry\u003e predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chuabingquan":26,"-":60}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":" * Represents the in-memory model of the LinkyTime data.","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"public class ModelManager extends AddressBookModelManager implements Model {","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"    private final LinkyTime linkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"    private final FilteredList\u003cMeetingEntry\u003e filteredMeetingEntries;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyLinkyTime linkyTime) {","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"        super(addressBook, userPrefs);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"        requireAllNonNull(linkyTime, userPrefs);","lastModifiedDate":"2022-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"        this.linkyTime \u003d new LinkyTime(linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"        filteredMeetingEntries \u003d new FilteredList\u003c\u003e(this.linkyTime.getMeetingEntryList());","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"        this(new AddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"    public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"    public void setLinkyTimeFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LinkyTime \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"    public void setLinkyTime(ReadOnlyLinkyTime linkyTime) {","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"        this.linkyTime.resetData(linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"chuabingquan"},"content":"    public ReadOnlyLinkyTime getLinkyTime() {","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"chuabingquan"},"content":"        return linkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"    public boolean hasMeetingEntry(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"        return linkyTime.hasMeetingEntry(meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"    public void deleteMeetingEntry(MeetingEntry target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"chuabingquan"},"content":"        linkyTime.removeMeetingEntry(target);","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"    public void addMeetingEntry(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"        linkyTime.addMeetingEntry(meetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"        updateFilteredMeetingEntryList(PREDICATE_SHOW_ALL_MEETING_ENTRIES);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"    public void setMeetingEntry(MeetingEntry target, MeetingEntry editedMeetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"chuabingquan"},"content":"        requireAllNonNull(target, editedMeetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"chuabingquan"},"content":"        linkyTime.setMeetingEntry(target, editedMeetingEntry);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"chuabingquan"},"content":"    public ObservableList\u003cMeetingEntry\u003e getFilteredMeetingEntryList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"chuabingquan"},"content":"        return filteredMeetingEntries;","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"chuabingquan"},"content":"    public void updateFilteredMeetingEntryList(Predicate\u003cMeetingEntry\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"chuabingquan"},"content":"        filteredMeetingEntries.setPredicate(predicate);","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"chuabingquan"},"content":"        final ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"chuabingquan"},"content":"        return super.equals(other)","lastModifiedDate":"2022-03-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"chuabingquan"},"content":"                \u0026\u0026 filteredMeetingEntries.equals(other.filteredMeetingEntries);","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuabingquan":36,"-":115}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBookUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":" * Unmodifiable view of address book user prefs.","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":" * This interface is a temporary holding spot, and will be removed once its LinkyTime counterpart is completed.","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"public interface ReadOnlyAddressBookUserPrefs {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":11}},{"path":"src/main/java/seedu/address/model/ReadOnlyLinkyTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.model;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":" * Unmodifiable view of LinkyTime data","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"public interface ReadOnlyLinkyTime {","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"     * Returns an unmodifiable view of the meeting entry list.","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"     * This list will not contain any duplicate meeting entries.","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"    ObservableList\u003cMeetingEntry\u003e getMeetingEntryList();","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"public interface ReadOnlyUserPrefs extends ReadOnlyAddressBookUserPrefs {","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"    Path getLinkyTimeFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chuabingquan":2,"-":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"public class UserPrefs extends AddressBookUserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"    private Path linkyTimeFilePath \u003d Paths.get(\"data\" , \"app.json\");","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"        setLinkyTimeFilePath(newUserPrefs.getLinkyTimeFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"        super.resetData(newUserPrefs);","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"    public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"        return linkyTimeFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"    public void setLinkyTimeFilePath(Path linkyTimeFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(linkyTimeFilePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"        this.linkyTimeFilePath \u003d linkyTimeFilePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"        final UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"chuabingquan"},"content":"                \u0026\u0026 linkyTimeFilePath.equals(o.linkyTimeFilePath)","lastModifiedDate":"2022-03-10"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"                \u0026\u0026 super.equals(o);","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"        return Objects.hash(guiSettings, linkyTimeFilePath, super.hashCode());","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"        sb.append(super.toString());","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuabingquan":14,"-":75}},{"path":"src/main/java/seedu/address/model/meetingentry/IsRecurring.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":" * Represents a MeetingEntry\u0027s recurrence status in the meeting entry list.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRecurringStatus(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"public class IsRecurring {","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"            \"Meeting recurrence status can only be a single letter `Y` or `N`\";","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"    public static final String VALIDATION_REGEX \u003d \"[YN]\";","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"    public static final String RECURRING \u003d \"Y\";","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"    public static final String NON_RECURRING \u003d \"N\";","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"    public final boolean isRecurring;","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"     * Constructs a {@code IsRecurring}.","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"     * @param recurStatus A valid recurrence status.","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"    public IsRecurring(String recurStatus) {","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(recurStatus);","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"        recurStatus \u003d recurStatus.toUpperCase();","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"        checkArgument(isValidRecurringStatus(recurStatus), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"        this.isRecurring \u003d recurStatus.equals(RECURRING);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if a given string is a valid recurrence status.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"     * @param test The {@code String} to test.","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"     * @return True, if the {@code String} is a valid recurrence status.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"    public static boolean isValidRecurringStatus(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"        test \u003d test.toUpperCase();","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"        return isRecurring ? RECURRING : NON_RECURRING;","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof IsRecurring // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 isRecurring \u003d\u003d ((IsRecurring) other).isRecurring); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":56}},{"path":"src/main/java/seedu/address/model/meetingentry/MeetingDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":" * Represents a MeetingEntry\u0027s start date and time in the meeting entry list.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingDateTime {","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"    //TODO: update to LocalDateTime in v1.3","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"            \"DateTime should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"    /*","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"    public final String datetime;","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"     * Constructs a {@code MeetingDateTime}.","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"     * @param datetime A valid datetime.","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingDateTime(String datetime) {","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(datetime);","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"        checkArgument(isValidDateTime(datetime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if a given string is a valid datetime.","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"     * @param test The {@code String} to test.","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"     * @return True, if the {@code String} is a valid datetime.","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"        return datetime;","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof MeetingDateTime // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 datetime.equals(((MeetingDateTime) other).datetime)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"NatalieTanML"},"content":"        return datetime.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":65}},{"path":"src/main/java/seedu/address/model/meetingentry/MeetingEntry.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import java.util.Objects;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":" * Represents a MeetingEntry in the meeting entry list.","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingEntry {","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"    // Identity fields","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"    private final MeetingName name;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"    private final MeetingUrl url;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"    private final MeetingDateTime dateTime;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"    // Data fields","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"    private final IsRecurring isRecurring;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"     * Constructs a {@code MeetingEntry}. Every field must be present and non-null.","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"     * @param name          The name of the meeting entry.","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"     * @param url           The URL link of the meeting.","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"     * @param dateTime      The date and time of the meeting.","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"     * @param isRecurring   Whether the meeting is recurring.","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingEntry(MeetingName name, MeetingUrl url, MeetingDateTime dateTime,","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"                        IsRecurring isRecurring, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"        requireAllNonNull(name, url, dateTime, isRecurring, tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"        this.url \u003d url;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"        this.isRecurring \u003d isRecurring;","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingName getName() {","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"        return name;","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingUrl getUrl() {","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"        return url;","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingDateTime getDateTime() {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"        return dateTime;","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"NatalieTanML"},"content":"    public IsRecurring getIsRecurring() {","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"        return isRecurring;","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"NatalieTanML"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"NatalieTanML"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"NatalieTanML"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"NatalieTanML"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if both meeting entries have the same identity and data fields.","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"NatalieTanML"},"content":"     * This defines a stronger notion of equality between two meeting entries.","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"NatalieTanML"},"content":"     * @param other The other meeting entry to compare against.","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"NatalieTanML"},"content":"     * @return      True if both meeting entries are the same.","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"NatalieTanML"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"NatalieTanML"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"NatalieTanML"},"content":"        if (!(other instanceof MeetingEntry)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"NatalieTanML"},"content":"            return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"NatalieTanML"},"content":"        final MeetingEntry otherMeetingEntry \u003d (MeetingEntry) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"NatalieTanML"},"content":"        return otherMeetingEntry.name.equals(this.name)","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 otherMeetingEntry.url.equals(this.url)","lastModifiedDate":"2022-03-08"},{"lineNumber":90,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 otherMeetingEntry.dateTime.equals(this.dateTime)","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 otherMeetingEntry.isRecurring.equals(this.isRecurring)","lastModifiedDate":"2022-03-08"},{"lineNumber":92,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 otherMeetingEntry.tags.equals(this.tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":93,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"NatalieTanML"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"NatalieTanML"},"content":"        return Objects.hash(name, url, dateTime, isRecurring, tags);","lastModifiedDate":"2022-03-08"},{"lineNumber":98,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"NatalieTanML"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"NatalieTanML"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"        builder.append(name)","lastModifiedDate":"2022-03-08"},{"lineNumber":104,"author":{"gitId":"NatalieTanML"},"content":"                .append(\"; Meeting URL: \")","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"                .append(url)","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"NatalieTanML"},"content":"                .append(\"; Date and time: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"chuabingquan"},"content":"                .append(dateTime)","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"NatalieTanML"},"content":"                .append(\"; Is recurring: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"                .append(isRecurring);","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"chuabingquan"},"content":"        final Set\u003cTag\u003e tags \u003d this.tags;","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"NatalieTanML"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"NatalieTanML"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"NatalieTanML"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"NatalieTanML"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":114,"chuabingquan":5}},{"path":"src/main/java/seedu/address/model/meetingentry/MeetingEntryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.exceptions.DuplicateMeetingEntryException;","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.model.meetingentry.exceptions.MeetingEntryNotFoundException;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":" * A list of meeting entries that does not allow nulls.","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":" *","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingEntryList implements Iterable\u003cMeetingEntry\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"    private final ObservableList\u003cMeetingEntry\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"    private final ObservableList\u003cMeetingEntry\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if the list contains an equivalent meeting entry as the given argument.","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"    public boolean contains(MeetingEntry toCheck) {","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"     * Adds a meeting entry to the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"     * The meeting entry must not already exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"     * @throws NullPointerException If {@code toAdd} is null.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"    public void add(MeetingEntry toAdd) {","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"            throw new DuplicateMeetingEntryException();","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"     * Replaces the meeting entry {@code target} in the list with {@code editedMeetingEntry}.","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"     * The meeting entry identity of {@code editedMeetingEntry} must not be the same","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"     * as another existing meeting entry in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"    public void setMeetingEntry(MeetingEntry target, MeetingEntry editedMeetingEntry) {","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"        requireAllNonNull(target, editedMeetingEntry);","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"        final int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-03-10"},{"lineNumber":57,"author":{"gitId":"NatalieTanML"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"            throw new MeetingEntryNotFoundException();","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"        if (!target.equals(editedMeetingEntry) \u0026\u0026 contains(editedMeetingEntry)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"NatalieTanML"},"content":"            throw new DuplicateMeetingEntryException();","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"NatalieTanML"},"content":"        internalList.set(index, editedMeetingEntry);","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"NatalieTanML"},"content":"     * Removes the equivalent meeting entry from the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"NatalieTanML"},"content":"     * The meeting entry must exist in the list.","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"NatalieTanML"},"content":"    public void remove(MeetingEntry toRemove) {","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"NatalieTanML"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"NatalieTanML"},"content":"            throw new MeetingEntryNotFoundException();","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"NatalieTanML"},"content":"    public void setMeetingEntries(MeetingEntryList replacement) {","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"NatalieTanML"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":85,"author":{"gitId":"NatalieTanML"},"content":"     * Replaces the contents of this list with {@code meetingEntries}.","lastModifiedDate":"2022-03-07"},{"lineNumber":86,"author":{"gitId":"NatalieTanML"},"content":"     * {@code meetingEntries} must not contain duplicate meeting entries.","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"NatalieTanML"},"content":"    public void setMeetingEntries(List\u003cMeetingEntry\u003e meetingEntries) {","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"NatalieTanML"},"content":"        requireAllNonNull(meetingEntries);","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"NatalieTanML"},"content":"        if (!meetingEntriesAreUnique(meetingEntries)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"NatalieTanML"},"content":"            throw new DuplicateMeetingEntryException();","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"NatalieTanML"},"content":"        internalList.setAll(meetingEntries);","lastModifiedDate":"2022-03-07"},{"lineNumber":95,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":96,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"NatalieTanML"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-03-07"},{"lineNumber":99,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":100,"author":{"gitId":"NatalieTanML"},"content":"    public ObservableList\u003cMeetingEntry\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-03-07"},{"lineNumber":101,"author":{"gitId":"NatalieTanML"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-03-07"},{"lineNumber":102,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":103,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":104,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":105,"author":{"gitId":"NatalieTanML"},"content":"    public Iterator\u003cMeetingEntry\u003e iterator() {","lastModifiedDate":"2022-03-07"},{"lineNumber":106,"author":{"gitId":"NatalieTanML"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-03-07"},{"lineNumber":107,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":108,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":109,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":110,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":111,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":112,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof MeetingEntryList // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":113,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 internalList.equals(((MeetingEntryList) other).internalList));","lastModifiedDate":"2022-03-07"},{"lineNumber":114,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":115,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":116,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":117,"author":{"gitId":"NatalieTanML"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":118,"author":{"gitId":"NatalieTanML"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":119,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":120,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":121,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":122,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if {@code meetingEntries} contains only unique meeting entries.","lastModifiedDate":"2022-03-07"},{"lineNumber":123,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":124,"author":{"gitId":"NatalieTanML"},"content":"    private boolean meetingEntriesAreUnique(List\u003cMeetingEntry\u003e meetingEntries) {","lastModifiedDate":"2022-03-07"},{"lineNumber":125,"author":{"gitId":"NatalieTanML"},"content":"        for (int i \u003d 0; i \u003c meetingEntries.size() - 1; i++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":126,"author":{"gitId":"NatalieTanML"},"content":"            for (int j \u003d i + 1; j \u003c meetingEntries.size(); j++) {","lastModifiedDate":"2022-03-07"},{"lineNumber":127,"author":{"gitId":"NatalieTanML"},"content":"                if (meetingEntries.get(i).equals(meetingEntries.get(j))) {","lastModifiedDate":"2022-03-07"},{"lineNumber":128,"author":{"gitId":"NatalieTanML"},"content":"                    return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":129,"author":{"gitId":"NatalieTanML"},"content":"                }","lastModifiedDate":"2022-03-07"},{"lineNumber":130,"author":{"gitId":"NatalieTanML"},"content":"            }","lastModifiedDate":"2022-03-07"},{"lineNumber":131,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":132,"author":{"gitId":"NatalieTanML"},"content":"        return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":133,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":134,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":133,"chuabingquan":1}},{"path":"src/main/java/seedu/address/model/meetingentry/MeetingName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":" * Represents a MeetingEntry\u0027s name in the meeting entry list.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingName {","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"    /*","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"    public final String name;","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingName(String name) {","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"     * @param test The {@code String} to test.","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"     * @return True, if the {@code String} is a valid name.","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"        return name;","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof MeetingName // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 name.equals(((MeetingName) other).name)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"NatalieTanML"},"content":"        return name.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":62}},{"path":"src/main/java/seedu/address/model/meetingentry/MeetingUrl.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import java.net.URL;","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":" * Represents a MeetingEntry\u0027s URL in the meeting entry list.","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidUrl(String)}","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingUrl {","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"            \"URLs should be a valid link, and it should not be blank\";","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"    public final URL meetingUrl;","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"     * Constructs a {@code MeetingUrl}.","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"     * @param url A valid URL string.","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"    public MeetingUrl(String url) {","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"        requireNonNull(url);","lastModifiedDate":"2022-03-07"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"        checkArgument(isValidUrl(url), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"        this.meetingUrl \u003d parseUrl(url);","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"     * Checks if a {@code String} is a valid URL.","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"     * @param test The {@code String} to test.","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"     * @return True if the URL {@code String} is valid.","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"    public static boolean isValidUrl(String test) {","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"            new URL(test).toURI();","lastModifiedDate":"2022-03-07"},{"lineNumber":40,"author":{"gitId":"NatalieTanML"},"content":"            return true;","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"NatalieTanML"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"NatalieTanML"},"content":"            return false;","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":44,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":45,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"NatalieTanML"},"content":"     * Converts a URL string into a URL object.","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"NatalieTanML"},"content":"     * @param url The URL string to convert.","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"NatalieTanML"},"content":"     * @return The URL object.","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"NatalieTanML"},"content":"    public static URL parseUrl(String url) {","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"NatalieTanML"},"content":"        try {","lastModifiedDate":"2022-03-07"},{"lineNumber":54,"author":{"gitId":"NatalieTanML"},"content":"            return new URL(url);","lastModifiedDate":"2022-03-07"},{"lineNumber":55,"author":{"gitId":"NatalieTanML"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"NatalieTanML"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"NatalieTanML"},"content":"            // TODO: update this once we\u0027ve figured out exception handling","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"NatalieTanML"},"content":"            return null;","lastModifiedDate":"2022-03-07"},{"lineNumber":59,"author":{"gitId":"NatalieTanML"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":60,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":61,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":62,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":63,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"NatalieTanML"},"content":"    public String toString() {","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"NatalieTanML"},"content":"        return meetingUrl.toString();","lastModifiedDate":"2022-03-07"},{"lineNumber":66,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":71,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof MeetingUrl // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":72,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 meetingUrl.equals(((MeetingUrl) other).meetingUrl)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":73,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":74,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"NatalieTanML"},"content":"    public int hashCode() {","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"NatalieTanML"},"content":"        return meetingUrl.hashCode();","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":79}},{"path":"src/main/java/seedu/address/model/meetingentry/NameOrTagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"import java.util.List;","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":" * Tests that a {@code MeetingEntry}\u0027s {@code MeetingName} or {@code Tags} matches any of the keywords given.","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"public class NameOrTagsContainsKeywordsPredicate implements Predicate\u003cMeetingEntry\u003e {","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"    public NameOrTagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"NatalieTanML"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":17,"author":{"gitId":"NatalieTanML"},"content":"     * Tests if a {@code MeetingEntry}\u0027s {@code MeetingName} or {@code Tags} matches any of the keywords.","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"     * @param meetingEntry Meeting entry whose meeting name and tags need to be checked","lastModifiedDate":"2022-03-07"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"     *                     to see if they contain any of the keywords given.","lastModifiedDate":"2022-03-07"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"     * @return True, if meeting entry\u0027s name or tags contains any of the keywords.","lastModifiedDate":"2022-03-07"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"    public boolean test(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-07"},{"lineNumber":25,"author":{"gitId":"NatalieTanML"},"content":"        return keywords.stream()","lastModifiedDate":"2022-03-07"},{"lineNumber":26,"author":{"gitId":"NatalieTanML"},"content":"                .anyMatch(keyword -\u003e meetingEntry.getName().name.toLowerCase().contains(keyword.toLowerCase())","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"NatalieTanML"},"content":"                        || meetingEntry.getTags().stream()","lastModifiedDate":"2022-03-07"},{"lineNumber":28,"author":{"gitId":"NatalieTanML"},"content":"                        .anyMatch(tag -\u003e tag.tagName.toLowerCase().contains(keyword.toLowerCase())));","lastModifiedDate":"2022-03-07"},{"lineNumber":29,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":30,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":31,"author":{"gitId":"NatalieTanML"},"content":"    @Override","lastModifiedDate":"2022-03-07"},{"lineNumber":32,"author":{"gitId":"NatalieTanML"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-07"},{"lineNumber":33,"author":{"gitId":"NatalieTanML"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-07"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"                || (other instanceof NameOrTagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-07"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"                \u0026\u0026 keywords.equals(((NameOrTagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-03-07"},{"lineNumber":36,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":38}},{"path":"src/main/java/seedu/address/model/meetingentry/exceptions/DuplicateMeetingEntryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":" * Signals that the operation will result in duplicate MeetingEntries (MeetingEntries are considered","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":" * duplicates if they have the same identity).","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"public class DuplicateMeetingEntryException extends RuntimeException {","lastModifiedDate":"2022-03-07"},{"lineNumber":8,"author":{"gitId":"NatalieTanML"},"content":"    public DuplicateMeetingEntryException() {","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"NatalieTanML"},"content":"        super(\"Operation would result in duplicate meeting entries\");","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":11}},{"path":"src/main/java/seedu/address/model/meetingentry/exceptions/MeetingEntryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NatalieTanML"},"content":"package seedu.address.model.meetingentry.exceptions;","lastModifiedDate":"2022-03-07"},{"lineNumber":2,"author":{"gitId":"NatalieTanML"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"NatalieTanML"},"content":"/**","lastModifiedDate":"2022-03-07"},{"lineNumber":4,"author":{"gitId":"NatalieTanML"},"content":" * Signals that the operation is unable to find the specified meeting entry.","lastModifiedDate":"2022-03-07"},{"lineNumber":5,"author":{"gitId":"NatalieTanML"},"content":" */","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"NatalieTanML"},"content":"public class MeetingEntryNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"NatalieTanML":6}},{"path":"src/main/java/seedu/address/storage/JsonLinkyTimeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.IsRecurring;","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingDateTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingName;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingUrl;","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":" * A class to access LinkyTime data stored as a json file on the hard disk.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"public class JsonLinkyTimeStorage implements LinkyTimeStorage {","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonLinkyTimeStorage.class);","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"    // Temporary dummy data to substitute data file from storage while this class is still being implemented.","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"    private static final LinkyTime DUMMY_DATA \u003d new LinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"    static {","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"        final MeetingUrl dummyMeetingUrl \u003d new MeetingUrl(\"https://legit-uni.zoom.us/j/344299221?pwd\u003dF3a99221\");","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"        JsonLinkyTimeStorage.DUMMY_DATA.setMeetingEntries(Arrays.asList(","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"                new MeetingEntry(","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingName(\"CS2103T Lecture\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"                        dummyMeetingUrl,","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingDateTime(\"18mar2022\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"                        new IsRecurring(\"Y\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"                        new HashSet\u003cTag\u003e()","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"                ),","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"                new MeetingEntry(","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingName(\"CS2101 Tutorial\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"                        dummyMeetingUrl,","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingDateTime(\"19mar2022\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"chuabingquan"},"content":"                        new IsRecurring(\"Y\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"                        new HashSet\u003cTag\u003e()","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"                ),","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"                new MeetingEntry(","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingName(\"TokTik Rejection Interview\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":51,"author":{"gitId":"chuabingquan"},"content":"                        dummyMeetingUrl,","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"chuabingquan"},"content":"                        new MeetingDateTime(\"20mar2022\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"                        new IsRecurring(\"N\"),","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"chuabingquan"},"content":"                        new HashSet\u003cTag\u003e()","lastModifiedDate":"2022-03-09"},{"lineNumber":55,"author":{"gitId":"chuabingquan"},"content":"                )","lastModifiedDate":"2022-03-09"},{"lineNumber":56,"author":{"gitId":"chuabingquan"},"content":"        ));","lastModifiedDate":"2022-03-09"},{"lineNumber":57,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":58,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":59,"author":{"gitId":"chuabingquan"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":60,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"    public JsonLinkyTimeStorage(Path filePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"chuabingquan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":63,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":64,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":65,"author":{"gitId":"chuabingquan"},"content":"    public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":66,"author":{"gitId":"chuabingquan"},"content":"        return filePath;","lastModifiedDate":"2022-03-09"},{"lineNumber":67,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"    public Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime() throws DataConversionException {","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"chuabingquan"},"content":"        return readLinkyTime(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":72,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":73,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":74,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":75,"author":{"gitId":"chuabingquan"},"content":"     * Similar to {@link #readLinkyTime()}.","lastModifiedDate":"2022-03-09"},{"lineNumber":76,"author":{"gitId":"chuabingquan"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"chuabingquan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"chuabingquan"},"content":"    public Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":82,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"        // TODO: Retrieval from data file.","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"        return Optional.\u003cReadOnlyLinkyTime\u003eof(JsonLinkyTimeStorage.DUMMY_DATA);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"chuabingquan"},"content":"    public void saveLinkyTime(ReadOnlyLinkyTime linkyTime) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"chuabingquan"},"content":"        saveLinkyTime(linkyTime, filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"     * Similar to {@link #saveLinkyTime(ReadOnlyLinkyTime)}.","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"     *","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"chuabingquan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"chuabingquan"},"content":"    public void saveLinkyTime(ReadOnlyLinkyTime linkyTime, Path filePath) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"chuabingquan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"        // TODO: Persistence to data file.","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":104}},{"path":"src/main/java/seedu/address/storage/LinkyTimeStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chuabingquan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-09"},{"lineNumber":2,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":3,"author":{"gitId":"chuabingquan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":4,"author":{"gitId":"chuabingquan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-09"},{"lineNumber":5,"author":{"gitId":"chuabingquan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-09"},{"lineNumber":6,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":7,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-09"},{"lineNumber":8,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"chuabingquan"},"content":"/**","lastModifiedDate":"2022-03-09"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":" * Represents a storage for {@link seedu.address.model.LinkyTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":" */","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"chuabingquan"},"content":"public interface LinkyTimeStorage {","lastModifiedDate":"2022-03-09"},{"lineNumber":14,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"chuabingquan"},"content":"    Path getLinkyTimeFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"     * Returns LinkyTime data as a {@link ReadOnlyLinkyTime}.","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"chuabingquan"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-03-09"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"    Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"     * @see #getLinkyTimeFilePath()","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"chuabingquan"},"content":"    Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"     * Saves the given {@link ReadOnlyLinkyTime} to the storage.","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"     * @param linkyTime cannot be null.","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"    void saveLinkyTime(ReadOnlyLinkyTime linkyTime) throws IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    /**","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"     * @see #saveLinkyTime(ReadOnlyLinkyTime)","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"chuabingquan"},"content":"     */","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"chuabingquan"},"content":"    void saveLinkyTime(ReadOnlyLinkyTime linkyTime, Path filePath) throws IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":45,"author":{"gitId":"chuabingquan"},"content":"}","lastModifiedDate":"2022-03-09"}],"authorContributionMap":{"chuabingquan":45}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"chuabingquan"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, LinkyTimeStorage {","lastModifiedDate":"2022-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"    Path getLinkyTimeFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"    Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime() throws DataConversionException, IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"chuabingquan"},"content":"    void saveLinkyTime(ReadOnlyLinkyTime linkyTime) throws IOException;","lastModifiedDate":"2022-03-09"},{"lineNumber":41,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chuabingquan":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"chuabingquan"},"content":"    private LinkyTimeStorage linkyTimeStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"                          UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"                          LinkyTimeStorage linkyTimeStorage) {","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"chuabingquan"},"content":"        this.linkyTimeStorage \u003d linkyTimeStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d LinkyTime methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":86,"author":{"gitId":"chuabingquan"},"content":"    public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":87,"author":{"gitId":"chuabingquan"},"content":"        return linkyTimeStorage.getLinkyTimeFilePath();","lastModifiedDate":"2022-03-09"},{"lineNumber":88,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":89,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":90,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":91,"author":{"gitId":"chuabingquan"},"content":"    public Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime() throws DataConversionException, IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":92,"author":{"gitId":"chuabingquan"},"content":"        return readLinkyTime(linkyTimeStorage.getLinkyTimeFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":93,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":94,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":96,"author":{"gitId":"chuabingquan"},"content":"    public Optional\u003cReadOnlyLinkyTime\u003e readLinkyTime(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":97,"author":{"gitId":"chuabingquan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"        return linkyTimeStorage.readLinkyTime(filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":100,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"chuabingquan"},"content":"    public void saveLinkyTime(ReadOnlyLinkyTime linkyTime) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":103,"author":{"gitId":"chuabingquan"},"content":"        saveLinkyTime(linkyTime, linkyTimeStorage.getLinkyTimeFilePath());","lastModifiedDate":"2022-03-09"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"chuabingquan"},"content":"    @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":107,"author":{"gitId":"chuabingquan"},"content":"    public void saveLinkyTime(ReadOnlyLinkyTime linkyTime, Path filePath) throws IOException {","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"chuabingquan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"        linkyTimeStorage.saveLinkyTime(linkyTime, filePath);","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"chuabingquan"},"content":"    }","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuabingquan":36,"-":76}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.storage.JsonLinkyTimeStorage;","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"        JsonLinkyTimeStorage linkyTimeStorage \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"chuabingquan"},"content":"                new JsonLinkyTimeStorage(temporaryFolder.resolve(\"app.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"chuabingquan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, linkyTimeStorage);","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"chuabingquan"},"content":"        JsonLinkyTimeStorage linkyTimeStorage \u003d","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"chuabingquan"},"content":"                new JsonLinkyTimeStorage(temporaryFolder.resolve(\"app.json\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, linkyTimeStorage);","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"NatalieTanML":2,"chuabingquan":9,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.ReadOnlyLinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.meetingentry.MeetingEntry;","lastModifiedDate":"2022-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"        public Path getLinkyTimeFilePath() {","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":107,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":108,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":109,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":110,"author":{"gitId":"chuabingquan"},"content":"        public void setLinkyTimeFilePath(Path linkyTimeFilePath) {","lastModifiedDate":"2022-03-09"},{"lineNumber":111,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":112,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":114,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":115,"author":{"gitId":"chuabingquan"},"content":"        public void setLinkyTime(ReadOnlyLinkyTime linkyTime) {","lastModifiedDate":"2022-03-09"},{"lineNumber":116,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":117,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":118,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":120,"author":{"gitId":"chuabingquan"},"content":"        public ReadOnlyLinkyTime getLinkyTime() {","lastModifiedDate":"2022-03-09"},{"lineNumber":121,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":122,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":123,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":125,"author":{"gitId":"chuabingquan"},"content":"        public boolean hasMeetingEntry(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":126,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":127,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":128,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":129,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"chuabingquan"},"content":"        public void deleteMeetingEntry(MeetingEntry target) {","lastModifiedDate":"2022-03-09"},{"lineNumber":131,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":132,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":133,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":134,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":135,"author":{"gitId":"chuabingquan"},"content":"        public void addMeetingEntry(MeetingEntry meetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":136,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":137,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":138,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":139,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":140,"author":{"gitId":"chuabingquan"},"content":"        public void setMeetingEntry(MeetingEntry target, MeetingEntry editedMeetingEntry) {","lastModifiedDate":"2022-03-09"},{"lineNumber":141,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":142,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":143,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":144,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":145,"author":{"gitId":"chuabingquan"},"content":"        public ObservableList\u003cMeetingEntry\u003e getFilteredMeetingEntryList() {","lastModifiedDate":"2022-03-09"},{"lineNumber":146,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":147,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":148,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":149,"author":{"gitId":"chuabingquan"},"content":"        @Override","lastModifiedDate":"2022-03-09"},{"lineNumber":150,"author":{"gitId":"chuabingquan"},"content":"        public void updateFilteredMeetingEntryList(Predicate\u003cMeetingEntry\u003e predicate) {","lastModifiedDate":"2022-03-09"},{"lineNumber":151,"author":{"gitId":"chuabingquan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-10"},{"lineNumber":152,"author":{"gitId":"chuabingquan"},"content":"        }","lastModifiedDate":"2022-03-09"},{"lineNumber":153,"author":{"gitId":"chuabingquan"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":52,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"chuabingquan"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chuabingquan":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"NatalieTanML":1,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"chuabingquan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":4,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"chuabingquan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"chuabingquan"},"content":"                new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"chuabingquan"},"content":"                new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-09"},{"lineNumber":84,"author":{"gitId":"chuabingquan"},"content":"                new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"chuabingquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2022-03-09"},{"lineNumber":101,"author":{"gitId":"chuabingquan"},"content":"                new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"NatalieTanML":2,"chuabingquan":10,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"NatalieTanML":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"chuabingquan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":3,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"chuabingquan"},"content":"import seedu.address.model.LinkyTime;","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"chuabingquan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new LinkyTime());","lastModifiedDate":"2022-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"NatalieTanML":1,"chuabingquan":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.AddCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"NatalieTanML":2,"-":140}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"NatalieTanML":6,"-":95}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.DeleteCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"NatalieTanML":2,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":38,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.EditCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"NatalieTanML":3,"-":209}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.parser.person.FindCommandParser;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"NatalieTanML":2,"-":33}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"chuabingquan"},"content":"        LinkyTime linkyTime \u003d new LinkyTime();","lastModifiedDate":"2022-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"chuabingquan"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":105,"author":{"gitId":"chuabingquan"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, linkyTime);","lastModifiedDate":"2022-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"chuabingquan"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, linkyTime)));","lastModifiedDate":"2022-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"chuabingquan"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, linkyTime)));","lastModifiedDate":"2022-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"chuabingquan"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, linkyTime)));","lastModifiedDate":"2022-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"chuabingquan":6,"-":127}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chuabingquan"},"content":"        JsonLinkyTimeStorage linkyTimeStorage \u003d new JsonLinkyTimeStorage(getTempFilePath(\"app\"));","lastModifiedDate":"2022-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"chuabingquan"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, linkyTimeStorage);","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chuabingquan":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"NatalieTanML":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"NatalieTanML"},"content":"import seedu.address.logic.commands.person.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"NatalieTanML":2,"-":60}}]
