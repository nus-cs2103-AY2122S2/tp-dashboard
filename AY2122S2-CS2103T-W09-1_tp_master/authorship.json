[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W09-1/tp/branch/master/graph/badge.svg?token\u003d3GOZ258RU7)](https://codecov.io/gh/AY2122S2-CS2103T-W09-1/tp)","lastModifiedDate":"2022-03-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"* This is **UniGenda**, an address book application optimized for University student.\u003cbr\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"  * as an application to store your friends\u0027 contact information","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"  * as an application to find a meeting time with your friends","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"* The project is built on a sample software project for a desktop application (called _AddressBook_) used for managing contact details. Similar with the code base,","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"* It is named `UniGenda` because it was supposed to be an `aGenda` for `University students`.","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"* For the detailed documentation of this project, see the **[UniGenda Official Website](https://ay2122s2-cs2103t-w09-1.github.io/tp/)**","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"* For the detailed documentation of the code base, see the **[Address Book Product Website](https://se-education.org/addressbook-level3/)**.","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"* This project is a **part CS2103T: Software Engineering** module in NUS.","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"tyanhan":1,"vishandi":9,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"run {","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"    archiveName \u003d \u0027UniGenda.jar\u0027","lastModifiedDate":"2022-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"vishandi":1,"-":71,"hanqinilnix":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Tay Yan Han","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"\u003cimg src\u003d\"images/tyanhan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](https://github.com/tyanhan)]","lastModifiedDate":"2022-02-14"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"[[portfolio](team/tyanhan.md)]","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"### Ong Han Qin","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"\u003cimg src\u003d\"images/hanqinilnix.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](https://github.com/hanqinilnix)]","lastModifiedDate":"2022-02-14"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"[[portfolio](team/hanqinilnix.md)]","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Vishandi Rudy Keneta","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"\u003cimg src\u003d\"images/vishandi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"[[github](http://github.com/vishandi)] [[portfolio](team/vishandi.md)]","lastModifiedDate":"2022-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Mark Biju George","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"markbiju"},"content":"\u003cimg src\u003d\"images/markbiju.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"[[github](http://github.com/markbiju)]","lastModifiedDate":"2022-03-02"},{"lineNumber":46,"author":{"gitId":"markbiju"},"content":"[[portfolio](team/markbiju.md)]","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Undecided","lastModifiedDate":"2022-02-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tyanhan":2,"vishandi":2,"markbiju":3,"-":41,"hanqinilnix":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"* Code base: [addressbook-level3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"* These are the sources of the images that we used in this project (all images referred in this section is available on `/src/main/resources/images`):","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    * unigenda.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/book\" title\u003d\"book icons\"\u003eBook icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"    * phone_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/phone\" title\u003d\"phone icons\"\u003ePhone icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    * telegram_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/telegram\" title\u003d\"telegram icons\"\u003eTelegram icons created by Pixel perfect - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    * github_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/github\" title\u003d\"github icons\"\u003eGithub icons created by Pixel perfect - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    * email_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/email\" title\u003d\"email icons\"\u003eEmail icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    * address_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/address\" title\u003d\"address icons\"\u003eAddress icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    * schedule_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/calendar\" title\u003d\"calendar icons\"\u003eCalendar icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    * upcoming_schedule_icon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/upcoming\" title\u003d\"upcoming icons\"\u003eUpcoming icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    * days.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/calendar\" title\u003d\"calendar icons\"\u003eCalendar icons created by Creaticca Creative Agency - Flaticon\u003c/a\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S2-CS2103T-W09-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2022-03-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-03-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"**API** : [`Model.java`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-03-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-03-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S2-CS2103T-W09-1/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-03-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"tyanhan"},"content":"###  Add Event Feature","lastModifiedDate":"2022-03-22"},{"lineNumber":169,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":170,"author":{"gitId":"tyanhan"},"content":"#### Implementation","lastModifiedDate":"2022-03-22"},{"lineNumber":171,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":172,"author":{"gitId":"tyanhan"},"content":"To enable users to track their contacts\u0027 schedules, 2 new classes have been added: `Schedule` and `Event`","lastModifiedDate":"2022-03-22"},{"lineNumber":173,"author":{"gitId":"tyanhan"},"content":"* Each `Person` has a `Schedule` attribute.","lastModifiedDate":"2022-03-23"},{"lineNumber":174,"author":{"gitId":"tyanhan"},"content":"* A `Schedule` contains a list of `Event`s.","lastModifiedDate":"2022-03-22"},{"lineNumber":175,"author":{"gitId":"tyanhan"},"content":"* An `Event` has an `EventDescription`, a `LocalDate`, a `LocalTime`, a `Duration` and a `RecurFrequency`","lastModifiedDate":"2022-03-22"},{"lineNumber":176,"author":{"gitId":"tyanhan"},"content":"  * Here, the `RecurFrequency` indicates how often the `Event` occurs, which can be daily, weekly, biweekly or none.","lastModifiedDate":"2022-03-22"},{"lineNumber":177,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":178,"author":{"gitId":"tyanhan"},"content":"  \u003cimg src\u003d\"images/ScheduleClassDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":179,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":180,"author":{"gitId":"tyanhan"},"content":"To add an `Event` to a contact\u0027s `Schedule`, the user needs to run the AddEvent command.","lastModifiedDate":"2022-03-22"},{"lineNumber":181,"author":{"gitId":"hanqinilnix"},"content":"The parsing of the `addEvent` command is handled by the following classes:","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"tyanhan"},"content":"* `AddressBookParser`","lastModifiedDate":"2022-03-22"},{"lineNumber":183,"author":{"gitId":"tyanhan"},"content":"  * Checks that the user input contains the AddEventCommand.COMMAND_WORD and calls `AddEventCommandParser#parse()`","lastModifiedDate":"2022-03-23"},{"lineNumber":184,"author":{"gitId":"tyanhan"},"content":"* `AddEventCommandParser`","lastModifiedDate":"2022-03-22"},{"lineNumber":185,"author":{"gitId":"tyanhan"},"content":"  * Parses the user input to create an `Index` of the contact whose `Schedule` should be edited, along with an `Event` to add to the `Person`\u0027s `Schedule`","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"tyanhan"},"content":"  * Returns an `AddEventCommand` to be executed by the `LogicManager`","lastModifiedDate":"2022-03-22"},{"lineNumber":187,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":188,"author":{"gitId":"hanqinilnix"},"content":"A successful execution of the `addEvent` command is described as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":189,"author":{"gitId":"tyanhan"},"content":"1. The `AddEventCommand` retrieves the currently listed `Person`s from the `Model`.","lastModifiedDate":"2022-03-22"},{"lineNumber":190,"author":{"gitId":"tyanhan"},"content":"2. The `personToEdit` is obtained from the above list using the `Index` created during the parsing of the AddEvent command.","lastModifiedDate":"2022-03-22"},{"lineNumber":191,"author":{"gitId":"tyanhan"},"content":"3. `AddEventCommand` gets the `Schedule` of the `personToEdit` and creates a new `Schedule` with the added `Event` created during the parsing of the AddEvent command.","lastModifiedDate":"2022-03-22"},{"lineNumber":192,"author":{"gitId":"tyanhan"},"content":"4. `AddEventCommand` creates a new `Person` with the updated `Schedule` and uses `Model#setPerson()` to replace the `personToEdit` with the `Person` with the updated `Schedule`.","lastModifiedDate":"2022-03-22"},{"lineNumber":193,"author":{"gitId":"tyanhan"},"content":"5. `AddEventCommand` constructs the `CommandResult` and returns it to the `LogicManager`.","lastModifiedDate":"2022-03-22"},{"lineNumber":194,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":195,"author":{"gitId":"tyanhan"},"content":"  \u003cimg src\u003d\"images/AddEventSequenceDiagram.png\" width\u003d\"1500\" /\u003e","lastModifiedDate":"2022-03-22"},{"lineNumber":196,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":197,"author":{"gitId":"tyanhan"},"content":"#### Design considerations","lastModifiedDate":"2022-03-22"},{"lineNumber":198,"author":{"gitId":"hanqinilnix"},"content":"**Differentiating recurring events and non-recurring events**","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"tyanhan"},"content":"* **Alternative 1 (current choice):** Every `Event` has a `RecurFrequency` attribute. `RecurFrequency` has a `None` value to represent non-recurring tasks","lastModifiedDate":"2022-03-22"},{"lineNumber":200,"author":{"gitId":"tyanhan"},"content":"  * Pros: Easier to implement, no need to deal with Jackson library deciphering whether data should be recurring or non-recurring type","lastModifiedDate":"2022-03-22"},{"lineNumber":201,"author":{"gitId":"tyanhan"},"content":"* **Alternative 2:** Have a `RecurringEvent` class inherit from `Event` and only `RecurringEvent`s should have the `RecurFrequency` attribute","lastModifiedDate":"2022-03-22"},{"lineNumber":202,"author":{"gitId":"tyanhan"},"content":"  * Pros: Slightly more OOP","lastModifiedDate":"2022-03-22"},{"lineNumber":203,"author":{"gitId":"tyanhan"},"content":"  * Cons:","lastModifiedDate":"2022-03-23"},{"lineNumber":204,"author":{"gitId":"tyanhan"},"content":"    * Difficult to implement, increases likelihood of bugs and may take more time to implement should we misunderstand how Jackson library deciphers data.","lastModifiedDate":"2022-03-25"},{"lineNumber":205,"author":{"gitId":"tyanhan"},"content":"    * More awkward type checking and casting when checking for recurrence.","lastModifiedDate":"2022-03-25"},{"lineNumber":206,"author":{"gitId":"hanqinilnix"},"content":"**Implementing event\u0027s date, time and duration attributes**","lastModifiedDate":"2022-03-30"},{"lineNumber":207,"author":{"gitId":"tyanhan"},"content":"* **Alternative 1 (current choice):** Use Java\u0027s in built LocalDate, LocalTime and Duration classes","lastModifiedDate":"2022-03-22"},{"lineNumber":208,"author":{"gitId":"tyanhan"},"content":"  * Pros: Easier to implement, no need to account for leap years, number of days in a month, formatting etc. Also has inbuilt support to calculate time.","lastModifiedDate":"2022-03-22"},{"lineNumber":209,"author":{"gitId":"tyanhan"},"content":"* **Alternative 2:** Create our own Date, Time and Duration classes","lastModifiedDate":"2022-03-22"},{"lineNumber":210,"author":{"gitId":"tyanhan"},"content":"  * Pros: More customisable","lastModifiedDate":"2022-03-22"},{"lineNumber":211,"author":{"gitId":"tyanhan"},"content":"  * Cons: Higher possibility of bugs if we do not properly account for leap years, number of days in a month, formatting etc. Will also take too much time to implement","lastModifiedDate":"2022-03-22"},{"lineNumber":212,"author":{"gitId":"hanqinilnix"},"content":"**Updating the model when an event is added**","lastModifiedDate":"2022-03-30"},{"lineNumber":213,"author":{"gitId":"tyanhan"},"content":"* **Alterative 1 (current choice):** Create a new `Schedule` and `Person` to update the `Model`","lastModifiedDate":"2022-03-22"},{"lineNumber":214,"author":{"gitId":"tyanhan"},"content":"  * Pros: More defensive","lastModifiedDate":"2022-03-22"},{"lineNumber":215,"author":{"gitId":"tyanhan"},"content":"  * Cons: Troublesome to implement","lastModifiedDate":"2022-03-22"},{"lineNumber":216,"author":{"gitId":"tyanhan"},"content":"* **Alternative 2:** Add an addEvent() function to `Schedule`, allows us to update the `Person` without creating objects","lastModifiedDate":"2022-03-22"},{"lineNumber":217,"author":{"gitId":"tyanhan"},"content":"  * Pros: Straightforward to implement","lastModifiedDate":"2022-03-22"},{"lineNumber":218,"author":{"gitId":"tyanhan"},"content":"  * Cons: In case a `Schedule` becomes unintentionally shared between 2 or more `Person`s, the editing of 1 `Person`\u0027s `Schedule` when updating the `Model` may result in multiple `Person`s\u0027 `Schedule`s being edited at the same time, causing bugs to appear","lastModifiedDate":"2022-03-22"},{"lineNumber":219,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":220,"author":{"gitId":"hanqinilnix"},"content":"### WhoIsFree feature","lastModifiedDate":"2022-03-30"},{"lineNumber":221,"author":{"gitId":"hanqinilnix"},"content":"This section details how the `whoIsFree` command is implemented. This command allows the user to find contacts who are free at the specified time and date. Contacts who are free will be listed in the contact list.","lastModifiedDate":"2022-03-30"},{"lineNumber":222,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":223,"author":{"gitId":"hanqinilnix"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":224,"author":{"gitId":"hanqinilnix"},"content":"`WhoIsFreeCommandParser`, `WhoIsFreeCommand` and `IsPersonFreePredicate` classes are involved in the execution of the `whoIsFree` command.","lastModifiedDate":"2022-03-30"},{"lineNumber":225,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":226,"author":{"gitId":"hanqinilnix"},"content":"The `parse` method inside the `WhoIsFreeCommandParser` receives the user input and extracts the required arguments. It then creates a new `IsPersonFreePredicate` object that will help check if the user\u0027s contacts\u0027 schedule coincides with the specified time and date.","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":228,"author":{"gitId":"hanqinilnix"},"content":"Given below is one example usage scenario and explanation on how the `whoIsFree` command behaves at each step. You may also refer to the sequence diagram below.","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":230,"author":{"gitId":"hanqinilnix"},"content":"1. The user enters `whoIsFree ti/10:00 da/2022-03-24` to find if there are any contacts who are free at the specified time and date. The arguments `ti/10:00 da/2022-03-24` are passed to the `WhoIsFreeCommandParser` through its `parse` method call.","lastModifiedDate":"2022-03-30"},{"lineNumber":231,"author":{"gitId":"hanqinilnix"},"content":"2. The user input `ti/10:00 da/2022-03-24` will be checked to ensure that empty input is not given. At the same time, `ParserUtil#parseTime` and `ParserUtil#parseDate` are used to check for invalid inputs.","lastModifiedDate":"2022-03-30"},{"lineNumber":232,"author":{"gitId":"hanqinilnix"},"content":"3. A new `IsPersonFreePredicate` object is created and encapsulated by a new `WhoIsFreeCommand` object.","lastModifiedDate":"2022-03-30"},{"lineNumber":233,"author":{"gitId":"hanqinilnix"},"content":"4. The `WhoIsFreeCommand` object is returned to the `LogicManager`.","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"hanqinilnix"},"content":"5. During the execution of the command, the `WhoIsFreeCommand` object calls `Model#updateFilteredPersonList` method with the `IsPersonFreePredicate` to update the display of the current list of contacts. If there are contacts who are free at the specified time and date, then a list of the contacts who are free will be shown. Otherwise, an empty list will be shown.","lastModifiedDate":"2022-03-30"},{"lineNumber":235,"author":{"gitId":"hanqinilnix"},"content":"6. A `CommandResult` with the number of contacts free is returned. A list of contacts who are free will also be displayed to the user.","lastModifiedDate":"2022-03-30"},{"lineNumber":236,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":237,"author":{"gitId":"hanqinilnix"},"content":"#### Sequence Diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":238,"author":{"gitId":"hanqinilnix"},"content":"The following sequence diagram shows how the `whoIsFree` command works for the example above:\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"hanqinilnix"},"content":"![WhoIsFreeSequenceDiagram](images/WhoIsFreeSequenceDiagram.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":241,"author":{"gitId":"hanqinilnix"},"content":"#### Activity Diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":242,"author":{"gitId":"hanqinilnix"},"content":"The following activity diagram summarizes what happens when the `whoIsFree` command is triggered:\u003cbr\u003e","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"hanqinilnix"},"content":"![WhoIsFreeActivityDiagram](images/WhoIsFreeActivityDiagram.png)","lastModifiedDate":"2022-03-30"},{"lineNumber":244,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":245,"author":{"gitId":"hanqinilnix"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":246,"author":{"gitId":"hanqinilnix"},"content":"**Aspect: Should we allow dates that have already passed?**","lastModifiedDate":"2022-03-24"},{"lineNumber":247,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 1 (current implementation)**: Ignore dates that have passed.","lastModifiedDate":"2022-03-24"},{"lineNumber":248,"author":{"gitId":"hanqinilnix"},"content":"  * Pro:","lastModifiedDate":"2022-03-24"},{"lineNumber":249,"author":{"gitId":"hanqinilnix"},"content":"    * Prevents users from expecting the wrong results when recurring events are involved.","lastModifiedDate":"2022-03-24"},{"lineNumber":250,"author":{"gitId":"hanqinilnix"},"content":"  * Cons:","lastModifiedDate":"2022-03-24"},{"lineNumber":251,"author":{"gitId":"hanqinilnix"},"content":"    * Harder implementation as we would have to consider all events with respect to today.","lastModifiedDate":"2022-03-24"},{"lineNumber":252,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 2**: Treat the past dates as a normal dates.","lastModifiedDate":"2022-03-24"},{"lineNumber":253,"author":{"gitId":"hanqinilnix"},"content":"  * Pros:","lastModifiedDate":"2022-03-24"},{"lineNumber":254,"author":{"gitId":"hanqinilnix"},"content":"    * Easy implementation as there is nothing special to take note.","lastModifiedDate":"2022-03-24"},{"lineNumber":255,"author":{"gitId":"hanqinilnix"},"content":"  * Con:","lastModifiedDate":"2022-03-24"},{"lineNumber":256,"author":{"gitId":"hanqinilnix"},"content":"    * Does not make sense to check dates have already passed.","lastModifiedDate":"2022-03-24"},{"lineNumber":257,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":258,"author":{"gitId":"hanqinilnix"},"content":"**Aspect: What to do with contacts who do not have a schedule?**","lastModifiedDate":"2022-03-24"},{"lineNumber":259,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 1**: Contacts without schedule are always free","lastModifiedDate":"2022-03-24"},{"lineNumber":260,"author":{"gitId":"hanqinilnix"},"content":"  * Cons:","lastModifiedDate":"2022-03-24"},{"lineNumber":261,"author":{"gitId":"hanqinilnix"},"content":"    * Contacts without schedule may not be free at the specified date and time.","lastModifiedDate":"2022-03-24"},{"lineNumber":262,"author":{"gitId":"hanqinilnix"},"content":"    * We will have to check all contacts for their schedule and display all contacts.","lastModifiedDate":"2022-03-24"},{"lineNumber":263,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 2 (current implementation)**: Contacts without schedule are always busy","lastModifiedDate":"2022-03-24"},{"lineNumber":264,"author":{"gitId":"hanqinilnix"},"content":"  * Pros:","lastModifiedDate":"2022-03-24"},{"lineNumber":265,"author":{"gitId":"hanqinilnix"},"content":"    * Higher certainty that contacts shown will be free.","lastModifiedDate":"2022-03-24"},{"lineNumber":266,"author":{"gitId":"hanqinilnix"},"content":"    * Less information to process as we ignore contacts without schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":267,"author":{"gitId":"hanqinilnix"},"content":"  * Con:","lastModifiedDate":"2022-03-24"},{"lineNumber":268,"author":{"gitId":"hanqinilnix"},"content":"    * Contacts without schedule may be free at the specified date and time.","lastModifiedDate":"2022-03-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"vishandi"},"content":"### View Schedule Feature","lastModifiedDate":"2022-03-25"},{"lineNumber":271,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":272,"author":{"gitId":"vishandi"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":273,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":274,"author":{"gitId":"vishandi"},"content":"To allow users to view their contact\u0027s schedules, we implemented a `ViewScheduleCommand`, and added a `FilteredList\u003cPerson\u003e` object in `ModelManager` to facilitate its execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":275,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":276,"author":{"gitId":"vishandi"},"content":"Moreover, we created `ScheduleCard.java`, `ScheduleCardPanel.java`, and their respective `.fxml` files so it will be easier to maintain or develop the GUI in the future.","lastModifiedDate":"2022-03-25"},{"lineNumber":277,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":278,"author":{"gitId":"vishandi"},"content":"Overall, how this command works is similar to a combination of `delete` and `find`, in which we only take an index as input, ","lastModifiedDate":"2022-03-25"},{"lineNumber":279,"author":{"gitId":"vishandi"},"content":"and we retrieve information based on the filtered list.","lastModifiedDate":"2022-03-25"},{"lineNumber":280,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":281,"author":{"gitId":"hanqinilnix"},"content":"To **view** a person, the user needs to run the `view` command.","lastModifiedDate":"2022-03-30"},{"lineNumber":282,"author":{"gitId":"vishandi"},"content":"The parsing of the viewSchedule command is handled by the following classes:","lastModifiedDate":"2022-03-25"},{"lineNumber":283,"author":{"gitId":"vishandi"},"content":"* `AddressBookParser`","lastModifiedDate":"2022-03-24"},{"lineNumber":284,"author":{"gitId":"vishandi"},"content":"    * Checks that the user input contains the ViewScheduleCommand.COMMAND_WORD and calls `ViewScheduleCommand#parse()`","lastModifiedDate":"2022-03-25"},{"lineNumber":285,"author":{"gitId":"vishandi"},"content":"* `ViewScheduleCommandParser`","lastModifiedDate":"2022-03-25"},{"lineNumber":286,"author":{"gitId":"vishandi"},"content":"    * Parses the user input to create an `Index` of the person to view.","lastModifiedDate":"2022-03-24"},{"lineNumber":287,"author":{"gitId":"vishandi"},"content":"    * Returns a `ViewScheduleCommand` to be executed by the `LogicManager`","lastModifiedDate":"2022-03-25"},{"lineNumber":288,"author":{"gitId":"vishandi"},"content":"    * In case of invalid index, it will be handled by the `ViewScheduleCommand` upon execution.","lastModifiedDate":"2022-03-25"},{"lineNumber":289,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":290,"author":{"gitId":"hanqinilnix"},"content":"A successful execution of the `view` command is described as follows:","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"vishandi"},"content":"1. The `ViewScheduleCommand` retrieves the currently listed `Person`\u0027s from the `Model`.","lastModifiedDate":"2022-03-25"},{"lineNumber":292,"author":{"gitId":"vishandi"},"content":"2. The `personToView` is obtained from the above list using the `Index` created during the parsing of the viewSchedule command.","lastModifiedDate":"2022-03-25"},{"lineNumber":293,"author":{"gitId":"vishandi"},"content":"3. `ViewScheduleCommand` creates a new `SamePersonPredicate` that returns `True` only if the tested `Person` equals to `personToView`.","lastModifiedDate":"2022-03-25"},{"lineNumber":294,"author":{"gitId":"vishandi"},"content":"4. `ViewScheduleCommand` updates the `Model`\u0027s `viewedPerson` (the `FilteredList\u003cPerson\u003e` object) by parsing in the `SamePersonPredicate`.","lastModifiedDate":"2022-03-25"},{"lineNumber":295,"author":{"gitId":"vishandi"},"content":"5. `ViewScheduleCommand` constructs the `CommandResult` and returns it to the `LogicManager`.","lastModifiedDate":"2022-03-25"},{"lineNumber":296,"author":{"gitId":"vishandi"},"content":"6. The GUI will be updated accordingly.","lastModifiedDate":"2022-03-24"},{"lineNumber":297,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":298,"author":{"gitId":"vishandi"},"content":"\u003cimg src\u003d\"images/ViewScheduleSequenceDiagram.png\" /\u003e","lastModifiedDate":"2022-03-25"},{"lineNumber":299,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":300,"author":{"gitId":"vishandi"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":301,"author":{"gitId":"vishandi"},"content":"##### viewedPerson as FilteredList or a Person.","lastModifiedDate":"2022-03-25"},{"lineNumber":302,"author":{"gitId":"vishandi"},"content":"* **Alternative 1 (current choice):** viewedPerson as a FilteredList","lastModifiedDate":"2022-03-25"},{"lineNumber":303,"author":{"gitId":"vishandi"},"content":"    * Pros: Easier to implement, easier to develop if in the future we want to display more than one Person.","lastModifiedDate":"2022-03-24"},{"lineNumber":304,"author":{"gitId":"vishandi"},"content":"    * Cons: Not intuitive since now the viewSchedule command only support viewing one Person.","lastModifiedDate":"2022-03-25"},{"lineNumber":305,"author":{"gitId":"vishandi"},"content":"* **Alternative 2:** viewedPerson as a Person","lastModifiedDate":"2022-03-25"},{"lineNumber":306,"author":{"gitId":"vishandi"},"content":"    * Pros: More intuitive because it **is** the displayed Person\u0027s Schedule we are interested in.","lastModifiedDate":"2022-03-25"},{"lineNumber":307,"author":{"gitId":"vishandi"},"content":"    * Cons: Can only view one Person at any time, need to change the implementation when developer wants to","lastModifiedDate":"2022-03-24"},{"lineNumber":308,"author":{"gitId":"vishandi"},"content":"  display more than one Person.","lastModifiedDate":"2022-03-24"},{"lineNumber":309,"author":{"gitId":"vishandi"},"content":"##### Displayed Attributes upon calling viewSchedule","lastModifiedDate":"2022-03-25"},{"lineNumber":310,"author":{"gitId":"vishandi"},"content":"* **Alternative 1 (current choice):** Display required attributes like Name, Phone, and Schedule; No Schedule on Person List","lastModifiedDate":"2022-03-25"},{"lineNumber":311,"author":{"gitId":"vishandi"},"content":"    * Pros: Cleaner look of Person List, can display more detailed version of Events.","lastModifiedDate":"2022-03-24"},{"lineNumber":312,"author":{"gitId":"vishandi"},"content":"    * Cons: User doesn\u0027t know if a particular Person in the Person List has any Schedule or not.","lastModifiedDate":"2022-03-24"},{"lineNumber":313,"author":{"gitId":"vishandi"},"content":"* **Alternative 2:** All attributes of a Person both on Schedule and Person List","lastModifiedDate":"2022-03-24"},{"lineNumber":314,"author":{"gitId":"vishandi"},"content":"    * Pros: More detailed version of a Person, so the user doesn\u0027t need to look in both panels to get all the information of a Person.","lastModifiedDate":"2022-03-24"},{"lineNumber":315,"author":{"gitId":"vishandi"},"content":"    * Cons: Person List display only fits a few Persons at a time.","lastModifiedDate":"2022-03-24"},{"lineNumber":316,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":317,"author":{"gitId":"markbiju"},"content":"### FindCommonTiming feature","lastModifiedDate":"2022-03-25"},{"lineNumber":318,"author":{"gitId":"markbiju"},"content":"This section details how the  \u0027findCommonTiming\u0027 command is implemented. This command allows the user to get the common free timings of contacts who share the same tag. ","lastModifiedDate":"2022-03-25"},{"lineNumber":319,"author":{"gitId":"markbiju"},"content":"The timings that the contacts are free at the specified date will be displayed.","lastModifiedDate":"2022-03-25"},{"lineNumber":320,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":321,"author":{"gitId":"hanqinilnix"},"content":"#### Implementation","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"markbiju"},"content":"\u0027FindCommonTimingParser\u0027, \u0027FindCommonTimingCommand\u0027 and \u0027IsTagInPersonPredicate\u0027 classes are involved in the execution of the \u0027findCommonTiming\u0027 command.","lastModifiedDate":"2022-03-25"},{"lineNumber":323,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":324,"author":{"gitId":"markbiju"},"content":"The \u0027parse\u0027 method inside the \u0027FindCommandTimingParser\u0027 receives the user input and extracts the required arguments.","lastModifiedDate":"2022-03-25"},{"lineNumber":325,"author":{"gitId":"markbiju"},"content":"It then creates a new \u0027IsTagInPersonPredicate\u0027 object that will help check if contacts in the address book have the tag that the user has inputted.","lastModifiedDate":"2022-03-25"},{"lineNumber":326,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":327,"author":{"gitId":"markbiju"},"content":"Given below is an example usage scenario and explanation on how the \u0027findCommonTiming\u0027 command behaves at each step.","lastModifiedDate":"2022-03-25"},{"lineNumber":328,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":329,"author":{"gitId":"markbiju"},"content":"1. The user enters \u0027findCommonTiming t/friends da/2022-03-04\u0027 to find the common timings that the contacts who share the same tag are free. ","lastModifiedDate":"2022-03-25"},{"lineNumber":330,"author":{"gitId":"markbiju"},"content":"The arguments \u0027t/friends da/2022-03-04\u0027 are passed to the \u0027findCommonTimingParser\u0027 through its \u0027parse\u0027 method call.","lastModifiedDate":"2022-03-25"},{"lineNumber":331,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":332,"author":{"gitId":"markbiju"},"content":"2. The user input \u0027t/friends da/2022-03-04\u0027 will be checked to ensure that empty input is not given.","lastModifiedDate":"2022-03-25"},{"lineNumber":333,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":334,"author":{"gitId":"markbiju"},"content":"3. A new \u0027IsTagInPersonPredicate\u0027 object is created and encapsulated by a new \u0027FindCommonTiming\u0027","lastModifiedDate":"2022-03-25"},{"lineNumber":335,"author":{"gitId":"markbiju"},"content":"object.","lastModifiedDate":"2022-03-25"},{"lineNumber":336,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":337,"author":{"gitId":"markbiju"},"content":"4. The \u0027FindCommonTiming\u0027 object is returned to the \u0027LogicManager\u0027.","lastModifiedDate":"2022-03-25"},{"lineNumber":338,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":339,"author":{"gitId":"markbiju"},"content":"5. During the execution of the command, the \u0027FindCommonTiming\u0027 object calls \u0027Model#updateFilteredPersonList\u0027 method with the \u0027IsTagInPersonPredicate\u0027 to get the list of contacts that share the same tag. ","lastModifiedDate":"2022-03-25"},{"lineNumber":340,"author":{"gitId":"markbiju"},"content":"The schedules of all the contacts will be consolidated and events will be checked if they occur on the date inputted by the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":341,"author":{"gitId":"markbiju"},"content":"A default timeslot will be created such that it will be assumed that the whole day is free, after which 30-minute timeslots will be blocked out according to events that are determined to occur on that particular date.","lastModifiedDate":"2022-03-25"},{"lineNumber":342,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":343,"author":{"gitId":"markbiju"},"content":"Step 6. A \u0027CommandResult\u0027 with the timeslots that the contacts are free will be returned(timeslots are in intervals of 30 minutes). ","lastModifiedDate":"2022-03-25"},{"lineNumber":344,"author":{"gitId":"markbiju"},"content":"These timeslots will then be displayed to the user.","lastModifiedDate":"2022-03-25"},{"lineNumber":345,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":346,"author":{"gitId":"hanqinilnix"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-30"},{"lineNumber":347,"author":{"gitId":"markbiju"},"content":"**Aspect: Should we show timings that a group of contacts with the same tag are free by the minute, or in 30-minute blocks?**","lastModifiedDate":"2022-03-25"},{"lineNumber":348,"author":{"gitId":"markbiju"},"content":"* **Alternative 1 (current implementation)**: Show common free timings in 30-minute blocks.","lastModifiedDate":"2022-03-25"},{"lineNumber":349,"author":{"gitId":"markbiju"},"content":"    * Pros:","lastModifiedDate":"2022-03-25"},{"lineNumber":350,"author":{"gitId":"markbiju"},"content":"        * More efficient implementation as 30-minute intervals would be ruled out as compared to 1-minute intervals","lastModifiedDate":"2022-03-25"},{"lineNumber":351,"author":{"gitId":"markbiju"},"content":"        * More easily understood by users who are likely to plan meetings in 30-minute intervals","lastModifiedDate":"2022-03-25"},{"lineNumber":352,"author":{"gitId":"markbiju"},"content":"    * Con:","lastModifiedDate":"2022-03-25"},{"lineNumber":353,"author":{"gitId":"markbiju"},"content":"        * More meticulous planners will lament a lack of an ability to include intervals of less than 30 minutes.","lastModifiedDate":"2022-03-25"},{"lineNumber":354,"author":{"gitId":"markbiju"},"content":"* **Alternative 2**: Show common free timings accurate to the minute","lastModifiedDate":"2022-03-25"},{"lineNumber":355,"author":{"gitId":"markbiju"},"content":"    * Pros:","lastModifiedDate":"2022-03-25"},{"lineNumber":356,"author":{"gitId":"markbiju"},"content":"        * Feature would work for even the most meticulous of planners and could perhaps increase the benefit of the feature marginally","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"markbiju"},"content":"    * Con:","lastModifiedDate":"2022-03-25"},{"lineNumber":358,"author":{"gitId":"markbiju"},"content":"        * Efficiency of implementation would be compromised to cater to a smaller target group.","lastModifiedDate":"2022-03-25"},{"lineNumber":359,"author":{"gitId":"markbiju"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":360,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":361,"author":{"gitId":"hanqinilnix"},"content":"### ExportSchedule feature","lastModifiedDate":"2022-03-24"},{"lineNumber":362,"author":{"gitId":"hanqinilnix"},"content":"This section details how the `exportSchedule` command is implemented. This command allows the user to export the schedule of contacts in UniGenda.","lastModifiedDate":"2022-03-24"},{"lineNumber":363,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":364,"author":{"gitId":"hanqinilnix"},"content":"#### Implementation","lastModifiedDate":"2022-03-24"},{"lineNumber":365,"author":{"gitId":"hanqinilnix"},"content":"`ExportScheduleCommandParser` and `ExportScheduleCommand` classes are involved in the execution of the `exportSchedule` command.","lastModifiedDate":"2022-03-24"},{"lineNumber":366,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":367,"author":{"gitId":"hanqinilnix"},"content":"The `parse` method inside the `ExportScheduleCommandParser` receives the user input and extracts the required arguments. It will then get the `Schedule` of specified `Person` corresponding to the user input and save the schedule in Json format.","lastModifiedDate":"2022-03-24"},{"lineNumber":368,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":369,"author":{"gitId":"hanqinilnix"},"content":"Given below is one example usage scenario and explanation on how the `exportSchedule` command behaves at each step. You may also refer to the sequence diagram below.","lastModifiedDate":"2022-03-24"},{"lineNumber":370,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":371,"author":{"gitId":"hanqinilnix"},"content":"1. The user enters `exportSchedule 1` as the command to export the schedule of specified person. The argument `1` is passed to the `ExportScheduleCommandParser` through its `parse` method call.","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"hanqinilnix"},"content":"2. The user input `1` will be checked to ensure that empty input is not given. At the same time, `ParserUtil#parseIndex` is used to check for invalid or out of range inputs.","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"hanqinilnix"},"content":"3. The `ExportScheduleCommand` object is returned to the `LogicManager`.","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"hanqinilnix"},"content":"4. During the execution of the command, the `ExportScheduleCommand` object checks if the schedule that we are retrieving exists. If it exists, `JsonUtil#saveJsonFile` method will be called. We also ensure that the folder that we are trying to save to exist, if it does not exist, we will create the folder. The schedule is then immediately saved as a Json file.","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"hanqinilnix"},"content":"5. A `CommandResult` object indicating that the `exportSchedule` command is successful will be created and returned to the `LogicManager`.","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":377,"author":{"gitId":"hanqinilnix"},"content":"#### Sequence Diagram","lastModifiedDate":"2022-03-24"},{"lineNumber":378,"author":{"gitId":"hanqinilnix"},"content":"The following sequence diagram shows how the `exportSchedule` command works for the example above:","lastModifiedDate":"2022-03-24"},{"lineNumber":379,"author":{"gitId":"hanqinilnix"},"content":"![ExportScheduleSequenceDiagram](images/ExportScheduleSequenceDiagram.png)","lastModifiedDate":"2022-03-24"},{"lineNumber":380,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":381,"author":{"gitId":"hanqinilnix"},"content":"#### Design Considerations","lastModifiedDate":"2022-03-24"},{"lineNumber":382,"author":{"gitId":"hanqinilnix"},"content":"**Aspect: Where should we save the file?**","lastModifiedDate":"2022-03-24"},{"lineNumber":383,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 1**: Users specify where they want the file to be saved.","lastModifiedDate":"2022-03-24"},{"lineNumber":384,"author":{"gitId":"hanqinilnix"},"content":"    * Pro:","lastModifiedDate":"2022-03-24"},{"lineNumber":385,"author":{"gitId":"hanqinilnix"},"content":"        * Users will be able to save wherever they like.","lastModifiedDate":"2022-03-24"},{"lineNumber":386,"author":{"gitId":"hanqinilnix"},"content":"    * Con:","lastModifiedDate":"2022-03-24"},{"lineNumber":387,"author":{"gitId":"hanqinilnix"},"content":"        * Harder to implement as we would have to check if the file path given is an absolute path or a relative path.","lastModifiedDate":"2022-03-24"},{"lineNumber":388,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":389,"author":{"gitId":"hanqinilnix"},"content":"* **Alternative 2 (current implementation)**: We save the file to the data folder.","lastModifiedDate":"2022-03-24"},{"lineNumber":390,"author":{"gitId":"hanqinilnix"},"content":"    * Pros:","lastModifiedDate":"2022-03-24"},{"lineNumber":391,"author":{"gitId":"hanqinilnix"},"content":"        * Location for exported file will not change.","lastModifiedDate":"2022-03-24"},{"lineNumber":392,"author":{"gitId":"hanqinilnix"},"content":"        * Do not have to check if the file path is an absolute path or a relative path.","lastModifiedDate":"2022-03-24"},{"lineNumber":393,"author":{"gitId":"hanqinilnix"},"content":"    * Con:","lastModifiedDate":"2022-03-24"},{"lineNumber":394,"author":{"gitId":"hanqinilnix"},"content":"        * Users will not be able to save the file where they like.","lastModifiedDate":"2022-03-24"},{"lineNumber":395,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"tyanhan"},"content":"* has friends with busy schedules","lastModifiedDate":"2022-02-27"},{"lineNumber":419,"author":{"gitId":"tyanhan"},"content":"* wants to meet up with friends often","lastModifiedDate":"2022-02-27"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":422,"author":{"gitId":"tyanhan"},"content":"**Value proposition**: improve ease of finding common meeting times with contacts compared to mouse/GUI driven apps","lastModifiedDate":"2022-02-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"| Priority | As a …​                                         | I want to …​                                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"tyanhan"},"content":"|----------|-------------------------------------------------|--------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-03-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                        | see usage instructions                           | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"| `* * *`  | user                                            | add a new person                                 |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"| `* * *`  | user                                            | delete a person                                  | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"| `* * *`  | user                                            | find a person by name                            | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"tyanhan"},"content":"| `* * *`  | user                                            | add an event to my contact                       | refer to the contact\u0027s schedule on a later date                        |","lastModifiedDate":"2022-02-27"},{"lineNumber":436,"author":{"gitId":"tyanhan"},"content":"| `* * *`  | user                                            | edit an event on a person\u0027s schedule             | amend changes to my contact\u0027s schedule                                 |","lastModifiedDate":"2022-02-27"},{"lineNumber":437,"author":{"gitId":"tyanhan"},"content":"| `* * *`  | user                                            | delete an event on a person\u0027s schedule           | remove events that are no longer in my contact\u0027s schedule              |","lastModifiedDate":"2022-02-27"},{"lineNumber":438,"author":{"gitId":"tyanhan"},"content":"| `* *`    | student with a few friends I contact with often | bookmark their contacts                          | I can access them easily                                               |","lastModifiedDate":"2022-02-27"},{"lineNumber":439,"author":{"gitId":"-"},"content":"| `* *`    | user                                            | hide private contact details                     | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"tyanhan"},"content":"| `*`      | user with many persons in the address book      | sort persons by name                             | locate a person easily                                                 |","lastModifiedDate":"2022-03-04"},{"lineNumber":441,"author":{"gitId":"tyanhan"},"content":"| `*`      | student who wants to see when a friend is free  | view their schedule                              | easily plan a meetup                                                   |","lastModifiedDate":"2022-03-04"},{"lineNumber":442,"author":{"gitId":"tyanhan"},"content":"| `*`      | student with a lot of friends                   | see which timings friends with same tag are free | plan a meetup with friends from the same group                         |","lastModifiedDate":"2022-03-04"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"vishandi"},"content":"(For all use cases below, the **System** is the `UniGenda` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-03-05"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"tyanhan"},"content":"2.  UniGenda shows a list of persons","lastModifiedDate":"2022-03-04"},{"lineNumber":456,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"tyanhan"},"content":"4.  UniGenda deletes the person","lastModifiedDate":"2022-03-04"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"tyanhan"},"content":"    * 3a1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"tyanhan"},"content":"**Use case: Add an event**","lastModifiedDate":"2022-02-27"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":475,"author":{"gitId":"tyanhan"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":476,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":477,"author":{"gitId":"tyanhan"},"content":"1. User requests to add an event to a specific person\u0027s schedule","lastModifiedDate":"2022-02-27"},{"lineNumber":478,"author":{"gitId":"tyanhan"},"content":"2. UniGenda adds an event to the person\u0027s schedule","lastModifiedDate":"2022-03-04"},{"lineNumber":479,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":480,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":482,"author":{"gitId":"tyanhan"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":484,"author":{"gitId":"tyanhan"},"content":"* 1a. The specified date, time or duration of the event is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":486,"author":{"gitId":"tyanhan"},"content":"    * 1a1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":488,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":490,"author":{"gitId":"tyanhan"},"content":"* 1b. The user does not specify an event description or date.","lastModifiedDate":"2022-02-27"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":492,"author":{"gitId":"tyanhan"},"content":"    * 1b1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":494,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":496,"author":{"gitId":"tyanhan"},"content":"* 1c. The user specifies a duration for the event without specifying the start time.","lastModifiedDate":"2022-02-27"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":498,"author":{"gitId":"tyanhan"},"content":"    * 1c1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":500,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":502,"author":{"gitId":"tyanhan"},"content":"* 1d. The given index is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":504,"author":{"gitId":"tyanhan"},"content":"    * 1d1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":506,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":508,"author":{"gitId":"tyanhan"},"content":"**Use case: Edit an event**","lastModifiedDate":"2022-02-27"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":510,"author":{"gitId":"tyanhan"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":512,"author":{"gitId":"tyanhan"},"content":"1. User requests to edit a specific event on a specific person\u0027s schedule","lastModifiedDate":"2022-02-27"},{"lineNumber":513,"author":{"gitId":"tyanhan"},"content":"2. UniGenda edits the event","lastModifiedDate":"2022-03-04"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":515,"author":{"gitId":"tyanhan"},"content":"   Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":517,"author":{"gitId":"tyanhan"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":519,"author":{"gitId":"tyanhan"},"content":"* 1a. The specified date, time or duration of the event, if any, is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":521,"author":{"gitId":"tyanhan"},"content":"    * 1a1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":523,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":525,"author":{"gitId":"tyanhan"},"content":"* 1b. The user edits an event\u0027s duration without specifying a start time(if the event does not already have one).","lastModifiedDate":"2022-02-27"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":527,"author":{"gitId":"tyanhan"},"content":"    * 1b1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":529,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":531,"author":{"gitId":"tyanhan"},"content":"* 1c. The specified contact index or event index is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":533,"author":{"gitId":"tyanhan"},"content":"    * 1c1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":535,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":537,"author":{"gitId":"tyanhan"},"content":"**Use case: Delete an event**","lastModifiedDate":"2022-02-27"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":539,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-02-27"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":541,"author":{"gitId":"tyanhan"},"content":"1. User requests to delete a specific event on a specific person\u0027s schedule","lastModifiedDate":"2022-02-27"},{"lineNumber":542,"author":{"gitId":"tyanhan"},"content":"2. UniGenda deletes the event","lastModifiedDate":"2022-03-04"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":544,"author":{"gitId":"tyanhan"},"content":"   Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":546,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-02-27"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":548,"author":{"gitId":"tyanhan"},"content":"* 1a. The specified contact index or event index is invalid.","lastModifiedDate":"2022-02-27"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":550,"author":{"gitId":"tyanhan"},"content":"    * 1a1. UniGenda shows an error message.","lastModifiedDate":"2022-03-04"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":552,"author":{"gitId":"tyanhan"},"content":"    Use case ends.","lastModifiedDate":"2022-02-27"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":556,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"hanqinilnix"},"content":"4. Should be able to hold up to 100 events per person without noticeable lag.","lastModifiedDate":"2022-03-16"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"vishandi"},"content":"* **Event**: Something that happens","lastModifiedDate":"2022-03-06"},{"lineNumber":572,"author":{"gitId":"vishandi"},"content":"* **Schedule**: A list of Events","lastModifiedDate":"2022-03-06"},{"lineNumber":573,"author":{"gitId":"vishandi"},"content":"* **Main Success Scenario (MSS)**: Describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong","lastModifiedDate":"2022-03-06"},{"lineNumber":574,"author":{"gitId":"vishandi"},"content":"* **Command Line Interface (CLI)**: Text-based user interface","lastModifiedDate":"2022-03-06"},{"lineNumber":575,"author":{"gitId":"vishandi"},"content":"* **Graphical User Interface (GUI)**: Graphic-based user interface","lastModifiedDate":"2022-03-06"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"hanqinilnix"},"content":"### Getting contacts who are free at specified time and date","lastModifiedDate":"2022-03-24"},{"lineNumber":623,"author":{"gitId":"hanqinilnix"},"content":"1. Assuming that all contacts do not have a schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":624,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/10:00 da/2022-05-01`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":625,"author":{"gitId":"hanqinilnix"},"content":"      Expected: No contacts displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":626,"author":{"gitId":"hanqinilnix"},"content":"   ","lastModifiedDate":"2022-03-24"},{"lineNumber":627,"author":{"gitId":"hanqinilnix"},"content":"   2. Test case: `freeSchedule ti/10:00`","lastModifiedDate":"2022-03-24"},{"lineNumber":628,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Same result as previous.","lastModifiedDate":"2022-03-24"},{"lineNumber":629,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":630,"author":{"gitId":"hanqinilnix"},"content":"2. Assuming that some contacts have a schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":631,"author":{"gitId":"hanqinilnix"},"content":"   Situation 1: All contacts are free today at 10am.","lastModifiedDate":"2022-03-24"},{"lineNumber":632,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/10:00`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":633,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Displays all contacts with a schedule.","lastModifiedDate":"2022-03-24"},{"lineNumber":634,"author":{"gitId":"hanqinilnix"},"content":"   ","lastModifiedDate":"2022-03-24"},{"lineNumber":635,"author":{"gitId":"hanqinilnix"},"content":"   Situation 2: All contacts are not free today at specified time.","lastModifiedDate":"2022-03-24"},{"lineNumber":636,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/10:00`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":637,"author":{"gitId":"hanqinilnix"},"content":"      Expected: No contacts displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":638,"author":{"gitId":"hanqinilnix"},"content":"   ","lastModifiedDate":"2022-03-24"},{"lineNumber":639,"author":{"gitId":"hanqinilnix"},"content":"   Situation 3: Some contacts are free today at specified time.","lastModifiedDate":"2022-03-24"},{"lineNumber":640,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/10:00`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":641,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Contacts who are free today at 10am displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":642,"author":{"gitId":"hanqinilnix"},"content":"   2. Test case: `freeSchedule ti/08:00 ti/10:00`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":643,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Contacts who are free today at 10am will be displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":644,"author":{"gitId":"hanqinilnix"},"content":"   3. Test case: `freeSchedule ti/200:00 ti/10:00`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":645,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Same result as previous.","lastModifiedDate":"2022-03-24"},{"lineNumber":646,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":647,"author":{"gitId":"hanqinilnix"},"content":"   Situation 4. Giving a date that is in the past.","lastModifiedDate":"2022-03-24"},{"lineNumber":648,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/10:00 da/2000-01-01`\u003cbr\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":649,"author":{"gitId":"hanqinilnix"},"content":"      Expected: No contacts displayed.","lastModifiedDate":"2022-03-24"},{"lineNumber":650,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":651,"author":{"gitId":"hanqinilnix"},"content":"3. Assuming that some contacts have recurring events.","lastModifiedDate":"2022-03-24"},{"lineNumber":652,"author":{"gitId":"hanqinilnix"},"content":"   Situation 1: Contacts have daily events.","lastModifiedDate":"2022-03-24"},{"lineNumber":653,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: ","lastModifiedDate":"2022-03-24"},{"lineNumber":654,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":655,"author":{"gitId":"hanqinilnix"},"content":"4. Wrong inputs","lastModifiedDate":"2022-03-24"},{"lineNumber":656,"author":{"gitId":"hanqinilnix"},"content":"   1. Test case: `freeSchedule ti/1000`","lastModifiedDate":"2022-03-24"},{"lineNumber":657,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Nothing happens. Error message written in result box.","lastModifiedDate":"2022-03-24"},{"lineNumber":658,"author":{"gitId":"hanqinilnix"},"content":"   2. Test case: `freeSchedule ti/10:00 da/01 Dec 2022`","lastModifiedDate":"2022-03-24"},{"lineNumber":659,"author":{"gitId":"hanqinilnix"},"content":"      Expected: Same result as previous.","lastModifiedDate":"2022-03-24"},{"lineNumber":660,"author":{"gitId":"hanqinilnix"},"content":"   ","lastModifiedDate":"2022-03-24"},{"lineNumber":661,"author":{"gitId":"hanqinilnix"},"content":"_{ more test cases to be added }_","lastModifiedDate":"2022-03-24"},{"lineNumber":662,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":663,"author":{"gitId":"hanqinilnix"},"content":"#### Saving data","lastModifiedDate":"2022-03-24"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"tyanhan":103,"vishandi":67,"markbiju":42,"-":321,"hanqinilnix":136}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"UniGenda is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are an NUS student,","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"and you can type fast, UniGenda can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"# Table of Contents","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"2. [Features](#features)","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"   1. [Viewing help](#viewing-help--help)","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"   2. [Adding a person](#adding-a-person-add)","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"   3. [Listing all persons](#listing-all-persons--list)","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"   4. [Editing a person](#editing-a-person--edit)","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"   5. [Locating persons by name](#locating-persons-by-name-find)","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"   6. [Deleting a person](#deleting-a-person--delete)","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"   7. [Setting a contact as the user](#setting-a-contact-as-the-user--setuser)","lastModifiedDate":"2022-03-31"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"   8. [Viewing a person\u0027s schedule](#viewing-a-persons-schedule--viewschedule)","lastModifiedDate":"2022-04-01"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"   9. [Viewing persons by tags](#viewing-persons-by-tags-viewgroup)","lastModifiedDate":"2022-04-01"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"   10. [Adding a person\u0027s schedule](#adding-a-persons-schedule-addevent)","lastModifiedDate":"2022-03-31"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"   11. [Editing a person\u0027s schedule](#editing-a-persons-schedule-editevent)","lastModifiedDate":"2022-03-31"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"   12. [Deleting a person\u0027s schedule](#deleting-a-persons-schedule-deleteevent)","lastModifiedDate":"2022-03-31"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"   13. [Getting persons who are free](#getting-persons-who-are-free-whoisfree)","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"   14. [Getting common free timings of persons by tag](#getting-common-free-timing-of-persons-by-tag-findcommontiming)","lastModifiedDate":"2022-04-01"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"   15. [Importing a person\u0027s schedule](#importing-a-persons-schedule-importschedule)","lastModifiedDate":"2022-03-31"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"   16. [Exporting a person\u0027s schedule](#exporting-a-persons-schedule-exportschedule)","lastModifiedDate":"2022-03-31"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"   17. [Clearing a person\u0027s schedule](#clearing-a-persons-schedule-clearschedule)","lastModifiedDate":"2022-04-01"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"   18. [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2022-04-01"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"   19. [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2022-04-01"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"   20. [Saving the data](#saving-the-data)","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"   21. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-04-01"},{"lineNumber":34,"author":{"gitId":"markbiju"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2022-03-31"},{"lineNumber":35,"author":{"gitId":"markbiju"},"content":"4. [Command Summary](#command-summary)","lastModifiedDate":"2022-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"## Quick Start","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"1. Download the latest `UniGenda.jar` from [here](https://github.com/AY2122S2-CS2103T-W09-1/tp/releases)*.","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"   * **`addEvent`**`1 ed/CS2103T Tutorial da/2022-03-16 ti/10:00 du/1` : Adds a CS2103T Tutorial event to the first contact.","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"\\* Will be released soon! Stay tuned!","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-04-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"* All leading and trailing whitespaces will be trimmed for each input to each prefix.","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"* All commands are case-insensitive. For example `addevent` or `AdDEvenT` works for `addEvent` commands.","lastModifiedDate":"2022-03-29"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"Adds a person to UniGenda.","lastModifiedDate":"2022-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"Format: `add n/NAME p/PHONE_NUMBER [tg/TELEGRAM] [gh/GITHUB] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"* `NAME` should only contain alphanumeric characters and be at most 30 characters long. It should not be blank.","lastModifiedDate":"2022-04-01"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"* `PHONE_NUMBER` should only contain numeric characters, and should be 3-15 digits long.","lastModifiedDate":"2022-04-01"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"* `TELEGRAM`, if specified, should only contain alphanumeric characters and underscore (_), and should be 5-40 characters long. It also should not have multiple consecutive underscores or begin or end with an underscore, or be blank.","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"* `GITHUB`, if specified, should only contain alphanumeric characters and hyphen (-), and be at most 39 characters long. It also should not have multiple consecutive hyphens or begin or end with a hyphen, or be blank.","lastModifiedDate":"2022-04-01"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"* `ADDRESS` should only contain alphanumeric characters and the following punctuations: **!\"#$\u0026\u0027()\\*+,-.:;\u003c\u003d\u003e?@**. Its length should not exceed 80 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"* `EMAIL` should be a **valid** email with length not exceeding 60 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"* **Valid** `EMAIL` are emails that are of the format *local-part@domain* and adhere to the following constraints:","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"  * The local-part should only contain alphanumeric characters and the following special characteres: **+_.-**. It cannot start or end with any special characters and cannot have consecutive special characters.","lastModifiedDate":"2022-04-03"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"  * The domain part is made up of domain labels separated by periods (e.g. domain-label1.domain-label2.com). It must end with a domain label at least 2 characters long, each domain label starts and end with alphanumeric characters, and each domain label consists of only alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-03-31"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"* `TAG` should only contain alphanumeric characters and be at most 30 characters long. It should not contain whitespaces and cannot be blank.","lastModifiedDate":"2022-04-01"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"* `TAG` is case-insensitive (`BestFriend` and `bestFriend` will be considered the same tag) and will be converted to the lowercase for display. Duplicate tags will be ignored.","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"* You cannot add duplicate persons. Persons are considered to be duplicates if they share the same name (case-insensitive) and phone number.","lastModifiedDate":"2022-04-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"* add n/John Doe p/98765432","lastModifiedDate":"2022-03-03"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"* add n/Betsy Crow t/friend p/1234567 a/Newgate Prison t/Criminal","lastModifiedDate":"2022-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"Shows a list of all persons in UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2022-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"Edits an existing person in the UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"tyanhan"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [tg/TELEGRAM] [gh/GITHUB] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2022-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-03-30"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"* You can also remove telegram, github, email, or address by typing its corresponding prefix without specifying anything after it.","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"tyanhan"},"content":"* `NAME` should only contain alphanumeric characters and be at most 30 characters long. It should not be blank.","lastModifiedDate":"2022-04-01"},{"lineNumber":149,"author":{"gitId":"tyanhan"},"content":"* `PHONE_NUMBER` should only contain numeric characters, and should be 3-15 digits long.","lastModifiedDate":"2022-04-01"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"* `TELEGRAM`, if specified, should only contain alphanumeric characters and underscore (_), and should be 5-40 characters long. It also should not have multiple consecutive underscores or begin or end with an underscore.","lastModifiedDate":"2022-04-04"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"* `GITHUB`, if specified, should only contain alphanumeric characters and hyphen (-), and be at most 39 characters long. It also should not have multiple consecutive hyphens or begin or end with a hyphen.","lastModifiedDate":"2022-04-04"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"* `ADDRESS` should only contain alphanumeric characters and the following punctuations: **!\"#$\u0026\u0027()\\*+,-.:;\u003c\u003d\u003e?@**. Its length should not exceed 80 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"* `EMAIL` should be a **valid** email with length not exceeding 60 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"* **Valid** `EMAIL` are emails that are of the format *local-part@domain* and adhere to the following constraints:","lastModifiedDate":"2022-03-31"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"    * The local-part should only contain alphanumeric characters and the following special characteres: **+_.-**. It cannot start or end with any special characters and cannot have consecutive special characters.","lastModifiedDate":"2022-04-03"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"    * The domain part is made up of domain labels separated by periods (e.g. domain-label1.domain-label2.com). It must end with a domain label at least 2 characters long, each domain label starts and end with alphanumeric characters, and each domain label consists of only alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-03-31"},{"lineNumber":157,"author":{"gitId":"tyanhan"},"content":"* `TAG` should only contain alphanumeric characters and be at most 30 characters long. It should not contain whitespaces and cannot be blank.","lastModifiedDate":"2022-04-01"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"* `TAG` is case-insensitive (`BestFriend` and `bestFriend` will be considered the same tag) and will be converted to the lowercase for display. Duplicate tags will be ignored and only one will be taken.","lastModifiedDate":"2022-04-04"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"* Editing `TAG` will replace the Person\u0027s current `TAG`s with the newly inputted `TAG`s.","lastModifiedDate":"2022-04-04"},{"lineNumber":160,"author":{"gitId":"tyanhan"},"content":"* You cannot edit a person\u0027s name and/or phone number such that there will be duplicate persons in UniGenda. Persons are considered to be duplicates if they share the same name (case-insensitive) and phone number.","lastModifiedDate":"2022-04-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"* `edit 1 p/91234567 e/` Removes the 1st person\u0027s email address, if it exists previously.","lastModifiedDate":"2022-04-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2022-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`.","lastModifiedDate":"2022-03-30"},{"lineNumber":174,"author":{"gitId":"vishandi"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`.","lastModifiedDate":"2022-03-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"vishandi"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`.","lastModifiedDate":"2022-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"vishandi"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`.","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2022-03-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"vishandi"},"content":"Deletes the specified person from UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"tyanhan"},"content":"* Deletes the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"vishandi"},"content":"* `list` followed by `delete 2` deletes the 2nd person in UniGenda","lastModifiedDate":"2022-03-31"},{"lineNumber":195,"author":{"gitId":"vishandi"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command","lastModifiedDate":"2022-03-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"tyanhan"},"content":"### Setting a contact as the user : `setUser`","lastModifiedDate":"2022-03-27"},{"lineNumber":198,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":199,"author":{"gitId":"tyanhan"},"content":"Shifts the contact to the top of the list.","lastModifiedDate":"2022-04-01"},{"lineNumber":200,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":201,"author":{"gitId":"tyanhan"},"content":"Format: `setUser INDEX`","lastModifiedDate":"2022-03-27"},{"lineNumber":202,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":203,"author":{"gitId":"tyanhan"},"content":"* Sets the person at the specified `INDEX` as the user. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":204,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":205,"author":{"gitId":"tyanhan"},"content":"Examples:","lastModifiedDate":"2022-03-27"},{"lineNumber":206,"author":{"gitId":"vishandi"},"content":"* `list` followed by `setUser 2` sets the 2nd person in UniGenda as the user","lastModifiedDate":"2022-03-31"},{"lineNumber":207,"author":{"gitId":"vishandi"},"content":"* `find Betsy` followed by `setUser 1` sets the 1st person in the results of the `find` command as the user","lastModifiedDate":"2022-03-31"},{"lineNumber":208,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":209,"author":{"gitId":"markbiju"},"content":"### Viewing a person\u0027s schedule : `viewSchedule`","lastModifiedDate":"2022-03-31"},{"lineNumber":210,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":211,"author":{"gitId":"tyanhan"},"content":"Views the specified person\u0027s schedule. ","lastModifiedDate":"2022-04-01"},{"lineNumber":212,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":213,"author":{"gitId":"vishandi"},"content":"Format: `viewSchedule INDEX`","lastModifiedDate":"2022-03-25"},{"lineNumber":214,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":215,"author":{"gitId":"tyanhan"},"content":"* Views the schedule of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":216,"author":{"gitId":"tyanhan"},"content":"* The person\u0027s schedule for the next 7 days (from system\u0027s date, including the current date) will be shown, along with the person\u0027s full list of events.","lastModifiedDate":"2022-04-01"},{"lineNumber":217,"author":{"gitId":"tyanhan"},"content":"* The schedule will be displayed in the right panel of UniGenda.","lastModifiedDate":"2022-04-01"},{"lineNumber":218,"author":{"gitId":"vishandi"},"content":"* If you change your system\u0027s time, the Upcoming Schedule will **not** update automatically. You need to enter the command once again to view the updated Upcoming Schedule.","lastModifiedDate":"2022-03-28"},{"lineNumber":219,"author":{"gitId":"vishandi"},"content":"* If a certain Event has passed according to your system\u0027s time, it will **not** update automatically as well. You need to enter the command once again to view the updated Upcoming Schedule.","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":221,"author":{"gitId":"vishandi"},"content":"Examples:","lastModifiedDate":"2022-03-17"},{"lineNumber":222,"author":{"gitId":"vishandi"},"content":"* `list` followed by `viewSchedule 4` views the 4th person in UniGenda","lastModifiedDate":"2022-03-31"},{"lineNumber":223,"author":{"gitId":"vishandi"},"content":"  ![result for \u0027view 4\u0027](images/viewResult.png)","lastModifiedDate":"2022-03-17"},{"lineNumber":224,"author":{"gitId":"vishandi"},"content":"* `find Betsy` followed by `viewSchedule 1` views the 1st person in the results of the `find` command","lastModifiedDate":"2022-03-31"},{"lineNumber":225,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":226,"author":{"gitId":"hanqinilnix"},"content":"### Viewing persons by tags: `viewGroup`","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":228,"author":{"gitId":"tyanhan"},"content":"Shows a list of all persons with the specified tag.","lastModifiedDate":"2022-04-01"},{"lineNumber":229,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":230,"author":{"gitId":"hanqinilnix"},"content":"Format: `viewGroup t/TAG`","lastModifiedDate":"2022-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-02-20"},{"lineNumber":233,"author":{"gitId":"hanqinilnix"},"content":"* `viewGroup t/groupmates`","lastModifiedDate":"2022-03-30"},{"lineNumber":234,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":235,"author":{"gitId":"hanqinilnix"},"content":"### Adding a person’s schedule: `addEvent`","lastModifiedDate":"2022-03-14"},{"lineNumber":236,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":237,"author":{"gitId":"tyanhan"},"content":"Adds an event to the schedule of the specified person.","lastModifiedDate":"2022-04-01"},{"lineNumber":238,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":239,"author":{"gitId":"tyanhan"},"content":"Format: `addEvent INDEX ed/EVENT_DESCRIPTION da/DATE [ti/TIME] [du/DURATION] [r/RECUR_FREQUENCY]`","lastModifiedDate":"2022-03-16"},{"lineNumber":240,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":241,"author":{"gitId":"tyanhan"},"content":"* Adds an event to the schedule of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":242,"author":{"gitId":"tyanhan"},"content":"* You cannot add duplicate events. Events are considered to be duplicates if they share the same event description, time, duration, recur frequency and recur on the same dates.","lastModifiedDate":"2022-03-31"},{"lineNumber":243,"author":{"gitId":"tyanhan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":244,"author":{"gitId":"tyanhan"},"content":"  :information_source: **NOTE:** CS2103T Tutorial 2022-01-01 10:00-11:00 (Weekly) is considered the same event as CS2103T Tutorial 2022-01-08 10:00-11:00 (Weekly) because they eventually recur on the same dates.","lastModifiedDate":"2022-04-06"},{"lineNumber":245,"author":{"gitId":"tyanhan"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":246,"author":{"gitId":"tyanhan"},"content":"* If `TIME` is not specified, the added event will have a duration of 24 hours and start from 00:00.","lastModifiedDate":"2022-04-06"},{"lineNumber":247,"author":{"gitId":"tyanhan"},"content":"* If `TIME` is specified but not `DURATION`, the duration will be defaulted to 2 hours.","lastModifiedDate":"2022-04-01"},{"lineNumber":248,"author":{"gitId":"tyanhan"},"content":"* If `DURATION` is specified, `TIME` also needs to be specified.","lastModifiedDate":"2022-04-01"},{"lineNumber":249,"author":{"gitId":"tyanhan"},"content":"* `EVENT_DESCRIPTION` should not contain **/** and should be at most 60 characters.","lastModifiedDate":"2022-04-01"},{"lineNumber":250,"author":{"gitId":"tyanhan"},"content":"* `DATE` should be a valid date in \"YYYY-MM-DD\" format, and **YYYY must be between 2000-2100**.","lastModifiedDate":"2022-04-01"},{"lineNumber":251,"author":{"gitId":"tyanhan"},"content":"* `TIME` should be a valid time in \"HH:MM\" format.","lastModifiedDate":"2022-04-01"},{"lineNumber":252,"author":{"gitId":"tyanhan"},"content":"* `DURATION`, if provided, should be in one of the following formats (case-insensitive):","lastModifiedDate":"2022-04-01"},{"lineNumber":253,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":254,"author":{"gitId":"tyanhan"},"content":"| Value  | Duration          | Example |","lastModifiedDate":"2022-03-29"},{"lineNumber":255,"author":{"gitId":"tyanhan"},"content":"|--------|-------------------|---------|","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"tyanhan"},"content":"| `HhMm` | H hours M minutes | `3h30m` |","lastModifiedDate":"2022-03-29"},{"lineNumber":257,"author":{"gitId":"tyanhan"},"content":"| `Hh`   | H hours           | `2h`    |","lastModifiedDate":"2022-03-29"},{"lineNumber":258,"author":{"gitId":"tyanhan"},"content":"| `Mm`   | M minutes         | `20m`   |","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"tyanhan"},"content":"| `H`    | H hours           | `3`     |","lastModifiedDate":"2022-03-29"},{"lineNumber":260,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":261,"author":{"gitId":"tyanhan"},"content":"* Duration **must be at least 1 minute long and less than or equal to 336hours (2 weeks)**","lastModifiedDate":"2022-04-06"},{"lineNumber":262,"author":{"gitId":"tyanhan"},"content":"* `RECUR_FREQUENCY`, if provided, must be one of the following values (case-insensitive):","lastModifiedDate":"2022-04-01"},{"lineNumber":263,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":264,"author":{"gitId":"tyanhan"},"content":"| Value            | Frequency |","lastModifiedDate":"2022-03-16"},{"lineNumber":265,"author":{"gitId":"vishandi"},"content":"|------------------|-----------|","lastModifiedDate":"2022-03-30"},{"lineNumber":266,"author":{"gitId":"vishandi"},"content":"| `D`, `DAILY`     | Daily     |","lastModifiedDate":"2022-03-30"},{"lineNumber":267,"author":{"gitId":"vishandi"},"content":"| `W`, `WEEKLY`    | Weekly    |","lastModifiedDate":"2022-03-30"},{"lineNumber":268,"author":{"gitId":"vishandi"},"content":"| `BW`, `BIWEEKLY` | Biweekly  |","lastModifiedDate":"2022-03-30"},{"lineNumber":269,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":270,"author":{"gitId":"tyanhan"},"content":"Examples:","lastModifiedDate":"2022-03-05"},{"lineNumber":271,"author":{"gitId":"hanqinilnix"},"content":"* `addEvent 3 ed/Open House da/2022-12-20`","lastModifiedDate":"2022-03-16"},{"lineNumber":272,"author":{"gitId":"hanqinilnix"},"content":"* `addEvent 2 ed/CCA Meeting da/2023-11-23 ti/12:00 du/1H30M r/W`","lastModifiedDate":"2022-03-16"},{"lineNumber":273,"author":{"gitId":"vishandi"},"content":"* `addEvent 1 ed/CS2103T Coding da/2023-10-23 ti/12:00 du/1H30M r/Daily`","lastModifiedDate":"2022-03-28"},{"lineNumber":274,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":275,"author":{"gitId":"hanqinilnix"},"content":"### Editing a person’s schedule: `editEvent`","lastModifiedDate":"2022-03-14"},{"lineNumber":276,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":277,"author":{"gitId":"tyanhan"},"content":"Edits the specified event in the schedule of the specified person.","lastModifiedDate":"2022-04-01"},{"lineNumber":278,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":279,"author":{"gitId":"tyanhan"},"content":"Format: `editEvent INDEX EVENT_INDEX [ed/EVENT_DESCRIPTION] [da/DATE] [ti/TIME] [du/DURATION] [r/RECUR_FREQUENCY]`","lastModifiedDate":"2022-03-16"},{"lineNumber":280,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":281,"author":{"gitId":"tyanhan"},"content":"* `INDEX` refers to the index number shown in the displayed person list, whereas `EVENT_INDEX` refers to the index number shown in the person\u0027s full schedule. Both indices **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":282,"author":{"gitId":"tyanhan"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-03-31"},{"lineNumber":283,"author":{"gitId":"tyanhan"},"content":"* You cannot edit an event\u0027s description, date, time, duration and/or recurring frequency such that there will be duplicate events in UniGenda. Events are considered to be duplicates if they share the same event description, time, duration, recur frequency and recur on the same dates.","lastModifiedDate":"2022-03-31"},{"lineNumber":284,"author":{"gitId":"tyanhan"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":285,"author":{"gitId":"tyanhan"},"content":"  :information_source: **NOTE:** CS2103T Tutorial 2022-01-01 10:00-11:00 (Weekly) is considered the same event as CS2103T Tutorial 2022-01-08 10:00-11:00 (Weekly) because they eventually recur on the same dates.","lastModifiedDate":"2022-04-06"},{"lineNumber":286,"author":{"gitId":"tyanhan"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-31"},{"lineNumber":287,"author":{"gitId":"vishandi"},"content":"* `EVENT_DESCRIPTION` should not contain **/** and at most 60 characters.","lastModifiedDate":"2022-03-30"},{"lineNumber":288,"author":{"gitId":"tyanhan"},"content":"* `DATE` should be a valid date in \"YYYY-MM-DD\" format, and **YYYY must be between 2000-2100**.","lastModifiedDate":"2022-04-01"},{"lineNumber":289,"author":{"gitId":"tyanhan"},"content":"* `TIME` should be a valid time in \"HH:MM\" format.","lastModifiedDate":"2022-04-01"},{"lineNumber":290,"author":{"gitId":"tyanhan"},"content":"* `DURATION`, if provided, should be in one of the following formats (case-insensitive):","lastModifiedDate":"2022-04-01"},{"lineNumber":291,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"tyanhan"},"content":"| Format | Duration          | Example |","lastModifiedDate":"2022-03-30"},{"lineNumber":293,"author":{"gitId":"tyanhan"},"content":"|--------|-------------------|---------|","lastModifiedDate":"2022-03-29"},{"lineNumber":294,"author":{"gitId":"tyanhan"},"content":"| `HhMm` | H hours M minutes | `3h30m` |","lastModifiedDate":"2022-03-29"},{"lineNumber":295,"author":{"gitId":"tyanhan"},"content":"| `Hh`   | H hours           | `2h`    |","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"tyanhan"},"content":"| `Mm`   | M minutes         | `20m`   |","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"tyanhan"},"content":"| `H`    | H hours           | `3`     |","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":299,"author":{"gitId":"tyanhan"},"content":"* Duration **must be at least 1 minute long and less than or equal to 336hours (2 weeks)**","lastModifiedDate":"2022-04-06"},{"lineNumber":300,"author":{"gitId":"tyanhan"},"content":"* RECUR_FREQUENCY, if provided, must be one of the following values (case-insensitive) :","lastModifiedDate":"2022-04-01"},{"lineNumber":301,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":302,"author":{"gitId":"tyanhan"},"content":"| Value            | Frequency |","lastModifiedDate":"2022-03-16"},{"lineNumber":303,"author":{"gitId":"vishandi"},"content":"|------------------|-----------|","lastModifiedDate":"2022-03-30"},{"lineNumber":304,"author":{"gitId":"vishandi"},"content":"| `D`, `DAILY`     | Daily     |","lastModifiedDate":"2022-03-30"},{"lineNumber":305,"author":{"gitId":"vishandi"},"content":"| `W`, `WEEKLY`    | Weekly    |","lastModifiedDate":"2022-03-30"},{"lineNumber":306,"author":{"gitId":"vishandi"},"content":"| `BW`, `BIWEEKLY` | Biweekly  |","lastModifiedDate":"2022-03-30"},{"lineNumber":307,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":308,"author":{"gitId":"vishandi"},"content":"Example:","lastModifiedDate":"2022-03-03"},{"lineNumber":309,"author":{"gitId":"hanqinilnix"},"content":"* `editEvent 3 3 da/2022-12-21`","lastModifiedDate":"2022-03-16"},{"lineNumber":310,"author":{"gitId":"hanqinilnix"},"content":"* `editEvent 3 1 ed/CS2103T tutorial da/2022-12-18 ti/14:00 du/2`","lastModifiedDate":"2022-03-16"},{"lineNumber":311,"author":{"gitId":"vishandi"},"content":"* `editEvent 3 1 ed/CS2103T lecture`","lastModifiedDate":"2022-03-03"},{"lineNumber":312,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":313,"author":{"gitId":"hanqinilnix"},"content":"### Deleting a person\u0027s schedule: `deleteEvent`","lastModifiedDate":"2022-03-14"},{"lineNumber":314,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":315,"author":{"gitId":"tyanhan"},"content":"Deletes an event from the schedule of the specified person.","lastModifiedDate":"2022-04-01"},{"lineNumber":316,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":317,"author":{"gitId":"vishandi"},"content":"Format: `deleteEvent INDEX EVENT_INDEX`","lastModifiedDate":"2022-03-16"},{"lineNumber":318,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"tyanhan"},"content":"* `INDEX` refers to the index number shown in the displayed person list, whereas `EVENT_INDEX` refers to the index number shown in the person\u0027s full schedule. Both indices **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":320,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":321,"author":{"gitId":"vishandi"},"content":"Example:","lastModifiedDate":"2022-02-20"},{"lineNumber":322,"author":{"gitId":"vishandi"},"content":"* `deleteEvent 3 3`","lastModifiedDate":"2022-03-03"},{"lineNumber":323,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":324,"author":{"gitId":"hanqinilnix"},"content":"### Getting persons who are free: `whoIsFree`","lastModifiedDate":"2022-03-30"},{"lineNumber":325,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":326,"author":{"gitId":"hanqinilnix"},"content":"Shows a list of persons who are free at specified time and date. You may also choose to additionally filter the list using tags.","lastModifiedDate":"2022-03-30"},{"lineNumber":327,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":328,"author":{"gitId":"hanqinilnix"},"content":"Format: `whoIsFree ti/TIME [da/ DATE] [t/TAG]`","lastModifiedDate":"2022-03-30"},{"lineNumber":329,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":330,"author":{"gitId":"tyanhan"},"content":"* `TIME` should be a valid time in \"HH:MM\" format.","lastModifiedDate":"2022-04-01"},{"lineNumber":331,"author":{"gitId":"tyanhan"},"content":"* `DATE` should be a valid date in \"YYYY-MM-DD\" format.","lastModifiedDate":"2022-04-01"},{"lineNumber":332,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":333,"author":{"gitId":"vishandi"},"content":"Examples:","lastModifiedDate":"2022-02-20"},{"lineNumber":334,"author":{"gitId":"hanqinilnix"},"content":"* `whoIsFree ti/12:00`","lastModifiedDate":"2022-03-30"},{"lineNumber":335,"author":{"gitId":"hanqinilnix"},"content":"* `whoIsFree ti/14:00 da/2022-02-14`","lastModifiedDate":"2022-03-30"},{"lineNumber":336,"author":{"gitId":"hanqinilnix"},"content":"* `whoIsFree ti/12:00 t/friends`","lastModifiedDate":"2022-03-30"},{"lineNumber":337,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":338,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":339,"author":{"gitId":"markbiju"},"content":"### Getting common free timing of persons by tag: `findCommonTiming`","lastModifiedDate":"2022-03-31"},{"lineNumber":340,"author":{"gitId":"markbiju"},"content":"Gets the common timings of persons who are free with the same tag on a certain day.","lastModifiedDate":"2022-04-01"},{"lineNumber":341,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":342,"author":{"gitId":"markbiju"},"content":"Format: `findCommonTiming t/TAG da/DATE`","lastModifiedDate":"2022-03-31"},{"lineNumber":343,"author":{"gitId":"markbiju"},"content":"* Show the overlapping timings that a group of friends with the same tags are free on a certain day.","lastModifiedDate":"2022-03-31"},{"lineNumber":344,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":345,"author":{"gitId":"markbiju"},"content":"Example:","lastModifiedDate":"2022-03-31"},{"lineNumber":346,"author":{"gitId":"markbiju"},"content":"* `findCommonTiming t/groupmates da/2022-03-04`","lastModifiedDate":"2022-03-31"},{"lineNumber":347,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":348,"author":{"gitId":"tyanhan"},"content":"### Importing a person\u0027s schedule: `importSchedule`","lastModifiedDate":"2022-03-27"},{"lineNumber":349,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":350,"author":{"gitId":"tyanhan"},"content":"Imports a schedule from a file to the specified person. The specified person\u0027s schedule will be overwritten.","lastModifiedDate":"2022-04-06"},{"lineNumber":351,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"tyanhan"},"content":"Format: `importSchedule INDEX pa/FILE_PATH`","lastModifiedDate":"2022-03-27"},{"lineNumber":353,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"tyanhan"},"content":"* Imports a schedule to the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":355,"author":{"gitId":"vishandi"},"content":"* The file\u0027s data **must be in json format**, but the file itself may have any extension (e.g. .json, .txt etc.).","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"tyanhan"},"content":"* The imported `Schedule` **cannot be empty**.","lastModifiedDate":"2022-03-25"},{"lineNumber":357,"author":{"gitId":"tyanhan"},"content":"* `FILE_PATH` may be absolute or relative to the folder where the application was opened. More information of absolute and relative file paths can be found [here](https://www.educative.io/edpresso/absolute-vs-relative-path).","lastModifiedDate":"2022-04-06"},{"lineNumber":358,"author":{"gitId":"tyanhan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":359,"author":{"gitId":"tyanhan"},"content":"  :exclamation: **Caution:** The person\u0027s schedule will be **overwritten** with the imported schedule.","lastModifiedDate":"2022-04-06"},{"lineNumber":360,"author":{"gitId":"tyanhan"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-04-06"},{"lineNumber":361,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":362,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":363,"author":{"gitId":"tyanhan"},"content":"Examples:","lastModifiedDate":"2022-03-23"},{"lineNumber":364,"author":{"gitId":"tyanhan"},"content":"`importSchedule 1 pa/typicalSchedule.json`","lastModifiedDate":"2022-03-27"},{"lineNumber":365,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":366,"author":{"gitId":"vishandi"},"content":"### Exporting a person\u0027s schedule: `exportSchedule`","lastModifiedDate":"2022-03-29"},{"lineNumber":367,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":368,"author":{"gitId":"vishandi"},"content":"Format: `exportSchedule INDEX`","lastModifiedDate":"2022-03-29"},{"lineNumber":369,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":370,"author":{"gitId":"tyanhan"},"content":"* Allows user to export schedule of person at specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":371,"author":{"gitId":"vishandi"},"content":"* The exported data will be named `[NAME].json`, where `[NAME]` is the name of the person on index `INDEX`.","lastModifiedDate":"2022-03-29"},{"lineNumber":372,"author":{"gitId":"tyanhan"},"content":"* The exported data will be saved in the `data/export/` folder relative to the folder where the application was opened.","lastModifiedDate":"2022-04-06"},{"lineNumber":373,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":374,"author":{"gitId":"hanqinilnix"},"content":"Examples:","lastModifiedDate":"2022-03-22"},{"lineNumber":375,"author":{"gitId":"vishandi"},"content":"* `exportSchedule 1`","lastModifiedDate":"2022-03-29"},{"lineNumber":376,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":377,"author":{"gitId":"tyanhan"},"content":"### Clearing a person\u0027s schedule: `clearSchedule`","lastModifiedDate":"2022-04-01"},{"lineNumber":378,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":379,"author":{"gitId":"tyanhan"},"content":"Format: `clearSchedule INDEX`","lastModifiedDate":"2022-04-01"},{"lineNumber":380,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":381,"author":{"gitId":"tyanhan"},"content":"* Clears the schedule of the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2022-04-01"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-01"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2022-03-14"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":385,"author":{"gitId":"vishandi"},"content":"Clears all entries from UniGenda.","lastModifiedDate":"2022-03-03"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2022-03-03"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2022-03-14"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2022-03-03"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-03-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2022-03-14"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":397,"author":{"gitId":"vishandi"},"content":"UniGenda data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-03-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2022-03-14"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":401,"author":{"gitId":"vishandi"},"content":"UniGenda data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-03-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-03-03"},{"lineNumber":404,"author":{"gitId":"vishandi"},"content":"If your changes to the data file makes its format invalid, UniGenda","lastModifiedDate":"2022-03-03"},{"lineNumber":405,"author":{"gitId":"vishandi"},"content":"will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-03-03"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-03-03"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2022-03-14"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"vishandi"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous UniGenda home folder.","lastModifiedDate":"2022-03-03"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"hanqinilnix"},"content":"## Command Summary","lastModifiedDate":"2022-03-14"},{"lineNumber":418,"author":{"gitId":"tyanhan"},"content":"| Action               | Format, Examples                                                                                                                                                                              |","lastModifiedDate":"2022-03-16"},{"lineNumber":419,"author":{"gitId":"tyanhan"},"content":"|----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-04-01"},{"lineNumber":420,"author":{"gitId":"tyanhan"},"content":"| **Add**              | `add n/NAME p/PHONE_NUMBER [e/EMAIL] [a/ADDRESS] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`                     |","lastModifiedDate":"2022-03-16"},{"lineNumber":421,"author":{"gitId":"tyanhan"},"content":"| **Clear**            | `clear`                                                                                                                                                                                       |","lastModifiedDate":"2022-03-16"},{"lineNumber":422,"author":{"gitId":"tyanhan"},"content":"| **Delete**           | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                           |","lastModifiedDate":"2022-03-16"},{"lineNumber":423,"author":{"gitId":"tyanhan"},"content":"| **Edit**             | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                   |","lastModifiedDate":"2022-03-16"},{"lineNumber":424,"author":{"gitId":"tyanhan"},"content":"| **SetUser**          | `setUser INDEX`\u003cbr\u003e e.g., `setUser 3`                                                                                                                                                         |","lastModifiedDate":"2022-03-27"},{"lineNumber":425,"author":{"gitId":"tyanhan"},"content":"| **ViewGroup**        | `viewGroup t/tag`\u003cbr\u003ee.g., `viewGroup t/groupmates`                                                                                                                                           |","lastModifiedDate":"2022-03-16"},{"lineNumber":426,"author":{"gitId":"vishandi"},"content":"| **ViewSchedule**     | `viewSchedule INDEX`\u003cbr\u003ee.g., `viewSchedule 1`                                                                                                                                                |","lastModifiedDate":"2022-03-25"},{"lineNumber":427,"author":{"gitId":"tyanhan"},"content":"| **AddEvent**         | `addEvent INDEX ed/EVENT_DESCRIPTION da/DATE [ti/TIME] [du/DURATION] [r/RECUR_FREQUENCY]` \u003cbr\u003e e.g., `1 ed/CS2103T Tutorial da/2022-03-16 ti/10:00 du/1 r/WEEKLY`                             |","lastModifiedDate":"2022-03-21"},{"lineNumber":428,"author":{"gitId":"tyanhan"},"content":"| **EditEvent**        | `editEvent INDEX EVENT_INDEX [ed/EVENT_DESCRIPTION] [da/DATE] [ti/TIME] [du/DURATION] [r/RECUR_FREQUENCY]` \u003cbr\u003e e.g., `editEvent 3 1 ed/CS2103T tutorial da/18-12-2022 ti/1400 du/2 r/WEEKLY` |","lastModifiedDate":"2022-03-21"},{"lineNumber":429,"author":{"gitId":"tyanhan"},"content":"| **DeleteEvent**      | `deleteEvent INDEX EVENT_NUMBER` \u003cbr\u003e e.g., `deleteEvent 3 3`                                                                                                                                 |","lastModifiedDate":"2022-03-16"},{"lineNumber":430,"author":{"gitId":"hanqinilnix"},"content":"| **WhoIsFree**        | `whoIsFree ti/TIME [da/DATE]`\u003cbr\u003e e.g., `whoIsFree ti/10:00 da/2022-03-14`                                                                                                                    |","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"markbiju"},"content":"| **FindCommonTiming** | `findCommonTiming t/TAG da/DATE`\u003cbr\u003e e.g., `findCommonTiming t/groupmates da/2022-03-04`                                                                                                     |","lastModifiedDate":"2022-04-06"},{"lineNumber":432,"author":{"gitId":"tyanhan"},"content":"| **ImportSchedule**   | `importSchedule 1 pa/FILE_PATH`\u003cbr\u003e e.g., `importSchedule 1 pa/typicalSchedule.json`                                                                                                          |","lastModifiedDate":"2022-03-27"},{"lineNumber":433,"author":{"gitId":"vishandi"},"content":"| **ExportSchedule**   | `exportSchedule INDEX`\u003cbr\u003e e.g., `exportSchedule 1`                                                                                                                                           |","lastModifiedDate":"2022-03-29"},{"lineNumber":434,"author":{"gitId":"tyanhan"},"content":"| **ClearSchedule**    | `clearSchedule`                                                                                                                                                                               |","lastModifiedDate":"2022-04-01"},{"lineNumber":435,"author":{"gitId":"tyanhan"},"content":"| **Find**             | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                    |","lastModifiedDate":"2022-03-16"},{"lineNumber":436,"author":{"gitId":"tyanhan"},"content":"| **List**             | `list`                                                                                                                                                                                        |","lastModifiedDate":"2022-03-16"},{"lineNumber":437,"author":{"gitId":"tyanhan"},"content":"| **Help**             | `help`                                                                                                                                                                                        |","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":135,"vishandi":108,"markbiju":18,"-":141,"hanqinilnix":35}},{"path":"docs/diagrams/AddEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"participant \":AddEventCommandParser\" as AddEventCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"participant \":AddEventCommand\" as AddEventCommand LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"end box","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"[-\u003e LogicManager : execute(\"addevent 1 ed/Tutorial da/2022-03-14\")","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"activate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addevent 1 ed/Tutorial da/2022-03-14\")","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"create AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"AddressBookParser -\u003e AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"activate AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"AddEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"AddressBookParser -\u003e AddEventCommandParser : parse(\"1 ed/Tutorial da/2022-03-14\")","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"activate AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"create AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"AddEventCommandParser -\u003e AddEventCommand : AddEventCommand(index, eventToAdd)","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"activate AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"AddEventCommand --\u003e AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"deactivate AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"AddEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"deactivate AddEventCommandParser","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"LogicManager -\u003e AddEventCommand : execute(model)","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"activate AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"AddEventCommand -\u003e Model : setPerson(personToEdit, editedPerson)","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"activate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"Model --\u003e AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"deactivate Model","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"create CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"AddEventCommand -\u003e CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"activate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"CommandResult --\u003e AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"AddEventCommand --\u003e LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"deactivate AddEventCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tyanhan":66}},{"path":"docs/diagrams/ExportScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"participant \":ExportScheduleCommandParser\" as ExportScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"participant \":ExportScheduleCommand\" as ExportScheduleCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"participant \":JsonUtil\" as JsonUtil STORAGE_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"[-\u003e LogicManager : execute(\"exportSchedule 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"exportSchedule 1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"create ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser -\u003e ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"activate ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"deactivate ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser -\u003e ExportScheduleCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"activate ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"create ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommandParser -\u003e ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"activate ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommand --\u003e ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"deactivate ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"deactivate ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"destroy ExportScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"LogicManager -\u003e ExportScheduleCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"activate ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommand -\u003e JsonUtil : saveJsonFile()","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"activate JsonUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"JsonUtil --\u003e ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"deactivate JsonUtil","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"CommandResult --\u003e ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"ExportScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"deactivate ExportScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"hanqinilnix":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"Class Telegram","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"Class GitHub","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"Class Schedule","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"Class Event","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"Person *--\u003e Telegram","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"Person *--\u003e GitHub","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"Schedule *--\u003e \"*\" Event","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vishandi":9,"-":50}},{"path":"docs/diagrams/ScheduleClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"@startuml","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"!include style.puml","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nRecurFrequency\" as RecurFrequency","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"Person *--\u003e Schedule","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"Schedule *--\u003e \"*\" Event","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"Event *--\u003e EventDescription","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"Event *--\u003e LocalDate","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"Event *--\u003e LocalTime","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"Event *--\u003e Duration","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"Event *--\u003e RecurFrequency","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"@enduml","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tyanhan":17}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"Class JsonAdaptedSchedule","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"JsonAdaptedPerson --\u003e \"1\" JsonAdaptedSchedule","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"JsonAdaptedSchedule --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tyanhan":4,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"Class PersonViewPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"Class PersonViewCard","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"MainWindow *-down-\u003e \"1\" PersonViewPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"PersonViewPanel -down-\u003e \"*\" PersonViewCard","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"PersonViewCard ..\u003e Model","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"PersonViewPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vishandi":6,"-":60}},{"path":"docs/diagrams/ViewScheduleSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"@startuml","lastModifiedDate":"2022-03-25"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"!include style.puml","lastModifiedDate":"2022-03-25"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"participant \":ViewScheduleCommandParser\" as ViewScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"participant \"v:ViewScheduleCommand\" as ViewScheduleCommand LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"participant \":SamePersonPredicate\" as SamePersonPredicate MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"end box","lastModifiedDate":"2022-03-25"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"[-\u003e LogicManager : execute(\"viewSchedule 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"activate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"viewSchedule 1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"create ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"AddressBookParser -\u003e ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"activate ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"deactivate ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"AddressBookParser -\u003e ViewScheduleCommandParser : parse(\"1\")","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"activate ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"create ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommandParser -\u003e ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"activate ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommand --\u003e ViewScheduleCommandParser : v","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"deactivate ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2022-03-25"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"deactivate ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-25"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"destroy ViewScheduleCommandParser","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-25"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"LogicManager -\u003e ViewScheduleCommand : execute()","lastModifiedDate":"2022-03-25"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"activate ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"create SamePersonPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommand -\u003e SamePersonPredicate : personToView","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"activate SamePersonPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"SamePersonPredicate --\u003e ViewScheduleCommand : predicate","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"deactivate SamePersonPredicate","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommand -\u003e Model : updateViewSchedulePerson(predicate)","lastModifiedDate":"2022-03-25"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"activate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"Model --\u003e ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"deactivate Model","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"create CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommand -\u003e CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"activate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"CommandResult --\u003e ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"ViewScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-25"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"deactivate ViewScheduleCommand","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"@enduml","lastModifiedDate":"2022-03-25"}],"authorContributionMap":{"vishandi":77}},{"path":"docs/diagrams/WhoIsFreeActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"start","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":":User executes command;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":":Filter Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":":Display filtered Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"stop","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"hanqinilnix":10}},{"path":"docs/diagrams/WhoIsFreeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"@startuml","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"!include style.puml","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"participant \":FreeScheduleCommandParser\" as FreeScheduleCommandParser LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"participant \":FreeScheduleCommand\" as FreeScheduleCommand LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"end box","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"[-\u003e LogicManager : execute(\"freeSchedule ti/10:00 da/2022-03-24\")","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"activate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"freeSchedule ti/10:00 da/2022-03-24\")","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"activate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"create FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser -\u003e FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"activate FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"deactivate FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser -\u003e FreeScheduleCommandParser : parse(\"ti/10:00 da/2022-03-24\")","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"activate FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"create FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommandParser -\u003e FreeScheduleCommand :predicate","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"activate FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommand --\u003e FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"deactivate FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommandParser --\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"deactivate FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"destroy FreeScheduleCommandParser","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"deactivate AddressBookParser","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"LogicManager -\u003e FreeScheduleCommand : execute()","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"activate FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"activate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"Model --\u003e FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"deactivate Model","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"create CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommand -\u003e CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"activate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"CommandResult --\u003e FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"deactivate CommandResult","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"FreeScheduleCommand --\u003e LogicManager : result","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"deactivate FreeScheduleCommand","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"deactivate LogicManager","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"@enduml","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"hanqinilnix":69}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"title: UniGenda","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S2-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S2-CS2103T-W09-1/tp/branch/master/graph/badge.svg?token\u003d3GOZ258RU7)](https://codecov.io/gh/AY2122S2-CS2103T-W09-1/tp)","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"**UniGenda is a desktop application for managing your contact details and schedules.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"* If you are interested in using UniGenda, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"* If you are interested about developing UniGenda, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":14,"hanqinilnix":5}},{"path":"docs/team/hanqinilnix.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"layout: page","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"title: Ong Han Qin\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-24"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"---","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"### Project: UniGenda","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"UniGenda is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-24"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are an NUS student,","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"and you can type fast, UniGenda can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"* **New Feature**:","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dhanqinilnix\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-24"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"* **Project management**:","lastModifiedDate":"2022-02-24"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"* **Community**:","lastModifiedDate":"2022-02-24"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"* **Tools**:","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    * to be added soon","lastModifiedDate":"2022-02-24"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"tyanhan":1,"hanqinilnix":32}},{"path":"docs/team/markbiju.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"markbiju"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"layout: page","lastModifiedDate":"2022-03-02"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"title: Mark Biju\u0027s Project Portfolio Page","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"---","lastModifiedDate":"2022-03-02"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"### Project: UniGenda","lastModifiedDate":"2022-03-02"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"markbiju"},"content":"UniGenda is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-03-02"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are an NUS student,","lastModifiedDate":"2022-03-02"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"and you can type fast, UniGenda can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-03-02"},{"lineNumber":11,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-03-02"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":14,"author":{"gitId":"markbiju"},"content":"* **New Feature**:","lastModifiedDate":"2022-03-02"},{"lineNumber":15,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dmarkbiju\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-03-02"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"* **Project management**:","lastModifiedDate":"2022-03-02"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-03-02"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":25,"author":{"gitId":"markbiju"},"content":"* **Documentation**:","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":27,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":28,"author":{"gitId":"markbiju"},"content":"* **Community**:","lastModifiedDate":"2022-03-02"},{"lineNumber":29,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"},{"lineNumber":30,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":31,"author":{"gitId":"markbiju"},"content":"* **Tools**:","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"    * to be added soon","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"markbiju":32}},{"path":"docs/team/tyanhan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"layout: page","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"title: Tay Yan Hans\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"---","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"### Project: UniGenda","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"UniGenda is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are an NUS student,","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"and you can type fast, UniGenda can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"* **New Feature**: Added the ability to add events to a contact\u0027s schedule.","lastModifiedDate":"2022-04-07"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"  * Justification: This feature is one of the core commands in our application, since it affords a `Person` to have a schedule so that a user can check to see his/her contacts\u0027 availability.","lastModifiedDate":"2022-04-07"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"  * Highlights: I first had to implement the `Schedule` and `Event` classes to start off the project, before adding the AddEvent command. I had to make decisions regarding how the `Schedule` object should be added and stored. The most challenging part was definitely getting the Storage to successfully save/load the changes to a Person\u0027s Schedule, because the Jackson library used by AB3 seemed to have problems loading a nested Json object. I spent a few days googling how I could get the Jackson library to work, and also considered alternative Json structures and libraries(such as GSON) to save/load the Schedule, before finding out that Jackson requires an empty constructor to initialise objects using a nested Json structure. Later on in the project however, I realised that a better solution would have been to create `JsonAdaptedEvent` and `JsonAdaptedSchedule` classes for Jackson to load and store.","lastModifiedDate":"2022-04-07"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"* **New Feature**: Add recurring event functionality.","lastModifiedDate":"2022-04-07"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"  * What it does: Allows the user to add daily, weekly or biweekly events to their contacts\u0027 schedule instead of just 1 time events.","lastModifiedDate":"2022-04-07"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"  * Justification: This feature is necessary for users to add events like classes that occur weekly/biweekly to their contacts\u0027 schedules.","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"  * Highlights: Ensuring that the events recurred correctly was the challenging part. I also had to read up on how to make use of `LocalDate`, `LocalTime`, `ChronoUnit` etc. to get the correct recurring dates. Thankfully, my teammates Vishandi and Han Qin were ready to help me test for bugs in my code. Also, since dates and times were prone to bugs, I spent some time ensuring that intentional misuse of our application (by supplying nonsensical dates) would not break the app, but rather show logical feedback to the user.","lastModifiedDate":"2022-04-07"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"* **New Feature**: Added the ability to import schedules.","lastModifiedDate":"2022-04-07"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"  * What it does: Allows users to import a schedule from a JSON file.","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"  * Justification: This feature would allow users to add their contacts\u0027 schedules more efficiently since they wouldn\u0027t need to add events 1 by 1, and can instead run a simple importSchedule command to add all the necessary events. It is essential to make the product more user-friendly.","lastModifiedDate":"2022-04-07"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"  * Highlights: I had to re-look at how the `Storage` worked in order to ensure that we could read/write to json files in the format that we wanted. I realised here that adding `JsonAdaptedEvent` and `JsonAdaptedSchedule` would be necessary, as Jackson\u0027s default save structure differed from how it expects the json file to be read. Besides having to deal with the Storage, I had to consider the possible errors that a user could encounter when reading the json file.","lastModifiedDate":"2022-04-07"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"* **New Feature**: Added the ability to clear a person\u0027s schedule.","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"  * Justification: This feature allows for a quick and easy way for users to clear their contacts\u0027 schedule, rather than delete events 1 by 1.","lastModifiedDate":"2022-04-07"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"* **New Feature**: Added the ability to set a contact as the user.","lastModifiedDate":"2022-04-07"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"  * What it does: Shifts the specified contact to the top of the list for the user to reference more easily if he/she wants to view his/her own schedule.","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dtyanhan\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"* **Project management**:","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"  * Set up the team\u0027s organisation and repository.","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"  * Wrote the full `v1.3 Demo` documentation.","lastModifiedDate":"2022-04-07"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"  * Aided project teammate with the `FindCommonTiming` command\u0027s logic.","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"  * Fixed the GUI size and removed the resizable icon on mouse hover bug. [#121](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/121)","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"  * Wrote tests for `AddEventCommand`, `ClearScheduleCommand`, `SetUserCommand` and their related parsers. [#84](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/84/files) [#119](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/119) [#113](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/113)","lastModifiedDate":"2022-04-07"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"  * Wrote tests for `JsonAdaptedEvent` and `JsonAdaptedSchedule` [#77](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/77/files)","lastModifiedDate":"2022-04-07"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"  * User Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    * Added documentation for the `AddEvent`, `ImportSchedule`, `ClearSchedule` and `SetUser` features.","lastModifiedDate":"2022-04-08"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"  * Developer Guide:","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"    * Added documentation for the `AddEvent` feature.","lastModifiedDate":"2022-04-07"}],"authorContributionMap":{"tyanhan":42}},{"path":"docs/team/vishandi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"layout: page","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"title: Vishandi Rudy Keneta\u0027s Project Portfolio Page","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"---","lastModifiedDate":"2022-02-20"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"### Project: UniGenda","lastModifiedDate":"2022-02-20"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"UniGenda is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI)","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"while still having the benefits of a Graphical User Interface (GUI). If you are an NUS student,","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"and you can type fast, UniGenda can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-02-20"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-02-20"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"* **Improved Feature**: Edited the existing attributes and added new attributes of a `Person` in AB3 to match UniGenda\u0027s needs.","lastModifiedDate":"2022-04-08"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"  * Justification: As UniGenda is an app meant for university students to use, and nowadays people don\u0027t know each other\u0027s address and/or email, we decided to make email and address optional in UniGenda. Also, it is logical for a Person to have a unique combination of Name and Phone Number, hence we made this as the characteristics of determining whether a `Person` is the same as another `Person`. ALso, these days, lots of university students use `Telegram` and `GitHub` to support their school activities. Hence, we add these two attributes also to a `Person`\u0027s attribute in UniGenda.","lastModifiedDate":"2022-04-08"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"  * Highlights: I tried some implementations that could model the optional attributes, i.e. `Email`, `Address`, `Telegram`, and `GitHub`. This is an important (and tedious) step because it needs to be easily developed for future optional attributes as well, because it is only logical for future developments to add more optional attributes. I tried making the `Person` to have an `Optional\u003cattribute\u003e` instead of the `attribute` itself, but it didn\u0027t work. I also tried changing the getter functions to return an `Optional\u003cattribute\u003e` instead of the `attribute` itself, but it also didn\u0027t work. The hardest part of the implementation is in deciding what an `empty` attribute should look like. At last, we decided to have a static `empty` attribute for each of the optional attribute because it is easier to implement and easier to maintain as well. In exploring the ways to model these, I discussed this modelling part with my group mates, hanqinilnix and tyanhan.","lastModifiedDate":"2022-04-08"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"* **Improved Feature**: Edited the `add` and `edit` commands to make the edited attributes work well.","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"  * Justification: With the newly added (and edited) optional attributes, it is only logical to make the user doesn\u0027t have to input these optional attributes when adding a `Person` to UniGenda. Also, we need to allow user to delete the optional attributes from a `Person`\u0027s information.","lastModifiedDate":"2022-04-08"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"  * Highlights: The most challenging part is in making sure the `VALIDATION_REGEX` for each of the new (and old) attributes works well.","lastModifiedDate":"2022-04-08"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"* **New Feature**: Added the ability to delete events from a `Person`\u0027s schedule.","lastModifiedDate":"2022-04-08"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"  * What it does: Allows the user to delete a particular `Event` from a `Person`\u0027s schedule.","lastModifiedDate":"2022-04-08"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"  * Justification: This feature is necessary for users to delete an `Event` if he/she made a mistake when adding a particular `Event` to a `Person`.","lastModifiedDate":"2022-04-08"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"* **New Feature**: Added the ability to view a `Person`\u0027s schedule in detail.","lastModifiedDate":"2022-04-08"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"  * What it does: Allows the user to view a `Person`\u0027s schedule and upcoming schedule for the upcoming week.","lastModifiedDate":"2022-04-08"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"  * Justification: Listing all the events for a `Person` in his/her card will make the schedule really hard to read and sometimes it could make the list very long. To mitigate this issue, we decided to make another panel (placed on the right) for the user to see the `Person`\u0027s detailed schedule.","lastModifiedDate":"2022-04-08"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"  * Highlights: The challenging parts of implementing this feature is in the changes I need to make in the GUI and filtering out the events that are going to occur at a particular date. As the `Event` in UniGenda can be a Daily, Weekly, and BiWeekly, the latter part is extremely challenging and tricky, because even a small mistake can make the display doesn\u0027t work. Working with Java\u0027s `LocalDate` and `LocalTime` could also be a hassle sometimes. Thankfully, hanqinilnix and tyanhan continuously helped me to fix the issues.","lastModifiedDate":"2022-04-08"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"* **Improved Feature**: Improving GUI.","lastModifiedDate":"2022-04-08"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"  * Justification: To accommodate the changes we made, especially the new `Schedule`, I made the necessary changes to the existing GUI.","lastModifiedDate":"2022-04-08"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"  * Highlights: Adding logos beside a `Person`\u0027s attribute to make it look nicer and easier to differentiate. Changing the structure of the GUI by adding the right panel. This part is especially challenging for me, because I didn\u0027t have any experience with JavaFX before, and moving things around in SceneBuilder could be tricky sometimes, as it is really prone to mistake. One wrong click could make my whole window break.","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-08"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"* **Tests Added**:","lastModifiedDate":"2022-04-08"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"  * Wrote tests for `Telegram` [#59](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/59), `GitHub` [#65](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/65), and edit tests for `Email` and `Address` [#25](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/25). Some changes in the tests made along the progression of the project.","lastModifiedDate":"2022-04-08"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"  * Added tests for `EditCommandParser` and `AddCommandParser` [#79](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/79) to include the changes we made.","lastModifiedDate":"2022-04-08"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"  * Added tests for `ParserUtil` [#118](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/118), [#123](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/123).","lastModifiedDate":"2022-04-08"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s2.github.io/tp-dashboard/?search\u003dvishandi\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-02-20"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"* **Project management**:","lastModifiedDate":"2022-02-20"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"  * Wrote the full `v1.2 Demo` documentation.","lastModifiedDate":"2022-04-08"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"  * Maintains the `v1.3` milestone near the deadline of `v1.3` and closes the milestone.","lastModifiedDate":"2022-04-08"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"* **Documentation**:","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"  * User Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    * Added and edited documentation for the `add`, `edit`, `deleteEvent`, and `viewSchedule` features.","lastModifiedDate":"2022-04-08"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"  * Developer Guide:","lastModifiedDate":"2022-04-08"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    * Added documentation for the `viewSchedule` feature.","lastModifiedDate":"2022-04-08"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"* **Community**:","lastModifiedDate":"2022-02-20"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"  * PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2022-04-08"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"    * [#58](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/58)","lastModifiedDate":"2022-04-08"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    * [#69](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/69)","lastModifiedDate":"2022-04-08"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"    * [#194](https://github.com/AY2122S2-CS2103T-W09-1/tp/pull/194)","lastModifiedDate":"2022-04-08"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"  * Contributed to forum discussion:","lastModifiedDate":"2022-04-08"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"    * [#155](https://github.com/nus-cs2103-AY2122S2/forum/issues/155)","lastModifiedDate":"2022-04-08"}],"authorContributionMap":{"tyanhan":1,"vishandi":57}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;","lastModifiedDate":"2022-03-29"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"    private static final double DEFAULT_WIDTH \u003d 1080;","lastModifiedDate":"2022-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tyanhan":2,"-":77}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"    public static final String MESSAGE_FREE_TIMINGS_LISTED_OVERVIEW \u003d \"The following free timings are available: \";","lastModifiedDate":"2022-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vishandi":1,"markbiju":1,"-":13}},{"path":"src/main/java/seedu/address/commons/exceptions/InvalidEnumArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":" * Signals that an enum value has not been accounted for in a switch case.","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"public class InvalidEnumArgumentException extends Exception {","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"     * @param message should contain relevant information on the invalid enum","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"    public InvalidEnumArgumentException(String message) {","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"        super(message);","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":13}},{"path":"src/main/java/seedu/address/logic/EditUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import java.time.Duration;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.util.Set;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"public class EditUtil {","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"        private Name name;","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"        private Phone phone;","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        private Telegram telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"        private GitHub github;","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"        private Email email;","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        private Address address;","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"        private Schedule schedule;","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"         * Copy constructor.","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"            setGithub(toCopy.github);","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"            setSchedule(toCopy.schedule);","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, telegram, github, email, address, schedule, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2022-03-08"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        public void setGithub(GitHub github) {","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"            this.github \u003d github;","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        public Optional\u003cGitHub\u003e getGithub() {","lastModifiedDate":"2022-03-14"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"            return Optional.ofNullable(github);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-02-27"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-02-27"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-02-27"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-02-27"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"        public void setSchedule(Schedule schedule) {","lastModifiedDate":"2022-02-27"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"            this.schedule \u003d schedule;","lastModifiedDate":"2022-02-27"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cSchedule\u003e getSchedule() {","lastModifiedDate":"2022-02-27"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(schedule);","lastModifiedDate":"2022-02-27"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":117,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-02-27"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-02-27"},{"lineNumber":121,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-02-27"},{"lineNumber":123,"author":{"gitId":"tyanhan"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-02-27"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":125,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":126,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":127,"author":{"gitId":"tyanhan"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-02-27"},{"lineNumber":128,"author":{"gitId":"tyanhan"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-02-27"},{"lineNumber":129,"author":{"gitId":"tyanhan"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-02-27"},{"lineNumber":130,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-02-27"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-02-27"},{"lineNumber":133,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":134,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":135,"author":{"gitId":"tyanhan"},"content":"        @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":136,"author":{"gitId":"tyanhan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":137,"author":{"gitId":"tyanhan"},"content":"            // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":138,"author":{"gitId":"tyanhan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-27"},{"lineNumber":139,"author":{"gitId":"tyanhan"},"content":"                return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":140,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"tyanhan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"tyanhan"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"tyanhan"},"content":"                return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"tyanhan"},"content":"            // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"tyanhan"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"tyanhan"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2022-03-08"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"                    \u0026\u0026 getGithub().equals(e.getGithub())","lastModifiedDate":"2022-03-14"},{"lineNumber":154,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getSchedule().equals(e.getSchedule())","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-02-27"},{"lineNumber":158,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":159,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":160,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":161,"author":{"gitId":"tyanhan"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2022-02-27"},{"lineNumber":162,"author":{"gitId":"tyanhan"},"content":"        private EventDescription eventDescription;","lastModifiedDate":"2022-02-27"},{"lineNumber":163,"author":{"gitId":"tyanhan"},"content":"        private LocalDate date;","lastModifiedDate":"2022-02-27"},{"lineNumber":164,"author":{"gitId":"tyanhan"},"content":"        private LocalTime time;","lastModifiedDate":"2022-02-27"},{"lineNumber":165,"author":{"gitId":"tyanhan"},"content":"        private Duration duration;","lastModifiedDate":"2022-02-27"},{"lineNumber":166,"author":{"gitId":"tyanhan"},"content":"        private RecurFrequency recurFrequency;","lastModifiedDate":"2022-03-07"},{"lineNumber":167,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":168,"author":{"gitId":"tyanhan"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2022-02-27"},{"lineNumber":169,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":170,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":171,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":172,"author":{"gitId":"tyanhan"},"content":"         * Copy constructor.","lastModifiedDate":"2022-02-27"},{"lineNumber":173,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":174,"author":{"gitId":"tyanhan"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2022-02-27"},{"lineNumber":175,"author":{"gitId":"tyanhan"},"content":"            setEventDescription(toCopy.eventDescription);","lastModifiedDate":"2022-02-27"},{"lineNumber":176,"author":{"gitId":"tyanhan"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2022-02-27"},{"lineNumber":177,"author":{"gitId":"tyanhan"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2022-02-27"},{"lineNumber":178,"author":{"gitId":"tyanhan"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2022-02-27"},{"lineNumber":179,"author":{"gitId":"tyanhan"},"content":"            setRecurFrequency(toCopy.recurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":180,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":181,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":182,"author":{"gitId":"tyanhan"},"content":"        /**","lastModifiedDate":"2022-02-27"},{"lineNumber":183,"author":{"gitId":"tyanhan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-02-27"},{"lineNumber":184,"author":{"gitId":"tyanhan"},"content":"         */","lastModifiedDate":"2022-02-27"},{"lineNumber":185,"author":{"gitId":"tyanhan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-02-27"},{"lineNumber":186,"author":{"gitId":"tyanhan"},"content":"            return CollectionUtil.isAnyNonNull(eventDescription, date, time, duration, recurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":187,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":188,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":189,"author":{"gitId":"tyanhan"},"content":"        public void setEventDescription(EventDescription eventDescription) {","lastModifiedDate":"2022-02-27"},{"lineNumber":190,"author":{"gitId":"tyanhan"},"content":"            this.eventDescription \u003d eventDescription;","lastModifiedDate":"2022-02-27"},{"lineNumber":191,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":192,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":193,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cEventDescription\u003e getEventDescription() {","lastModifiedDate":"2022-02-27"},{"lineNumber":194,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(eventDescription);","lastModifiedDate":"2022-02-27"},{"lineNumber":195,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":196,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":197,"author":{"gitId":"tyanhan"},"content":"        public void setDate(LocalDate date) {","lastModifiedDate":"2022-02-27"},{"lineNumber":198,"author":{"gitId":"tyanhan"},"content":"            this.date \u003d date;","lastModifiedDate":"2022-02-27"},{"lineNumber":199,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":200,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":201,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2022-02-27"},{"lineNumber":202,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2022-02-27"},{"lineNumber":203,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":204,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":205,"author":{"gitId":"tyanhan"},"content":"        public void setTime(LocalTime time) {","lastModifiedDate":"2022-02-27"},{"lineNumber":206,"author":{"gitId":"tyanhan"},"content":"            this.time \u003d time;","lastModifiedDate":"2022-02-27"},{"lineNumber":207,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":208,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":209,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cLocalTime\u003e getTime() {","lastModifiedDate":"2022-02-27"},{"lineNumber":210,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2022-02-27"},{"lineNumber":211,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":212,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":213,"author":{"gitId":"tyanhan"},"content":"        public void setDuration(Duration duration) {","lastModifiedDate":"2022-02-27"},{"lineNumber":214,"author":{"gitId":"tyanhan"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2022-02-27"},{"lineNumber":215,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":216,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":217,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2022-02-27"},{"lineNumber":218,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2022-02-27"},{"lineNumber":219,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":220,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":221,"author":{"gitId":"tyanhan"},"content":"        public void setRecurFrequency(RecurFrequency recurFrequency) {","lastModifiedDate":"2022-03-07"},{"lineNumber":222,"author":{"gitId":"tyanhan"},"content":"            this.recurFrequency \u003d recurFrequency;","lastModifiedDate":"2022-03-07"},{"lineNumber":223,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":224,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":225,"author":{"gitId":"tyanhan"},"content":"        public Optional\u003cRecurFrequency\u003e getRecurFrequency() {","lastModifiedDate":"2022-03-07"},{"lineNumber":226,"author":{"gitId":"tyanhan"},"content":"            return Optional.ofNullable(recurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":227,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":228,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":229,"author":{"gitId":"tyanhan"},"content":"        @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":230,"author":{"gitId":"tyanhan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":231,"author":{"gitId":"tyanhan"},"content":"            // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":232,"author":{"gitId":"tyanhan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-27"},{"lineNumber":233,"author":{"gitId":"tyanhan"},"content":"                return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":234,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":235,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":236,"author":{"gitId":"tyanhan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":237,"author":{"gitId":"tyanhan"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":238,"author":{"gitId":"tyanhan"},"content":"                return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":239,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":240,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":241,"author":{"gitId":"tyanhan"},"content":"            // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":242,"author":{"gitId":"tyanhan"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2022-02-27"},{"lineNumber":243,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":244,"author":{"gitId":"tyanhan"},"content":"            return getEventDescription().equals(e.getEventDescription())","lastModifiedDate":"2022-02-27"},{"lineNumber":245,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2022-02-27"},{"lineNumber":246,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getTime().equals(e.getTime())","lastModifiedDate":"2022-02-27"},{"lineNumber":247,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getDuration().equals(e.getDuration())","lastModifiedDate":"2022-03-07"},{"lineNumber":248,"author":{"gitId":"tyanhan"},"content":"                    \u0026\u0026 getRecurFrequency().equals(e.getRecurFrequency());","lastModifiedDate":"2022-03-07"},{"lineNumber":249,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":250,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":251,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"tyanhan":226,"vishandi":25}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    /** Returns an unmodifiable view of a particular person","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    ObservableList\u003cPerson\u003e getViewedPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vishandi":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"    public ObservableList\u003cPerson\u003e getViewedPersonList() {","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"        return model.getViewSchedulePerson();","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vishandi":5,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/person/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":3,"vishandi":6,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/person/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":3,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/person/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":3,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/person/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        if (model.isPersonViewed(personToEdit)) {","lastModifiedDate":"2022-04-04"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"            model.updateViewSchedulePerson(new SamePersonPredicate(editedPerson));","lastModifiedDate":"2022-04-04"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"        GitHub updatedGithub \u003d editPersonDescriptor.getGithub().orElse(personToEdit.getGithub());","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Schedule updatedSchedule \u003d editPersonDescriptor.getSchedule().orElse(personToEdit.getSchedule());","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"        return new Person(updatedName, updatedPhone, updatedTelegram, updatedGithub,","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"                updatedEmail, updatedAddress, updatedSchedule, updatedTags);","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tyanhan":11,"vishandi":8,"-":117}},{"path":"src/main/java/seedu/address/logic/commands/person/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tyanhan":3,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/person/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":3,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/person/SetUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"public class SetUserCommand extends Command {","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"    public static final String COMMAND_WORD \u003d \"setUser\";","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"setuser\";","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"            + \": Sets the specified person in the contact list as the user and moves the contact to the top.\\n\"","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_SET_USER_SUCCESS \u003d \"%s set as the user!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"    public SetUserCommand(Index targetIndex) {","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-27"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-27"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-27"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"        Person user \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        model.deletePerson(user);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"        model.insertPerson(user, 0);","lastModifiedDate":"2022-03-27"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"        return new CommandResult(String.format(MESSAGE_SET_USER_SUCCESS, user.getName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"                || (other instanceof SetUserCommand // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 targetIndex.equals(((SetUserCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tyanhan":57,"vishandi":1}},{"path":"src/main/java/seedu/address/logic/commands/person/ViewGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markbiju"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.IsTagInPersonPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"markbiju"},"content":" * Command that lists all contacts who share the same tag.","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"markbiju"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"public class ViewGroupCommand extends Command {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":"    public static final String COMMAND_WORD \u003d \"viewGroup\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"viewgroup\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists the contacts who share the same tag \"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"            + PREFIX_TAG + \"TAG...\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"markbiju"},"content":"    private final IsTagInPersonPredicate predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"markbiju"},"content":"    public ViewGroupCommand(IsTagInPersonPredicate predicate) {","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"markbiju"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"markbiju"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"markbiju"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"markbiju"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"markbiju"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"markbiju"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"markbiju"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"markbiju"},"content":"                || (other instanceof ViewGroupCommand // instanceof handles nulls","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"markbiju"},"content":"                \u0026\u0026 predicate.equals(((ViewGroupCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":1,"vishandi":1,"markbiju":43}},{"path":"src/main/java/seedu/address/logic/commands/person/ViewScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import java.util.List;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"public class ViewScheduleCommand extends Command {","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD \u003d \"viewSchedule\";","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"viewschedule\";","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"            + \": views the person\u0027s schedule identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewing %1$s\u0027s Schedule...\";","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    public ViewScheduleCommand(Index targetIndex) {","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToView));","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"        return new CommandResult(","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"                String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView.getName().value)","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"                || (other instanceof ViewScheduleCommand // instanceof handles nulls","lastModifiedDate":"2022-03-25"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 targetIndex.equals(((ViewScheduleCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"vishandi":56}},{"path":"src/main/java/seedu/address/logic/commands/schedule/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.model.schedule.Event.DURATION_RECUR_FREQ_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Schedule.MESSAGE_DUPLICATE_EVENT;","lastModifiedDate":"2022-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"addEvent\";","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"addevent\";","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \": Adds an event to the indexed person\u0027s schedule in the address book. \"","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EVENT_DESCRIPTION + \"EVENT_DESCRIPTION \"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"            + \"[\" + PREFIX_RECUR_FREQUENCY + \"RECUR_FREQUENCY]\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-09"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"            + \"1 \"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EVENT_DESCRIPTION + \"CS2103T Tutorial \"","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"2022-12-28 \"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_TIME + \"10:00 \"","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"            + PREFIX_DURATION + \"3H30M \"","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"            + PREFIX_RECUR_FREQUENCY + \"W\";","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added %1$s to %2$s\u0027s schedule\";","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"    private final Event eventToAdd;","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddEventCommand(Index targetIndex, Event event) {","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireAllNonNull(targetIndex, event);","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        this.eventToAdd \u003d event;","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"        if (!eventToAdd.isValidDurationWithRecurFrequency()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"            throw new CommandException(DURATION_RECUR_FREQ_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Schedule scheduleToEdit \u003d personToEdit.getSchedule();","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"        Schedule updatedSchedule \u003d createEditedSchedule(scheduleToEdit, eventToAdd);","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"        model.setSchedule(personToEdit, updatedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToEdit));","lastModifiedDate":"2022-03-29"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToAdd, personToEdit.getName()));","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"     * Creates and returns a {@code Schedule} with the details of {@code eventToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"     * with an added {@code eventToAdd}.","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"    private static Schedule createEditedSchedule(Schedule scheduleToEdit, Event eventToAdd) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"        assert scheduleToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        if (scheduleToEdit.hasEvent(eventToAdd)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-31"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"        List\u003cEvent\u003e scheduleEvents \u003d scheduleToEdit.getEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        ArrayList\u003cEvent\u003e updatedEvents \u003d new ArrayList\u003c\u003e(scheduleEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"        updatedEvents.add(eventToAdd);","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(updatedEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"        return new Schedule(updatedEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"            return true;","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"            return false;","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"        // state check","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"tyanhan"},"content":"        AddEventCommand e \u003d (AddEventCommand) other;","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 eventToAdd.equals(e.eventToAdd);","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"tyanhan":49,"vishandi":1,"-":66,"hanqinilnix":5}},{"path":"src/main/java/seedu/address/logic/commands/schedule/ClearScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":" * Clears the {@code Schedule} of an existing person in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"public class ClearScheduleCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"    public static final String COMMAND_WORD \u003d \"clearSchedule\";","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"clearschedule\";","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears the schedule of the person identified \"","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_CLEAR_SCHEDULE_SUCCESS \u003d \"%s\u0027s schedule has been cleared!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"    public ClearScheduleCommand(Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"        model.setSchedule(personToEdit, new Schedule(new ArrayList\u003c\u003e()));","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToEdit));","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        return new CommandResult(String.format(MESSAGE_CLEAR_SCHEDULE_SUCCESS, personToEdit.getName()));","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"            return true;","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"        if (!(other instanceof ClearScheduleCommand)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"            return false;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"        // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand e \u003d (ClearScheduleCommand) other;","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"        return targetIndex.equals(e.targetIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":74,"vishandi":1}},{"path":"src/main/java/seedu/address/logic/commands/schedule/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-03"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import java.util.List;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":" * Deletes an event of an existing person in the schedule of address book.","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEvent\";","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"deleteevent\";","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an event of the person identified \"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"            + \"Parameters: PERSON_INDEX EVENT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"%s\u0027s No.%d event deleted successfully\";","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"     * @param targetEventIndex of the event in the schedule to delete","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    public DeleteEventCommand(Index targetIndex, Index targetEventIndex) {","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"        Schedule scheduleToEdit \u003d personToEdit.getSchedule();","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d scheduleToEdit.getEvents().size()) {","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        Schedule updatedSchedule \u003d createDeletedSchedule(scheduleToEdit, targetEventIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        model.setSchedule(personToEdit, updatedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToEdit));","lastModifiedDate":"2022-03-29"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"                personToEdit.getName(),","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"                targetEventIndex.getOneBased()));","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"    private static Schedule createDeletedSchedule(Schedule scheduleToEdit, Index targetIndex) {","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        assert scheduleToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"        List\u003cEvent\u003e scheduleEvents \u003d scheduleToEdit.getEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"        ArrayList\u003cEvent\u003e updatedEvents \u003d new ArrayList\u003c\u003e(scheduleEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"        updatedEvents.remove(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"        return new Schedule(updatedEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-03"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-03"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-03"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-03"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"            return true;","lastModifiedDate":"2022-03-03"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-03"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2022-03-03"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"            return false;","lastModifiedDate":"2022-03-03"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"        // state check","lastModifiedDate":"2022-03-03"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand e \u003d (DeleteEventCommand) other;","lastModifiedDate":"2022-03-03"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 targetEventIndex.equals(e.targetEventIndex);","lastModifiedDate":"2022-03-03"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"tyanhan":17,"vishandi":83}},{"path":"src/main/java/seedu/address/logic/commands/schedule/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-02-27"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-02-27"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-02-27"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.model.schedule.Event.DURATION_RECUR_FREQ_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-29"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Schedule.MESSAGE_DUPLICATE_EVENT;","lastModifiedDate":"2022-03-31"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-29"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":" * Edits an event of an existing person in the schedule of address book.","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"    public static final String COMMAND_WORD \u003d \"editEvent\";","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"editevent\";","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits an event of the person identified \"","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"            + \"Parameters: PERSON_INDEX EVENT_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"            + \"[\" + PREFIX_EVENT_DESCRIPTION + \"EVENT DESCRIPTION] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"            + \"[\" + PREFIX_RECUR_FREQUENCY + \"RECUR_FREQUENCY]\\n\"","lastModifiedDate":"2022-03-09"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 \"","lastModifiedDate":"2022-03-09"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"            + PREFIX_TIME + \"10:00\";","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited event: %1$s\";","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"     * @param targetEventIndex of the event in the schedule to edit","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventCommand(Index targetIndex, Index targetEventIndex, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"        this.editEventDescriptor \u003d editEventDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-02-27"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"        Schedule scheduleToEdit \u003d personToEdit.getSchedule();","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d scheduleToEdit.getEvents().size()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-02-27"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"        Schedule updatedSchedule \u003d createEditedSchedule(scheduleToEdit, targetEventIndex, editEventDescriptor);","lastModifiedDate":"2022-02-27"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"        model.setSchedule(personToEdit, updatedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToEdit));","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"        Event editedEvent \u003d updatedSchedule.getEvent(targetEventIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"     * Creates and returns a {@code Schedule} with the details of {@code scheduleToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"     * edited with {@code editEventDescriptor} at {@code targetEventIndex}.","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"    private static Schedule createEditedSchedule(Schedule scheduleToEdit, Index targetEventIndex,","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"            EditEventDescriptor editEventDescriptor) throws CommandException {","lastModifiedDate":"2022-03-31"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"        assert scheduleToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"        List\u003cEvent\u003e scheduleEvents \u003d scheduleToEdit.getEvents();","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"        ArrayList\u003cEvent\u003e updatedEvents \u003d new ArrayList\u003c\u003e(scheduleEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"        Event toEditEvent \u003d updatedEvents.remove(targetEventIndex.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"        Event updatedEvent \u003d createEditedEvent(toEditEvent, editEventDescriptor);","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"        if (updatedEvents.contains(updatedEvent)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-31"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"        if (!updatedEvent.isValidDurationWithRecurFrequency()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"            throw new CommandException(DURATION_RECUR_FREQ_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":116,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":117,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"        updatedEvents.add(targetEventIndex.getZeroBased(), updatedEvent);","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(updatedEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"        return new Schedule(updatedEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"     * Creates and returns an {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"tyanhan"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"tyanhan"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"tyanhan"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"tyanhan"},"content":"        EventDescription updatedEventDescription \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"                editEventDescriptor.getEventDescription().orElse(eventToEdit.getEventDescription());","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"        LocalDate updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"tyanhan"},"content":"        LocalTime updatedTime \u003d editEventDescriptor.getTime().orElse(eventToEdit.getTime());","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"tyanhan"},"content":"        Duration updatedDuration \u003d editEventDescriptor.getDuration().orElse(eventToEdit.getDuration());","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"tyanhan"},"content":"        RecurFrequency updatedRecurFrequency \u003d editEventDescriptor.getRecurFrequency()","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"tyanhan"},"content":"                .orElse(eventToEdit.getRecurFrequency());","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"tyanhan"},"content":"        return new Event(updatedEventDescription, updatedDate, updatedTime, updatedDuration, updatedRecurFrequency);","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-27"},{"lineNumber":141,"author":{"gitId":"hanqinilnix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-27"},{"lineNumber":142,"author":{"gitId":"hanqinilnix"},"content":"        // short circuit if same object","lastModifiedDate":"2022-02-27"},{"lineNumber":143,"author":{"gitId":"hanqinilnix"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-27"},{"lineNumber":144,"author":{"gitId":"hanqinilnix"},"content":"            return true;","lastModifiedDate":"2022-02-27"},{"lineNumber":145,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":146,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":147,"author":{"gitId":"hanqinilnix"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":148,"author":{"gitId":"hanqinilnix"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2022-02-27"},{"lineNumber":149,"author":{"gitId":"hanqinilnix"},"content":"            return false;","lastModifiedDate":"2022-02-27"},{"lineNumber":150,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":151,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":152,"author":{"gitId":"hanqinilnix"},"content":"        // state check","lastModifiedDate":"2022-02-27"},{"lineNumber":153,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2022-02-27"},{"lineNumber":154,"author":{"gitId":"hanqinilnix"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-02-27"},{"lineNumber":155,"author":{"gitId":"hanqinilnix"},"content":"                \u0026\u0026 targetEventIndex.equals(e.targetEventIndex)","lastModifiedDate":"2022-02-27"},{"lineNumber":156,"author":{"gitId":"hanqinilnix"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2022-02-27"},{"lineNumber":157,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":158,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"tyanhan":60,"vishandi":6,"hanqinilnix":92}},{"path":"src/main/java/seedu/address/logic/commands/schedule/ExportScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-22"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-23"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-22"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-22"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.storage.JsonAdaptedSchedule;","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":" * Exports the {@code Schedule} of a {@code Person}.","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"public class ExportScheduleCommand extends Command {","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    public static final String COMMAND_WORD \u003d \"exportSchedule\";","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"exportschedule\";","lastModifiedDate":"2022-03-29"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s\u0027s schedule exported to %2$s!\";","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"            + \": Exports the schedule of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_SCHEDULE_EMPTY \u003d \"No existing schedule for %1$s.\";","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExportScheduleCommand.class);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"     * @param index of the person\u0027s schedule to export","lastModifiedDate":"2022-03-22"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"    public ExportScheduleCommand(Index index) {","lastModifiedDate":"2022-03-24"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        targetIndex \u003d index;","lastModifiedDate":"2022-03-22"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-22"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-22"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        logger.info(\"Exporting schedule...\");","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-22"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-22"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        Person targetPerson \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-22"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"        Schedule toExportSchedule \u003d targetPerson.getSchedule();","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"        if (toExportSchedule.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"            throw new CommandException(String.format(MESSAGE_SCHEDULE_EMPTY, targetPerson.getName()));","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"        Path exportFile \u003d Paths.get(\"data\", \"export\", String.format(\"%1$s.json\", targetPerson.getName()));","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"            FileUtil.createIfMissing(exportFile);","lastModifiedDate":"2022-03-23"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"            JsonUtil.saveJsonFile(new JsonAdaptedSchedule(toExportSchedule), exportFile);","lastModifiedDate":"2022-03-23"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"            logger.info(targetPerson.getName() + \"\u0027s schedule saved at \" + exportFile + \".\");","lastModifiedDate":"2022-03-23"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-22"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"            logger.warning(\"Unable to save \" + targetPerson.getName() + \"\u0027s schedule in \" + exportFile + \": \" + e);","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(\"An error has occurred. Schedule not exported\");","lastModifiedDate":"2022-03-25"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetPerson.getName(), exportFile));","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"        // instance of handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"        if (!(other instanceof ExportScheduleCommand)) {","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"        ExportScheduleCommand e \u003d (ExportScheduleCommand) other;","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"        return targetIndex.equals(e.targetIndex);","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"tyanhan":2,"vishandi":1,"hanqinilnix":90}},{"path":"src/main/java/seedu/address/logic/commands/schedule/FindCommonTimingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markbiju"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"markbiju"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"markbiju"},"content":"import java.util.List;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"import java.util.Set;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.person.IsTagInPersonPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"markbiju"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":" * Command that lists all contacts who share the same tag.","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"markbiju"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"markbiju"},"content":"public class FindCommonTimingCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"markbiju"},"content":"    public static final String COMMAND_WORD \u003d \"findCommonTiming\";","lastModifiedDate":"2022-04-04"},{"lineNumber":31,"author":{"gitId":"markbiju"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"findcommontiming\";","lastModifiedDate":"2022-04-04"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-04-01"},{"lineNumber":33,"author":{"gitId":"markbiju"},"content":"            + \": Retrieves common free timings of contacts \"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"markbiju"},"content":"            + \"who share the same tag\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"markbiju"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"markbiju"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"markbiju"},"content":"            + PREFIX_DATE + \"DATE\\n\"","lastModifiedDate":"2022-04-01"},{"lineNumber":38,"author":{"gitId":"markbiju"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"markbiju"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"markbiju"},"content":"            + PREFIX_DATE + \"2022-02-14\";","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"markbiju"},"content":"    private final IsTagInPersonPredicate predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"markbiju"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"markbiju"},"content":"     * Constructor for findCommonTiming object.","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"markbiju"},"content":"     * @param predicate predicate indicating whether tag is present in list of people","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"markbiju"},"content":"     * @param date date of findCommonTiming","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"markbiju"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"markbiju"},"content":"    public FindCommonTimingCommand(IsTagInPersonPredicate predicate, LocalDate date) {","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"markbiju"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"markbiju"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"markbiju"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"markbiju"},"content":"     * Helper function that blocks time slots according to an event that a person has.","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"markbiju"},"content":"     * @param timeSlots array representing 30-minute blocks","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"markbiju"},"content":"     * @param event event that needs to be accounted for","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"markbiju"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"markbiju"},"content":"    public void blockTimeSlots(int[] timeSlots, Event event) {","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"markbiju"},"content":"        Event eventAtCurrentDate \u003d event.getEventAtDate(date);","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"markbiju"},"content":"        LocalTime startTime \u003d eventAtCurrentDate.getTime();","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"markbiju"},"content":"        int hours \u003d startTime.getHour();","lastModifiedDate":"2022-03-30"},{"lineNumber":64,"author":{"gitId":"markbiju"},"content":"        int minutes \u003d startTime.getMinute();","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"markbiju"},"content":"        int startSlot \u003d hours * 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":66,"author":{"gitId":"markbiju"},"content":"        if (minutes \u003e\u003d 30) {","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"markbiju"},"content":"            startSlot +\u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":68,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"markbiju"},"content":"        LocalTime endTime \u003d eventAtCurrentDate.getEndTime();","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"markbiju"},"content":"        int endHours \u003d endTime.getHour();","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"markbiju"},"content":"        int endMinutes \u003d endTime.getMinute();","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"markbiju"},"content":"        int endSlot \u003d endHours * 2;","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"markbiju"},"content":"        if (endMinutes \u003e 30) {","lastModifiedDate":"2022-03-30"},{"lineNumber":74,"author":{"gitId":"markbiju"},"content":"            endSlot +\u003d 2;","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"markbiju"},"content":"        } else if (endMinutes \u003e 0) {","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"markbiju"},"content":"            endSlot +\u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"markbiju"},"content":"        if (endTime.equals(LocalTime.of(0, 0))) {","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"markbiju"},"content":"            endSlot \u003d 48;","lastModifiedDate":"2022-04-07"},{"lineNumber":81,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":82,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":83,"author":{"gitId":"markbiju"},"content":"        for (int i \u003d startSlot; i \u003c endSlot; i++) {","lastModifiedDate":"2022-04-06"},{"lineNumber":84,"author":{"gitId":"markbiju"},"content":"            //set as busy","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"markbiju"},"content":"            timeSlots[i] \u003d 1;","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":89,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"markbiju"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-30"},{"lineNumber":91,"author":{"gitId":"markbiju"},"content":"        int[] timeSlots \u003d new int[48];","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"markbiju"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":93,"author":{"gitId":"markbiju"},"content":"        List\u003cPerson\u003e listOfPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-30"},{"lineNumber":94,"author":{"gitId":"markbiju"},"content":"        for (Person person : listOfPersons) {","lastModifiedDate":"2022-03-30"},{"lineNumber":95,"author":{"gitId":"markbiju"},"content":"            Schedule scheduleToCheck \u003d person.getSchedule();","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"markbiju"},"content":"            for (Event event : scheduleToCheck.getEvents()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":97,"author":{"gitId":"markbiju"},"content":"                if (event.willDateCollide(date)) {","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"markbiju"},"content":"                    blockTimeSlots(timeSlots, event);","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"markbiju"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"markbiju"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":102,"author":{"gitId":"markbiju"},"content":"        int toggle \u003d timeSlots[0];","lastModifiedDate":"2022-04-06"},{"lineNumber":103,"author":{"gitId":"markbiju"},"content":"        LocalTime startTime \u003d LocalTime.of(0, 0);","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"markbiju"},"content":"        Duration duration \u003d Duration.ofMinutes(0);","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"markbiju"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-04-04"},{"lineNumber":106,"author":{"gitId":"markbiju"},"content":"        for (int i \u003d 0; i \u003c timeSlots.length; i++) {","lastModifiedDate":"2022-03-30"},{"lineNumber":107,"author":{"gitId":"markbiju"},"content":"            // Check if current slot is free","lastModifiedDate":"2022-03-30"},{"lineNumber":108,"author":{"gitId":"markbiju"},"content":"            if (timeSlots[i] \u003d\u003d toggle) {","lastModifiedDate":"2022-04-04"},{"lineNumber":109,"author":{"gitId":"markbiju"},"content":"                duration \u003d duration.plusMinutes(30);","lastModifiedDate":"2022-04-04"},{"lineNumber":110,"author":{"gitId":"markbiju"},"content":"            } else {","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"markbiju"},"content":"                if (toggle \u003d\u003d 0) { // startTime - endTime(startTime + duration)","lastModifiedDate":"2022-04-04"},{"lineNumber":112,"author":{"gitId":"markbiju"},"content":"                    toggle \u003d 1;","lastModifiedDate":"2022-04-04"},{"lineNumber":113,"author":{"gitId":"markbiju"},"content":"                    sb.append(startTime);","lastModifiedDate":"2022-04-04"},{"lineNumber":114,"author":{"gitId":"markbiju"},"content":"                    startTime \u003d startTime.plus(duration);","lastModifiedDate":"2022-04-04"},{"lineNumber":115,"author":{"gitId":"markbiju"},"content":"                    sb.append(String.format(\"-%s\\n\", startTime));","lastModifiedDate":"2022-04-04"},{"lineNumber":116,"author":{"gitId":"markbiju"},"content":"                } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"markbiju"},"content":"                    toggle \u003d 0;","lastModifiedDate":"2022-04-04"},{"lineNumber":118,"author":{"gitId":"markbiju"},"content":"                    startTime \u003d startTime.plus(duration);","lastModifiedDate":"2022-04-04"},{"lineNumber":119,"author":{"gitId":"markbiju"},"content":"                }","lastModifiedDate":"2022-03-30"},{"lineNumber":120,"author":{"gitId":"markbiju"},"content":"                duration \u003d duration.ofMinutes(30);","lastModifiedDate":"2022-04-04"},{"lineNumber":121,"author":{"gitId":"markbiju"},"content":"            }","lastModifiedDate":"2022-04-04"},{"lineNumber":122,"author":{"gitId":"markbiju"},"content":"            if (i \u003d\u003d timeSlots.length - 1) {","lastModifiedDate":"2022-04-04"},{"lineNumber":123,"author":{"gitId":"markbiju"},"content":"                sb.append(startTime);","lastModifiedDate":"2022-04-04"},{"lineNumber":124,"author":{"gitId":"markbiju"},"content":"                sb.append(String.format(\"-%s\\n\", LocalTime.of(0, 0)));","lastModifiedDate":"2022-04-04"},{"lineNumber":125,"author":{"gitId":"markbiju"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":127,"author":{"gitId":"markbiju"},"content":"        Set\u003cInteger\u003e distinct \u003d Arrays.stream(timeSlots).boxed().collect(Collectors.toSet());","lastModifiedDate":"2022-04-06"},{"lineNumber":128,"author":{"gitId":"markbiju"},"content":"        boolean allEqual \u003d distinct.size() \u003d\u003d 1;","lastModifiedDate":"2022-04-06"},{"lineNumber":129,"author":{"gitId":"markbiju"},"content":"        if (timeSlots[0] \u003d\u003d 0 \u0026\u0026 allEqual) {","lastModifiedDate":"2022-04-06"},{"lineNumber":130,"author":{"gitId":"markbiju"},"content":"            sb.replace(0, 25, \"The whole day is free for these contacts!\");","lastModifiedDate":"2022-04-06"},{"lineNumber":131,"author":{"gitId":"markbiju"},"content":"        } else if (allEqual) {","lastModifiedDate":"2022-04-06"},{"lineNumber":132,"author":{"gitId":"markbiju"},"content":"            sb.replace(0, 25, \"There are no free timings available!\");","lastModifiedDate":"2022-04-06"},{"lineNumber":133,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":134,"author":{"gitId":"markbiju"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2022-04-04"},{"lineNumber":135,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":138,"author":{"gitId":"markbiju"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-30"},{"lineNumber":139,"author":{"gitId":"markbiju"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-30"},{"lineNumber":140,"author":{"gitId":"markbiju"},"content":"                || (other instanceof FindCommonTimingCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":141,"author":{"gitId":"markbiju"},"content":"                \u0026\u0026 predicate.equals(((FindCommonTimingCommand) other).predicate)","lastModifiedDate":"2022-03-31"},{"lineNumber":142,"author":{"gitId":"markbiju"},"content":"                \u0026\u0026 date.equals(((FindCommonTimingCommand) other).date)); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":143,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":144,"author":{"gitId":"markbiju"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"markbiju":144}},{"path":"src/main/java/seedu/address/logic/commands/schedule/ImportScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILEPATH;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-25"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-03-29"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-23"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-23"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"import seedu.address.storage.JsonAdaptedSchedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":" * Imports a {@code Schedule} from the specified json file and replaces the indexed {@code Person}\u0027s schedule with","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":" * the imported {@code Schedule}","lastModifiedDate":"2022-03-23"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"public class ImportScheduleCommand extends Command {","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    public static final String COMMAND_WORD \u003d \"importSchedule\";","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"importschedule\";","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports a schedule from a json file and \"","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"            + \"replaces the indexed person\u0027s schedule with the imported schedule.\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"            + \"Parameters: PERSON_INDEX (must be a positive integer) \"","lastModifiedDate":"2022-03-23"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"            + PREFIX_FILEPATH + \"FILE_PATH\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_FILEPATH + \"typicalSchedule.json\";","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s\u0027s schedule has been replaced with the imported schedule!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"    public static final String FILE_DOES_NOT_EXIST_MESSAGE \u003d \"\\\"%1$s\\\" does not exist in \\\"%2$s\\\"\";","lastModifiedDate":"2022-03-27"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"    public static final String FILE_PATH_IS_DIRECTORY_MESSAGE \u003d \"File path should not be a directory!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"    public static final String FILE_NOT_READABLE_MESSAGE \u003d \"You do not have access to the specified file path!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"    public static final String UNKNOWN_ERROR_MESSAGE \u003d \"Unknown error when reading the file!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"    public static final String VALID_DATA_FORMAT_EXAMPLE \u003d \"{\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"            + \"  \\\"events\\\" : [ {\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"eventDescription\\\" : \\\"CS2106 Tutorial\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"date\\\" : \\\"2022-03-14\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"time\\\" : \\\"10:00:00\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"duration\\\" : \\\"PT1H\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"recurFrequency\\\" : \\\"WEEKLY\\\"\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"            + \"  }, {\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"eventDescription\\\" : \\\"Alice Birthday Surprise\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"date\\\" : \\\"2022-03-14\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"time\\\" : \\\"17:00:00\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"duration\\\" : \\\"PT4H\\\",\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"            + \"    \\\"recurFrequency\\\" : \\\"WEEKLY\\\"\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"            + \"  } ]\\n\"","lastModifiedDate":"2022-03-23"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"            + \"}\";","lastModifiedDate":"2022-03-23"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"    public static final Path TEMPLATE_FILE_PATH \u003d Paths.get(\"data\", \"template\", \"template.json\");","lastModifiedDate":"2022-03-25"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"    public static final String REFER_TEMPLATE_MESSAGE \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"            String.format(\"Refer to %s for a valid Json template.\", TEMPLATE_FILE_PATH);","lastModifiedDate":"2022-03-25"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"    public static final String NOT_JSON_FORMAT_MESSAGE \u003d \"\\\"%s\\\" is empty or not in valid json format!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"    public static final String NOT_JSON_FORMAT_REFER_TEMPLATE \u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"            NOT_JSON_FORMAT_MESSAGE + \"\\n\" + REFER_TEMPLATE_MESSAGE;","lastModifiedDate":"2022-03-25"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    public static final String NOT_JSON_FORMAT_WITH_EXAMPLE \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"            NOT_JSON_FORMAT_MESSAGE + \"\\nExample of valid data:\\n\" + VALID_DATA_FORMAT_EXAMPLE;","lastModifiedDate":"2022-03-23"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"    public static final String INVALID_DATA_MESSAGE \u003d \"Data contains invalid headers and/or values!\";","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"    public static final String INVALID_DATA_REFER_TEMPLATE \u003d INVALID_DATA_MESSAGE + \"\\n\" + REFER_TEMPLATE_MESSAGE;","lastModifiedDate":"2022-03-27"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"    public static final String INVALID_DATA_WITH_EXAMPLE \u003d","lastModifiedDate":"2022-03-23"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"            INVALID_DATA_MESSAGE + \"\\nExample of valid data:\\n\" + VALID_DATA_FORMAT_EXAMPLE;","lastModifiedDate":"2022-03-23"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"    private final Path filePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2022-03-23"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"     * @param filePath of the file to be read","lastModifiedDate":"2022-03-23"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"    public ImportScheduleCommand(Index targetIndex, Path filePath) {","lastModifiedDate":"2022-03-27"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-03-23"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-03-23"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-03-23"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-03-23"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-03-23"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-23"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-03-23"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"        checkValidFilePath(filePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"        Schedule importedSchedule \u003d convertFileDataToSchedule(filePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"        model.setSchedule(personToEdit, importedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"        model.updateViewSchedulePerson(new SamePersonPredicate(personToEdit));","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personToEdit.getName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"     * Converts the data in the specified file path into a {@code Schedule}.","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"     * @throws CommandException if the data is in invalid format or contains illegal values and/or headers","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"    private Schedule convertFileDataToSchedule(Path filePath) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"        Optional\u003cJsonAdaptedSchedule\u003e importedJsonAdaptedSchedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":117,"author":{"gitId":"tyanhan"},"content":"            importedJsonAdaptedSchedule \u003d JsonUtil.readJsonFile(filePath, JsonAdaptedSchedule.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"        } catch (DataConversionException ive) {","lastModifiedDate":"2022-03-25"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"            createTemplate(String.format(NOT_JSON_FORMAT_WITH_EXAMPLE, filePath.getFileName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(NOT_JSON_FORMAT_REFER_TEMPLATE, filePath.getFileName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":121,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":123,"author":{"gitId":"tyanhan"},"content":"        if (!importedJsonAdaptedSchedule.isPresent()) {","lastModifiedDate":"2022-03-23"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(UNKNOWN_ERROR_MESSAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":125,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":126,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":127,"author":{"gitId":"tyanhan"},"content":"        Schedule importedSchedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":128,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":129,"author":{"gitId":"tyanhan"},"content":"            importedSchedule \u003d importedJsonAdaptedSchedule.get().toModelType();","lastModifiedDate":"2022-03-23"},{"lineNumber":130,"author":{"gitId":"tyanhan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-03-25"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"            createTemplate(String.format(INVALID_DATA_WITH_EXAMPLE, filePath.getFileName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(INVALID_DATA_REFER_TEMPLATE));","lastModifiedDate":"2022-03-27"},{"lineNumber":133,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":134,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":135,"author":{"gitId":"tyanhan"},"content":"        if (importedSchedule.isEmpty()) {","lastModifiedDate":"2022-03-25"},{"lineNumber":136,"author":{"gitId":"tyanhan"},"content":"            createTemplate(String.format(INVALID_DATA_WITH_EXAMPLE, filePath.getFileName()));","lastModifiedDate":"2022-03-27"},{"lineNumber":137,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(INVALID_DATA_REFER_TEMPLATE));","lastModifiedDate":"2022-03-27"},{"lineNumber":138,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":139,"author":{"gitId":"tyanhan"},"content":"        return importedSchedule;","lastModifiedDate":"2022-03-27"},{"lineNumber":140,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":141,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":142,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":143,"author":{"gitId":"tyanhan"},"content":"     * Checks if the provided filePath is a readable file.","lastModifiedDate":"2022-03-27"},{"lineNumber":144,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-27"},{"lineNumber":145,"author":{"gitId":"tyanhan"},"content":"     * @throws CommandException if the file path is empty, a directory or is not readable","lastModifiedDate":"2022-03-27"},{"lineNumber":146,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":147,"author":{"gitId":"tyanhan"},"content":"    private void checkValidFilePath(Path filePath) throws CommandException {","lastModifiedDate":"2022-03-27"},{"lineNumber":148,"author":{"gitId":"tyanhan"},"content":"        if (Files.notExists(filePath)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":149,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(","lastModifiedDate":"2022-03-27"},{"lineNumber":150,"author":{"gitId":"tyanhan"},"content":"                    FILE_DOES_NOT_EXIST_MESSAGE, filePath.getFileName(), filePath.toAbsolutePath().getParent()));","lastModifiedDate":"2022-03-27"},{"lineNumber":151,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":152,"author":{"gitId":"tyanhan"},"content":"        if (Files.isDirectory(filePath)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":153,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(FILE_PATH_IS_DIRECTORY_MESSAGE, filePath));","lastModifiedDate":"2022-03-27"},{"lineNumber":154,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":155,"author":{"gitId":"tyanhan"},"content":"        if (!Files.isReadable(filePath)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":156,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(String.format(FILE_NOT_READABLE_MESSAGE, filePath));","lastModifiedDate":"2022-03-27"},{"lineNumber":157,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":158,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":159,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":160,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-25"},{"lineNumber":161,"author":{"gitId":"tyanhan"},"content":"     * Creates a template file with valid schedule data.","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-25"},{"lineNumber":163,"author":{"gitId":"tyanhan"},"content":"     * @param errorMessage the error message to throw if template file fails to create","lastModifiedDate":"2022-03-25"},{"lineNumber":164,"author":{"gitId":"tyanhan"},"content":"     * @throws CommandException if template file fails to create","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-25"},{"lineNumber":166,"author":{"gitId":"tyanhan"},"content":"    private void createTemplate(String errorMessage) throws CommandException {","lastModifiedDate":"2022-03-25"},{"lineNumber":167,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-25"},{"lineNumber":168,"author":{"gitId":"tyanhan"},"content":"            FileUtil.createParentDirsOfFile(TEMPLATE_FILE_PATH);","lastModifiedDate":"2022-03-25"},{"lineNumber":169,"author":{"gitId":"tyanhan"},"content":"            FileUtil.writeToFile(TEMPLATE_FILE_PATH, VALID_DATA_FORMAT_EXAMPLE);","lastModifiedDate":"2022-03-25"},{"lineNumber":170,"author":{"gitId":"tyanhan"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-03-25"},{"lineNumber":171,"author":{"gitId":"tyanhan"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2022-03-25"},{"lineNumber":172,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-25"},{"lineNumber":173,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-25"},{"lineNumber":174,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-23"},{"lineNumber":176,"author":{"gitId":"tyanhan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-23"},{"lineNumber":177,"author":{"gitId":"tyanhan"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-23"},{"lineNumber":178,"author":{"gitId":"tyanhan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-23"},{"lineNumber":179,"author":{"gitId":"tyanhan"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":180,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":181,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":182,"author":{"gitId":"tyanhan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-23"},{"lineNumber":183,"author":{"gitId":"tyanhan"},"content":"        if (!(other instanceof ImportScheduleCommand)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":184,"author":{"gitId":"tyanhan"},"content":"            return false;","lastModifiedDate":"2022-03-23"},{"lineNumber":185,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":186,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":187,"author":{"gitId":"tyanhan"},"content":"        // state check","lastModifiedDate":"2022-03-23"},{"lineNumber":188,"author":{"gitId":"tyanhan"},"content":"        ImportScheduleCommand e \u003d (ImportScheduleCommand) other;","lastModifiedDate":"2022-03-27"},{"lineNumber":189,"author":{"gitId":"tyanhan"},"content":"        return targetIndex.equals(e.targetIndex)","lastModifiedDate":"2022-03-23"},{"lineNumber":190,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 filePath.equals(e.filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":191,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":192,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tyanhan":189,"vishandi":3}},{"path":"src/main/java/seedu/address/logic/commands/schedule/WhoIsFreeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-02-24"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-02-24"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-02-24"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2022-02-24"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-02-24"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-02-24"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-02-24"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.IsPersonFreePredicate;","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":" * Lists all {@code Person} who are free at the given time and date.","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":" * If tags are given, then only with specified tags are shown.","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":" * If no date is given, the command assumes today\u0027s date.","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":" * Persons without schedule is considered free at all times.","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"public class WhoIsFreeCommand extends Command {","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"    public static final String COMMAND_WORD \u003d \"whoIsFree\";","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"    public static final String COMMAND_WORD_LOWER \u003d \"whoisfree\";","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-02-24"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"            + \": Retrieves information of friends \"","lastModifiedDate":"2022-02-24"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"            + \"who are free at the specified time or date.\"","lastModifiedDate":"2022-04-04"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"            + \"Tags can also be added to filter the list.\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2022-02-24"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2022-04-04"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-04-04"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            + PREFIX_TIME + \"12:00 \"","lastModifiedDate":"2022-02-24"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"            + PREFIX_DATE + \"2022-02-14\";","lastModifiedDate":"2022-02-24"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-24"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"    private final IsPersonFreePredicate predicate;","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"    public WhoIsFreeCommand(IsPersonFreePredicate predicate) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-24"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-02-24"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-02-25"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        return new CommandResult(","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"                || (other instanceof WhoIsFreeCommand // instanceof handles nulls","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"                \u0026\u0026 predicate.equals(((WhoIsFreeCommand) other).predicate)); // state check","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-24"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-02-24"}],"authorContributionMap":{"hanqinilnix":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ClearCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.SetUserCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.person.ViewGroupCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.ViewScheduleCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.schedule.AddEventCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.ClearScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.DeleteEventCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.EditEventCommand;","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.ExportScheduleCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.schedule.FindCommonTimingCommand;","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.ImportScheduleCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.WhoIsFreeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.person.AddCommandParser;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.person.DeleteCommandParser;","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.person.EditCommandParser;","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.person.FindCommandParser;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.person.SetUserCommandParser;","lastModifiedDate":"2022-03-27"},{"lineNumber":35,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.person.ViewGroupCommandParser;","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.person.ViewScheduleCommandParser;","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.schedule.AddEventCommandParser;","lastModifiedDate":"2022-03-04"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.schedule.ClearScheduleCommandParser;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.schedule.DeleteEventCommandParser;","lastModifiedDate":"2022-03-04"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.schedule.EditEventCommandParser;","lastModifiedDate":"2022-03-04"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.schedule.ExportScheduleCommandParser;","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.schedule.FindCommonTimingCommandParser;","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.schedule.ImportScheduleCommandParser;","lastModifiedDate":"2022-03-27"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.schedule.WhoIsFreeCommandParser;","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"        switch (commandWord.toLowerCase()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"        case ViewGroupCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-30"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"            return new ViewGroupCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        case AddEventCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"        case EditEventCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2022-02-27"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"        case DeleteEventCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2022-03-03"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"        case WhoIsFreeCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-30"},{"lineNumber":99,"author":{"gitId":"hanqinilnix"},"content":"            return new WhoIsFreeCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"        case ClearScheduleCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"            return new ClearScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-29"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"        case ViewScheduleCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"            return new ViewScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-25"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        case ImportScheduleCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-29"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"            return new ImportScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"        case ExportScheduleCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-29"},{"lineNumber":107,"author":{"gitId":"hanqinilnix"},"content":"            return new ExportScheduleCommandParser().parse(arguments);","lastModifiedDate":"2022-03-24"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"        case SetUserCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"            return new SetUserCommandParser().parse(arguments);","lastModifiedDate":"2022-03-27"},{"lineNumber":110,"author":{"gitId":"markbiju"},"content":"        case FindCommonTimingCommand.COMMAND_WORD_LOWER:","lastModifiedDate":"2022-04-04"},{"lineNumber":111,"author":{"gitId":"markbiju"},"content":"            return new FindCommonTimingCommandParser().parse(arguments);","lastModifiedDate":"2022-03-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":18,"vishandi":15,"markbiju":7,"-":63,"hanqinilnix":14}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"da/\");","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_DURATION \u003d new Prefix(\"du/\");","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    public static final Prefix PREFIX_EVENT_DESCRIPTION \u003d new Prefix(\"ed/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"gh/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"    public static final Prefix PREFIX_RECUR_FREQUENCY \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tg/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"ti/\");","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public static final Prefix PREFIX_FILEPATH \u003d new Prefix(\"pa/\");","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tyanhan":2,"vishandi":4,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.DATE_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.DURATION_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.TIME_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    private static final String DATE_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"    private static final String TIME_REGEX \u003d \"\\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"    private static final String DURATION_HOURS_REGEX \u003d \"^[0-9]*H?\";","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"    private static final String DURATION_HOURS_MINUTES_REGEX \u003d \"^[0-9]*H[0-9]*M\";","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    private static final String DURATION_MINUTES_REGEX \u003d \"[0-9]*M\";","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"    private static final String FILE_PATH_MESSAGE_CONSTRAINTS \u003d \"File path cannot be empty!\";","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"     * Parses {@code oneBasedIndices} into a {@code List\u003cIndex\u003e} and returns it. Leading and trailing whitespaces will","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"     * be trimmed.","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"     * @throws ParseException if any specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"    public static List\u003cIndex\u003e parseIndices (String oneBasedIndices) throws ParseException {","lastModifiedDate":"2022-02-27"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"        String[] indices \u003d oneBasedIndices.split(\" \");","lastModifiedDate":"2022-02-27"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        ArrayList\u003cIndex\u003e trimmedIndices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-02-27"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"        for (String index : indices) {","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(index.trim())) {","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"            trimmedIndices.add(Index.fromOneBased(Integer.parseInt(index)));","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        return trimmedIndices;","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"     * Parses a {@code String username} into a {@code Telegram}.","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"     * @throws ParseException if the given {@code username} is invalid.","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"    public static Telegram parseTelegram(String username) throws ParseException {","lastModifiedDate":"2022-03-08"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-08"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-08"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"        if (!Telegram.isValidTelegram(trimmedUsername) || trimmedUsername.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"        return new Telegram(trimmedUsername);","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"     * Parses a {@code String username} into a {@code GitHub}.","lastModifiedDate":"2022-03-14"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"     * @throws ParseException if the given {@code String username} is invalid.","lastModifiedDate":"2022-03-14"},{"lineNumber":129,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"    public static GitHub parseGithub(String username) throws ParseException {","lastModifiedDate":"2022-03-14"},{"lineNumber":131,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-14"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-14"},{"lineNumber":133,"author":{"gitId":"vishandi"},"content":"        if (!GitHub.isValidGitHub(trimmedUsername) || trimmedUsername.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":135,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"        return new GitHub(trimmedUsername);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"        if (!Address.isValidAddress(trimmedAddress) || trimmedAddress.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"        if (!Email.isValidEmail(trimmedEmail) || trimmedEmail.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Parses a {@code String eventDescription} into an {@code EventDescription}.","lastModifiedDate":"2022-02-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code eventDescription} is invalid.","lastModifiedDate":"2022-02-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public static EventDescription parseEventDescription(String eventDescription) throws ParseException {","lastModifiedDate":"2022-02-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(eventDescription);","lastModifiedDate":"2022-02-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String trimmedEventDescription \u003d eventDescription.trim();","lastModifiedDate":"2022-02-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!EventDescription.isValidEventDescription(trimmedEventDescription)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new ParseException(EventDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":181,"author":{"gitId":"vishandi"},"content":"        return new EventDescription(trimmedEventDescription);","lastModifiedDate":"2022-03-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2022-02-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-02-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2022-02-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-02-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-02-15"},{"lineNumber":193,"author":{"gitId":"tyanhan"},"content":"        if (!trimmedDate.matches(DATE_REGEX)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":197,"author":{"gitId":"tyanhan"},"content":"            LocalDate localDate \u003d LocalDate.parse(trimmedDate);","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"tyanhan"},"content":"            checkValidDate(localDate);","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"tyanhan"},"content":"            return localDate;","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":201,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"The provided date does not exist!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":205,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"tyanhan"},"content":"     * A helper function to check if a date satisfies the year constraints.","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":208,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the year of the given {@code date} is less than 2000 or more than 2100","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"tyanhan"},"content":"    private static void checkValidDate(LocalDate date) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"tyanhan"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"tyanhan"},"content":"        if (year \u003c 2000 || year \u003e 2100) {","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"The date of the event must be between year 2000 to 2100 inclusive!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Parses a {@code String time} into an {@code LocalTime}.","lastModifiedDate":"2022-02-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2022-02-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2022-02-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        requireNonNull(time);","lastModifiedDate":"2022-02-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2022-02-15"},{"lineNumber":226,"author":{"gitId":"tyanhan"},"content":"        if (!trimmedTime.matches(TIME_REGEX)) {","lastModifiedDate":"2022-03-29"},{"lineNumber":227,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-29"},{"lineNumber":228,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return LocalTime.parse(trimmedTime);","lastModifiedDate":"2022-02-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":232,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"The provided time is invalid!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":237,"author":{"gitId":"tyanhan"},"content":"     * Parses a {@code String duration} into a {@code Duration}.","lastModifiedDate":"2022-03-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-02-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2022-02-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2022-02-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-02-15"},{"lineNumber":244,"author":{"gitId":"tyanhan"},"content":"        String trimmedDuration \u003d duration.trim().toUpperCase();","lastModifiedDate":"2022-03-05"},{"lineNumber":245,"author":{"gitId":"tyanhan"},"content":"        int hours \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":246,"author":{"gitId":"tyanhan"},"content":"        int minutes \u003d 0;","lastModifiedDate":"2022-03-16"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":248,"author":{"gitId":"tyanhan"},"content":"            if (trimmedDuration.matches(DURATION_HOURS_MINUTES_REGEX)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":249,"author":{"gitId":"tyanhan"},"content":"                String[] splitDuration \u003d trimmedDuration.split(\"H\");","lastModifiedDate":"2022-03-05"},{"lineNumber":250,"author":{"gitId":"tyanhan"},"content":"                hours \u003d Integer.parseInt(splitDuration[0]);","lastModifiedDate":"2022-03-16"},{"lineNumber":251,"author":{"gitId":"tyanhan"},"content":"                minutes \u003d Integer.parseInt(splitDuration[1].split(\"M\")[0]);","lastModifiedDate":"2022-03-05"},{"lineNumber":252,"author":{"gitId":"tyanhan"},"content":"                checkValidHoursAndMinutes(hours, minutes);","lastModifiedDate":"2022-03-29"},{"lineNumber":253,"author":{"gitId":"tyanhan"},"content":"            } else if (trimmedDuration.matches(DURATION_HOURS_REGEX)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":254,"author":{"gitId":"tyanhan"},"content":"                hours \u003d Integer.parseInt(trimmedDuration.split(\"H\")[0]);","lastModifiedDate":"2022-03-16"},{"lineNumber":255,"author":{"gitId":"tyanhan"},"content":"                checkValidHours(hours);","lastModifiedDate":"2022-03-29"},{"lineNumber":256,"author":{"gitId":"tyanhan"},"content":"            } else if (trimmedDuration.matches(DURATION_MINUTES_REGEX)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":257,"author":{"gitId":"tyanhan"},"content":"                minutes \u003d Integer.parseInt(trimmedDuration.split(\"M\")[0]);","lastModifiedDate":"2022-03-16"},{"lineNumber":258,"author":{"gitId":"tyanhan"},"content":"                checkValidMinutes(minutes);","lastModifiedDate":"2022-03-29"},{"lineNumber":259,"author":{"gitId":"tyanhan"},"content":"            } else {","lastModifiedDate":"2022-03-16"},{"lineNumber":260,"author":{"gitId":"tyanhan"},"content":"                throw new ParseException(DURATION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":261,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":262,"author":{"gitId":"tyanhan"},"content":"            Duration newDuration \u003d Duration.ofHours(hours).plusMinutes(minutes);","lastModifiedDate":"2022-03-31"},{"lineNumber":263,"author":{"gitId":"tyanhan"},"content":"            if (newDuration.isZero()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":264,"author":{"gitId":"tyanhan"},"content":"                throw new ParseException(\"Duration cannot be 0!\");","lastModifiedDate":"2022-03-31"},{"lineNumber":265,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":266,"author":{"gitId":"tyanhan"},"content":"            return newDuration;","lastModifiedDate":"2022-03-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException | NumberFormatException e) {","lastModifiedDate":"2022-02-15"},{"lineNumber":268,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(DURATION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":272,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"tyanhan"},"content":"     * A helper function to check if the hours and minutes satisfies duration constraints.","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the {@code hours} and {@code minutes} combined exceeds 336 hours (2 weeks)","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"tyanhan"},"content":"    private static void checkValidHoursAndMinutes(int hours, int minutes) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"tyanhan"},"content":"        checkValidMinutes(minutes);","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"tyanhan"},"content":"        checkValidHours(hours);","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"tyanhan"},"content":"        if (hours \u003d\u003d 336 \u0026\u0026 minutes \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"The event\u0027s duration cannot exceed 2 weeks! (336 hours)\");","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"tyanhan"},"content":"     * A helper function to check if the hours satisfy duration constraints.","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the given {@code hours} is less than 0 or more than 336","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"tyanhan"},"content":"    private static void checkValidHours(int hours) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"tyanhan"},"content":"        if (hours \u003e 336) {","lastModifiedDate":"2022-03-31"},{"lineNumber":292,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"The event\u0027s duration cannot exceed 2 weeks! (336 hours)\");","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"tyanhan"},"content":"        } else if (hours \u003c 0) {","lastModifiedDate":"2022-03-31"},{"lineNumber":294,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"Hours cannot be negative!\");","lastModifiedDate":"2022-03-31"},{"lineNumber":295,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":296,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":297,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":298,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-29"},{"lineNumber":299,"author":{"gitId":"tyanhan"},"content":"     * A helper function to check if the minutes satisfy minute constraints.","lastModifiedDate":"2022-03-29"},{"lineNumber":300,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-29"},{"lineNumber":301,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the given {@code minutes} is less than 0 or larger than 59","lastModifiedDate":"2022-03-29"},{"lineNumber":302,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-29"},{"lineNumber":303,"author":{"gitId":"tyanhan"},"content":"    private static void checkValidMinutes(int minutes) throws ParseException {","lastModifiedDate":"2022-03-29"},{"lineNumber":304,"author":{"gitId":"tyanhan"},"content":"        if (minutes \u003c 0 || minutes \u003e 59) {","lastModifiedDate":"2022-03-29"},{"lineNumber":305,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(\"Minutes should be an integer between 0 to 59 inclusive!\");","lastModifiedDate":"2022-03-29"},{"lineNumber":306,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":307,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":308,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":310,"author":{"gitId":"tyanhan"},"content":"     * Parses a {@code String recurFrequency} into an {@code RecurFrequency}.","lastModifiedDate":"2022-03-07"},{"lineNumber":311,"author":{"gitId":"tyanhan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-07"},{"lineNumber":312,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":313,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the given {@code recurFrequency} is invalid.","lastModifiedDate":"2022-03-07"},{"lineNumber":314,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":315,"author":{"gitId":"tyanhan"},"content":"    public static RecurFrequency parseRecurFrequency(String recurFrequency) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":316,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(recurFrequency);","lastModifiedDate":"2022-03-16"},{"lineNumber":317,"author":{"gitId":"tyanhan"},"content":"        String trimmedRecurFrequency \u003d recurFrequency.trim();","lastModifiedDate":"2022-03-07"},{"lineNumber":318,"author":{"gitId":"tyanhan"},"content":"        return RecurFrequency.of(trimmedRecurFrequency.toUpperCase());","lastModifiedDate":"2022-03-30"},{"lineNumber":319,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":320,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":347,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":348,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":349,"author":{"gitId":"tyanhan"},"content":"     * Parses a {@code String filePath} into a {@code Path}.","lastModifiedDate":"2022-03-23"},{"lineNumber":350,"author":{"gitId":"tyanhan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-03-23"},{"lineNumber":351,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":352,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the given {@code filePath} is invalid.","lastModifiedDate":"2022-03-23"},{"lineNumber":353,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":354,"author":{"gitId":"tyanhan"},"content":"    public static Path parseFilePath(String filePath) throws ParseException {","lastModifiedDate":"2022-03-23"},{"lineNumber":355,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":356,"author":{"gitId":"tyanhan"},"content":"        if (filePath.trim().equals(\"\")) {","lastModifiedDate":"2022-03-23"},{"lineNumber":357,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(FILE_PATH_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-23"},{"lineNumber":358,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":359,"author":{"gitId":"tyanhan"},"content":"        return Paths.get(filePath);","lastModifiedDate":"2022-03-23"},{"lineNumber":360,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tyanhan":122,"vishandi":35,"-":185,"hanqinilnix":19}},{"path":"src/main/java/seedu/address/logic/parser/person/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import static seedu.address.model.person.Address.EMPTY_ADDRESS;","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import static seedu.address.model.person.Email.EMPTY_EMAIL;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"import static seedu.address.model.person.GitHub.EMPTY_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import static seedu.address.model.person.Telegram.EMPTY_TELEGRAM;","lastModifiedDate":"2022-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TELEGRAM, PREFIX_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        Telegram telegram \u003d EMPTY_TELEGRAM;","lastModifiedDate":"2022-03-09"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"            telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"        GitHub github \u003d EMPTY_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"            github \u003d ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).get());","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"        Email email \u003d EMPTY_EMAIL;","lastModifiedDate":"2022-03-08"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-03-08"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"        Address address \u003d EMPTY_ADDRESS;","lastModifiedDate":"2022-03-09"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-03-09"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        Person person \u003d new Person(name, phone, telegram, github,","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"                email, address, new Schedule(new ArrayList\u003c\u003e()), tagList);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tyanhan":11,"vishandi":34,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/person/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tyanhan":4,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/person/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-03-22"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"                        PREFIX_TELEGRAM, PREFIX_GITHUB, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"            editPersonDescriptor.setTelegram(parseTelegramForEdit(argMultimap.getValue(PREFIX_TELEGRAM).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"            editPersonDescriptor.setGithub(parseGithubForEdit(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"            editPersonDescriptor.setEmail(parseEmailForEdit(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"            editPersonDescriptor.setAddress(parseAddressForEdit(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-03-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"     * Parses {@code String username} into a {@code Telegram} if {@code username} is a valid username","lastModifiedDate":"2022-03-22"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"     * or an empty username. If it is an empty username, it will be parsed into {@code Telegram.EMPTY_TELEGRAM}.","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"    private Telegram parseTelegramForEdit(String username) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"        if (!Telegram.isValidTelegram(trimmedUsername)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"        if (trimmedUsername.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"            return Telegram.EMPTY_TELEGRAM;","lastModifiedDate":"2022-03-22"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"        return new Telegram(trimmedUsername);","lastModifiedDate":"2022-03-22"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"     * Parses {@code String username} into a {@code GitHub} if {@code username} is a valid username","lastModifiedDate":"2022-03-22"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"     * or an empty username. If it is an empty username, it will be parsed into {@code GitHub.EMPTY_GITHUB}.","lastModifiedDate":"2022-03-22"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"    private GitHub parseGithubForEdit(String username) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-22"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"        String trimmedUsername \u003d username.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"        if (!GitHub.isValidGitHub(trimmedUsername)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"        if (trimmedUsername.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"            return GitHub.EMPTY_GITHUB;","lastModifiedDate":"2022-03-22"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"        return new GitHub(trimmedUsername);","lastModifiedDate":"2022-03-22"},{"lineNumber":129,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":131,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"     * Parses {@code String email} into a {@code Email} if {@code username} is a valid email","lastModifiedDate":"2022-03-22"},{"lineNumber":133,"author":{"gitId":"vishandi"},"content":"     * or an empty email. If it is an empty email, it will be parsed into {@code Email.EMPTY_EMAIL}.","lastModifiedDate":"2022-03-22"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":135,"author":{"gitId":"vishandi"},"content":"    private Email parseEmailForEdit(String email) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-03-22"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":141,"author":{"gitId":"vishandi"},"content":"        if (trimmedEmail.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":142,"author":{"gitId":"vishandi"},"content":"            return Email.EMPTY_EMAIL;","lastModifiedDate":"2022-03-22"},{"lineNumber":143,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2022-03-22"},{"lineNumber":145,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"     * Parses {@code String address} into a {@code Address} if {@code address} is a valid address","lastModifiedDate":"2022-03-22"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"     * or an empty address. If it is an empty address, it will be parsed into {@code Address.EMPTY_ADDRESS}.","lastModifiedDate":"2022-03-22"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"    private Address parseAddressForEdit(String address) throws ParseException {","lastModifiedDate":"2022-03-22"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-03-22"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2022-03-22"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2022-03-22"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-22"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"        if (trimmedAddress.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"            return Address.EMPTY_ADDRESS;","lastModifiedDate":"2022-03-22"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2022-03-22"},{"lineNumber":161,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tyanhan":8,"vishandi":80,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/person/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tyanhan":3,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/person/SetUserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-27"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-27"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-27"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.SetUserCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-27"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-27"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-27"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-27"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":" * Parses input arguments and creates a new SetUserCommand object","lastModifiedDate":"2022-03-27"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-27"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"public class SetUserCommandParser implements Parser\u003cSetUserCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"     * Parses the given {@code String} of arguments in the context of the SetUserCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"     * and returns a SetUserCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public SetUserCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"            return new SetUserCommand(index);","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetUserCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-27"}],"authorContributionMap":{"tyanhan":30}},{"path":"src/main/java/seedu/address/logic/parser/person/ViewGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markbiju"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.person.ViewGroupCommand;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.WhoIsFreeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.IsTagInPersonPredicate;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":" * Parses input arguments and creates a new ViewGroupCommand object.","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"public class ViewGroupCommandParser implements Parser\u003cViewGroupCommand\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewGroupCommand","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"     * and returns a ViewGroupCommand object for execution.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"markbiju"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"markbiju"},"content":"    public ViewGroupCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"markbiju"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"markbiju"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TAG);","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"        boolean hasTagPrefix \u003d argMultimap.getValue(PREFIX_TAG).isPresent();","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, WhoIsFreeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"markbiju"},"content":"        if (hasTagPrefix) {","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"markbiju"},"content":"            Tag tag \u003d ParserUtil.parseTag((argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"markbiju"},"content":"            return new ViewGroupCommand(new IsTagInPersonPredicate(tag));","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"markbiju"},"content":"        } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"markbiju"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"markbiju"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"markbiju"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":2,"markbiju":40,"hanqinilnix":5}},{"path":"src/main/java/seedu/address/logic/parser/person/ViewScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.ViewScheduleCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"public class ViewScheduleCommandParser implements Parser\u003cViewScheduleCommand\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    public ViewScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        try {","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"            return new ViewScheduleCommand(index);","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-25"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"vishandi":31}},{"path":"src/main/java/seedu/address/logic/parser/schedule/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.schedule.AddEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.DEFAULT_DURATION;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.DEFAULT_TIME;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.FULL_DAY_EVENT_DURATION;","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.Event.MISSING_TIME_MESSAGE;","lastModifiedDate":"2022-03-05"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.RecurFrequency.DEFAULT_RECURRENCE;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.time.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.schedule.AddEventCommand;","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-04"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-04"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2022-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":" * Parses input arguments and creates a new AddEventCommand object.","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2022-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_DESCRIPTION, PREFIX_DATE,","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"                        PREFIX_TIME, PREFIX_DURATION, PREFIX_RECUR_FREQUENCY);","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        boolean hasEventDescription \u003d arePrefixesPresent(argMultimap, PREFIX_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"        boolean hasEventDate \u003d arePrefixesPresent(argMultimap, PREFIX_DATE);","lastModifiedDate":"2022-03-07"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        boolean hasEventDuration \u003d arePrefixesPresent(argMultimap, PREFIX_DURATION);","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        boolean hasEventTime \u003d arePrefixesPresent(argMultimap, PREFIX_TIME);","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        if (!(hasEventDescription \u0026\u0026 hasEventDate)) {","lastModifiedDate":"2022-03-07"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        } else if (hasEventDuration \u0026\u0026 !hasEventTime) {","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MISSING_TIME_MESSAGE));","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EventDescription eventDescription \u003d ParserUtil.parseEventDescription(argMultimap.getValue(","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                PREFIX_EVENT_DESCRIPTION).get());","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).orElse(DEFAULT_TIME));","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"        Duration duration \u003d ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).orElse(DEFAULT_DURATION));","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        if (!hasEventTime) {","lastModifiedDate":"2022-03-07"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"            duration \u003d ParserUtil.parseDuration(FULL_DAY_EVENT_DURATION);","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"        RecurFrequency recurFrequency \u003d ParserUtil.parseRecurFrequency(argMultimap.getValue(","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"                PREFIX_RECUR_FREQUENCY).orElse(DEFAULT_RECURRENCE));","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"        Event event \u003d new Event(eventDescription, date, time, duration, recurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new AddEventCommand(index, event);","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"tyanhan":28,"-":54,"hanqinilnix":9}},{"path":"src/main/java/seedu/address/logic/parser/schedule/ClearScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.ClearScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":" * Parses input arguments and creates a new ClearScheduleCommand object","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"public class ClearScheduleCommandParser implements Parser\u003cClearScheduleCommand\u003e {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearScheduleCommand","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"     * and returns a ClearScheduleCommand object for execution.","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public ClearScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"            return new ClearScheduleCommand(index);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":31}},{"path":"src/main/java/seedu/address/logic/parser/schedule/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import java.util.List;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.DeleteEventCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-04"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-04"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":" * Parses input arguments and creates a new DeleteEventCommand object.","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        List\u003cIndex\u003e indices;","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"            indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"                    DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"        if (indices.size() !\u003d 2) {","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        return new DeleteEventCommand(indices.get(0), indices.get(1));","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"vishandi":40,"hanqinilnix":6}},{"path":"src/main/java/seedu/address/logic/parser/schedule/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-04"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-27"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-02-27"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-07"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-02-27"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.model.schedule.RecurFrequency.DEFAULT_RECURRENCE;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-02-28"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.EditEventCommand;","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-04"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-04"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-04"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-04"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-02-27"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":" * Parses input arguments and creates a new EditEventCommand object.","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-02-27"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2022-02-27"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2022-02-27"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-02-27"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_DESCRIPTION, PREFIX_DATE, PREFIX_TIME,","lastModifiedDate":"2022-03-07"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"                        PREFIX_DURATION, PREFIX_RECUR_FREQUENCY);","lastModifiedDate":"2022-03-07"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cIndex\u003e indices;","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"            indices \u003d ParserUtil.parseIndices(argMultimap.getPreamble());","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-02-27"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        if (indices.size() !\u003d 2) {","lastModifiedDate":"2022-02-27"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2022-02-27"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"            editEventDescriptor.setEventDescription(","lastModifiedDate":"2022-02-27"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"                    ParserUtil.parseEventDescription(argMultimap.getValue(PREFIX_EVENT_DESCRIPTION).get()));","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"            editEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2022-02-27"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"        if (argMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"            editEventDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2022-02-27"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"        if (argMultimap.getValue(PREFIX_DURATION).isPresent()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"            editEventDescriptor.setDuration(ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get()));","lastModifiedDate":"2022-02-27"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        if (argMultimap.getValue(PREFIX_RECUR_FREQUENCY).isPresent()) {","lastModifiedDate":"2022-03-07"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"            editEventDescriptor.setRecurFrequency(ParserUtil.parseRecurFrequency(","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"                    argMultimap.getValue(PREFIX_RECUR_FREQUENCY).orElse(DEFAULT_RECURRENCE)));","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-02-27"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-02-27"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        return new EditEventCommand(indices.get(0), indices.get(1), editEventDescriptor);","lastModifiedDate":"2022-02-27"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-02-27"}],"authorContributionMap":{"tyanhan":10,"hanqinilnix":67}},{"path":"src/main/java/seedu/address/logic/parser/schedule/ExportScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-22"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-22"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-22"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-22"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.ExportScheduleCommand;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-22"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-22"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-22"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-22"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":" * Parses input argument and creates a new ExportScheduleCommand object.","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-22"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"public class ExportScheduleCommandParser implements Parser\u003cExportScheduleCommand\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-22"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2022-03-22"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"     * and returns an ExportCommand object for execution.","lastModifiedDate":"2022-03-22"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-22"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    public ExportScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-03-22"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex;","lastModifiedDate":"2022-03-22"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-22"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"            targetIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"            return new ExportScheduleCommand(targetIndex);","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-22"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"                    ExportScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-22"}],"authorContributionMap":{"hanqinilnix":40}},{"path":"src/main/java/seedu/address/logic/parser/schedule/FindCommonTimingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"markbiju"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-31"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-31"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":8,"author":{"gitId":"markbiju"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-31"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.commands.schedule.FindCommonTimingCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"markbiju"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.person.IsTagInPersonPredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":" * Parses input arguments and creates a new FindCommonTimingCommand object.","lastModifiedDate":"2022-03-31"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"public class FindCommonTimingCommandParser implements Parser\u003cFindCommonTimingCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"markbiju"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommonTimingCommand","lastModifiedDate":"2022-03-31"},{"lineNumber":26,"author":{"gitId":"markbiju"},"content":"     * and returns a FindCommonTimingCommand object for execution.","lastModifiedDate":"2022-03-31"},{"lineNumber":27,"author":{"gitId":"markbiju"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"markbiju"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"markbiju"},"content":"    public FindCommonTimingCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"markbiju"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TAG, PREFIX_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"markbiju"},"content":"        boolean hasTagPrefix \u003d argMultimap.getValue(PREFIX_TAG).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"markbiju"},"content":"        boolean hasDatePrefix \u003d argMultimap.getValue(PREFIX_DATE).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"markbiju"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-31"},{"lineNumber":37,"author":{"gitId":"markbiju"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"markbiju"},"content":"                    FindCommonTimingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"markbiju"},"content":"        if (hasTagPrefix \u0026\u0026 hasDatePrefix) {","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"markbiju"},"content":"            Tag tag \u003d ParserUtil.parseTag((argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"markbiju"},"content":"            LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"markbiju"},"content":"            return new FindCommonTimingCommand(new IsTagInPersonPredicate(tag), date);","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"markbiju"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"markbiju"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"markbiju"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommonTimingCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"markbiju"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"markbiju"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"markbiju":51}},{"path":"src/main/java/seedu/address/logic/parser/schedule/ImportScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-23"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-23"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-23"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILEPATH;","lastModifiedDate":"2022-03-23"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-03-23"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-23"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.ImportScheduleCommand;","lastModifiedDate":"2022-03-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-23"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-23"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-23"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-23"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-23"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-23"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":" * Parses input arguments and creates a new ImportScheduleCommand object.","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-23"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"public class ImportScheduleCommandParser implements Parser\u003cImportScheduleCommand\u003e {","lastModifiedDate":"2022-03-27"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"     * Parses the given {@code String} of arguments in the context of the ImportScheduleCommand","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"     * and returns an ImportScheduleCommand object for execution.","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-03-23"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    public ImportScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-03-27"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-03-23"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_FILEPATH);","lastModifiedDate":"2022-03-27"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"        if (!argMultimap.getValue(PREFIX_FILEPATH).isPresent() || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-27"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-27"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"        Index index;","lastModifiedDate":"2022-03-23"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-23"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-03-23"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-03-23"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-27"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-03-27"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"        Path filePath \u003d ParserUtil.parseFilePath(argMultimap.getValue(PREFIX_FILEPATH).get());","lastModifiedDate":"2022-03-23"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        return new ImportScheduleCommand(index, filePath);","lastModifiedDate":"2022-03-27"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-23"}],"authorContributionMap":{"tyanhan":48}},{"path":"src/main/java/seedu/address/logic/parser/schedule/WhoIsFreeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-30"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-30"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-30"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.WhoIsFreeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2022-03-30"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.IsPersonFreePredicate;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":" * Parses input arguments and creates a new WhoIsFreeCommand object.","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"public class WhoIsFreeCommandParser implements Parser\u003cWhoIsFreeCommand\u003e {","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"    public WhoIsFreeCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TIME, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"        boolean hasTimePrefix \u003d argMultimap.getValue(PREFIX_TIME).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"        boolean hasDatePrefix \u003d argMultimap.getValue(PREFIX_DATE).isPresent();","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, WhoIsFreeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        if (hasTimePrefix \u0026\u0026 hasDatePrefix) {","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"            LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"            LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"            return new WhoIsFreeCommand(new IsPersonFreePredicate(time, date, tagList));","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        } else if (hasTimePrefix) {","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"            LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"            return new WhoIsFreeCommand(new IsPersonFreePredicate(time, LocalDate.now(), tagList));","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        } else {","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"            throw new ParseException(","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, WhoIsFreeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-30"}],"authorContributionMap":{"hanqinilnix":55}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"     * Inserts a person to the address book at the specified index.","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    public void insertPerson(Person p, Integer index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"        persons.insert(p, index);","lastModifiedDate":"2022-03-27"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tyanhan":8,"-":120}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    /** {@code Predicate} that always evaluate to false */","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_NO_PERSONS \u003d unused -\u003e false;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"     * Inserts a person at the specified {@code index}.","lastModifiedDate":"2022-03-27"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-03-27"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"    void insertPerson(Person person, Integer index);","lastModifiedDate":"2022-03-27"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"     * Replaces the {@code Schedule} of the given person {@code target} with {@code updatedSchedule}.","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"     * {@code updatedSchedule} must not be null.","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"    void setSchedule(Person target, Schedule updatedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"    /** Returns an unmodifiable view of a particular person */","lastModifiedDate":"2022-03-15"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"    ObservableList\u003cPerson\u003e getViewSchedulePerson();","lastModifiedDate":"2022-03-25"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"    /** Returns true if the {@code person} is currently viewed */","lastModifiedDate":"2022-04-04"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"    boolean isPersonViewed(Person person);","lastModifiedDate":"2022-04-04"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"     * Updates the filter of the viewed person list.","lastModifiedDate":"2022-03-25"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"     * @param predicate","lastModifiedDate":"2022-03-15"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"    void updateViewSchedulePerson(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tyanhan":14,"vishandi":15,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    private final FilteredList\u003cPerson\u003e viewedPerson;","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        viewedPerson \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList(), PREDICATE_SHOW_NO_PERSONS);","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-27"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"    public void insertPerson(Person person, Integer index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        addressBook.insertPerson(person, index);","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"tyanhan"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"    public void setSchedule(Person target, Schedule updatedSchedule) {","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"tyanhan"},"content":"        requireAllNonNull(target, updatedSchedule);","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"tyanhan"},"content":"        Person updatedPerson \u003d new Person(target.getName(), target.getPhone(), target.getTelegram(), target.getGithub(),","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"tyanhan"},"content":"                target.getEmail(), target.getAddress(), updatedSchedule, target.getTags());","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"tyanhan"},"content":"        addressBook.setPerson(target, updatedPerson);","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Viewed Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-03-25"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"     * Returns an unmodifiable view of the list of currently viewed person.","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"    public ObservableList\u003cPerson\u003e getViewSchedulePerson() {","lastModifiedDate":"2022-03-25"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"        return viewedPerson;","lastModifiedDate":"2022-03-24"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":161,"author":{"gitId":"vishandi"},"content":"    public void updateViewSchedulePerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"        viewedPerson.setPredicate(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"    public boolean isPersonViewed(Person person) {","lastModifiedDate":"2022-04-04"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"        if (viewedPerson.isEmpty()) {","lastModifiedDate":"2022-04-04"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"            return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-04-04"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"            return person.equals(viewedPerson.get(0));","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":174,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tyanhan":17,"vishandi":27,"-":150}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":" * Represents a Person\u0027s address in UniGenda.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    //Default Address if address is not specified on add.","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final Address EMPTY_ADDRESS \u003d new Address(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses should not exceed 80 characters and only takes\"","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"            + \" alphanumeric characters and the following punctuations: !\\\"#$\u0026\u0027()*+,-.:;\u003c\u003d\u003e?@\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"            \"[a-zA-Z0-9!\\\"#$\u0026\u0027()*+,-.:;\u003c\u003d\u003e?@][a-zA-Z0-9!\\\"#$\u0026\u0027()*+,-.:;\u003c\u003d\u003e?@ ]{0,79}\";","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"        return test.equals(\"\") || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"     * Returns true if this Address is the default address.","lastModifiedDate":"2022-03-09"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-09"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"        return this.equals(EMPTY_ADDRESS);","lastModifiedDate":"2022-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vishandi":15,"-":53}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":" * Represents a Person\u0027s email in UniGenda.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    //Default Email if no email is specified","lastModifiedDate":"2022-02-27"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final Email EMPTY_EMAIL \u003d new Email(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"            + \"characters and may not contain consecutive special characters.\\n\"","lastModifiedDate":"2022-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\\n\"","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"            + \"3. The total length of the email must not exceed 60 characters.\";","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"        return (test.equals(\"\") || test.matches(VALIDATION_REGEX)) \u0026\u0026 test.length() \u003c\u003d 60;","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"     * Returns true if the given email is the default empty email.","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        return this.equals(EMPTY_EMAIL);","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vishandi":15,"-":66}},{"path":"src/main/java/seedu/address/model/person/GitHub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":" * Represents a Person\u0027s GitHub username in UniGenda.","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"public class GitHub {","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"GitHub username should \"","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"            + \"adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"            + \"1. The username should only contain alphanumeric characters and hyphen (-).\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"            + \"2. The username cannot have multiple consecutive hyphens or begin or end with a hyphen.\\n\"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"            + \"4. The username must not exceed 39 characters.\";","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9](?:[a-zA-Z0-9]|-(?\u003d[a-zA-Z0-9])){0,38}$\";","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    public static final GitHub EMPTY_GITHUB \u003d new GitHub(\"\");","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    public final String value;","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"     * Constructs an {@code GitHub}","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"     *","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"     * @param username A Valid GitHub username.","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    public GitHub(String username) {","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        checkArgument(isValidGitHub(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        value \u003d username;","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"     * Returns true if a given string is a valid GitHub username.","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    public static boolean isValidGitHub(String test) {","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        return test.equals(\"\") || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"    /***","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"     * Returns true if the given GitHub object is the default empty GitHub.","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        return this.equals(EMPTY_GITHUB);","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"        return value;","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-14"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-03-14"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"                || (other instanceof GitHub","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 value.equals(((GitHub) other).value));","lastModifiedDate":"2022-03-14"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"vishandi":57}},{"path":"src/main/java/seedu/address/model/person/IsTagInPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"markbiju"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"markbiju"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"markbiju"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"markbiju"},"content":" * Tests whether a {@code Person} has specified {@code Tag}","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"markbiju"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"markbiju"},"content":"public class IsTagInPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"markbiju"},"content":"    private final Tag tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"markbiju"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"markbiju"},"content":"     * Constructor method of IsTagInPersonPredicate","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"markbiju"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"markbiju"},"content":"    public IsTagInPersonPredicate(Tag tag) {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"markbiju"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"    @Override","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"markbiju"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"markbiju"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"markbiju"},"content":"        return tagSet.contains(this.tag);","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"markbiju"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"                || (other instanceof IsTagInPersonPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 tag.equals(((IsTagInPersonPredicate) other).tag)); // state check","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"markbiju"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":1,"vishandi":7,"markbiju":24}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"            + \"it should not be blank, and it should not exceed 30 characters\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]{0,29}\";","lastModifiedDate":"2022-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public final String value;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"        value \u003d name;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"        return value;","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 value.toLowerCase().equals(((Name) other).value.toLowerCase())); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":5,"vishandi":3,"-":51}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().value, keyword));","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tyanhan":1,"-":30}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"    private final Telegram telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"    private final GitHub github;","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    private final Email email;","lastModifiedDate":"2022-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Schedule schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    public Person(Name name, Phone phone, Telegram telegram, GitHub github, Email email,","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"                  Address address, Schedule schedule, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        this.github \u003d github;","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"        return telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"    public GitHub getGithub() {","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"        return github;","lastModifiedDate":"2022-03-14"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"     * Returns a schedule containing upcoming events that are happening in the next {@code daysForward} days.","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"    public Schedule getUpcomingSchedule(int daysForward) {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        return schedule.getUpcomingSchedule(daysForward);","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2022-02-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram())","lastModifiedDate":"2022-03-08"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 otherPerson.getGithub().equals(getGithub())","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 otherPerson.getSchedule().equals(getSchedule())","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"                .append(getPhone());","lastModifiedDate":"2022-03-03"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":141,"author":{"gitId":"vishandi"},"content":"        if (!getTelegram().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":142,"author":{"gitId":"vishandi"},"content":"            builder.append(\"; Telegram: \")","lastModifiedDate":"2022-03-08"},{"lineNumber":143,"author":{"gitId":"vishandi"},"content":"                    .append(getTelegram());","lastModifiedDate":"2022-03-08"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":145,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"        if (!getGithub().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"            builder.append(\"; GitHub: \")","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"                    .append(getGithub());","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"        if (!getEmail().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"            builder.append(\"; Email: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"                    .append(getEmail());","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"        if (!getAddress().isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"            builder.append(\"; Address: \")","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"                    .append(getAddress());","lastModifiedDate":"2022-03-03"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":2,"vishandi":47,"-":120}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long \"","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"                    + \"and at most 15 digits long\";","lastModifiedDate":"2022-03-30"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vishandi":3,"-":50}},{"path":"src/main/java/seedu/address/model/person/SamePersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"public class SamePersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"    private final Person person;","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    public SamePersonPredicate(Person person) {","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"        return person.isSamePerson(this.person);","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"                || (other instanceof SamePersonPredicate // instanceof handles nulls","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 person.isSamePerson(((SamePersonPredicate) other).person)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"vishandi":27}},{"path":"src/main/java/seedu/address/model/person/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and at most 30 characters\";","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}{1,30}\";","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        this.tagName \u003d tagName.toLowerCase();","lastModifiedDate":"2022-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"                \u0026\u0026 tagName.equalsIgnoreCase(((Tag) other).tagName)); // state check","lastModifiedDate":"2022-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":1,"vishandi":4,"-":49}},{"path":"src/main/java/seedu/address/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":" * Represents a Person\u0027s Telegram handle in UniGenda.","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":" * Guarantees: immutable;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"public class Telegram {","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Telegram username should \"","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"            + \"adhere to the following constraints:\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"            + \"1. The username should only contain alphanumeric characters and underscore (_).\\n\"","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"            + \"2. The username should not start or end with underscore, and it cannot contain \"","lastModifiedDate":"2022-04-04"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"            + \"any consecutive underscores.\\n\"","lastModifiedDate":"2022-04-04"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"            + \"3. The username must contain at least 5 characters and at most 40 characters.\";","lastModifiedDate":"2022-04-04"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9](?:[a-zA-Z0-9]|_(?\u003d[a-zA-Z0-9])){4,39}$\";","lastModifiedDate":"2022-04-04"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    public static final Telegram EMPTY_TELEGRAM \u003d new Telegram(\"\");","lastModifiedDate":"2022-03-09"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    public final String value;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"     * Constructs on {@code Telegram}.","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"     *","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"     * @param username A valid Telegram username.","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    public Telegram(String username) {","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        requireNonNull(username);","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        checkArgument(isValidTelegram(username), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-09"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"        value \u003d username;","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"     * Returns true if a given string is a valid Telegram username.","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2022-03-09"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        return test.equals(\"\") || test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"     * Returns true if the Telegram object is the default Telegram.","lastModifiedDate":"2022-03-08"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        return this.equals(EMPTY_TELEGRAM);","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    public String toString() {","lastModifiedDate":"2022-03-08"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"        return value;","lastModifiedDate":"2022-03-08"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-08"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-08"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"            return true;","lastModifiedDate":"2022-03-08"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"        if (other instanceof Telegram) {","lastModifiedDate":"2022-03-08"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"            Telegram otherTelegram \u003d (Telegram) other;","lastModifiedDate":"2022-03-08"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"            if (this.value \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"                return otherTelegram.value \u003d\u003d null;","lastModifiedDate":"2022-03-08"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"            } else {","lastModifiedDate":"2022-03-08"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"                return this.value.equals(otherTelegram.value);","lastModifiedDate":"2022-03-08"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-03-08"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        return false;","lastModifiedDate":"2022-03-08"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"vishandi":67}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-27"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"     * Inserts a person to the list at the specified index.","lastModifiedDate":"2022-03-27"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-03-27"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-27"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"    public void insert(Person toInsert, Integer index) {","lastModifiedDate":"2022-03-27"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        requireAllNonNull(toInsert, index);","lastModifiedDate":"2022-03-27"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        if (contains(toInsert)) {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"        internalList.add(index, toInsert);","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tyanhan":12,"-":137}},{"path":"src/main/java/seedu/address/model/schedule/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a scheduled Event.","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"markbiju"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public static final String DEFAULT_TIME \u003d \"00:00\";","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"    public static final String DEFAULT_DURATION \u003d \"2H\";","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    public static final String FULL_DAY_EVENT_DURATION \u003d \"24H\";","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"    public static final String DATE_MESSAGE_CONSTRAINTS \u003d \"Event date should be in YYYY-MM-DD format\";","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"    public static final String DURATION_MESSAGE_CONSTRAINTS \u003d \"Event duration should be in HhMm, Hh, Mm or H format\\n\"","lastModifiedDate":"2022-03-29"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"            + \"eg. 3h30m, 2h, 30m, 3\";","lastModifiedDate":"2022-03-29"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    public static final String TIME_MESSAGE_CONSTRAINTS \u003d \"Event time should be in HH:MM format\";","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    public static final String MISSING_TIME_MESSAGE \u003d \"The event start time must be specified \"","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"            + \"if the duration is specified!\";","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    public static final String MISSING_RECUR_FREQUENCY_CASE \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"            \"%s switch case is missing in Event::getNextRecurrenceDate! Returning initial date...\";","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DURATION_RECUR_FREQ_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"            \"Duration should not be longer than frequency of event!\";","lastModifiedDate":"2022-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Event.class);","lastModifiedDate":"2022-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final EventDescription eventDescription;","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Duration duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    private final RecurFrequency recurFrequency;","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"     * Every field must be present, and only recurFrequency can be null.","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"    public Event(EventDescription eventDescription, LocalDate date, LocalTime time, Duration duration,","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"                 RecurFrequency recurFrequency) {","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"        requireAllNonNull(eventDescription, date, time, duration, recurFrequency);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.eventDescription \u003d eventDescription;","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        this.recurFrequency \u003d recurFrequency;","lastModifiedDate":"2022-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return date;","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return time;","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2022-03-07"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        return date.atTime(time).plus(duration).toLocalDate();","lastModifiedDate":"2022-03-07"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2022-03-07"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"        return time.plus(duration);","lastModifiedDate":"2022-03-07"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Duration getDuration() {","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EventDescription getEventDescription() {","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return eventDescription;","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"    public RecurFrequency getRecurFrequency() {","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"        return recurFrequency;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"     * Returns the date that is closest to the given date that is either","lastModifiedDate":"2022-04-07"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"     * a. still ongoing, or","lastModifiedDate":"2022-04-07"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"     * b. going to happen.","lastModifiedDate":"2022-04-07"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"     * @param relativeDate is the relative date that we are comparing to","lastModifiedDate":"2022-04-07"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"     * @return the closest start date of event that is still ongoing or has already occurred","lastModifiedDate":"2022-04-07"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"    public LocalDate getClosestStartDate(LocalDate relativeDate) {","lastModifiedDate":"2022-04-07"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"        long dateDiff \u003d ChronoUnit.DAYS.between(this.date, relativeDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"        // event has not started compared to date given.","lastModifiedDate":"2022-04-07"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"        if (dateDiff \u003c\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"            return date;","lastModifiedDate":"2022-04-07"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":97,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"        // event that has past","lastModifiedDate":"2022-04-07"},{"lineNumber":99,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate startDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":100,"author":{"gitId":"hanqinilnix"},"content":"        LocalDateTime endDateTime;","lastModifiedDate":"2022-04-07"},{"lineNumber":101,"author":{"gitId":"hanqinilnix"},"content":"        switch (recurFrequency) {","lastModifiedDate":"2022-04-07"},{"lineNumber":102,"author":{"gitId":"hanqinilnix"},"content":"        case NONE:","lastModifiedDate":"2022-04-07"},{"lineNumber":103,"author":{"gitId":"hanqinilnix"},"content":"            startDate \u003d date;","lastModifiedDate":"2022-04-07"},{"lineNumber":104,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":105,"author":{"gitId":"hanqinilnix"},"content":"        case DAILY:","lastModifiedDate":"2022-04-07"},{"lineNumber":106,"author":{"gitId":"hanqinilnix"},"content":"            startDate \u003d relativeDate.minusDays(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":107,"author":{"gitId":"hanqinilnix"},"content":"            endDateTime \u003d LocalDateTime.of(startDate, time).plus(duration);","lastModifiedDate":"2022-04-07"},{"lineNumber":108,"author":{"gitId":"hanqinilnix"},"content":"            if (!endDateTime.isAfter(LocalDateTime.of(relativeDate, LocalTime.MIDNIGHT))) {","lastModifiedDate":"2022-04-07"},{"lineNumber":109,"author":{"gitId":"hanqinilnix"},"content":"                startDate \u003d startDate.plusDays(1);","lastModifiedDate":"2022-04-07"},{"lineNumber":110,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":111,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":112,"author":{"gitId":"hanqinilnix"},"content":"        case WEEKLY:","lastModifiedDate":"2022-04-07"},{"lineNumber":113,"author":{"gitId":"hanqinilnix"},"content":"            if (dateDiff % 7 \u003d\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"                startDate \u003d relativeDate.minusDays(7);","lastModifiedDate":"2022-04-07"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"                break;","lastModifiedDate":"2022-04-07"},{"lineNumber":116,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":117,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"hanqinilnix"},"content":"            startDate \u003d date.plusDays(dateDiff - dateDiff % 7);","lastModifiedDate":"2022-04-07"},{"lineNumber":119,"author":{"gitId":"hanqinilnix"},"content":"            endDateTime \u003d LocalDateTime.of(startDate, time).plus(duration);","lastModifiedDate":"2022-04-07"},{"lineNumber":120,"author":{"gitId":"hanqinilnix"},"content":"            if (!endDateTime.isAfter(LocalDateTime.of(relativeDate, LocalTime.MIDNIGHT))) {","lastModifiedDate":"2022-04-07"},{"lineNumber":121,"author":{"gitId":"hanqinilnix"},"content":"                startDate \u003d startDate.plusDays(7);","lastModifiedDate":"2022-04-07"},{"lineNumber":122,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":123,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":124,"author":{"gitId":"hanqinilnix"},"content":"        case BIWEEKLY:","lastModifiedDate":"2022-04-07"},{"lineNumber":125,"author":{"gitId":"hanqinilnix"},"content":"            if (dateDiff % 14 \u003d\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":126,"author":{"gitId":"hanqinilnix"},"content":"                startDate \u003d relativeDate.minusDays(14);","lastModifiedDate":"2022-04-07"},{"lineNumber":127,"author":{"gitId":"hanqinilnix"},"content":"                break;","lastModifiedDate":"2022-04-07"},{"lineNumber":128,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":129,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":130,"author":{"gitId":"hanqinilnix"},"content":"            startDate \u003d date.plusDays(dateDiff - dateDiff % 14);","lastModifiedDate":"2022-04-07"},{"lineNumber":131,"author":{"gitId":"hanqinilnix"},"content":"            endDateTime \u003d LocalDateTime.of(startDate, time).plus(duration);","lastModifiedDate":"2022-04-07"},{"lineNumber":132,"author":{"gitId":"hanqinilnix"},"content":"            if (!endDateTime.isAfter(LocalDateTime.of(relativeDate, LocalTime.MIDNIGHT))) {","lastModifiedDate":"2022-04-07"},{"lineNumber":133,"author":{"gitId":"hanqinilnix"},"content":"                startDate \u003d startDate.plusDays(14);","lastModifiedDate":"2022-04-07"},{"lineNumber":134,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-04-07"},{"lineNumber":135,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":136,"author":{"gitId":"hanqinilnix"},"content":"        default:","lastModifiedDate":"2022-04-07"},{"lineNumber":137,"author":{"gitId":"hanqinilnix"},"content":"            // case NONE and INVALID falls through to reach here","lastModifiedDate":"2022-04-07"},{"lineNumber":138,"author":{"gitId":"hanqinilnix"},"content":"            startDate \u003d date;","lastModifiedDate":"2022-04-07"},{"lineNumber":139,"author":{"gitId":"hanqinilnix"},"content":"            logger.warning(String.format(MISSING_RECUR_FREQUENCY_CASE, recurFrequency));","lastModifiedDate":"2022-04-07"},{"lineNumber":140,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":141,"author":{"gitId":"hanqinilnix"},"content":"        return startDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":142,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":143,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":144,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-04-07"},{"lineNumber":145,"author":{"gitId":"hanqinilnix"},"content":"     * Returns the end date of the event closest to the given date.","lastModifiedDate":"2022-04-07"},{"lineNumber":146,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-04-07"},{"lineNumber":147,"author":{"gitId":"hanqinilnix"},"content":"     * @param relativeDate is the relative date that we are comparing to","lastModifiedDate":"2022-04-07"},{"lineNumber":148,"author":{"gitId":"hanqinilnix"},"content":"     * @return the closest end date of event that is either still ongoing or has already occurred","lastModifiedDate":"2022-04-07"},{"lineNumber":149,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-04-07"},{"lineNumber":150,"author":{"gitId":"hanqinilnix"},"content":"    public LocalDate getClosestEndDate(LocalDate relativeDate) {","lastModifiedDate":"2022-04-07"},{"lineNumber":151,"author":{"gitId":"hanqinilnix"},"content":"        long dateDiff \u003d ChronoUnit.DAYS.between(date, relativeDate);","lastModifiedDate":"2022-04-07"},{"lineNumber":152,"author":{"gitId":"hanqinilnix"},"content":"        // event has not started compared to date given.","lastModifiedDate":"2022-04-07"},{"lineNumber":153,"author":{"gitId":"hanqinilnix"},"content":"        if (dateDiff \u003c 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":154,"author":{"gitId":"hanqinilnix"},"content":"            return date;","lastModifiedDate":"2022-04-07"},{"lineNumber":155,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":156,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":157,"author":{"gitId":"hanqinilnix"},"content":"        // event that has past","lastModifiedDate":"2022-04-07"},{"lineNumber":158,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate endDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":159,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate closestDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":160,"author":{"gitId":"hanqinilnix"},"content":"        switch (recurFrequency) {","lastModifiedDate":"2022-04-07"},{"lineNumber":161,"author":{"gitId":"hanqinilnix"},"content":"        case DAILY:","lastModifiedDate":"2022-04-07"},{"lineNumber":162,"author":{"gitId":"hanqinilnix"},"content":"            endDate \u003d LocalDateTime.of(relativeDate, time).plus(duration).toLocalDate();","lastModifiedDate":"2022-04-07"},{"lineNumber":163,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":164,"author":{"gitId":"hanqinilnix"},"content":"        case WEEKLY:","lastModifiedDate":"2022-04-07"},{"lineNumber":165,"author":{"gitId":"hanqinilnix"},"content":"            closestDate \u003d date.plusDays(dateDiff - dateDiff % 7);","lastModifiedDate":"2022-04-07"},{"lineNumber":166,"author":{"gitId":"hanqinilnix"},"content":"            endDate \u003d LocalDateTime.of(closestDate, time).plus(duration).toLocalDate();","lastModifiedDate":"2022-04-07"},{"lineNumber":167,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":168,"author":{"gitId":"hanqinilnix"},"content":"        case BIWEEKLY:","lastModifiedDate":"2022-04-07"},{"lineNumber":169,"author":{"gitId":"hanqinilnix"},"content":"            closestDate \u003d date.plusDays(dateDiff - dateDiff % 14);","lastModifiedDate":"2022-04-07"},{"lineNumber":170,"author":{"gitId":"hanqinilnix"},"content":"            endDate \u003d LocalDateTime.of(closestDate, time).plus(duration).toLocalDate();","lastModifiedDate":"2022-04-07"},{"lineNumber":171,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-04-07"},{"lineNumber":172,"author":{"gitId":"hanqinilnix"},"content":"        default:","lastModifiedDate":"2022-04-07"},{"lineNumber":173,"author":{"gitId":"hanqinilnix"},"content":"            // case NONE and INVALID falls through to reach here","lastModifiedDate":"2022-04-07"},{"lineNumber":174,"author":{"gitId":"hanqinilnix"},"content":"            endDate \u003d getEndDate();","lastModifiedDate":"2022-04-07"},{"lineNumber":175,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-04-07"},{"lineNumber":176,"author":{"gitId":"hanqinilnix"},"content":"        return endDate;","lastModifiedDate":"2022-04-07"},{"lineNumber":177,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-04-07"},{"lineNumber":178,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":179,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-30"},{"lineNumber":180,"author":{"gitId":"hanqinilnix"},"content":"     * Returns true if {@code Duration} in {@code Event} is less than its {@code RecurFrequency}.","lastModifiedDate":"2022-04-04"},{"lineNumber":181,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-04-04"},{"lineNumber":182,"author":{"gitId":"hanqinilnix"},"content":"     * @return true if duration in event is less than its recur frequency","lastModifiedDate":"2022-03-30"},{"lineNumber":183,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-30"},{"lineNumber":184,"author":{"gitId":"hanqinilnix"},"content":"    public boolean isValidDurationWithRecurFrequency() {","lastModifiedDate":"2022-03-29"},{"lineNumber":185,"author":{"gitId":"hanqinilnix"},"content":"        switch (recurFrequency) {","lastModifiedDate":"2022-03-29"},{"lineNumber":186,"author":{"gitId":"hanqinilnix"},"content":"        case DAILY:","lastModifiedDate":"2022-03-29"},{"lineNumber":187,"author":{"gitId":"hanqinilnix"},"content":"            if (duration.compareTo(Duration.ofDays(1)) \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":188,"author":{"gitId":"hanqinilnix"},"content":"                return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":189,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":190,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":191,"author":{"gitId":"hanqinilnix"},"content":"        case WEEKLY:","lastModifiedDate":"2022-03-29"},{"lineNumber":192,"author":{"gitId":"hanqinilnix"},"content":"            if (duration.compareTo(Duration.ofDays(7)) \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":193,"author":{"gitId":"hanqinilnix"},"content":"                return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":194,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":195,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":196,"author":{"gitId":"hanqinilnix"},"content":"        case BIWEEKLY:","lastModifiedDate":"2022-03-29"},{"lineNumber":197,"author":{"gitId":"hanqinilnix"},"content":"            if (duration.compareTo(Duration.ofDays(14)) \u003e 0) {","lastModifiedDate":"2022-03-29"},{"lineNumber":198,"author":{"gitId":"hanqinilnix"},"content":"                return false;","lastModifiedDate":"2022-03-29"},{"lineNumber":199,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-03-29"},{"lineNumber":200,"author":{"gitId":"hanqinilnix"},"content":"            break;","lastModifiedDate":"2022-03-29"},{"lineNumber":201,"author":{"gitId":"hanqinilnix"},"content":"        default:","lastModifiedDate":"2022-03-30"},{"lineNumber":202,"author":{"gitId":"hanqinilnix"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":203,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"hanqinilnix"},"content":"        return true;","lastModifiedDate":"2022-03-29"},{"lineNumber":205,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":207,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":208,"author":{"gitId":"tyanhan"},"content":"     * Returns an {@code Event} with the same event description, time, duration and recur frequency,","lastModifiedDate":"2022-04-04"},{"lineNumber":209,"author":{"gitId":"hanqinilnix"},"content":"     * but with the next recurring date if the {@code Event} has passed its end date and time.","lastModifiedDate":"2022-04-07"},{"lineNumber":210,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":211,"author":{"gitId":"hanqinilnix"},"content":"    public Event getNextRecurringEvent(LocalDate relativeDate) {","lastModifiedDate":"2022-04-07"},{"lineNumber":212,"author":{"gitId":"hanqinilnix"},"content":"        return new Event(getEventDescription(), getClosestStartDate(relativeDate), getTime(), getDuration(),","lastModifiedDate":"2022-04-07"},{"lineNumber":213,"author":{"gitId":"hanqinilnix"},"content":"                getRecurFrequency());","lastModifiedDate":"2022-04-07"},{"lineNumber":214,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":215,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":216,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-23"},{"lineNumber":217,"author":{"gitId":"hanqinilnix"},"content":"     * Returns true if date clashes with event.","lastModifiedDate":"2022-04-04"},{"lineNumber":218,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-03-23"},{"lineNumber":219,"author":{"gitId":"hanqinilnix"},"content":"     * @param date used to check against {@code Event}\u0027s date","lastModifiedDate":"2022-03-23"},{"lineNumber":220,"author":{"gitId":"hanqinilnix"},"content":"     * @return true if date clashes with {@code Event}","lastModifiedDate":"2022-04-04"},{"lineNumber":221,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-23"},{"lineNumber":222,"author":{"gitId":"hanqinilnix"},"content":"    public boolean willDateCollide(LocalDate date) {","lastModifiedDate":"2022-03-23"},{"lineNumber":223,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate closestEndDate \u003d getClosestEndDate(date);","lastModifiedDate":"2022-04-07"},{"lineNumber":224,"author":{"gitId":"hanqinilnix"},"content":"        if (ChronoUnit.DAYS.between(date, closestEndDate) \u003e\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":225,"author":{"gitId":"hanqinilnix"},"content":"            return true;","lastModifiedDate":"2022-03-23"},{"lineNumber":226,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":227,"author":{"gitId":"hanqinilnix"},"content":"        return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":228,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":229,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":230,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-04-04"},{"lineNumber":231,"author":{"gitId":"hanqinilnix"},"content":"     * Returns true if date and time clashes with event.","lastModifiedDate":"2022-04-04"},{"lineNumber":232,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-04-04"},{"lineNumber":233,"author":{"gitId":"hanqinilnix"},"content":"     * @param date used with time to check against {@code Event}\u0027s date and time","lastModifiedDate":"2022-04-04"},{"lineNumber":234,"author":{"gitId":"hanqinilnix"},"content":"     * @param time used with date to check against {@code Event}\u0027s date and time","lastModifiedDate":"2022-04-04"},{"lineNumber":235,"author":{"gitId":"hanqinilnix"},"content":"     * @return true if date and time clashes with {@code Event}","lastModifiedDate":"2022-04-04"},{"lineNumber":236,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-04-04"},{"lineNumber":237,"author":{"gitId":"hanqinilnix"},"content":"    public boolean willDateTimeCollideEvent(LocalDate date, LocalTime time) {","lastModifiedDate":"2022-04-04"},{"lineNumber":238,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate closestEndDate \u003d getClosestEndDate(date);","lastModifiedDate":"2022-04-07"},{"lineNumber":239,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":240,"author":{"gitId":"hanqinilnix"},"content":"        if (ChronoUnit.DAYS.between(date, closestEndDate) \u003e\u003d 0) {","lastModifiedDate":"2022-04-07"},{"lineNumber":241,"author":{"gitId":"hanqinilnix"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime.of(this.date, this.time);","lastModifiedDate":"2022-04-04"},{"lineNumber":242,"author":{"gitId":"hanqinilnix"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime.of(closestEndDate, getEndTime());","lastModifiedDate":"2022-04-07"},{"lineNumber":243,"author":{"gitId":"hanqinilnix"},"content":"            LocalDateTime toCheckDateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2022-04-04"},{"lineNumber":244,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-04-07"},{"lineNumber":245,"author":{"gitId":"hanqinilnix"},"content":"            return (startDateTime.isEqual(toCheckDateTime)","lastModifiedDate":"2022-04-04"},{"lineNumber":246,"author":{"gitId":"hanqinilnix"},"content":"                    || startDateTime.isBefore(toCheckDateTime)","lastModifiedDate":"2022-04-04"},{"lineNumber":247,"author":{"gitId":"hanqinilnix"},"content":"                    \u0026\u0026 endDateTime.isAfter(toCheckDateTime));","lastModifiedDate":"2022-04-04"},{"lineNumber":248,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-23"},{"lineNumber":249,"author":{"gitId":"hanqinilnix"},"content":"        return false;","lastModifiedDate":"2022-04-04"},{"lineNumber":250,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-23"},{"lineNumber":251,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-23"},{"lineNumber":252,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-04-06"},{"lineNumber":253,"author":{"gitId":"vishandi"},"content":"     * Returns an Event that happen at {@code date}.","lastModifiedDate":"2022-04-06"},{"lineNumber":254,"author":{"gitId":"vishandi"},"content":"     *","lastModifiedDate":"2022-04-06"},{"lineNumber":255,"author":{"gitId":"vishandi"},"content":"     * @param date used to check.","lastModifiedDate":"2022-04-06"},{"lineNumber":256,"author":{"gitId":"vishandi"},"content":"     * @return an Event for that particular date.","lastModifiedDate":"2022-04-06"},{"lineNumber":257,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-04-06"},{"lineNumber":258,"author":{"gitId":"vishandi"},"content":"    public Event getEventAtDate(LocalDate date) {","lastModifiedDate":"2022-04-06"},{"lineNumber":259,"author":{"gitId":"hanqinilnix"},"content":"        Event nextEvent \u003d getNextRecurringEvent(date);","lastModifiedDate":"2022-04-07"},{"lineNumber":260,"author":{"gitId":"vishandi"},"content":"        if (nextEvent.willDateCollide(date)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":261,"author":{"gitId":"vishandi"},"content":"            if (nextEvent.getDate().isBefore(date) \u0026\u0026 nextEvent.getEndDate().isAfter(date)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":262,"author":{"gitId":"vishandi"},"content":"                return new Event(nextEvent.eventDescription, date, LocalTime.MIDNIGHT,","lastModifiedDate":"2022-04-06"},{"lineNumber":263,"author":{"gitId":"vishandi"},"content":"                        Duration.ofHours(24), recurFrequency);","lastModifiedDate":"2022-04-06"},{"lineNumber":264,"author":{"gitId":"vishandi"},"content":"            } else if (nextEvent.getDate().isBefore(date) \u0026\u0026 nextEvent.getEndDate().isEqual(date)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":265,"author":{"gitId":"vishandi"},"content":"                Duration duration \u003d Duration.between(LocalTime.MIDNIGHT, nextEvent.getEndTime());","lastModifiedDate":"2022-04-06"},{"lineNumber":266,"author":{"gitId":"vishandi"},"content":"                return new Event(nextEvent.eventDescription, date, LocalTime.MIDNIGHT, duration, recurFrequency);","lastModifiedDate":"2022-04-06"},{"lineNumber":267,"author":{"gitId":"vishandi"},"content":"            } else if (nextEvent.getDate().isEqual(date) \u0026\u0026 nextEvent.getEndDate().isAfter(date)) {","lastModifiedDate":"2022-04-06"},{"lineNumber":268,"author":{"gitId":"vishandi"},"content":"                Duration duration \u003d Duration.between(nextEvent.getTime(), LocalTime.MIDNIGHT).plusDays(1);","lastModifiedDate":"2022-04-06"},{"lineNumber":269,"author":{"gitId":"vishandi"},"content":"                return new Event(nextEvent.eventDescription, date, nextEvent.getTime(), duration, recurFrequency);","lastModifiedDate":"2022-04-06"},{"lineNumber":270,"author":{"gitId":"vishandi"},"content":"            } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":271,"author":{"gitId":"vishandi"},"content":"                return nextEvent;","lastModifiedDate":"2022-04-06"},{"lineNumber":272,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":273,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-04-06"},{"lineNumber":274,"author":{"gitId":"vishandi"},"content":"            return nextEvent;","lastModifiedDate":"2022-04-06"},{"lineNumber":275,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":276,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":277,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":278,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-15"},{"lineNumber":279,"author":{"gitId":"tyanhan"},"content":"     * Compares 2 {@code Event} based on date and time. Returns a positive integer if {@code event}","lastModifiedDate":"2022-03-15"},{"lineNumber":280,"author":{"gitId":"tyanhan"},"content":"     * occurs after the caller, a negative integer if {@code event} occurs before the caller, and 0","lastModifiedDate":"2022-03-15"},{"lineNumber":281,"author":{"gitId":"tyanhan"},"content":"     * if both {@code Event} have occurs on the same date and time.","lastModifiedDate":"2022-03-15"},{"lineNumber":282,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-15"},{"lineNumber":283,"author":{"gitId":"tyanhan"},"content":"    public int compareTo(Event event) {","lastModifiedDate":"2022-03-15"},{"lineNumber":284,"author":{"gitId":"tyanhan"},"content":"        LocalDate eventDate \u003d event.getDate();","lastModifiedDate":"2022-03-15"},{"lineNumber":285,"author":{"gitId":"tyanhan"},"content":"        if (date.isBefore(eventDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":286,"author":{"gitId":"tyanhan"},"content":"            return -1;","lastModifiedDate":"2022-03-15"},{"lineNumber":287,"author":{"gitId":"tyanhan"},"content":"        } else if (date.isAfter(eventDate)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":288,"author":{"gitId":"tyanhan"},"content":"            return 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":289,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":290,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":291,"author":{"gitId":"tyanhan"},"content":"        LocalTime eventTime \u003d event.getTime();","lastModifiedDate":"2022-03-15"},{"lineNumber":292,"author":{"gitId":"tyanhan"},"content":"        if (time.isBefore(eventTime)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":293,"author":{"gitId":"tyanhan"},"content":"            return -1;","lastModifiedDate":"2022-03-15"},{"lineNumber":294,"author":{"gitId":"tyanhan"},"content":"        } else if (time.isAfter(eventTime)) {","lastModifiedDate":"2022-03-15"},{"lineNumber":295,"author":{"gitId":"tyanhan"},"content":"            return 1;","lastModifiedDate":"2022-03-15"},{"lineNumber":296,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":297,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":298,"author":{"gitId":"tyanhan"},"content":"        Duration eventDuration \u003d event.getDuration();","lastModifiedDate":"2022-03-16"},{"lineNumber":299,"author":{"gitId":"tyanhan"},"content":"        return duration.compareTo(eventDuration);","lastModifiedDate":"2022-03-16"},{"lineNumber":300,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":301,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":302,"author":{"gitId":"vishandi"},"content":"    public String getDailyScheduleFormat() {","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"vishandi"},"content":"        String plusDays \u003d \"\";","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"vishandi"},"content":"        long numDays \u003d ChronoUnit.DAYS.between(getDate(), getEndDate());","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"vishandi"},"content":"        if (numDays \u003e 0) {","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"vishandi"},"content":"            plusDays \u003d String.format(\" (+%s)\", numDays);","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"vishandi"},"content":"        return String.format(\"%s-%s%s%s %s\", time, getEndTime(),","lastModifiedDate":"2022-03-29"},{"lineNumber":309,"author":{"gitId":"vishandi"},"content":"                plusDays, getRecurFrequency().getLabel(), eventDescription);","lastModifiedDate":"2022-03-30"},{"lineNumber":310,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"     * Returns true if both schedules have the same list of events.","lastModifiedDate":"2022-02-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2022-02-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        return otherEvent.getEventDescription().equals(getEventDescription())","lastModifiedDate":"2022-02-15"},{"lineNumber":327,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 (otherEvent.willDateCollide(getDate()) || willDateCollide(otherEvent.getDate()))","lastModifiedDate":"2022-03-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2022-02-15"},{"lineNumber":329,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 otherEvent.getDuration().equals(getDuration())","lastModifiedDate":"2022-03-07"},{"lineNumber":330,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 otherEvent.getRecurFrequency().equals(getRecurFrequency());","lastModifiedDate":"2022-03-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":335,"author":{"gitId":"tyanhan"},"content":"        String plusDays \u003d \"\";","lastModifiedDate":"2022-03-07"},{"lineNumber":336,"author":{"gitId":"tyanhan"},"content":"        long numDays \u003d ChronoUnit.DAYS.between(getDate(), getEndDate());","lastModifiedDate":"2022-03-07"},{"lineNumber":337,"author":{"gitId":"tyanhan"},"content":"        if (numDays \u003e 0) {","lastModifiedDate":"2022-03-07"},{"lineNumber":338,"author":{"gitId":"tyanhan"},"content":"            plusDays \u003d String.format(\" (+%s)\", numDays);","lastModifiedDate":"2022-03-07"},{"lineNumber":339,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":340,"author":{"gitId":"vishandi"},"content":"        return String.format(\"%s %s-%s%s%s %s\", date.format(","lastModifiedDate":"2022-03-30"},{"lineNumber":341,"author":{"gitId":"tyanhan"},"content":"                        DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\")), time, getEndTime(),","lastModifiedDate":"2022-03-16"},{"lineNumber":342,"author":{"gitId":"vishandi"},"content":"                plusDays, getRecurFrequency().getLabel(), eventDescription);","lastModifiedDate":"2022-03-30"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"tyanhan":74,"vishandi":37,"markbiju":1,"-":63,"hanqinilnix":170}},{"path":"src/main/java/seedu/address/model/schedule/EventDescription.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class EventDescription {","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"            \"Event descriptions cannot contain \\\"/\\\", cannot be blank, and contains at most 60 characters\";","lastModifiedDate":"2022-04-03"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!.*\\\\/).+$\";","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"    public final String value;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param eventDescription A valid eventDescription.","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EventDescription(String eventDescription) {","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(eventDescription);","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        checkArgument(isValidEventDescription(eventDescription), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"        this.value \u003d eventDescription;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid eventDescription.","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidEventDescription(String test) {","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        return test.trim().matches(VALIDATION_REGEX) \u0026\u0026 test.trim().length() \u003c\u003d 60;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"        return value;","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"                || (other instanceof EventDescription // instanceof handles nulls","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"                \u0026\u0026 value.toLowerCase().equals(((EventDescription) other).value.toLowerCase())); // state check","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"        return value.hashCode();","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"tyanhan":6,"vishandi":2,"-":38,"hanqinilnix":1}},{"path":"src/main/java/seedu/address/model/schedule/IsPersonFreePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-02-25"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-02-25"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-02-25"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-02-25"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-02-25"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-02-25"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-02-25"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-02-25"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":" * Tests that a {@code Person}\u0027s {@code Schedule} does not collide to given time and date.","lastModifiedDate":"2022-02-27"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-02-25"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"public class IsPersonFreePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-02-27"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"    private final LocalTime time;","lastModifiedDate":"2022-02-25"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"    private final LocalDate date;","lastModifiedDate":"2022-02-25"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-02-25"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"     * Constructor method of IsPersonFreePredicate","lastModifiedDate":"2022-02-27"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"     * @param time to check if there exist Events that collide with it","lastModifiedDate":"2022-02-25"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"     * @param date to check if there exist Events that collide with it","lastModifiedDate":"2022-02-25"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-02-25"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"    public IsPersonFreePredicate(LocalTime time, LocalDate date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-02-25"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-02-25"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-02-25"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"            boolean hasTag \u003d person.getTags().stream().anyMatch(tag -\u003e tags.contains(tag));","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"            if (!hasTag) {","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"                return false;","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"            }","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        Schedule schedule \u003d person.getSchedule();","lastModifiedDate":"2022-02-25"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cEvent\u003e events \u003d schedule.getEvents();","lastModifiedDate":"2022-02-25"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"        if (events.size() \u003d\u003d 0) {","lastModifiedDate":"2022-02-25"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"            return true;","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-02-25"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        Stream\u003cEvent\u003e eventsStream \u003d events.stream();","lastModifiedDate":"2022-02-25"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"        return eventsStream.allMatch(event -\u003e !event.willDateTimeCollideEvent(date, time));","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-02-25"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"    @Override","lastModifiedDate":"2022-02-25"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-25"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-02-25"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"                || (other instanceof IsPersonFreePredicate // instanceof handles nulls","lastModifiedDate":"2022-02-27"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"                \u0026\u0026 time.equals(((IsPersonFreePredicate) other).time)","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"                \u0026\u0026 date.equals(((IsPersonFreePredicate) other).date)); // state check","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-02-25"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-02-25"}],"authorContributionMap":{"hanqinilnix":57}},{"path":"src/main/java/seedu/address/model/schedule/RecurFrequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-07"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.Optional;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-22"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-22"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-07"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"public enum RecurFrequency {","lastModifiedDate":"2022-03-07"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"    DAILY(\"D\", \"DAILY\"), WEEKLY(\"W\", \"WEEKLY\"),","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    BIWEEKLY(\"BW\", \"BIWEEKLY\"), NONE(\"NONE\", \"NONE\");","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"    public static final Set\u003cRecurFrequency\u003e VALID_FREQUENCIES \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"            Arrays.stream(RecurFrequency.values()).collect(Collectors.toSet());","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_INPUTS \u003d \"[D, DAILY, W, WEEKLY, BW, BIWEEKLY, NONE]\";","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public static final String INVALID_RECUR_FREQUENCY_MESSAGE \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"            String.format(\"Recurrence frequency must be one of the following: %s\", VALID_INPUTS);","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    public static final String MISSING_RECUR_FREQUENCY_CASE \u003d","lastModifiedDate":"2022-03-22"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"            \"%s switch case is missing in RecurFrequency::getLabel! Returning invalid label...\";","lastModifiedDate":"2022-03-22"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"    public static final String DEFAULT_RECURRENCE \u003d NONE.fullName;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"    private static final String DAILY_LABEL \u003d \" (Daily)\";","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    private static final String WEEKLY_LABEL \u003d \" (Weekly)\";","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    private static final String BIWEEKLY_LABEL \u003d \" (Biweekly)\";","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_LABEL \u003d \" (Invalid)\";","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    private static final String NO_LABEL \u003d \"\";","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RecurFrequency.class);","lastModifiedDate":"2022-04-05"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    private final String shortName;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    private final String fullName;","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    RecurFrequency(String shortName, String fullName) {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"        this.shortName \u003d shortName;","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        this.fullName \u003d fullName;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"     * Gets the RecursiveFrequency corresponding to the given String frequency, if it exists.","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"     * Otherwise, throws ParseException.","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"     * @param frequency The String format of the frequency","lastModifiedDate":"2022-03-07"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"     * @return The RecursiveFrequency corresponding to the given String frequency, if it exists.","lastModifiedDate":"2022-03-07"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"     * Otherwise, throws ParseException.","lastModifiedDate":"2022-03-07"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"    public static RecurFrequency of(String frequency) throws ParseException {","lastModifiedDate":"2022-03-07"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"        requireNonNull(frequency);","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        Optional\u003cRecurFrequency\u003e recurFrequency \u003d VALID_FREQUENCIES.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"                .filter(r -\u003e r.shortName.equals(frequency.toUpperCase())","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"                        || r.fullName.equals(frequency.toUpperCase())).findFirst();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        if (!recurFrequency.isPresent()) {","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"            throw new ParseException(INVALID_RECUR_FREQUENCY_MESSAGE);","lastModifiedDate":"2022-03-07"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"        return recurFrequency.get();","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"     * Gets the short name used for commands.","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    public String getShortName() {","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        return shortName;","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"     * Returns whether the provided String maps to a valid RecurFrequency value.","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    public static boolean isValidRecurFrequency(String frequency) {","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        return VALID_FREQUENCIES.stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"                .anyMatch(recurFrequency -\u003e recurFrequency.shortName.equals(frequency)","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"                        || recurFrequency.fullName.equals(frequency));","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-07"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-07"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"     * Returns the string label of the RecurFrequency.","lastModifiedDate":"2022-03-07"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-07"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"     * @return the string label of the RecurFrequency","lastModifiedDate":"2022-03-07"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-07"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"    public String getLabel() {","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"        switch (this) {","lastModifiedDate":"2022-03-07"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"        case NONE:","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"            return NO_LABEL;","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"        case DAILY:","lastModifiedDate":"2022-03-07"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"            return DAILY_LABEL;","lastModifiedDate":"2022-03-07"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"        case WEEKLY:","lastModifiedDate":"2022-03-07"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"            return WEEKLY_LABEL;","lastModifiedDate":"2022-03-07"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"        case BIWEEKLY:","lastModifiedDate":"2022-03-07"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"            return BIWEEKLY_LABEL;","lastModifiedDate":"2022-03-07"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"        default:","lastModifiedDate":"2022-03-07"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"            //Should not happen","lastModifiedDate":"2022-03-07"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"            logger.warning(String.format(MISSING_RECUR_FREQUENCY_CASE, this));","lastModifiedDate":"2022-03-22"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"            return INVALID_LABEL;","lastModifiedDate":"2022-03-08"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-07"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-07"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-07"}],"authorContributionMap":{"tyanhan":89,"vishandi":10}},{"path":"src/main/java/seedu/address/model/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Schedule {","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-02-18"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"            \"A Schedule\u0027s Events must have alphanumeric event descriptions, date formats YYYY-MM-DD, \"","lastModifiedDate":"2022-02-18"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"                    + \"time formats HH:MM and duration format in hours\";","lastModifiedDate":"2022-02-18"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"The event already exists in the schedule\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"    public static final Schedule EMPTY_SCHEDULE \u003d new Schedule(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"    private final List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Schedule(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"     * Returns a List of Event objects in the Schedule.","lastModifiedDate":"2022-02-18"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-02-18"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"     * @return a List of Event objects in the Schedule","lastModifiedDate":"2022-02-18"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public List\u003cEvent\u003e getEvents() {","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableList(events);","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-31"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"     * Returns whether the Schedule contains the given event.","lastModifiedDate":"2022-03-31"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-31"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-03-31"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        return events.contains(event);","lastModifiedDate":"2022-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"     * Returns a Schedule object containing events that are happening in the next {@code daysForward} days.","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"     * The events in the schedule has been updated with the respective next recurring date.","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    public Schedule getUpcomingSchedule(int daysForward) {","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"        LocalDate nextDaysForward \u003d today.plusDays(daysForward);","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"        List\u003cEvent\u003e upcomingEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        for (Event event : getEvents()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"            if (event.willDateCollide(nextDaysForward)) {","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"                Event eventAtDate \u003d event.getEventAtDate(nextDaysForward);","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"                if (eventAtDate.getDuration().isZero()) {","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"                    continue;","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"                }","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"                upcomingEvents.add(event.getEventAtDate(nextDaysForward));","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"        Collections.sort(upcomingEvents);","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        return new Schedule(upcomingEvents);","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"     * Returns an Event object at specified index","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"     * @param index of the Event object to retrieve","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"     * @return an Event object","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"    public Event getEvent(int index) {","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        return events.get(index);","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-02-27"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"     * Returns true if the schedule is empty.","lastModifiedDate":"2022-02-27"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-02-27"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"        return getEvents().isEmpty();","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-02-27"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"    public String getDailyScheduleFormat() {","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        for (Event event : events) {","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"            builder.append(String.format(\"%s\\n\", event.getDailyScheduleFormat()));","lastModifiedDate":"2022-03-30"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        return builder.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if both schedules have the same list of events.","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2022-02-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return otherSchedule.getEvents().equals(getEvents());","lastModifiedDate":"2022-02-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-02-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-02-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Objects.hash(events);","lastModifiedDate":"2022-02-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-02-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (Event event : events) {","lastModifiedDate":"2022-02-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            builder.append(String.format(\"%s. %s\\n\", counter, event));","lastModifiedDate":"2022-02-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            counter +\u003d 1;","lastModifiedDate":"2022-02-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2022-02-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"tyanhan":19,"vishandi":38,"-":64,"hanqinilnix":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), Telegram.EMPTY_TELEGRAM,","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Telegram(\"Bernice_Yu\"),","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), Telegram.EMPTY_TELEGRAM,","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), Telegram.EMPTY_TELEGRAM,","lastModifiedDate":"2022-03-08"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), Telegram.EMPTY_TELEGRAM,","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), Telegram.EMPTY_TELEGRAM,","lastModifiedDate":"2022-03-08"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"                    GitHub.EMPTY_GITHUB, new Email(\"royb@example.com\"),","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), Schedule.EMPTY_SCHEDULE,","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tyanhan":4,"vishandi":14,"-":47,"hanqinilnix":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-29"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"    private final String eventDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"    private final String date;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    private final String time;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"    private final String duration;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    private final String recurFrequency;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given person details.","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventDescription\") String eventDescription,","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"            @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"            @JsonProperty(\"duration\") String duration,","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"            @JsonProperty(\"recurFrequency\") String recurFrequency) {","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        this.eventDescription \u003d eventDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        this.date \u003d date;","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        this.time \u003d time;","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"        this.recurFrequency \u003d recurFrequency;","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedEvent} using the attributes of the given {@code Event} for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        eventDescription \u003d source.getEventDescription().value;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        time \u003d source.getTime().toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        duration \u003d source.getDuration().toString().substring(2);","lastModifiedDate":"2022-03-29"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"        recurFrequency \u003d source.getRecurFrequency().toString();","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"        if (eventDescription \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDescription.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"        if (!EventDescription.isValidEventDescription(eventDescription)) {","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(EventDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"        final EventDescription modelEventDescription \u003d new EventDescription(eventDescription);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, LocalDate.class.getSimpleName()));","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"        final LocalDate modelDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"            modelDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-03-29"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"                    LocalTime.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"        final LocalTime modelTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"            modelTime \u003d ParserUtil.parseTime(time);","lastModifiedDate":"2022-03-29"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-29"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2022-03-29"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"                    Duration.class.getSimpleName()));","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        final Duration modelDuration;","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"            modelDuration \u003d ParserUtil.parseDuration(duration);","lastModifiedDate":"2022-03-29"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(Event.DURATION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"        if (recurFrequency \u003d\u003d null) {","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"                    RecurFrequency.class.getSimpleName()));","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"        final RecurFrequency modelRecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"            modelRecurFrequency \u003d RecurFrequency.of(recurFrequency);","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(RecurFrequency.INVALID_RECUR_FREQUENCY_MESSAGE);","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"        Event event \u003d new Event(modelEventDescription, modelDate, modelTime, modelDuration, modelRecurFrequency);","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"hanqinilnix"},"content":"        return event.getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":118,"hanqinilnix":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    private final String telegram;","lastModifiedDate":"2022-03-09"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    private final String github;","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2022-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    private final JsonAdaptedSchedule schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"            @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"github\") String github,","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-03-09"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"            @JsonProperty(\"schedule\") JsonAdaptedSchedule schedule,","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"        this.github \u003d github;","lastModifiedDate":"2022-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedPerson} using the attributes of the given {@code Person} for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"        name \u003d source.getName().value;","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"        telegram \u003d source.getTelegram().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        github \u003d source.getGithub().value;","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-03-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"        schedule \u003d new JsonAdaptedSchedule(source.getSchedule().getEvents()","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"                .stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"        if (telegram \u003d\u003d null) {","lastModifiedDate":"2022-03-08"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-08"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"                    Telegram.class.getSimpleName()));","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"        if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-09"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"        if (github \u003d\u003d null) {","lastModifiedDate":"2022-03-14"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"                    GitHub.class.getSimpleName()));","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"        if (!GitHub.isValidGitHub(github)) {","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"            throw new IllegalValueException(GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"        final GitHub modelGithub \u003d new GitHub(github);","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"tyanhan"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2022-02-18"},{"lineNumber":140,"author":{"gitId":"tyanhan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-02-23"},{"lineNumber":141,"author":{"gitId":"tyanhan"},"content":"                    Schedule.class.getSimpleName()));","lastModifiedDate":"2022-02-23"},{"lineNumber":142,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-02-18"},{"lineNumber":143,"author":{"gitId":"tyanhan"},"content":"        final Schedule modelSchedule \u003d schedule.toModelType();","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"        return new Person(modelName, modelPhone, modelTelegram,","lastModifiedDate":"2022-03-14"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"                modelGithub, modelEmail, modelAddress, modelSchedule, modelTags);","lastModifiedDate":"2022-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tyanhan":17,"vishandi":29,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"public class JsonAdaptedSchedule {","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Someone\u0027s schedule contains duplicate event(s).\";","lastModifiedDate":"2022-03-31"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedSchedule} with the given schedule details.","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"    @JsonCreator","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    public JsonAdaptedSchedule(@JsonProperty(\"schedule\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"            this.events.addAll(events);","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedSchedule} using the events of the given {@code Schedule},","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"     * for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"    public JsonAdaptedSchedule(Schedule source) {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        events.addAll(source.getEvents().stream()","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"     * Converts this Jackson-friendly adapted schedule object into the model\u0027s {@code Schedule} object.","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"     *","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted schedule.","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-22"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"        final List\u003cEvent\u003e modelEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        for (JsonAdaptedEvent event : events) {","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"            Event eventToAdd \u003d event.toModelType();","lastModifiedDate":"2022-03-31"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"            if (modelEvents.contains(eventToAdd)) {","lastModifiedDate":"2022-03-31"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2022-03-31"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"            }","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"            modelEvents.add(event.toModelType());","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(modelEvents);","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        return new Schedule(modelEvents);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonAdaptedTag} using the given {@code Tag} for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tyanhan":2,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2022-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"     * Constructs a {@code JsonSerializableAddressBook} using the given {@code ReadOnlyAddressBook} for Jackson use.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-03-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tyanhan":2,"-":58}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s2-cs2103t-w09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"vishandi":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    private ScheduleCardPanel viewListPanel;","lastModifiedDate":"2022-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    private StackPane viewListPanelPlaceholder;","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":129,"author":{"gitId":"vishandi"},"content":"        viewListPanel \u003d new ScheduleCardPanel(logic.getViewedPersonList()); //TODO: CHANGE THIS!!!!!!","lastModifiedDate":"2022-03-25"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"        viewListPanelPlaceholder.getChildren().add(viewListPanel.getRoot());","lastModifiedDate":"2022-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"vishandi":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":" * An UI component that displays information of a {@code Person} in the list version.","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    private VBox cardRows;","lastModifiedDate":"2022-03-02"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    private HBox telegramBox;","lastModifiedDate":"2022-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-08"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    private HBox githubBox;","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"    private HBox addressBox;","lastModifiedDate":"2022-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    private HBox emailBox;","lastModifiedDate":"2022-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"        ImageView addressIcon \u003d new ImageView(\"/images/address_icon.png\");","lastModifiedDate":"2022-03-18"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"        ImageView emailIcon \u003d new ImageView(\"/images/email_icon.png\");","lastModifiedDate":"2022-03-18"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        ImageView telegramIcon \u003d new ImageView(\"/images/telegram_icon.png\");","lastModifiedDate":"2022-03-18"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"        ImageView githubIcon \u003d new ImageView(\"/images/github_icon.png\");","lastModifiedDate":"2022-03-18"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"        addressIcon.setFitHeight(16);","lastModifiedDate":"2022-03-02"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        addressIcon.setFitWidth(16);","lastModifiedDate":"2022-03-02"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        emailIcon.setFitHeight(16);","lastModifiedDate":"2022-03-02"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"        emailIcon.setFitWidth(16);","lastModifiedDate":"2022-03-02"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"        telegramIcon.setFitHeight(16);","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        telegramIcon.setFitWidth(16);","lastModifiedDate":"2022-03-08"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"        githubIcon.setFitHeight(16);","lastModifiedDate":"2022-03-14"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"        githubIcon.setFitWidth(16);","lastModifiedDate":"2022-03-14"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        name.setText(person.getName().value);","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"        if (!person.getTelegram().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"            telegramBox.getChildren().add(telegramIcon);","lastModifiedDate":"2022-03-08"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"            Label telegramLabel \u003d new Label(person.getTelegram().value);","lastModifiedDate":"2022-03-08"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"            telegramLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"            telegramBox.getChildren().add(telegramLabel);","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        if (!person.getGithub().isEmpty()) {","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"            githubBox.getChildren().add(githubIcon);","lastModifiedDate":"2022-03-14"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"            Label githubLabel \u003d new Label(person.getGithub().value);","lastModifiedDate":"2022-03-14"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"            githubLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"            githubBox.getChildren().add(githubLabel);","lastModifiedDate":"2022-03-14"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-14"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        if (!person.getEmail().isEmpty()) {","lastModifiedDate":"2022-03-08"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"            emailBox.getChildren().add(emailIcon);","lastModifiedDate":"2022-03-02"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"            Label emailLabel \u003d new Label(person.getEmail().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"            emailLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"            emailBox.getChildren().add(emailLabel);","lastModifiedDate":"2022-03-02"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"        if (!person.getAddress().isEmpty()) {","lastModifiedDate":"2022-03-09"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"            addressBox.getChildren().add(addressIcon);","lastModifiedDate":"2022-03-02"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"            Label addressLabel \u003d new Label(person.getAddress().value);","lastModifiedDate":"2022-03-02"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"            addressLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"            addressBox.getChildren().add(addressLabel);","lastModifiedDate":"2022-03-02"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-02-27"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tyanhan":1,"vishandi":50,"-":72}},{"path":"src/main/java/seedu/address/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import java.util.List;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":" * An UI component that displays information of a {@code Person} in the viewed version.","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    private static final String FXML \u003d \"ScheduleCard.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    private static final String SCHEDULE_HEADER \u003d \"%1$s\u0027s Full Schedule\";","lastModifiedDate":"2022-03-29"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"    private static final String UPCOMING_SCHEDULE_HEADER \u003d \"%1$s\u0027s Upcoming Schedule\";","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"    private static final String NO_SCHEDULE_MESSAGE \u003d \"%1$s doesn\u0027t have any Schedule recorded yet.\";","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    private static final String DAILY_SCHEDULE_HEADER \u003d \"%1$s, %2$s\";","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    public final Person person;","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    private VBox cardRows;","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    private Label name;","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    private Label scheduleHeader;","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleBox;","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    private Label upcomingScheduleHeader;","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    private HBox upcomingScheduleBox;","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    private Label headerDay0;","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay0;","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"    private Label headerDay1;","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay1;","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"    private Label headerDay2;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay2;","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"    private Label headerDay3;","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay3;","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"    private Label headerDay4;","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay4;","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    private Label headerDay5;","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay5;","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"    private Label headerDay6;","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    private HBox scheduleDay6;","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"    public ScheduleCard(Person person) {","lastModifiedDate":"2022-03-25"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"        this.person \u003d person;","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        name.setText(person.getName().value);","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        scheduleHeader.setText(String.format(SCHEDULE_HEADER, person.getName().value));","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"        upcomingScheduleHeader.setText(String.format(UPCOMING_SCHEDULE_HEADER, person.getName().value));","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"        headerDay0.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(0), getDateAfter(0)));","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        headerDay1.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(1), getDateAfter(1)));","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"        headerDay2.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(2), getDateAfter(2)));","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        headerDay3.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(3), getDateAfter(3)));","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"        headerDay4.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(4), getDateAfter(4)));","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        headerDay5.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(5), getDateAfter(5)));","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        headerDay6.setText(String.format(DAILY_SCHEDULE_HEADER, getDayOfWeekAfter(6), getDateAfter(6)));","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"        if ((!person.getSchedule().isEmpty())) {","lastModifiedDate":"2022-03-27"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"            Label scheduleLabel \u003d new Label(person.getSchedule().toString());","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"            scheduleLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"            scheduleBox.getChildren().add(scheduleLabel);","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"        } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"            Label scheduleLabel \u003d new Label(String.format(NO_SCHEDULE_MESSAGE,","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"                    person.getName().value));","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"            scheduleLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"            scheduleBox.getChildren().add(scheduleLabel);","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        List\u003cHBox\u003e dailySchedule \u003d Arrays.asList(","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"            scheduleDay0, scheduleDay1, scheduleDay2, scheduleDay3, scheduleDay4, scheduleDay5, scheduleDay6);","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"            if (!person.getUpcomingSchedule(i).isEmpty()) {","lastModifiedDate":"2022-03-29"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"                Label upcomingScheduleLabel \u003d new Label(person.getUpcomingSchedule(i).getDailyScheduleFormat());","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"                upcomingScheduleLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"                dailySchedule.get(i).getChildren().add(upcomingScheduleLabel);","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"            } else {","lastModifiedDate":"2022-03-26"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"                Label upcomingScheduleLabel \u003d new Label(\"-\");","lastModifiedDate":"2022-03-30"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"                upcomingScheduleLabel.setWrapText(true);","lastModifiedDate":"2022-03-30"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"                dailySchedule.get(i).getChildren().add(upcomingScheduleLabel);","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-03-24"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-03-24"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-03-24"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"     * Gets the string representation of DayOfWeek {@code daysForward} days after today.","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"    public String getDayOfWeekAfter(int daysForward) {","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"        return LocalDate.now().plusDays(daysForward).getDayOfWeek().toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"     * Gets the string representation of the date of {@code daysForward} days after today.","lastModifiedDate":"2022-03-28"},{"lineNumber":133,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"    public String getDateAfter(int daysForward) {","lastModifiedDate":"2022-03-28"},{"lineNumber":135,"author":{"gitId":"vishandi"},"content":"        return LocalDate.now().plusDays(daysForward).toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"    @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"        // short circuit if same object","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"vishandi"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-03-24"},{"lineNumber":142,"author":{"gitId":"vishandi"},"content":"            return true;","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":145,"author":{"gitId":"vishandi"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-03-24"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"        if (!(other instanceof ScheduleCard)) {","lastModifiedDate":"2022-03-25"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"            return false;","lastModifiedDate":"2022-03-24"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"        // state check","lastModifiedDate":"2022-03-24"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"        ScheduleCard card \u003d (ScheduleCard) other;","lastModifiedDate":"2022-03-25"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"        return person.equals(card.person);","lastModifiedDate":"2022-03-24"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tyanhan":1,"vishandi":153}},{"path":"src/main/java/seedu/address/ui/ScheduleCardPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":" * Panel containing the viewed list of persons.","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"public class ScheduleCardPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-03-25"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    private static final String FXML \u003d \"ScheduleCardPanel.fxml\";","lastModifiedDate":"2022-03-25"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleCardPanel.class);","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    @FXML","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    private ListView\u003cPerson\u003e viewedPersonListView;","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"     * Creates a {@code ScheduleCardPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"    public ScheduleCardPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2022-03-25"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        super(FXML);","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        viewedPersonListView.setItems(personList);","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        viewedPersonListView.setCellFactory(listView -\u003e new ViewedPersonListViewCell());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-24"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-03-24"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    class ViewedPersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        @Override","lastModifiedDate":"2022-03-24"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2022-03-24"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"                setGraphic(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"                setText(null);","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"            } else {","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"                setGraphic(new ScheduleCard(person).getRoot());","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"            }","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-24"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"vishandi":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/unigenda.png\";","lastModifiedDate":"2022-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"        //Make not resizable.","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tyanhan":4,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":".view_big_label {","lastModifiedDate":"2022-03-24"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-24"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2022-03-24"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-24"},{"lineNumber":141,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":142,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":143,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":".view_medium_label {","lastModifiedDate":"2022-03-26"},{"lineNumber":145,"author":{"gitId":"vishandi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-26"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-03-26"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-26"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"    -fx-padding: 8px;","lastModifiedDate":"2022-03-29"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"    -fx-border-insets: 8px;","lastModifiedDate":"2022-03-29"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"    -fx-background-insets: 8px;","lastModifiedDate":"2022-03-29"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-26"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":".view_days_label {","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"    -fx-background-color: #d57b22;","lastModifiedDate":"2022-03-29"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":161,"author":{"gitId":"vishandi"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":".view_today_label {","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-03-28"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-03-28"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"    -fx-background-color: #d57b22;","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":170,"author":{"gitId":"vishandi"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2022-03-29"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"    -fx-wrap-text: \"true\";","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"vishandi":38,"-":354}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"\u003cfx:root minHeight\u003d\"720\" maxHeight\u003d\"720\" minWidth\u003d\"1080\" maxWidth\u003d\"1080\" onCloseRequest\u003d\"#handleExit\" title\u003d\"UniGenda\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    \u003cImage url\u003d\"@/images/unigenda.png\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"          \u003cVBox minWidth\u003d\"500\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"             \u003cchildren\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"480\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"             \u003c/children\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"          \u003cVBox fx:id\u003d\"personList1\" minWidth\u003d\"570.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"             \u003cpadding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"             \u003c/padding\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"             \u003cchildren\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"                \u003cStackPane fx:id\u003d\"viewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"             \u003c/children\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tyanhan":6,"vishandi":18,"-":45}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"    \u003cVBox fx:id\u003d\"cardRows\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"16.0\" fitWidth\u003d\"16.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/phone_icon.png\" /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"            \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-03-06"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"telegramBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"githubBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"emailBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"addressBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vishandi":23,"-":29,"hanqinilnix":1}},{"path":"src/main/resources/view/ScheduleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    \u003cVBox fx:id\u003d\"cardRows\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"5\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"view_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"upcomingScheduleBoxHeader\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/upcoming_schedule_icon.png\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"upcomingScheduleHeader\" styleClass\u003d\"view_medium_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"upcomingScheduleBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"       \u003cHBox fx:id\u003d\"day0HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"             \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"                \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"                   \u003cImage url\u003d\"@../images/today.png\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"                \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"             \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"             \u003cLabel fx:id\u003d\"headerDay0\" styleClass\u003d\"view_today_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/left_arrow.png\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"          \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"       \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"       \u003cHBox fx:id\u003d\"scheduleDay0\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day1HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay1\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay1\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day2HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay2\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay2\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day3HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay3\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay3\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day4HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay4\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay4\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day5HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay5\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay5\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"day6HeaderBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/days.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"headerDay6\" styleClass\u003d\"view_days_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleDay6\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"         \u003cHBox prefHeight\u003d\"10.0\" prefWidth\u003d\"130.0\" /\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleBoxHeader\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"               \u003cImageView fitHeight\u003d\"20.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"                     \u003cImage url\u003d\"@../images/schedule_icon.png\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"               \u003cLabel fx:id\u003d\"scheduleHeader\" styleClass\u003d\"view_medium_label\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":129,"author":{"gitId":"vishandi"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":130,"author":{"gitId":"vishandi"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":131,"author":{"gitId":"vishandi"},"content":"         \u003cHBox fx:id\u003d\"scheduleBox\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\" /\u003e","lastModifiedDate":"2022-03-28"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":133,"author":{"gitId":"vishandi"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":135,"author":{"gitId":"vishandi"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":137,"author":{"gitId":"vishandi"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tyanhan":1,"vishandi":136}},{"path":"src/main/resources/view/ScheduleCardPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-03-29"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"  \u003cListView fx:id\u003d\"viewedPersonListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tyanhan":1,"vishandi":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tyanhan":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_NAME_CAT \u003d \"Catherine Quek\";","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_PHONE_CAT \u003d \"88888888\";","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_EMAIL_CAT \u003d \"cat@example.com\";","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_ADDRESS_CAT \u003d \"Block 369, Cathy Street 2\";","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_TELEGRAM_CAT \u003d \"Catherine_Quek\";","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"    public static final String VALID_GITHUB_CAT \u003d \"Cat-Quek\";","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"    public static final String VALID_EVENT_DESCRIPTION \u003d \"CS2101 Tutorial\";","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"    public static final String VALID_EVENT_DATE \u003d \"2022-03-14\";","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"    public static final String VALID_EVENT_TIME \u003d \"09:00\";","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"    public static final String VALID_EVENT_DURATION \u003d \"2H\";","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"    public static final String VALID_RECUR_FREQUENCY \u003d \"W\";","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    public static final String NAME_DESC_CAT \u003d \" \" + PREFIX_NAME + VALID_NAME_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    public static final String PHONE_DESC_CAT \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    public static final String EMAIL_DESC_CAT \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"    public static final String ADDRESS_DESC_CAT \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"    public static final String TELEGRAM_DESC_CAT \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"    public static final String GITHUB_DESC_CAT \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"    public static final String EVENT_DESCRIPTION_DESC_CS2101 \u003d \" \" + PREFIX_EVENT_DESCRIPTION + VALID_EVENT_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DATE_DESC_PI_DAY \u003d \" \" + PREFIX_DATE + VALID_EVENT_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"    public static final String TIME_DESC_MORNING \u003d \" \" + PREFIX_TIME + VALID_EVENT_TIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DURATION_DESC_TWO_HOURS \u003d \" \" + PREFIX_DURATION + VALID_EVENT_DURATION;","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"    public static final String RECUR_FREQUENCY_DESC_WEEKLY \u003d \" \" + PREFIX_RECUR_FREQUENCY + VALID_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"James%\"; // \u0027%\u0027 not allowed in telegrams","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"    public static final String INVALID_GITHUB_DESC \u003d \" \" + PREFIX_GITHUB + \"a--bcd\"; // \u0027--\u0027 not allowed in githubs","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"    public static final String INVALID_EVENT_DESCRIPTION_DESC \u003d \" \" + PREFIX_EVENT_DESCRIPTION + \"/L@b\"; // contains /","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"    public static final String INVALID_EVENT_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2022-March-14\";","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"    public static final String INVALID_EVENT_TIME_DESC \u003d \" \" + PREFIX_TIME + \"1100\";","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"    public static final String INVALID_DURATION_DESC \u003d \" \" + PREFIX_DURATION + \"oneH\";","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"hanqinilnix"},"content":"    public static final String INVALID_RECUR_FREQUENCY_DESC \u003d \" \" + PREFIX_RECUR_FREQUENCY + \"X\";","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"    public static final EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-02-27"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"    public static final EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-02-27"},{"lineNumber":104,"author":{"gitId":"hanqinilnix"},"content":"    public static final EditEventDescriptor DESC_CS2101;","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"hanqinilnix"},"content":"        DESC_CS2101 \u003d new EditEventDescriptorBuilder().withEventDescription(VALID_EVENT_DESCRIPTION)","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"                .withDate(VALID_EVENT_DATE).withTime(VALID_EVENT_TIME).withDuration(VALID_EVENT_DURATION)","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"                .withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":169,"author":{"gitId":"tyanhan"},"content":"        final String[] splitName \u003d person.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tyanhan":5,"vishandi":16,"-":125,"hanqinilnix":29}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tyanhan":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/SetUserCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.SetUserCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":" * {@code SetUserCommand}.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"public class SetUserCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"        Person personToSetUser \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"        SetUserCommand setUserCommand \u003d new SetUserCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(SetUserCommand.MESSAGE_SET_USER_SUCCESS, personToSetUser.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"        expectedModel.deletePerson(personToSetUser);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"        expectedModel.insertPerson(personToSetUser, 0);","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        assertCommandSuccess(setUserCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        SetUserCommand setUserCommand \u003d new SetUserCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"        assertCommandFailure(setUserCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        Person personToSetUser \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        SetUserCommand setUserCommand \u003d new SetUserCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(SetUserCommand.MESSAGE_SET_USER_SUCCESS, personToSetUser.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"        expectedModel.deletePerson(personToSetUser);","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        expectedModel.insertPerson(personToSetUser, 0);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        assertCommandSuccess(setUserCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"        SetUserCommand setUserCommand \u003d new SetUserCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"        assertCommandFailure(setUserCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":80}},{"path":"src/test/java/seedu/address/logic/commands/person/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tyanhan":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/person/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"        public void insertPerson(Person person, Integer index) {","lastModifiedDate":"2022-03-28"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":121,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"tyanhan"},"content":"        @Override","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"tyanhan"},"content":"        public void setSchedule(Person target, Schedule updatedSchedule) {","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"tyanhan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"        public ObservableList\u003cPerson\u003e getViewSchedulePerson() {","lastModifiedDate":"2022-03-25"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-03-15"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"        @Override","lastModifiedDate":"2022-04-04"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"        public boolean isPersonViewed(Person person) {","lastModifiedDate":"2022-04-04"},{"lineNumber":170,"author":{"gitId":"vishandi"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2022-04-04"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-04-04"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"        @Override","lastModifiedDate":"2022-03-15"},{"lineNumber":174,"author":{"gitId":"vishandi"},"content":"        public void updateViewSchedulePerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-03-25"},{"lineNumber":175,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tyanhan":13,"vishandi":14,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/person/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"tyanhan":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/person/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tyanhan":1,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/person/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalSchedule.getTypicalSchedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        Person editedPerson \u003d new PersonBuilder().withSchedule(getTypicalSchedule()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"tyanhan":2,"-":170,"hanqinilnix":2}},{"path":"src/test/java/seedu/address/logic/commands/person/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tyanhan":1,"-":82}},{"path":"src/test/java/seedu/address/logic/commands/person/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tyanhan":1,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/person/ViewScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-24"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-24"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-24"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.SamePersonPredicate;","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"public class ViewScheduleCommandTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d new ViewScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"        String expectedMessage \u003d String.format(ViewScheduleCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"                personToView.getName().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"        SamePersonPredicate predicate \u003d new SamePersonPredicate(personToView);","lastModifiedDate":"2022-03-24"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        expectedModel.updateViewSchedulePerson(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"        assertCommandSuccess(viewScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-24"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d new ViewScheduleCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        assertCommandFailure(viewScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-03-24"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-24"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d new ViewScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"        String expectedMessage \u003d String.format(ViewScheduleCommand.MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2022-03-25"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"                personToView.getName().value);","lastModifiedDate":"2022-03-25"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"        SamePersonPredicate predicate \u003d new SamePersonPredicate(personToView);","lastModifiedDate":"2022-03-24"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-24"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        expectedModel.updateViewSchedulePerson(predicate);","lastModifiedDate":"2022-03-25"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"        assertCommandSuccess(viewScheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-25"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-24"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-24"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-24"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d new ViewScheduleCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-25"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"        assertCommandFailure(viewScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-25"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"    public void equals() {","lastModifiedDate":"2022-03-24"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewFirstCommand \u003d new ViewScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewSecondCommand \u003d new ViewScheduleCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-24"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewFirstCommandCopy \u003d new ViewScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-25"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2022-03-24"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2022-03-24"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2022-03-24"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-24"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2022-03-24"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"tyanhan":1,"vishandi":99}},{"path":"src/test/java/seedu/address/logic/commands/schedule/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import java.util.List;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":" * Contains integration tests (interaction with the Model) for {@code AddEventCommand}.","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"class AddEventCommandTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"    private Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    private Person firstPerson \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    private EventBuilder eventBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"    private List\u003cEvent\u003e toEditEvents;","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"    @BeforeEach","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"    public void setUp() {","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        eventBuilder \u003d new EventBuilder();","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"        toEditEvents \u003d new ArrayList\u003c\u003e(firstPerson.getSchedule().getEvents());","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"        Event toAddEvent \u003d eventBuilder.build();","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"        AddEventCommand addEventCommand \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"                new AddEventCommand(INDEX_FIRST_PERSON, toAddEvent);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        toEditEvents.add(toAddEvent);","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(toEditEvents);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        Schedule schedule \u003d new Schedule(toEditEvents);","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withSchedule(schedule).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(AddEventCommand.MESSAGE_SUCCESS, toAddEvent, firstPerson.getName());","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"        assertCommandSuccess(addEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        Event toAddEvent \u003d eventBuilder.build();","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(outOfBoundIndex, toAddEvent);","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        assertCommandFailure(addEventCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"tyanhan":69}},{"path":"src/test/java/seedu/address/logic/commands/schedule/ClearScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"/**","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code ClearScheduleCommand}.","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":" */","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"public class ClearScheduleCommandTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-28"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"        Person personToClearSchedule \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"                String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS, personToClearSchedule.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"        CommandResult commandResult \u003d clearScheduleCommand.execute(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"        assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        Person updatedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        assertTrue(updatedPerson.getSchedule().isEmpty());","lastModifiedDate":"2022-03-29"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-28"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"        assertCommandFailure(clearScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        Person personToClearSchedule \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-28"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"                String.format(ClearScheduleCommand.MESSAGE_CLEAR_SCHEDULE_SUCCESS, personToClearSchedule.getName());","lastModifiedDate":"2022-03-28"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        CommandResult commandResult \u003d clearScheduleCommand.execute(model);","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"        assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"        Person updatedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        assertTrue(updatedPerson.getSchedule().isEmpty());","lastModifiedDate":"2022-03-29"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2022-03-28"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d new ClearScheduleCommand(outOfBoundIndex);","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"        assertCommandFailure(clearScheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"    public void equals() {","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleFirstCommand \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleSecondCommand \u003d new ClearScheduleCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"        assertTrue(clearScheduleFirstCommand.equals(clearScheduleFirstCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"        ClearScheduleCommand clearScheduleFirstCommandCopy \u003d new ClearScheduleCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"        assertTrue(clearScheduleFirstCommand.equals(clearScheduleFirstCommandCopy));","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"        assertFalse(clearScheduleFirstCommand.equals(1));","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        assertFalse(clearScheduleFirstCommand.equals(null));","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"        assertFalse(clearScheduleFirstCommand.equals(clearScheduleSecondCommand));","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":103}},{"path":"src/test/java/seedu/address/logic/commands/schedule/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_HENDRI;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"/**","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":" * Contains integration tests (interaction with the Model)","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":" * and unit tests for DeleteEventCommand.","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":" */","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    public void execute_validIndices_success() {","lastModifiedDate":"2022-03-03"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        Index indexHendri \u003d INDEX_HENDRI;","lastModifiedDate":"2022-03-03"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"        Index indexFirstEvent \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-03"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(","lastModifiedDate":"2022-03-03"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"                indexHendri,","lastModifiedDate":"2022-03-03"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"                indexFirstEvent);","lastModifiedDate":"2022-03-03"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        Person hendri \u003d getTypicalPersons().get(","lastModifiedDate":"2022-03-03"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"                INDEX_HENDRI.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        PersonBuilder editPerson \u003d new PersonBuilder(hendri);","lastModifiedDate":"2022-03-03"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        Person editedPerson \u003d editPerson","lastModifiedDate":"2022-03-03"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"                .withSchedule(new Schedule(new ArrayList\u003c\u003e())).build();","lastModifiedDate":"2022-03-03"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2022-03-03"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"                DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2022-03-03"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"                hendri.getName(),","lastModifiedDate":"2022-03-03"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"                indexFirstEvent.getOneBased()","lastModifiedDate":"2022-03-03"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-03"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_HENDRI.getZeroBased()), editedPerson);","lastModifiedDate":"2022-03-03"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-03"},{"lineNumber":56,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2022-03-03"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-03"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(","lastModifiedDate":"2022-03-03"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"                outOfBoundIndex,","lastModifiedDate":"2022-03-03"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"                outOfBoundIndex","lastModifiedDate":"2022-03-03"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-03"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"        assertCommandFailure(deleteEventCommand, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    public void execute_invalidEventIndex_failure() {","lastModifiedDate":"2022-03-03"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"        Person hendri \u003d getTypicalPersons().get(","lastModifiedDate":"2022-03-03"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"                INDEX_HENDRI.getZeroBased());","lastModifiedDate":"2022-03-03"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"        Index outOfBoundIndex \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"                Index.fromOneBased(hendri.getSchedule().getEvents().size() + 1);","lastModifiedDate":"2022-03-03"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(","lastModifiedDate":"2022-03-03"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"                INDEX_HENDRI,","lastModifiedDate":"2022-03-03"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"                outOfBoundIndex","lastModifiedDate":"2022-03-03"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-03"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"        assertCommandFailure(deleteEventCommand, model, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-03"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"vishandi":81,"hanqinilnix":1}},{"path":"src/test/java/seedu/address/logic/commands/schedule/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CS2101;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ClearCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEventCommand.","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"class EditEventCommandTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"        Person toEditPerson \u003d expectedModel.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cEvent\u003e toEditEvents \u003d new ArrayList\u003c\u003e(toEditPerson.getSchedule().getEvents());","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        toEditEvents.remove(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"        toEditEvents.add(0, editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        Schedule schedule \u003d new Schedule(toEditEvents);","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"        Person editedPerson \u003d new PersonBuilder(toEditPerson).withSchedule(schedule).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"    /* Not sure why this test method pass on computer but not with gradlew. Need more time to look into the problem.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"    public void execute_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"        List\u003cEvent\u003e toEditEvents \u003d new ArrayList\u003c\u003e(firstPerson.getSchedule().getEvents());","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"        Index lastEventIndex \u003d Index.fromOneBased(toEditEvents.size());","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        Event toEditEvent \u003d toEditEvents.remove(lastEventIndex.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"        Event editedEvent \u003d new EventBuilder(toEditEvent)","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"                .withDate(VALID_EVENT_DATE).withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"        toEditEvents.add(lastEventIndex.getZeroBased(), editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"        Schedule schedule \u003d new Schedule(toEditEvents);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withSchedule(schedule).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"                .withDate(VALID_EVENT_DATE).withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_PERSON, lastEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"    */","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_EVENT_DATE).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand editCommand \u003d new EditEventCommand(outOfBoundIndex, INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"hanqinilnix"},"content":"    public void execute_validPersonIndexInvalidEventIndex_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"hanqinilnix"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"hanqinilnix"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(firstPerson.getSchedule().getEvents().size() + 1);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_EVENT_DATE).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand editCommand \u003d new EditEventCommand(INDEX_FIRST_PERSON, outOfBoundIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"hanqinilnix"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"hanqinilnix"},"content":"    // Only unfiltered list is tested. FilteredList will be test after v1.2","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"hanqinilnix"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"hanqinilnix"},"content":"        final EditEventCommand standardCommand \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"hanqinilnix"},"content":"                new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, DESC_CS2101);","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor differentDescriptor \u003d new EditEventDescriptorBuilder().withDate(\"2022-12-31\").build();","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"hanqinilnix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_CS2101);","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand commandWithSameValues \u003d new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT,","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"hanqinilnix"},"content":"                copyDescriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"hanqinilnix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"hanqinilnix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"hanqinilnix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"hanqinilnix"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_SECOND_PERSON, INDEX_FIRST_EVENT, DESC_CS2101)));","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"hanqinilnix"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"hanqinilnix"},"content":"                new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, differentDescriptor)));","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":1,"hanqinilnix":137}},{"path":"src/test/java/seedu/address/logic/commands/schedule/WhoIsFreeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.commands.schedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.IsPersonFreePredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":" * Contains integration tests (interaction with the Model) for {@code FreeScheduleCommand}.","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"class WhoIsFreeCommandTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    private Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"        LocalTime piTime \u003d LocalTime.parse(\"03:14\");","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate piDate \u003d LocalDate.parse(\"2022-03-14\");","lastModifiedDate":"2022-03-15"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"        LocalTime todayTime \u003d LocalTime.parse(\"20:30\");","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate piDayPredicate \u003d new IsPersonFreePredicate(piTime, piDate, emptyTags); // PI-day","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate timeAndTodayPredicate \u003d new IsPersonFreePredicate(todayTime, todayDate, emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand whoIsFreePiCommand \u003d new WhoIsFreeCommand(piDayPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand whoIsFreeTodayCommand \u003d new WhoIsFreeCommand(timeAndTodayPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(whoIsFreePiCommand.equals(whoIsFreePiCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand whoIsFreePiCommandCopy \u003d new WhoIsFreeCommand(piDayPredicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(whoIsFreePiCommand.equals(whoIsFreePiCommandCopy));","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(whoIsFreePiCommandCopy.equals(1));","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(whoIsFreePiCommandCopy.equals(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(whoIsFreePiCommandCopy.equals(whoIsFreeTodayCommand));","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"    // To do manual testing","lastModifiedDate":"2022-03-23"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"    //    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"    //    public void execute_clashInTimeAndDate_noPersonFound() {","lastModifiedDate":"2022-03-21"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"    //        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"    //        IsPersonFreePredicate predicate \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"    //                new IsPersonFreePredicate(LocalTime.parse(\"09:00\"), LocalDate.parse(\"2022-03-16\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"    //        FreeScheduleCommand command \u003d new FreeScheduleCommand(predicate);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"    //        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"    //        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"    //        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    //    }","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"    public void execute_noClashInTimeAndDate_multiplePersonsFound() {","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"                new IsPersonFreePredicate(LocalTime.parse(\"09:00\"), LocalDate.parse(\"2022-03-13\"), emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-03-15"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"                String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, expectedModel.getFilteredPersonList().size());","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand command \u003d new WhoIsFreeCommand(predicate);","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-03-15"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tyanhan":10,"hanqinilnix":76}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FILEPATH;","lastModifiedDate":"2022-03-29"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalSchedule.TYPICAL_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalSchedule.TYPICAL_PATH;","lastModifiedDate":"2022-03-29"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalSchedule.TYPICAL_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ClearCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.ListCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.SetUserCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.ViewGroupCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.ViewScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.AddEventCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.ClearScheduleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.DeleteEventCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.EditEventCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.ExportScheduleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.ImportScheduleCommand;","lastModifiedDate":"2022-03-29"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.WhoIsFreeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.IsTagInPersonPredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-28"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.IsPersonFreePredicate;","lastModifiedDate":"2022-03-28"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"vishandi"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2022-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"    private static final String ADD_COMMAND_UPPER \u003d \"ADD\";","lastModifiedDate":"2022-03-28"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"    private static final String CLEAR_COMMAND_UPPER \u003d \"CLEAR\";","lastModifiedDate":"2022-03-28"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"    private static final String DELETE_COMMAND_UPPER \u003d \"DELETE\";","lastModifiedDate":"2022-03-28"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    private static final String EDIT_COMMAND_UPPER \u003d \"EDIT\";","lastModifiedDate":"2022-03-28"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"    private static final String EXIT_COMMAND_UPPER \u003d \"EXIT\";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    private static final String FIND_COMMAND_UPPER \u003d \"FIND\";","lastModifiedDate":"2022-03-28"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    private static final String HELP_COMMAND_UPPER \u003d \"HELP\";","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"    private static final String LIST_COMMAND_UPPER \u003d \"LIST\";","lastModifiedDate":"2022-03-28"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"    private static final String ADD_EVENT_COMMAND_UPPER \u003d \"ADDEVENT\";","lastModifiedDate":"2022-03-28"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    private static final String EDIT_EVENT_COMMAND_UPPER \u003d \"EDITEVENT\";","lastModifiedDate":"2022-03-28"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"    private static final String DELETE_EVENT_COMMAND_UPPER \u003d \"DELETEEVENT\";","lastModifiedDate":"2022-03-28"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"    private static final String WHO_IS_FREE_COMMAND_UPPER \u003d \"WHOISFREE\";","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"    private static final String VIEW_GROUP_COMMAND_UPPER \u003d \"VIEWGROUP\";","lastModifiedDate":"2022-03-28"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"    private static final String VIEW_SCHEDULE_COMMAND_UPPER \u003d \"VIEWSCHEDULE\";","lastModifiedDate":"2022-03-28"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"    private static final String EXPORT_SCHEDULE_COMMAND_UPPER \u003d \"EXPORTSCHEDULE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"    private static final String IMPORT_SCHEDULE_COMMAND_UPPER \u003d \"IMPORTSCHEDULE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"    private static final String SET_USER_COMMAND_UPPER \u003d \"SETUSER\";","lastModifiedDate":"2022-03-29"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"    private static final String CLEAR_SCHEDULE_COMMAND_UPPER \u003d \"CLEARSCHEDULE\";","lastModifiedDate":"2022-03-29"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":139,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_addEvent() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":140,"author":{"gitId":"vishandi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":141,"author":{"gitId":"vishandi"},"content":"        AddEventCommand command \u003d (AddEventCommand) parser","lastModifiedDate":"2022-03-28"},{"lineNumber":142,"author":{"gitId":"vishandi"},"content":"                .parseCommand(PersonUtil.getAddEventCommand(INDEX_FIRST_PERSON, event));","lastModifiedDate":"2022-03-28"},{"lineNumber":143,"author":{"gitId":"vishandi"},"content":"        assertEquals(new AddEventCommand(INDEX_FIRST_PERSON, event), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":144,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":145,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":146,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_editEvent() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":148,"author":{"gitId":"vishandi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":149,"author":{"gitId":"vishandi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"        EditEventCommand command \u003d (EditEventCommand) parser.parseCommand(EditEventCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":151,"author":{"gitId":"vishandi"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":152,"author":{"gitId":"vishandi"},"content":"                + \" \" + PersonUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-28"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"        assertEquals(new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_deleteEvent() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"                + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":161,"author":{"gitId":"vishandi"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_freeSchedule() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":166,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand command \u003d (WhoIsFreeCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"hanqinilnix"},"content":"                WhoIsFreeCommand.COMMAND_WORD + \" \" + PREFIX_TIME + TYPICAL_TIME.toString() + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_DATE + TYPICAL_DATE.toString()","lastModifiedDate":"2022-03-28"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":170,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand expectedCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":171,"author":{"gitId":"hanqinilnix"},"content":"                new WhoIsFreeCommand(new IsPersonFreePredicate(TYPICAL_TIME, TYPICAL_DATE, new HashSet\u003c\u003e()));","lastModifiedDate":"2022-03-30"},{"lineNumber":172,"author":{"gitId":"hanqinilnix"},"content":"        assertEquals(expectedCommand, command);","lastModifiedDate":"2022-03-30"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":174,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":175,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":176,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_clearSchedule() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":177,"author":{"gitId":"vishandi"},"content":"        ClearScheduleCommand command \u003d (ClearScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":178,"author":{"gitId":"vishandi"},"content":"                ClearScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":179,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":180,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ClearScheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":181,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":182,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":183,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_viewGroup() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":185,"author":{"gitId":"vishandi"},"content":"        String keyword \u003d \"foo\";","lastModifiedDate":"2022-03-28"},{"lineNumber":186,"author":{"gitId":"vishandi"},"content":"        ViewGroupCommand command \u003d (ViewGroupCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":187,"author":{"gitId":"vishandi"},"content":"                ViewGroupCommand.COMMAND_WORD + \" \" + PREFIX_TAG + keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":188,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewGroupCommand(new IsTagInPersonPredicate(new Tag(keyword))), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_viewSchedule() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand command \u003d (ViewScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"vishandi"},"content":"                ViewScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":196,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":197,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewScheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-28"},{"lineNumber":198,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":199,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_exportSchedule() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":202,"author":{"gitId":"vishandi"},"content":"        ExportScheduleCommand command \u003d (ExportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":203,"author":{"gitId":"vishandi"},"content":"                ExportScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":204,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ExportScheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":206,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":209,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_importSchedule() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":210,"author":{"gitId":"vishandi"},"content":"        ImportScheduleCommand command \u003d (ImportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":211,"author":{"gitId":"vishandi"},"content":"                ImportScheduleCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":212,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_FILEPATH + TYPICAL_PATH","lastModifiedDate":"2022-03-29"},{"lineNumber":213,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":214,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ImportScheduleCommand(INDEX_FIRST_PERSON, Paths.get(TYPICAL_PATH)), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":215,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":216,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":217,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-29"},{"lineNumber":218,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_setUser() throws Exception {","lastModifiedDate":"2022-03-29"},{"lineNumber":219,"author":{"gitId":"vishandi"},"content":"        SetUserCommand command \u003d (SetUserCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":220,"author":{"gitId":"vishandi"},"content":"                SetUserCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":221,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":222,"author":{"gitId":"vishandi"},"content":"        assertEquals(new SetUserCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":223,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-29"},{"lineNumber":224,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":225,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_allLowerCase_success() throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":227,"author":{"gitId":"vishandi"},"content":"        // addEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":228,"author":{"gitId":"vishandi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":229,"author":{"gitId":"vishandi"},"content":"        AddEventCommand addEventCommand \u003d (AddEventCommand) parser","lastModifiedDate":"2022-03-28"},{"lineNumber":230,"author":{"gitId":"vishandi"},"content":"                .parseCommand(AddEventCommand.COMMAND_WORD_LOWER","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"vishandi"},"content":"                        + PersonUtil.getAddEventCommand(INDEX_FIRST_PERSON, event).substring(8));","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"vishandi"},"content":"        assertEquals(new AddEventCommand(INDEX_FIRST_PERSON, event), addEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"vishandi"},"content":"        // editEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"vishandi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":236,"author":{"gitId":"vishandi"},"content":"        EditEventCommand editEventCommand \u003d (EditEventCommand) parser.parseCommand(EditEventCommand.COMMAND_WORD_LOWER","lastModifiedDate":"2022-03-28"},{"lineNumber":237,"author":{"gitId":"vishandi"},"content":"                + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":238,"author":{"gitId":"vishandi"},"content":"                + \" \" + PersonUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-28"},{"lineNumber":239,"author":{"gitId":"vishandi"},"content":"        assertEquals(new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, descriptor), editEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":240,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":241,"author":{"gitId":"vishandi"},"content":"        // deleteEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":242,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand deleteEventCommand \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":243,"author":{"gitId":"vishandi"},"content":"                DeleteEventCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":244,"author":{"gitId":"vishandi"},"content":"                        + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":245,"author":{"gitId":"vishandi"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT), deleteEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":246,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":247,"author":{"gitId":"vishandi"},"content":"        // freeSchedule","lastModifiedDate":"2022-03-28"},{"lineNumber":248,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand freeScheduleCommand \u003d (WhoIsFreeCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"hanqinilnix"},"content":"                WhoIsFreeCommand.COMMAND_WORD_LOWER + \" \" + PREFIX_TIME + TYPICAL_TIME.toString() + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_DATE + TYPICAL_DATE.toString()","lastModifiedDate":"2022-03-28"},{"lineNumber":251,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":252,"author":{"gitId":"hanqinilnix"},"content":"        assertEquals(new WhoIsFreeCommand(new IsPersonFreePredicate(TYPICAL_TIME, TYPICAL_DATE, new HashSet\u003c\u003e())),","lastModifiedDate":"2022-03-30"},{"lineNumber":253,"author":{"gitId":"vishandi"},"content":"                freeScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":254,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":255,"author":{"gitId":"vishandi"},"content":"        // viewGroup","lastModifiedDate":"2022-03-28"},{"lineNumber":256,"author":{"gitId":"vishandi"},"content":"        String keyword \u003d \"foo\";","lastModifiedDate":"2022-03-28"},{"lineNumber":257,"author":{"gitId":"vishandi"},"content":"        ViewGroupCommand viewGroupCommand \u003d (ViewGroupCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":258,"author":{"gitId":"vishandi"},"content":"                ViewGroupCommand.COMMAND_WORD_LOWER + \" \" + PREFIX_TAG + keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":259,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":260,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewGroupCommand(new IsTagInPersonPredicate(new Tag(keyword))), viewGroupCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":261,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":262,"author":{"gitId":"vishandi"},"content":"        // clearSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":263,"author":{"gitId":"vishandi"},"content":"        ClearScheduleCommand clearScheduleCommand \u003d (ClearScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":264,"author":{"gitId":"vishandi"},"content":"                ClearScheduleCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":265,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":266,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ClearScheduleCommand(INDEX_FIRST_PERSON), clearScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":267,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":268,"author":{"gitId":"vishandi"},"content":"        // viewSchedule","lastModifiedDate":"2022-03-28"},{"lineNumber":269,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d (ViewScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":270,"author":{"gitId":"vishandi"},"content":"                ViewScheduleCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":271,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":272,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewScheduleCommand(INDEX_FIRST_PERSON), viewScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":273,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":274,"author":{"gitId":"vishandi"},"content":"        // exportSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":275,"author":{"gitId":"vishandi"},"content":"        ExportScheduleCommand exportScheduleCommand \u003d (ExportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":276,"author":{"gitId":"vishandi"},"content":"                ExportScheduleCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":277,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":278,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ExportScheduleCommand(INDEX_FIRST_PERSON), exportScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":279,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":280,"author":{"gitId":"vishandi"},"content":"        // importSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":281,"author":{"gitId":"vishandi"},"content":"        ImportScheduleCommand importScheduleCommand \u003d (ImportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":282,"author":{"gitId":"vishandi"},"content":"                ImportScheduleCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":283,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_FILEPATH + TYPICAL_PATH","lastModifiedDate":"2022-03-29"},{"lineNumber":284,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":285,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ImportScheduleCommand(INDEX_FIRST_PERSON, Paths.get(TYPICAL_PATH)), importScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":286,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":287,"author":{"gitId":"vishandi"},"content":"        // setUser","lastModifiedDate":"2022-03-29"},{"lineNumber":288,"author":{"gitId":"vishandi"},"content":"        SetUserCommand setUserCommand \u003d (SetUserCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":289,"author":{"gitId":"vishandi"},"content":"                SetUserCommand.COMMAND_WORD_LOWER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":290,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":291,"author":{"gitId":"vishandi"},"content":"        assertEquals(new SetUserCommand(INDEX_FIRST_PERSON), setUserCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":292,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":293,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":294,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":295,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":296,"author":{"gitId":"vishandi"},"content":"    public void parseCommand_allUpperCase_success() throws ParseException {","lastModifiedDate":"2022-03-28"},{"lineNumber":297,"author":{"gitId":"vishandi"},"content":"        // add","lastModifiedDate":"2022-03-28"},{"lineNumber":298,"author":{"gitId":"vishandi"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":299,"author":{"gitId":"vishandi"},"content":"        AddCommand addCommand \u003d (AddCommand) parser.parseCommand(ADD_COMMAND_UPPER","lastModifiedDate":"2022-03-28"},{"lineNumber":300,"author":{"gitId":"vishandi"},"content":"                + PersonUtil.getAddCommand(person).substring(3));","lastModifiedDate":"2022-03-28"},{"lineNumber":301,"author":{"gitId":"vishandi"},"content":"        assertEquals(new AddCommand(person), addCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":302,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":303,"author":{"gitId":"vishandi"},"content":"        // clear","lastModifiedDate":"2022-03-28"},{"lineNumber":304,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(CLEAR_COMMAND_UPPER) instanceof ClearCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":305,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(CLEAR_COMMAND_UPPER + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":306,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":307,"author":{"gitId":"vishandi"},"content":"        // delete","lastModifiedDate":"2022-03-28"},{"lineNumber":308,"author":{"gitId":"vishandi"},"content":"        DeleteCommand deleteCommand \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":309,"author":{"gitId":"vishandi"},"content":"                DELETE_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":310,"author":{"gitId":"vishandi"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), deleteCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":311,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":312,"author":{"gitId":"vishandi"},"content":"        // edit","lastModifiedDate":"2022-03-28"},{"lineNumber":313,"author":{"gitId":"vishandi"},"content":"        person \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":314,"author":{"gitId":"vishandi"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":315,"author":{"gitId":"vishandi"},"content":"        EditCommand editCommand \u003d (EditCommand) parser.parseCommand(EDIT_COMMAND_UPPER + \" \"","lastModifiedDate":"2022-03-28"},{"lineNumber":316,"author":{"gitId":"vishandi"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2022-03-28"},{"lineNumber":317,"author":{"gitId":"vishandi"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), editCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":318,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":319,"author":{"gitId":"vishandi"},"content":"        // exit","lastModifiedDate":"2022-03-28"},{"lineNumber":320,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(EXIT_COMMAND_UPPER) instanceof ExitCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":321,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(EXIT_COMMAND_UPPER + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":322,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":323,"author":{"gitId":"vishandi"},"content":"        // find","lastModifiedDate":"2022-03-28"},{"lineNumber":324,"author":{"gitId":"vishandi"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-03-28"},{"lineNumber":325,"author":{"gitId":"vishandi"},"content":"        FindCommand findCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":326,"author":{"gitId":"vishandi"},"content":"                FIND_COMMAND_UPPER + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-03-28"},{"lineNumber":327,"author":{"gitId":"vishandi"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), findCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":328,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":329,"author":{"gitId":"vishandi"},"content":"        // help","lastModifiedDate":"2022-03-28"},{"lineNumber":330,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(HELP_COMMAND_UPPER) instanceof HelpCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":331,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(HELP_COMMAND_UPPER + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":332,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":333,"author":{"gitId":"vishandi"},"content":"        // list","lastModifiedDate":"2022-03-28"},{"lineNumber":334,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(LIST_COMMAND_UPPER) instanceof ListCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":335,"author":{"gitId":"vishandi"},"content":"        assertTrue(parser.parseCommand(LIST_COMMAND_UPPER + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":336,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":337,"author":{"gitId":"vishandi"},"content":"        // addEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":338,"author":{"gitId":"vishandi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2022-03-28"},{"lineNumber":339,"author":{"gitId":"vishandi"},"content":"        AddEventCommand addEventCommand \u003d (AddEventCommand) parser","lastModifiedDate":"2022-03-28"},{"lineNumber":340,"author":{"gitId":"vishandi"},"content":"                .parseCommand(ADD_EVENT_COMMAND_UPPER","lastModifiedDate":"2022-03-28"},{"lineNumber":341,"author":{"gitId":"vishandi"},"content":"                        + PersonUtil.getAddEventCommand(INDEX_FIRST_PERSON, event).substring(8));","lastModifiedDate":"2022-03-28"},{"lineNumber":342,"author":{"gitId":"vishandi"},"content":"        assertEquals(new AddEventCommand(INDEX_FIRST_PERSON, event), addEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":343,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":344,"author":{"gitId":"vishandi"},"content":"        // editEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":345,"author":{"gitId":"vishandi"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2022-03-28"},{"lineNumber":346,"author":{"gitId":"vishandi"},"content":"        EditEventCommand editEventCommand \u003d (EditEventCommand) parser.parseCommand(EDIT_EVENT_COMMAND_UPPER","lastModifiedDate":"2022-03-28"},{"lineNumber":347,"author":{"gitId":"vishandi"},"content":"                + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":348,"author":{"gitId":"vishandi"},"content":"                + \" \" + PersonUtil.getEditEventDescriptorDetails(editEventDescriptor));","lastModifiedDate":"2022-03-28"},{"lineNumber":349,"author":{"gitId":"vishandi"},"content":"        assertEquals(new EditEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT, editEventDescriptor),","lastModifiedDate":"2022-03-28"},{"lineNumber":350,"author":{"gitId":"vishandi"},"content":"                editEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":351,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":352,"author":{"gitId":"vishandi"},"content":"        // deleteEvent","lastModifiedDate":"2022-03-28"},{"lineNumber":353,"author":{"gitId":"vishandi"},"content":"        DeleteEventCommand deleteEventCommand \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":354,"author":{"gitId":"vishandi"},"content":"                DELETE_EVENT_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":355,"author":{"gitId":"vishandi"},"content":"                        + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2022-03-28"},{"lineNumber":356,"author":{"gitId":"vishandi"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_PERSON, INDEX_FIRST_EVENT), deleteEventCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":357,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":358,"author":{"gitId":"hanqinilnix"},"content":"        // whoIsFree","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand freeScheduleCommand \u003d (WhoIsFreeCommand) parser.parseCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"hanqinilnix"},"content":"                WHO_IS_FREE_COMMAND_UPPER + \" \" + PREFIX_TIME + TYPICAL_TIME.toString() + \" \"","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_DATE + TYPICAL_DATE.toString()","lastModifiedDate":"2022-03-28"},{"lineNumber":362,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":363,"author":{"gitId":"hanqinilnix"},"content":"        assertEquals(new WhoIsFreeCommand(new IsPersonFreePredicate(TYPICAL_TIME, TYPICAL_DATE, new HashSet\u003c\u003e())),","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"vishandi"},"content":"                freeScheduleCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":365,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":366,"author":{"gitId":"vishandi"},"content":"        // viewGroup","lastModifiedDate":"2022-03-28"},{"lineNumber":367,"author":{"gitId":"vishandi"},"content":"        String keyword \u003d \"foo\";","lastModifiedDate":"2022-03-28"},{"lineNumber":368,"author":{"gitId":"vishandi"},"content":"        ViewGroupCommand viewGroupCommand \u003d (ViewGroupCommand) parser.parseCommand(","lastModifiedDate":"2022-03-28"},{"lineNumber":369,"author":{"gitId":"vishandi"},"content":"                VIEW_GROUP_COMMAND_UPPER + \" \" + PREFIX_TAG + keyword","lastModifiedDate":"2022-03-28"},{"lineNumber":370,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":371,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewGroupCommand(new IsTagInPersonPredicate(new Tag(keyword))), viewGroupCommand);","lastModifiedDate":"2022-03-28"},{"lineNumber":372,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":373,"author":{"gitId":"vishandi"},"content":"        // clearSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":374,"author":{"gitId":"vishandi"},"content":"        ClearScheduleCommand command \u003d (ClearScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":375,"author":{"gitId":"vishandi"},"content":"                CLEAR_SCHEDULE_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":376,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":377,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ClearScheduleCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-03-29"},{"lineNumber":378,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":379,"author":{"gitId":"vishandi"},"content":"        // viewSchedule","lastModifiedDate":"2022-03-28"},{"lineNumber":380,"author":{"gitId":"vishandi"},"content":"        ViewScheduleCommand viewScheduleCommand \u003d (ViewScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":381,"author":{"gitId":"vishandi"},"content":"                VIEW_SCHEDULE_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-28"},{"lineNumber":382,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":383,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ViewScheduleCommand(INDEX_FIRST_PERSON), viewScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":384,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":385,"author":{"gitId":"vishandi"},"content":"        // exportSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":386,"author":{"gitId":"vishandi"},"content":"        ExportScheduleCommand exportScheduleCommand \u003d (ExportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":387,"author":{"gitId":"vishandi"},"content":"                EXPORT_SCHEDULE_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":388,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-28"},{"lineNumber":389,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ExportScheduleCommand(INDEX_FIRST_PERSON), exportScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":390,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":391,"author":{"gitId":"vishandi"},"content":"        // importSchedule","lastModifiedDate":"2022-03-29"},{"lineNumber":392,"author":{"gitId":"vishandi"},"content":"        ImportScheduleCommand importScheduleCommand \u003d (ImportScheduleCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":393,"author":{"gitId":"vishandi"},"content":"                IMPORT_SCHEDULE_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2022-03-29"},{"lineNumber":394,"author":{"gitId":"vishandi"},"content":"                        + PREFIX_FILEPATH + TYPICAL_PATH","lastModifiedDate":"2022-03-29"},{"lineNumber":395,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":396,"author":{"gitId":"vishandi"},"content":"        assertEquals(new ImportScheduleCommand(INDEX_FIRST_PERSON, Paths.get(TYPICAL_PATH)), importScheduleCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":397,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-29"},{"lineNumber":398,"author":{"gitId":"vishandi"},"content":"        // setUser","lastModifiedDate":"2022-03-29"},{"lineNumber":399,"author":{"gitId":"vishandi"},"content":"        SetUserCommand setUserCommand \u003d (SetUserCommand) parser.parseCommand(","lastModifiedDate":"2022-03-29"},{"lineNumber":400,"author":{"gitId":"vishandi"},"content":"                SET_USER_COMMAND_UPPER + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2022-03-29"},{"lineNumber":401,"author":{"gitId":"vishandi"},"content":"        );","lastModifiedDate":"2022-03-29"},{"lineNumber":402,"author":{"gitId":"vishandi"},"content":"        assertEquals(new SetUserCommand(INDEX_FIRST_PERSON), setUserCommand);","lastModifiedDate":"2022-03-29"},{"lineNumber":403,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":404,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tyanhan":7,"vishandi":299,"-":94,"hanqinilnix":15}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_NAME \u003d \"O\".repeat(31);","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_PHONE \u003d \"0\".repeat(16);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"    private static final String INVALID_TELEGRAM \u003d \"abcde**\";","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_TELEGRAM \u003d \"O\".repeat(41);","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    private static final String INVALID_GITHUB \u003d \"ab--e\";","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_GITHUB \u003d \"O\".repeat(40);","lastModifiedDate":"2022-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_EMAIL \u003d \"a\".repeat(49) + \"@example.com\";","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    private static final String INVALID_ADDRESS \u003d \"[]/\\\\\";","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_ADDRESS \u003d \"O\".repeat(81);","lastModifiedDate":"2022-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_TAG \u003d \"O\".repeat(31);","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"    private static final String INVALID_EVENT_DESCRIPTION \u003d \"abcde/fghij\";","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"    private static final String TOO_LONG_EVENT_DESCRIPTION \u003d \"O\".repeat(61);","lastModifiedDate":"2022-03-30"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DATE_YEAR_1999 \u003d \"1999-12-31\";","lastModifiedDate":"2022-03-30"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DATE_YEAR_2101 \u003d \"2101-01-01\";","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DATE_NEGATIVE \u003d \"-2101-01-01\";","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DATE_FORMAT \u003d \"2022-5-11\";","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_TIME \u003d \"24:00\";","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_TIME_HAS_SECONDS \u003d \"23:00:03\";","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_TIME_FORMAT \u003d \"001:00\";","lastModifiedDate":"2022-03-30"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION_NEGATIVE \u003d \"-3H\";","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION_FORMAT \u003d \"3HH\";","lastModifiedDate":"2022-03-30"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION_EXCEEDS_2_WEEKS \u003d \"336H1M\";","lastModifiedDate":"2022-03-30"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION_NON_INTEGER \u003d \"3H3.5M\";","lastModifiedDate":"2022-03-30"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION_MINUTES_60 \u003d \"2H60M\";","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_RECUR_FREQUENCY \u003d \"B\";","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_NAME \u003d \"O\".repeat(30);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_PHONE \u003d \"0\".repeat(15);","lastModifiedDate":"2022-03-30"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_TELEGRAM \u003d \"abcde\";","lastModifiedDate":"2022-03-28"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_TELEGRAM \u003d \"O\".repeat(40);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_GITHUB \u003d \"abcde\";","lastModifiedDate":"2022-03-28"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_GITHUB \u003d \"O\".repeat(39);","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_EMAIL \u003d \"a\".repeat(48) + \"@example.com\";","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-03-30"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_ADDRESS \u003d \"O\".repeat(80);","lastModifiedDate":"2022-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_TAG \u003d \"O\".repeat(30);","lastModifiedDate":"2022-03-30"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_EVENT_DESCRIPTION \u003d \"abcde\";","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"    private static final String MAXIMUM_LENGTH_EVENT_DESCRIPTION \u003d \"O\".repeat(60);","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DATE \u003d \"2022-03-30\";","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_TIME \u003d \"13:00\";","lastModifiedDate":"2022-03-30"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DURATION_HOURS_MINUTES \u003d \"3H20M\";","lastModifiedDate":"2022-03-30"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DURATION_MINUTES \u003d \"30M\";","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DURATION_HOURS \u003d \"3H\";","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DURATION_INTEGER \u003d \"3\";","lastModifiedDate":"2022-03-30"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_RECUR_FREQUENCY \u003d \"BiweekLy\";","lastModifiedDate":"2022-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(TOO_LONG_NAME));","lastModifiedDate":"2022-03-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"        Name maximumLengthName \u003d new Name(MAXIMUM_LENGTH_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":125,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthName, ParserUtil.parseName(MAXIMUM_LENGTH_NAME));","lastModifiedDate":"2022-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":133,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":134,"author":{"gitId":"vishandi"},"content":"        String maximumLengthNameWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_NAME + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":135,"author":{"gitId":"vishandi"},"content":"        Name maximumLengthName \u003d new Name(MAXIMUM_LENGTH_NAME);","lastModifiedDate":"2022-03-30"},{"lineNumber":136,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthName, ParserUtil.parseName(maximumLengthNameWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(TOO_LONG_PHONE));","lastModifiedDate":"2022-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":155,"author":{"gitId":"vishandi"},"content":"        Phone maximumLengthPhone \u003d new Phone(MAXIMUM_LENGTH_PHONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":156,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthPhone, ParserUtil.parsePhone(MAXIMUM_LENGTH_PHONE));","lastModifiedDate":"2022-03-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"        String maximumLengthPhoneWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_PHONE + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"        Phone maximumLengthPhone \u003d new Phone(MAXIMUM_LENGTH_PHONE);","lastModifiedDate":"2022-03-30"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthPhone, ParserUtil.parsePhone(maximumLengthPhoneWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"    public void parseTelegram_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegram((String) null));","lastModifiedDate":"2022-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"vishandi"},"content":"    public void parseTelegram_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":177,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(INVALID_TELEGRAM));","lastModifiedDate":"2022-03-28"},{"lineNumber":178,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegram(TOO_LONG_TELEGRAM));","lastModifiedDate":"2022-03-30"},{"lineNumber":179,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":180,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":181,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":182,"author":{"gitId":"vishandi"},"content":"    public void parseTelegram_validValueWithoutWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":183,"author":{"gitId":"vishandi"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-03-28"},{"lineNumber":184,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(VALID_TELEGRAM));","lastModifiedDate":"2022-03-30"},{"lineNumber":185,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":186,"author":{"gitId":"vishandi"},"content":"        Telegram maximumLengthTelegram \u003d new Telegram(MAXIMUM_LENGTH_TELEGRAM);","lastModifiedDate":"2022-03-30"},{"lineNumber":187,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthTelegram, ParserUtil.parseTelegram(MAXIMUM_LENGTH_TELEGRAM));","lastModifiedDate":"2022-03-30"},{"lineNumber":188,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":189,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":190,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":191,"author":{"gitId":"vishandi"},"content":"    public void parseTelegram_validValueWithWhitespace_returnsTelegram() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":192,"author":{"gitId":"vishandi"},"content":"        String telegramWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2022-03-28"},{"lineNumber":193,"author":{"gitId":"vishandi"},"content":"        Telegram expectedTelegram \u003d new Telegram(VALID_TELEGRAM);","lastModifiedDate":"2022-03-28"},{"lineNumber":194,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedTelegram, ParserUtil.parseTelegram(telegramWithWhitespace));","lastModifiedDate":"2022-03-28"},{"lineNumber":195,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":196,"author":{"gitId":"vishandi"},"content":"        String maximumLengthTelegramWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_TELEGRAM + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":197,"author":{"gitId":"vishandi"},"content":"        Telegram maximumLengthTelegram \u003d new Telegram(MAXIMUM_LENGTH_TELEGRAM);","lastModifiedDate":"2022-03-30"},{"lineNumber":198,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthTelegram, ParserUtil.parseTelegram(maximumLengthTelegramWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":199,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":200,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":201,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":202,"author":{"gitId":"vishandi"},"content":"    public void parseGitHub_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":203,"author":{"gitId":"vishandi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGithub((String) null));","lastModifiedDate":"2022-03-28"},{"lineNumber":204,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":205,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":206,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":207,"author":{"gitId":"vishandi"},"content":"    public void parseGitHub_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":208,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithub(INVALID_GITHUB));","lastModifiedDate":"2022-03-28"},{"lineNumber":209,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithub(TOO_LONG_GITHUB));","lastModifiedDate":"2022-03-30"},{"lineNumber":210,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":211,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":212,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":213,"author":{"gitId":"vishandi"},"content":"    public void parseGitHub_validValueWithoutWhitespace_returnsGitHub() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":214,"author":{"gitId":"vishandi"},"content":"        GitHub expectedGithub \u003d new GitHub(VALID_GITHUB);","lastModifiedDate":"2022-03-28"},{"lineNumber":215,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedGithub, ParserUtil.parseGithub(VALID_GITHUB));","lastModifiedDate":"2022-03-28"},{"lineNumber":216,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":217,"author":{"gitId":"vishandi"},"content":"        GitHub maximumLengthGithub \u003d new GitHub(MAXIMUM_LENGTH_GITHUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":218,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthGithub, ParserUtil.parseGithub(MAXIMUM_LENGTH_GITHUB));","lastModifiedDate":"2022-03-30"},{"lineNumber":219,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":220,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":221,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":222,"author":{"gitId":"vishandi"},"content":"    public void parseGitHub_validValueWithWhitespace_returnsGitHub() throws Exception {","lastModifiedDate":"2022-03-28"},{"lineNumber":223,"author":{"gitId":"vishandi"},"content":"        String githubWithWhitespace \u003d WHITESPACE + VALID_GITHUB + WHITESPACE;","lastModifiedDate":"2022-03-28"},{"lineNumber":224,"author":{"gitId":"vishandi"},"content":"        GitHub expectedGithub \u003d new GitHub(VALID_GITHUB);","lastModifiedDate":"2022-03-28"},{"lineNumber":225,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedGithub, ParserUtil.parseGithub(githubWithWhitespace));","lastModifiedDate":"2022-03-28"},{"lineNumber":226,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":227,"author":{"gitId":"vishandi"},"content":"        String maximumLengthGithubWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_GITHUB + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":228,"author":{"gitId":"vishandi"},"content":"        GitHub maximumLengthGithub \u003d new GitHub(MAXIMUM_LENGTH_GITHUB);","lastModifiedDate":"2022-03-30"},{"lineNumber":229,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthGithub, ParserUtil.parseGithub(maximumLengthGithubWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2022-03-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2022-03-30"},{"lineNumber":240,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(TOO_LONG_ADDRESS));","lastModifiedDate":"2022-03-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":248,"author":{"gitId":"vishandi"},"content":"        Address maximumLengthAddress \u003d new Address(MAXIMUM_LENGTH_ADDRESS);","lastModifiedDate":"2022-03-30"},{"lineNumber":249,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthAddress, ParserUtil.parseAddress(MAXIMUM_LENGTH_ADDRESS));","lastModifiedDate":"2022-03-30"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":258,"author":{"gitId":"vishandi"},"content":"        String maximumLengthAddressWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_ADDRESS + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":259,"author":{"gitId":"vishandi"},"content":"        Address maximumLengthAddress \u003d new Address(MAXIMUM_LENGTH_ADDRESS);","lastModifiedDate":"2022-03-30"},{"lineNumber":260,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthAddress, ParserUtil.parseAddress(maximumLengthAddressWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":271,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(TOO_LONG_EMAIL));","lastModifiedDate":"2022-03-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":278,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":279,"author":{"gitId":"vishandi"},"content":"        Email maximumLengthEmail \u003d new Email(MAXIMUM_LENGTH_EMAIL);","lastModifiedDate":"2022-03-30"},{"lineNumber":280,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthEmail, ParserUtil.parseEmail(MAXIMUM_LENGTH_EMAIL));","lastModifiedDate":"2022-03-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":288,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":289,"author":{"gitId":"vishandi"},"content":"        String maximumLengthEmailWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_EMAIL + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":290,"author":{"gitId":"vishandi"},"content":"        Email maximumLengthEmail \u003d new Email(MAXIMUM_LENGTH_EMAIL);","lastModifiedDate":"2022-03-30"},{"lineNumber":291,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthEmail, ParserUtil.parseEmail(maximumLengthEmailWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":302,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(TOO_LONG_TAG));","lastModifiedDate":"2022-03-30"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":309,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":310,"author":{"gitId":"vishandi"},"content":"        Tag maximumLengthTag \u003d new Tag(MAXIMUM_LENGTH_TAG);","lastModifiedDate":"2022-03-30"},{"lineNumber":311,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthTag, ParserUtil.parseTag(MAXIMUM_LENGTH_TAG));","lastModifiedDate":"2022-03-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":319,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":320,"author":{"gitId":"vishandi"},"content":"        String maximumLengthTagWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_TAG + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":321,"author":{"gitId":"vishandi"},"content":"        Tag maximumLengthTag \u003d new Tag(MAXIMUM_LENGTH_TAG);","lastModifiedDate":"2022-03-30"},{"lineNumber":322,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthTag, ParserUtil.parseTag(maximumLengthTagWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":333,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, TOO_LONG_TAG)));","lastModifiedDate":"2022-03-30"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":348,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":349,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":350,"author":{"gitId":"vishandi"},"content":"    public void parseEventDescription_null_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":351,"author":{"gitId":"vishandi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventDescription((String) null));","lastModifiedDate":"2022-03-30"},{"lineNumber":352,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":353,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":354,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":355,"author":{"gitId":"vishandi"},"content":"    public void parseEventDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":356,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDescription(INVALID_EVENT_DESCRIPTION));","lastModifiedDate":"2022-03-30"},{"lineNumber":357,"author":{"gitId":"vishandi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDescription(TOO_LONG_EVENT_DESCRIPTION));","lastModifiedDate":"2022-03-30"},{"lineNumber":358,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":359,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":360,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":361,"author":{"gitId":"vishandi"},"content":"    public void parseEventDescription_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":362,"author":{"gitId":"vishandi"},"content":"        EventDescription expectedEventDescription \u003d new EventDescription(VALID_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":363,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedEventDescription, ParserUtil.parseEventDescription(VALID_EVENT_DESCRIPTION));","lastModifiedDate":"2022-03-30"},{"lineNumber":364,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":365,"author":{"gitId":"vishandi"},"content":"        EventDescription maximumLengthEventDescription \u003d new EventDescription(MAXIMUM_LENGTH_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":366,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthEventDescription, ParserUtil.parseEventDescription(MAXIMUM_LENGTH_EVENT_DESCRIPTION));","lastModifiedDate":"2022-03-30"},{"lineNumber":367,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":368,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":369,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":370,"author":{"gitId":"vishandi"},"content":"    public void parseEventDescription_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":371,"author":{"gitId":"vishandi"},"content":"        String eventDescriptionWithWhitespace \u003d WHITESPACE + VALID_EVENT_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":372,"author":{"gitId":"vishandi"},"content":"        EventDescription expectedEventDescription \u003d new EventDescription(VALID_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":373,"author":{"gitId":"vishandi"},"content":"        assertEquals(expectedEventDescription, ParserUtil.parseEventDescription(eventDescriptionWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":374,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":375,"author":{"gitId":"vishandi"},"content":"        String maximumLengthEventDescriptionWithWhitespace \u003d WHITESPACE + MAXIMUM_LENGTH_EVENT_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-03-30"},{"lineNumber":376,"author":{"gitId":"vishandi"},"content":"        EventDescription maximumLengthEventDescription \u003d new EventDescription(MAXIMUM_LENGTH_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-30"},{"lineNumber":377,"author":{"gitId":"vishandi"},"content":"        assertEquals(maximumLengthEventDescription,","lastModifiedDate":"2022-03-30"},{"lineNumber":378,"author":{"gitId":"vishandi"},"content":"                ParserUtil.parseEventDescription(maximumLengthEventDescriptionWithWhitespace));","lastModifiedDate":"2022-03-30"},{"lineNumber":379,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-31"},{"lineNumber":380,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-31"},{"lineNumber":381,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":382,"author":{"gitId":"tyanhan"},"content":"    public void parseDate_invalidValues_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":383,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_FORMAT));","lastModifiedDate":"2022-03-30"},{"lineNumber":384,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_NEGATIVE));","lastModifiedDate":"2022-03-30"},{"lineNumber":385,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_YEAR_1999));","lastModifiedDate":"2022-03-30"},{"lineNumber":386,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE_YEAR_2101));","lastModifiedDate":"2022-03-30"},{"lineNumber":387,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":388,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":389,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":390,"author":{"gitId":"tyanhan"},"content":"    public void parseDate_nullThrowsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":391,"author":{"gitId":"tyanhan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":392,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":393,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":394,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":395,"author":{"gitId":"tyanhan"},"content":"    public void parseDate_validValue_returnsDate() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":396,"author":{"gitId":"tyanhan"},"content":"        LocalDate expectedDate \u003d LocalDate.parse(VALID_DATE);","lastModifiedDate":"2022-03-30"},{"lineNumber":397,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2022-03-30"},{"lineNumber":398,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":399,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":400,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":401,"author":{"gitId":"tyanhan"},"content":"    public void parseTime_invalidValues_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":402,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2022-03-30"},{"lineNumber":403,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME_FORMAT));","lastModifiedDate":"2022-03-30"},{"lineNumber":404,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME_HAS_SECONDS));","lastModifiedDate":"2022-03-30"},{"lineNumber":405,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":406,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":407,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":408,"author":{"gitId":"tyanhan"},"content":"    public void parseTime_nullThrowsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":409,"author":{"gitId":"tyanhan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":410,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":411,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":412,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":413,"author":{"gitId":"tyanhan"},"content":"    public void parseTime_validValue_returnsTime() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":414,"author":{"gitId":"tyanhan"},"content":"        LocalTime expectedTime \u003d LocalTime.parse(VALID_TIME);","lastModifiedDate":"2022-03-30"},{"lineNumber":415,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2022-03-30"},{"lineNumber":416,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":417,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":418,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":419,"author":{"gitId":"tyanhan"},"content":"    public void parseDuration_invalidValues_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":420,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION_MINUTES_60));","lastModifiedDate":"2022-03-30"},{"lineNumber":421,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION_FORMAT));","lastModifiedDate":"2022-03-30"},{"lineNumber":422,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION_NEGATIVE));","lastModifiedDate":"2022-03-30"},{"lineNumber":423,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION_NON_INTEGER));","lastModifiedDate":"2022-03-30"},{"lineNumber":424,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(INVALID_DURATION_EXCEEDS_2_WEEKS));","lastModifiedDate":"2022-03-30"},{"lineNumber":425,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":426,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":427,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":428,"author":{"gitId":"tyanhan"},"content":"    public void parseDuration_nullThrowsNullPointerException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":429,"author":{"gitId":"tyanhan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDuration(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":430,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":431,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":432,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":433,"author":{"gitId":"tyanhan"},"content":"    public void parseDuration_validValue_returnsDuration() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":434,"author":{"gitId":"tyanhan"},"content":"        Duration expectedDurationHours \u003d Duration.parse(\"PT\" + VALID_DURATION_HOURS);","lastModifiedDate":"2022-03-30"},{"lineNumber":435,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDurationHours, ParserUtil.parseDuration(VALID_DURATION_HOURS));","lastModifiedDate":"2022-03-30"},{"lineNumber":436,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":437,"author":{"gitId":"tyanhan"},"content":"        Duration expectedDurationMinutes \u003d Duration.parse(\"PT\" + VALID_DURATION_MINUTES);","lastModifiedDate":"2022-03-30"},{"lineNumber":438,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDurationMinutes, ParserUtil.parseDuration(VALID_DURATION_MINUTES));","lastModifiedDate":"2022-03-30"},{"lineNumber":439,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":440,"author":{"gitId":"tyanhan"},"content":"        Duration expectedDurationHoursMinutes \u003d Duration.parse(\"PT\" + VALID_DURATION_HOURS_MINUTES);","lastModifiedDate":"2022-03-30"},{"lineNumber":441,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDurationHoursMinutes, ParserUtil.parseDuration(VALID_DURATION_HOURS_MINUTES));","lastModifiedDate":"2022-03-30"},{"lineNumber":442,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":443,"author":{"gitId":"tyanhan"},"content":"        Duration expectedDurationInteger \u003d Duration.parse(\"PT\" + VALID_DURATION_INTEGER + \"H\");","lastModifiedDate":"2022-03-30"},{"lineNumber":444,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDurationInteger, ParserUtil.parseDuration(VALID_DURATION_INTEGER));","lastModifiedDate":"2022-03-30"},{"lineNumber":445,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":446,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":447,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":448,"author":{"gitId":"tyanhan"},"content":"    public void parseRecurFrequency_invalidValue_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":449,"author":{"gitId":"tyanhan"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRecurFrequency(INVALID_RECUR_FREQUENCY));","lastModifiedDate":"2022-03-30"},{"lineNumber":450,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":451,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":452,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":453,"author":{"gitId":"tyanhan"},"content":"    public void parseRecurFrequency_null_throwsParseException() {","lastModifiedDate":"2022-03-30"},{"lineNumber":454,"author":{"gitId":"tyanhan"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRecurFrequency(null));","lastModifiedDate":"2022-03-30"},{"lineNumber":455,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":456,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":457,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-30"},{"lineNumber":458,"author":{"gitId":"tyanhan"},"content":"    public void parseRecurFrequency_validValue_returnsRecurFrequency() throws Exception {","lastModifiedDate":"2022-03-30"},{"lineNumber":459,"author":{"gitId":"tyanhan"},"content":"        RecurFrequency expectedRecurFrequency \u003d RecurFrequency.BIWEEKLY;","lastModifiedDate":"2022-03-30"},{"lineNumber":460,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedRecurFrequency, ParserUtil.parseRecurFrequency(VALID_RECUR_FREQUENCY));","lastModifiedDate":"2022-03-30"},{"lineNumber":461,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-30"},{"lineNumber":462,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tyanhan":105,"vishandi":158,"-":199}},{"path":"src/test/java/seedu/address/logic/parser/person/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalPersons.CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"        Person expectedPerson \u003d new PersonBuilder(CAT).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_CAT + PHONE_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_CAT + PHONE_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_AMY + PHONE_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"        // multiple telegrams - last telegram accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + INVALID_TELEGRAM_DESC + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"        // multiple githubs - last github accepted","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + TELEGRAM_DESC_CAT + INVALID_GITHUB_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + EMAIL_DESC_AMY + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + EMAIL_DESC_CAT + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + EMAIL_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + ADDRESS_DESC_AMY + ADDRESS_DESC_CAT + TAG_DESC_FRIEND,","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(CAT).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + EMAIL_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + ADDRESS_DESC_AMY + ADDRESS_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"        // zero telegram","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"        Person expectedPersonNoTelegram \u003d new PersonBuilder(CAT).withTelegram(\"\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + GITHUB_DESC_CAT + EMAIL_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"                 + ADDRESS_DESC_CAT + TAG_DESC_FRIEND, new AddCommand(expectedPersonNoTelegram));","lastModifiedDate":"2022-03-17"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"        //zero github","lastModifiedDate":"2022-03-17"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"        Person expectedPersonNoGithub \u003d new PersonBuilder(CAT).withGithub(\"\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + TELEGRAM_DESC_CAT + EMAIL_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"                + ADDRESS_DESC_CAT + TAG_DESC_FRIEND, new AddCommand(expectedPersonNoGithub));","lastModifiedDate":"2022-03-17"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"        //zero email","lastModifiedDate":"2022-03-17"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"        Person expectedPersonNoEmail \u003d new PersonBuilder(CAT).withEmail(\"\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + GITHUB_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"                + ADDRESS_DESC_CAT + TAG_DESC_FRIEND, new AddCommand(expectedPersonNoEmail));","lastModifiedDate":"2022-03-17"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"        //zero address","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"        Person expectedPersonNoAddress \u003d new PersonBuilder(CAT).withAddress(\"\").build();","lastModifiedDate":"2022-03-17"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, NAME_DESC_CAT + PHONE_DESC_CAT + GITHUB_DESC_CAT + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":123,"author":{"gitId":"vishandi"},"content":"                + EMAIL_DESC_CAT + TAG_DESC_FRIEND, new AddCommand(expectedPersonNoAddress));","lastModifiedDate":"2022-03-17"},{"lineNumber":124,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"vishandi"},"content":"        // invalid telegram","lastModifiedDate":"2022-03-17"},{"lineNumber":159,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_TELEGRAM_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":160,"author":{"gitId":"vishandi"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":161,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":162,"author":{"gitId":"vishandi"},"content":"        // invalid github","lastModifiedDate":"2022-03-17"},{"lineNumber":163,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_GITHUB_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, GitHub.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":165,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tyanhan":3,"vishandi":68,"-":116}},{"path":"src/test/java/seedu/address/logic/parser/person/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.DeleteCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tyanhan":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/person/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-03-22"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-03-22"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2022-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.EditCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"    private static final String TELEGRAM_EMPTY \u003d \" \" + PREFIX_TELEGRAM;","lastModifiedDate":"2022-03-22"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"    private static final String GITHUB_EMPTY \u003d \" \" + PREFIX_GITHUB;","lastModifiedDate":"2022-03-22"},{"lineNumber":61,"author":{"gitId":"vishandi"},"content":"    private static final String EMAIL_EMPTY \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2022-03-22"},{"lineNumber":62,"author":{"gitId":"vishandi"},"content":"    private static final String ADDRESS_EMPTY \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2022-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS); // invalid telegram","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GITHUB_DESC, GitHub.MESSAGE_CONSTRAINTS); //invalid github","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TELEGRAM_DESC_CAT","lastModifiedDate":"2022-03-17"},{"lineNumber":128,"author":{"gitId":"vishandi"},"content":"                + GITHUB_DESC_CAT + TAG_DESC_FRIEND;","lastModifiedDate":"2022-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"vishandi"},"content":"                .withTelegram(VALID_TELEGRAM_CAT).withGithub(VALID_GITHUB_CAT)","lastModifiedDate":"2022-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"        // telegram","lastModifiedDate":"2022-03-17"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEGRAM_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(VALID_TELEGRAM_CAT).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":170,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"        // github","lastModifiedDate":"2022-03-17"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"        userInput \u003d targetIndex.getOneBased() + GITHUB_DESC_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":174,"author":{"gitId":"vishandi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithub(VALID_GITHUB_CAT).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":175,"author":{"gitId":"vishandi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-17"},{"lineNumber":176,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":177,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":241,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-22"},{"lineNumber":242,"author":{"gitId":"vishandi"},"content":"    public void parse_resetOptionalAttributes_success() {","lastModifiedDate":"2022-03-22"},{"lineNumber":243,"author":{"gitId":"vishandi"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-03-22"},{"lineNumber":244,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":245,"author":{"gitId":"vishandi"},"content":"        // Telegram","lastModifiedDate":"2022-03-22"},{"lineNumber":246,"author":{"gitId":"vishandi"},"content":"        String userInput \u003d targetIndex.getOneBased() + TELEGRAM_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":247,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":248,"author":{"gitId":"vishandi"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTelegram(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":249,"author":{"gitId":"vishandi"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":250,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":251,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":252,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":253,"author":{"gitId":"vishandi"},"content":"        // GitHub","lastModifiedDate":"2022-03-22"},{"lineNumber":254,"author":{"gitId":"vishandi"},"content":"        userInput \u003d targetIndex.getOneBased() + GITHUB_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":255,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":256,"author":{"gitId":"vishandi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGithub(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":257,"author":{"gitId":"vishandi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":258,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":259,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":260,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":261,"author":{"gitId":"vishandi"},"content":"        // Email","lastModifiedDate":"2022-03-22"},{"lineNumber":262,"author":{"gitId":"vishandi"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":263,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":264,"author":{"gitId":"vishandi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":265,"author":{"gitId":"vishandi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":266,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":267,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":268,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":269,"author":{"gitId":"vishandi"},"content":"        // Address","lastModifiedDate":"2022-03-22"},{"lineNumber":270,"author":{"gitId":"vishandi"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_EMPTY;","lastModifiedDate":"2022-03-22"},{"lineNumber":271,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":272,"author":{"gitId":"vishandi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(\"\").build();","lastModifiedDate":"2022-03-22"},{"lineNumber":273,"author":{"gitId":"vishandi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-03-22"},{"lineNumber":274,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-22"},{"lineNumber":275,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-22"},{"lineNumber":276,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tyanhan":4,"vishandi":70,"-":203}},{"path":"src/test/java/seedu/address/logic/parser/person/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.FindCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"tyanhan":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/person/SetUserCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.SetUserCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"public class SetUserCommandParserTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"    private SetUserCommandParser parser \u003d new SetUserCommandParser();","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"    public void parse_validArgs_returnsSetUserCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"        assertParseSuccess(parser, \"1\", new SetUserCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, SetUserCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":25}},{"path":"src/test/java/seedu/address/logic/parser/person/ViewScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.logic.parser.person;","lastModifiedDate":"2022-03-24"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-24"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-24"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-24"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-24"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-24"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.person.ViewScheduleCommand;","lastModifiedDate":"2022-03-25"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"public class ViewScheduleCommandParserTest {","lastModifiedDate":"2022-03-25"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"    private ViewScheduleCommandParser parser \u003d new ViewScheduleCommandParser();","lastModifiedDate":"2022-03-25"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-03-24"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"        assertParseSuccess(parser, \"1\", new ViewScheduleCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-03-25"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-24"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-24"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-03-25"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"                ViewScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-25"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-24"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-24"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-24"}],"authorContributionMap":{"vishandi":27}},{"path":"src/test/java/seedu/address/logic/parser/schedule/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_PI_DAY;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DURATION_DESC_TWO_HOURS;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESCRIPTION_DESC_CS2101;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DURATION_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DATE_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DESCRIPTION_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_TIME_DESC;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECUR_FREQUENCY_DESC_WEEKLY;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_MORNING;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DESCRIPTION;","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DURATION;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME;","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.AddEventCommand;","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"class AddEventCommandParserTest {","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"                + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY + TIME_DESC_MORNING","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"                + DURATION_DESC_TWO_HOURS + RECUR_FREQUENCY_DESC_WEEKLY;","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"        EventBuilder eventBuilder \u003d new EventBuilder();","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"        Event event \u003d eventBuilder.withEventDescription(VALID_EVENT_DESCRIPTION).withDate(VALID_EVENT_DATE)","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"                .withTime(VALID_EVENT_TIME).withDuration(VALID_EVENT_DURATION)","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"                .withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"        AddEventCommand expectedCommand \u003d new AddEventCommand(targetIndex, event);","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"        //invalid event description","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_EVENT_DESCRIPTION_DESC","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"                + DATE_DESC_PI_DAY, EventDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"        //invalid date","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + EVENT_DESCRIPTION_DESC_CS2101","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"                + INVALID_EVENT_DATE_DESC, Event.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        //invalid time","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"                + INVALID_EVENT_TIME_DESC, Event.TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"        //invalid duration","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY + TIME_DESC_MORNING","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"                + INVALID_DURATION_DESC, Event.DURATION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"    public void parse_missingFields_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"        //no index specified","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"        //missing event description","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"        //missing event date","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + EVENT_DESCRIPTION_DESC_CS2101, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"        //specified duration, but missing event time","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 \" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"                + DURATION_DESC_TWO_HOURS, String.format(MESSAGE_INVALID_COMMAND_FORMAT, Event.MISSING_TIME_MESSAGE));","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"    public void parse_invalidPreambles_failure() {","lastModifiedDate":"2022-03-17"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"        // negative index","lastModifiedDate":"2022-03-17"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"-5 \" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"        // zero index","lastModifiedDate":"2022-03-17"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"0\" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"        // multiple indices","lastModifiedDate":"2022-03-17"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"1 1\" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-17"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"some_random_string \" + EVENT_DESCRIPTION_DESC_CS2101","lastModifiedDate":"2022-03-17"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"                + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-17"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(parser, \"i/ \" + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-17"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"tyanhan":107}},{"path":"src/test/java/seedu/address/logic/parser/schedule/ClearScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.schedule.ClearScheduleCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"public class ClearScheduleCommandParserTest {","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"    private ClearScheduleCommandParser parser \u003d new ClearScheduleCommandParser();","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"    public void parse_validArgs_returnsClearScheduleCommand() {","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"        assertParseSuccess(parser, \"2\", new ClearScheduleCommand(INDEX_SECOND_PERSON));","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-03-28"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"        assertParseFailure(","lastModifiedDate":"2022-03-28"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"tyanhan":26}},{"path":"src/test/java/seedu/address/logic/parser/schedule/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-03"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.DeleteEventCommand;","lastModifiedDate":"2022-03-03"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2022-03-03"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2022-03-03"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-03"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        //only one index specified","lastModifiedDate":"2022-03-03"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-03"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-03"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-03-03"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        //negative index","lastModifiedDate":"2022-03-03"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"-5 3\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-03"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        assertParseFailure(parser, \"3 -5\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-03"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"    //TODO: add more tests","lastModifiedDate":"2022-03-03"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-03"}],"authorContributionMap":{"vishandi":30,"hanqinilnix":1}},{"path":"src/test/java/seedu/address/logic/parser/schedule/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-16"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_PI_DAY;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DURATION_DESC_TWO_HOURS;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DESCRIPTION_DESC_CS2101;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DURATION_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DATE_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DESCRIPTION_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_TIME_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RECUR_FREQUENCY_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RECUR_FREQUENCY_DESC_WEEKLY;","lastModifiedDate":"2022-03-16"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DESCRIPTION;","lastModifiedDate":"2022-03-16"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DURATION;","lastModifiedDate":"2022-03-16"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-16"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-16"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-16"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_HENDRI;","lastModifiedDate":"2022-03-16"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-16"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-16"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-16"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.EditEventCommand;","lastModifiedDate":"2022-03-16"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-16"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-16"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"class EditEventCommandParserTest {","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        // no index specified","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, VALID_EVENT_DATE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        // only one index specified","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        // no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        // no index and no field specified","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_invalidPreambles_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"        // negative indices","lastModifiedDate":"2022-03-16"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"-5 -2\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"        // negative index followed by valid index","lastModifiedDate":"2022-03-16"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"-5 1\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"        // valid index followed by negative index","lastModifiedDate":"2022-03-16"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 -2\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        // zero indices","lastModifiedDate":"2022-03-16"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"0 0\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"        // zero index followed by valid index","lastModifiedDate":"2022-03-16"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"0 1\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        // valid index followed by zero index","lastModifiedDate":"2022-03-16"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 0\" + DATE_DESC_PI_DAY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-03-16"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-03-16"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-16"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_EVENT_DESCRIPTION_DESC,","lastModifiedDate":"2022-03-16"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"                EventDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_EVENT_DATE_DESC, Event.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_EVENT_TIME_DESC, Event.TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_DURATION_DESC, Event.DURATION_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_RECUR_FREQUENCY_DESC,","lastModifiedDate":"2022-03-16"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"                RecurFrequency.INVALID_RECUR_FREQUENCY_MESSAGE);","lastModifiedDate":"2022-03-16"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"        // invalid event description followed by valid time","lastModifiedDate":"2022-03-16"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + INVALID_EVENT_DESCRIPTION_DESC + TIME_DESC_MORNING,","lastModifiedDate":"2022-03-16"},{"lineNumber":97,"author":{"gitId":"hanqinilnix"},"content":"                EventDescription.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":99,"author":{"gitId":"hanqinilnix"},"content":"        // valid date followed by invalid date","lastModifiedDate":"2022-03-16"},{"lineNumber":100,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"1 1\" + DATE_DESC_PI_DAY + INVALID_EVENT_DATE_DESC,","lastModifiedDate":"2022-03-16"},{"lineNumber":101,"author":{"gitId":"hanqinilnix"},"content":"                Event.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":102,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":103,"author":{"gitId":"hanqinilnix"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-03-16"},{"lineNumber":104,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-03-16"},{"lineNumber":105,"author":{"gitId":"hanqinilnix"},"content":"                \"1 1\" + INVALID_EVENT_DATE_DESC + INVALID_DURATION_DESC + EVENT_DESCRIPTION_DESC_CS2101,","lastModifiedDate":"2022-03-16"},{"lineNumber":106,"author":{"gitId":"hanqinilnix"},"content":"                Event.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":107,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":108,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":109,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":110,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":111,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":112,"author":{"gitId":"hanqinilnix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2022-03-16"},{"lineNumber":113,"author":{"gitId":"hanqinilnix"},"content":"                + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY + TIME_DESC_MORNING + DURATION_DESC_TWO_HOURS","lastModifiedDate":"2022-03-16"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"                + RECUR_FREQUENCY_DESC_WEEKLY;","lastModifiedDate":"2022-03-16"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":116,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":117,"author":{"gitId":"hanqinilnix"},"content":"                .withEventDescription(VALID_EVENT_DESCRIPTION)","lastModifiedDate":"2022-03-16"},{"lineNumber":118,"author":{"gitId":"hanqinilnix"},"content":"                .withDate(VALID_EVENT_DATE).withTime(VALID_EVENT_TIME).withDuration(VALID_EVENT_DURATION)","lastModifiedDate":"2022-03-16"},{"lineNumber":119,"author":{"gitId":"hanqinilnix"},"content":"                .withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":120,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":121,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":122,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":123,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":124,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":125,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":126,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":127,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":128,"author":{"gitId":"hanqinilnix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2022-03-16"},{"lineNumber":129,"author":{"gitId":"hanqinilnix"},"content":"                + EVENT_DESCRIPTION_DESC_CS2101 + DATE_DESC_PI_DAY + TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":130,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":131,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":132,"author":{"gitId":"hanqinilnix"},"content":"                .withEventDescription(VALID_EVENT_DESCRIPTION)","lastModifiedDate":"2022-03-16"},{"lineNumber":133,"author":{"gitId":"hanqinilnix"},"content":"                .withDate(VALID_EVENT_DATE).withTime(VALID_EVENT_TIME).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":134,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":135,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":136,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":137,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":138,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":139,"author":{"gitId":"hanqinilnix"},"content":"    // more test cases required","lastModifiedDate":"2022-03-16"},{"lineNumber":140,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":141,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":142,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex \u003d INDEX_HENDRI;","lastModifiedDate":"2022-03-16"},{"lineNumber":143,"author":{"gitId":"hanqinilnix"},"content":"        Index targetEventIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":144,"author":{"gitId":"hanqinilnix"},"content":"        // event description","lastModifiedDate":"2022-03-16"},{"lineNumber":145,"author":{"gitId":"hanqinilnix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased()","lastModifiedDate":"2022-03-16"},{"lineNumber":146,"author":{"gitId":"hanqinilnix"},"content":"                + EVENT_DESCRIPTION_DESC_CS2101;","lastModifiedDate":"2022-03-16"},{"lineNumber":147,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2022-03-16"},{"lineNumber":148,"author":{"gitId":"hanqinilnix"},"content":"                .withEventDescription(VALID_EVENT_DESCRIPTION).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":149,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":150,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":151,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":152,"author":{"gitId":"hanqinilnix"},"content":"        // date","lastModifiedDate":"2022-03-16"},{"lineNumber":153,"author":{"gitId":"hanqinilnix"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + DATE_DESC_PI_DAY;","lastModifiedDate":"2022-03-16"},{"lineNumber":154,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_EVENT_DATE).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":155,"author":{"gitId":"hanqinilnix"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":156,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":157,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":158,"author":{"gitId":"hanqinilnix"},"content":"        // time","lastModifiedDate":"2022-03-16"},{"lineNumber":159,"author":{"gitId":"hanqinilnix"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":160,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTime(VALID_EVENT_TIME).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":161,"author":{"gitId":"hanqinilnix"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":162,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":163,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":164,"author":{"gitId":"hanqinilnix"},"content":"        // duration","lastModifiedDate":"2022-03-16"},{"lineNumber":165,"author":{"gitId":"hanqinilnix"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + DURATION_DESC_TWO_HOURS;","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDuration(VALID_EVENT_DURATION).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":167,"author":{"gitId":"hanqinilnix"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":168,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":169,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":170,"author":{"gitId":"hanqinilnix"},"content":"        // recur frequency","lastModifiedDate":"2022-03-16"},{"lineNumber":171,"author":{"gitId":"hanqinilnix"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + RECUR_FREQUENCY_DESC_WEEKLY;","lastModifiedDate":"2022-03-16"},{"lineNumber":172,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withRecurFrequency(VALID_RECUR_FREQUENCY).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":173,"author":{"gitId":"hanqinilnix"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":174,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":175,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":176,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":177,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":178,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-03-16"},{"lineNumber":179,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":180,"author":{"gitId":"hanqinilnix"},"content":"        Index targetEventIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":181,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":182,"author":{"gitId":"hanqinilnix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + DATE_DESC_PI_DAY","lastModifiedDate":"2022-03-16"},{"lineNumber":183,"author":{"gitId":"hanqinilnix"},"content":"                + DURATION_DESC_TWO_HOURS + TIME_DESC_MORNING + DATE_DESC_PI_DAY + DURATION_DESC_TWO_HOURS","lastModifiedDate":"2022-03-16"},{"lineNumber":184,"author":{"gitId":"hanqinilnix"},"content":"                + TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":185,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":186,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_EVENT_DATE)","lastModifiedDate":"2022-03-16"},{"lineNumber":187,"author":{"gitId":"hanqinilnix"},"content":"                .withTime(VALID_EVENT_TIME).withDuration(VALID_EVENT_DURATION).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":188,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":189,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":190,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":191,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":192,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":193,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":194,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-03-16"},{"lineNumber":195,"author":{"gitId":"hanqinilnix"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-03-16"},{"lineNumber":196,"author":{"gitId":"hanqinilnix"},"content":"        Index targetEventIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2022-03-16"},{"lineNumber":197,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":198,"author":{"gitId":"hanqinilnix"},"content":"        // no other valid values specified","lastModifiedDate":"2022-03-16"},{"lineNumber":199,"author":{"gitId":"hanqinilnix"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + INVALID_EVENT_TIME_DESC","lastModifiedDate":"2022-03-16"},{"lineNumber":200,"author":{"gitId":"hanqinilnix"},"content":"                + TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":201,"author":{"gitId":"hanqinilnix"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withTime(VALID_EVENT_TIME).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":202,"author":{"gitId":"hanqinilnix"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":203,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":204,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":205,"author":{"gitId":"hanqinilnix"},"content":"        // other valid values specified","lastModifiedDate":"2022-03-16"},{"lineNumber":206,"author":{"gitId":"hanqinilnix"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + targetEventIndex.getOneBased() + DATE_DESC_PI_DAY","lastModifiedDate":"2022-03-16"},{"lineNumber":207,"author":{"gitId":"hanqinilnix"},"content":"                + INVALID_EVENT_TIME_DESC + DURATION_DESC_TWO_HOURS + TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":208,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_EVENT_DATE).withTime(VALID_EVENT_TIME)","lastModifiedDate":"2022-03-16"},{"lineNumber":209,"author":{"gitId":"hanqinilnix"},"content":"                .withDuration(VALID_EVENT_DURATION).build();","lastModifiedDate":"2022-03-16"},{"lineNumber":210,"author":{"gitId":"hanqinilnix"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, targetEventIndex, descriptor);","lastModifiedDate":"2022-03-16"},{"lineNumber":211,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":212,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":213,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-16"}],"authorContributionMap":{"tyanhan":1,"hanqinilnix":212}},{"path":"src/test/java/seedu/address/logic/parser/schedule/WhoIsFreeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.logic.parser.schedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_PI_DAY;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DATE_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_TIME_DESC;","lastModifiedDate":"2022-03-16"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIME_DESC_MORNING;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2022-03-16"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME;","lastModifiedDate":"2022-03-16"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.commands.schedule.WhoIsFreeCommand;","lastModifiedDate":"2022-03-30"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.IsPersonFreePredicate;","lastModifiedDate":"2022-03-15"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"class WhoIsFreeCommandParserTest {","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    private WhoIsFreeCommandParser parser \u003d new WhoIsFreeCommandParser();","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, WhoIsFreeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_validArgs_returnsFreeScheduleCommand() {","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"        String time \u003d \"23:00\";","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        String date \u003d \"2022-03-13\";","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"        // with time only","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand expectedFreeScheduleTimeOnlyCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"                new WhoIsFreeCommand(new IsPersonFreePredicate(LocalTime.parse(time), LocalDate.now(), emptyTags));","lastModifiedDate":"2022-03-30"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TIME + time, expectedFreeScheduleTimeOnlyCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        // with time and date","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand expectedFreeScheduleTimeAndDateCommand \u003d","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"                new WhoIsFreeCommand(new IsPersonFreePredicate(","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"                        LocalTime.parse(time), LocalDate.parse(date), emptyTags));","lastModifiedDate":"2022-03-30"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_TIME + time + \" \" + PREFIX_DATE + date,","lastModifiedDate":"2022-03-15"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"                expectedFreeScheduleTimeAndDateCommand);","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"        // invalid time","lastModifiedDate":"2022-03-15"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \" \" + PREFIX_TIME + INVALID_EVENT_TIME_DESC, Event.TIME_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"        // valid time but invalid date","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"        assertParseFailure(parser, \" \" + TIME_DESC_MORNING + INVALID_EVENT_DATE_DESC,","lastModifiedDate":"2022-03-16"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"                Event.DATE_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_timeAndDateSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand expectedCommand \u003d new WhoIsFreeCommand(new IsPersonFreePredicate(","lastModifiedDate":"2022-03-30"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"                LocalTime.parse(VALID_EVENT_TIME), LocalDate.parse(VALID_EVENT_DATE), emptyTags));","lastModifiedDate":"2022-03-30"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, \" \" + TIME_DESC_MORNING + DATE_DESC_PI_DAY, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"    public void parse_timeSpecified_success() {","lastModifiedDate":"2022-03-15"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"        WhoIsFreeCommand expectedCommand \u003d new WhoIsFreeCommand(","lastModifiedDate":"2022-03-30"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"                new IsPersonFreePredicate(LocalTime.parse(VALID_EVENT_TIME), LocalDate.now(), emptyTags));","lastModifiedDate":"2022-03-30"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"        assertParseSuccess(parser, \" \" + TIME_DESC_MORNING, expectedCommand);","lastModifiedDate":"2022-03-16"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"    // TODO: include test case to check for tags","lastModifiedDate":"2022-03-30"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"hanqinilnix":83}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"        String[] keywords \u003d ALICE.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2022-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"tyanhan":1,"-":131}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        //assertFalse(Address.isValidAddress(\"\")); // empty string Address can be empty.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"        assertFalse(Address.isValidAddress(\"A\".repeat(81))); // maximum length + 1 address","lastModifiedDate":"2022-03-30"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        assertFalse(Address.isValidAddress(\"[]/\\\\\")); // invalid punctuations","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"        assertTrue(Address.isValidAddress(\"A\".repeat(80))); // maximum length address","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        assertTrue(Address.isValidAddress(\"!\\\"#$\u0026\u0027()*+,-.:;\u003c\u003d\u003e?@ \")); // punctuations","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vishandi":5,"-":28}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        //assertFalse(Email.isValidEmail(\"\")); // empty string Email can be empty.","lastModifiedDate":"2022-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"        assertFalse(Email.isValidEmail(\"a\".repeat(49) + \"@example.com\")); // 61 characters","lastModifiedDate":"2022-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"vishandi"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-long-example.com\")); // long domain name","lastModifiedDate":"2022-03-30"},{"lineNumber":60,"author":{"gitId":"vishandi"},"content":"        assertTrue(Email.isValidEmail(\"a\".repeat(48) + \"@example.com\")); // 60 characters - maximum length","lastModifiedDate":"2022-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vishandi":4,"-":59}},{"path":"src/test/java/seedu/address/model/person/GitHubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-14"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-14"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-14"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-14"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-14"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"public class GitHubTest {","lastModifiedDate":"2022-03-14"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public void equals() {","lastModifiedDate":"2022-03-14"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        GitHub github \u003d new GitHub(\"example\");","lastModifiedDate":"2022-03-14"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"        assertTrue(github.equals(github));","lastModifiedDate":"2022-03-14"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"        // same values -\u003e return true","lastModifiedDate":"2022-03-14"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        assertTrue(github.equals(new GitHub(github.value)));","lastModifiedDate":"2022-03-14"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"        // different type -\u003e return false","lastModifiedDate":"2022-03-14"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        assertFalse(github.equals(1));","lastModifiedDate":"2022-03-14"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"        // null -\u003e return false","lastModifiedDate":"2022-03-14"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        assertFalse(github.equals(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        // different username -\u003e return false","lastModifiedDate":"2022-03-14"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        assertFalse(github.equals(new GitHub(\"Google\")));","lastModifiedDate":"2022-03-14"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    public void isValidUsername() {","lastModifiedDate":"2022-03-14"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"        // null username","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        assertThrows(NullPointerException.class, () -\u003e GitHub.isValidGitHub(null));","lastModifiedDate":"2022-03-14"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        // invalid username","lastModifiedDate":"2022-03-14"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"-a\")); // starts with hyphen","lastModifiedDate":"2022-03-14"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"a-\")); // ends with hyphen","lastModifiedDate":"2022-03-14"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"a*b\")); // invalid character","lastModifiedDate":"2022-03-14"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"a_b\")); // invalid character","lastModifiedDate":"2022-03-14"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"a\".repeat(40))); // exceed 39 maximum characters","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        assertFalse(GitHub.isValidGitHub(\"a--b\")); // hyphens followed by another hyphen","lastModifiedDate":"2022-03-14"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"        // valid username","lastModifiedDate":"2022-03-14"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"        assertTrue(GitHub.isValidGitHub(\"a\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        assertTrue(GitHub.isValidGitHub(\"a-b\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"        assertTrue(GitHub.isValidGitHub(\"a-b-c\"));","lastModifiedDate":"2022-03-14"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"        assertTrue(GitHub.isValidGitHub(\"a\".repeat(39)));","lastModifiedDate":"2022-03-14"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-14"}],"authorContributionMap":{"vishandi":50}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"        assertFalse(Name.isValidName(\"O\".repeat(31))); // maximum length name + 1","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        assertTrue(Name.isValidName(\"O\".repeat(30))); // maximum length name","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vishandi":2,"-":39}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        // same name and phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2022-02-27"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-02-27"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-02-27"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-02-27"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-02-27"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tyanhan":1,"vishandi":7,"-":84}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        assertFalse(Phone.isValidPhone(\"1234567890123456\")); // maximum length phone numbers + 1","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        assertTrue(Phone.isValidPhone(\"12429384203312\")); // long phone numbers","lastModifiedDate":"2022-03-30"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"        assertTrue(Phone.isValidPhone(\"123456789012345\")); // maximum length phone numbers","lastModifiedDate":"2022-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"vishandi":3,"-":39}},{"path":"src/test/java/seedu/address/model/person/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vishandi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-03-08"},{"lineNumber":2,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-08"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-08"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-08"},{"lineNumber":6,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-08"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"public class TelegramTest {","lastModifiedDate":"2022-03-08"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public void equals() {","lastModifiedDate":"2022-03-08"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"        Telegram telegram \u003d new Telegram(\"telegram\");","lastModifiedDate":"2022-03-08"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":16,"author":{"gitId":"vishandi"},"content":"        assertTrue(telegram.equals(telegram));","lastModifiedDate":"2022-03-08"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-08"},{"lineNumber":19,"author":{"gitId":"vishandi"},"content":"        assertTrue(telegram.equals(new Telegram(telegram.value)));","lastModifiedDate":"2022-03-08"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"        // different types -\u003e return false","lastModifiedDate":"2022-03-08"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"        assertFalse(telegram.equals(1));","lastModifiedDate":"2022-03-08"},{"lineNumber":23,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":25,"author":{"gitId":"vishandi"},"content":"        assertFalse(telegram.equals(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":27,"author":{"gitId":"vishandi"},"content":"        // different username -\u003e returns false","lastModifiedDate":"2022-03-08"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        assertFalse(telegram.equals(new Telegram(\"google\")));","lastModifiedDate":"2022-03-08"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    public void isValidUsername() {","lastModifiedDate":"2022-03-08"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"        // null username","lastModifiedDate":"2022-03-08"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        assertThrows(NullPointerException.class, () -\u003e Telegram.isValidTelegram(null));","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        // invalid username","lastModifiedDate":"2022-03-08"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"abc\")); // less than 5 characters","lastModifiedDate":"2022-03-09"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"abcde \")); // spaces in username","lastModifiedDate":"2022-03-09"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"abcde*\")); // asterisk in username","lastModifiedDate":"2022-03-09"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"_abcde\")); // starts with underscore","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"abcde_\")); // ends with underscore","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"abc__de\")); // contains consecutive underscores","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        assertFalse(Telegram.isValidTelegram(\"a\".repeat(41))); // exceeding 40 characters limit","lastModifiedDate":"2022-03-30"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"        //valid username","lastModifiedDate":"2022-03-08"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        assertTrue(Telegram.isValidTelegram(\"ab_cde\")); // contains underscore (_)","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"vishandi"},"content":"        assertTrue(Telegram.isValidTelegram(\"ab_cd_e\")); // contains multiple underscores","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"vishandi"},"content":"        assertTrue(Telegram.isValidTelegram(\"abcde_12345\")); // contains alphanumeric + underscore","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"        assertTrue(Telegram.isValidTelegram(\"a\".repeat(40))); // maximum length","lastModifiedDate":"2022-03-30"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"}","lastModifiedDate":"2022-03-08"}],"authorContributionMap":{"vishandi":51}},{"path":"src/test/java/seedu/address/model/schedule/EventDescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-16"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"class EventDescriptionTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDescription(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"    public void isValidEventDescription() {","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"        // null eventDescription","lastModifiedDate":"2022-03-30"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDescription.isValidEventDescription(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"        // invalid eventDescription","lastModifiedDate":"2022-03-30"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(EventDescription.isValidEventDescription(\"\")); // empty string","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(EventDescription.isValidEventDescription(\" \")); // spaces only","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"        assertFalse(EventDescription.isValidEventDescription(\"Meet John /at NUS\")); // contains /","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"        assertFalse(EventDescription.isValidEventDescription(\"/go school\")); // starts with /","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"vishandi"},"content":"        assertFalse(EventDescription.isValidEventDescription(\"O\".repeat(61))); // one more than maximum length;","lastModifiedDate":"2022-03-30"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"        // valid eventDescription","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"corporation drive\")); // alphabets only","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"12345\")); // numbers only","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"hougang 1st Ave\")); // alphanumeric characters","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"Hougang 1st Ave\")); // with capital letters","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"Blk 64 Lorong 5 Toa Payoh\")); //long names","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"^\")); // non-alphanumeric characters","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"Jurong*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        assertTrue(EventDescription.isValidEventDescription(\"O\".repeat(60))); // maximum length","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"    public void equals() {","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        EventDescription eventDescription \u003d new EventDescription(\"CS2101\");","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"        EventDescription eventDescriptionCopy \u003d new EventDescription(\"CS2101\");","lastModifiedDate":"2022-03-16"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"        EventDescription eventDescriptionDifferent \u003d new EventDescription(\"CS2103T\");","lastModifiedDate":"2022-03-16"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(eventDescription.equals(eventDescription));","lastModifiedDate":"2022-03-16"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-16"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(eventDescription.equals(eventDescriptionCopy));","lastModifiedDate":"2022-03-16"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(eventDescription.equals(null));","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(eventDescription.equals(5));","lastModifiedDate":"2022-03-16"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-16"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-03-16"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(eventDescription.equals(eventDescriptionDifferent));","lastModifiedDate":"2022-03-16"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-16"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tyanhan":4,"vishandi":5,"hanqinilnix":51}},{"path":"src/test/java/seedu/address/model/schedule/IsPersonFreePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-15"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-16"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalSchedule.getTypicalSchedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-15"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-15"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-03-30"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Set;","lastModifiedDate":"2022-03-30"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-15"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-03-15"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-30"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"class IsPersonFreePredicateTest {","lastModifiedDate":"2022-03-15"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"    public void equals() {","lastModifiedDate":"2022-03-15"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"        LocalTime piTime \u003d LocalTime.parse(\"03:14\");","lastModifiedDate":"2022-03-15"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate piDate \u003d LocalDate.parse(\"2022-03-14\");","lastModifiedDate":"2022-03-15"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"        LocalTime todayTime \u003d LocalTime.parse(\"20:30\");","lastModifiedDate":"2022-03-15"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"        LocalDate todayDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-15"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate piDayPredicate \u003d new IsPersonFreePredicate(piTime, piDate, emptyTags); // PI-day","lastModifiedDate":"2022-03-30"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate timeAndTodayPredicate \u003d new IsPersonFreePredicate(todayTime, todayDate, emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(piDayPredicate.equals(piDayPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-03-15"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate timeAndDateCopy \u003d new IsPersonFreePredicate(piTime, piDate, emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(piDayPredicate.equals(timeAndDateCopy));","lastModifiedDate":"2022-03-15"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(piDayPredicate.equals(1));","lastModifiedDate":"2022-03-15"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(piDayPredicate.equals(null));","lastModifiedDate":"2022-03-15"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"        // different time and date -\u003e returns false","lastModifiedDate":"2022-03-15"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"        assertFalse(piDayPredicate.equals(timeAndTodayPredicate));","lastModifiedDate":"2022-03-15"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"    @Test","lastModifiedDate":"2022-03-15"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"    public void test_isPersonFree_returnsTrue() {","lastModifiedDate":"2022-03-15"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        Person typicalStudent \u003d new PersonBuilder().withSchedule(getTypicalSchedule()).build();","lastModifiedDate":"2022-03-15"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"        Set\u003cTag\u003e emptyTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-03-30"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"        // Check no clashes (date used here is Sunday)","lastModifiedDate":"2022-03-30"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"        IsPersonFreePredicate predicate \u003d","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"                new IsPersonFreePredicate(LocalTime.parse(\"18:00\"), LocalDate.parse(\"2022-03-13\"), emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(predicate.test(typicalStudent));","lastModifiedDate":"2022-03-15"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"        // Check clash with date but not time","lastModifiedDate":"2022-03-15"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"        predicate \u003d new IsPersonFreePredicate(LocalTime.parse(\"18:00\"), LocalDate.parse(\"2022-03-16\"), emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(predicate.test(typicalStudent));","lastModifiedDate":"2022-03-15"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"        // Check clash with time but not date","lastModifiedDate":"2022-03-15"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"        predicate \u003d new IsPersonFreePredicate(LocalTime.parse(\"10:00\"), LocalDate.parse(\"2022-03-15\"), emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(predicate.test(typicalStudent));","lastModifiedDate":"2022-03-15"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"        // Clash date and end time","lastModifiedDate":"2022-03-15"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"        predicate \u003d new IsPersonFreePredicate(LocalTime.parse(\"11:00\"), LocalDate.parse(\"2022-03-14\"), emptyTags);","lastModifiedDate":"2022-03-30"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"        assertTrue(predicate.test(typicalStudent));","lastModifiedDate":"2022-03-15"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-15"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"    // To do manual testing","lastModifiedDate":"2022-03-23"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    //    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"    //    public void test_isPersonFree_returnsFalse() {","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"    //        Person studentWithSchedule \u003d new PersonBuilder().withSchedule(getTypicalSchedule()).build();","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"    //        Person studentWithoutSchedule \u003d new PersonBuilder().build();","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"    //","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"    //        // Clash date and start time","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"    //        IsPersonFreePredicate predicate \u003d","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"    //                new IsPersonFreePredicate(LocalTime.parse(\"10:00\"), LocalDate.parse(\"2022-03-14\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"    //        assertFalse(predicate.test(studentWithSchedule));","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"    //","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"    //        // Clash date and mid time","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"    //        predicate \u003d new IsPersonFreePredicate(LocalTime.parse(\"10:30\"), LocalDate.parse(\"2022-03-14\"));","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"    //        assertFalse(predicate.test(studentWithSchedule));","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"    //","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"    //        // No schedule","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"    //        assertFalse(predicate.test(studentWithoutSchedule));","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"    //    }","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-15"}],"authorContributionMap":{"tyanhan":17,"hanqinilnix":71}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-03-30"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":29,"author":{"gitId":"vishandi"},"content":"        // invalid tag names","lastModifiedDate":"2022-03-30"},{"lineNumber":30,"author":{"gitId":"vishandi"},"content":"        assertFalse(Tag.isValidTagName(\"/\")); // punctuation","lastModifiedDate":"2022-03-30"},{"lineNumber":31,"author":{"gitId":"vishandi"},"content":"        assertFalse(Tag.isValidTagName(\"O\".repeat(31))); // exceeds maximum length","lastModifiedDate":"2022-03-30"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"        assertFalse(Tag.isValidTagName(\"best friend\")); // contains space","lastModifiedDate":"2022-03-30"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-30"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"        // valid tag names","lastModifiedDate":"2022-03-30"},{"lineNumber":35,"author":{"gitId":"vishandi"},"content":"        assertTrue(Tag.isValidTagName(\"a\")); // one character only","lastModifiedDate":"2022-03-30"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"        assertTrue(Tag.isValidTagName(\"1\")); // one numeric character","lastModifiedDate":"2022-03-30"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"        assertTrue(Tag.isValidTagName(\"O\".repeat(30))); //maximum length","lastModifiedDate":"2022-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    @Test","lastModifiedDate":"2022-04-04"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    public void equals() {","lastModifiedDate":"2022-04-04"},{"lineNumber":42,"author":{"gitId":"vishandi"},"content":"        assertFalse(new Tag(\"abc\").equals(null)); // null","lastModifiedDate":"2022-04-04"},{"lineNumber":43,"author":{"gitId":"vishandi"},"content":"        assertFalse(new Tag(\"aBC\").equals(new Tag(\"Def\"))); // different tag","lastModifiedDate":"2022-04-04"},{"lineNumber":44,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"        assertTrue(new Tag(\"abc\").equals(new Tag(\"abc\"))); // same tag","lastModifiedDate":"2022-04-04"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"        assertTrue(new Tag(\"abC\").equals(new Tag(\"ABc\"))); // same lower case form","lastModifiedDate":"2022-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"tyanhan":2,"vishandi":19,"-":28}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static java.time.temporal.TemporalAdjusters.next;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalSchedule.SE_TUTORIAL;","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"tyanhan"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_EVENT_DESCRIPTION \u003d \"\";","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DATE \u003d \"20-12-2022\";","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_TIME \u003d \"09:000\";","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_DURATION \u003d \"8HdM\";","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"tyanhan"},"content":"    private static final String INVALID_RECURFREQUENCY \u003d \"non-recurring\";","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":29,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_EVENT_DESCRIPTION \u003d SE_TUTORIAL.getEventDescription().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":30,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DATE \u003d SE_TUTORIAL.getDate().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":31,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_TIME \u003d SE_TUTORIAL.getTime().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":32,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_DURATION \u003d SE_TUTORIAL.getDuration().toString().substring(2);","lastModifiedDate":"2022-03-29"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"    private static final String VALID_RECURFREQUENCY \u003d SE_TUTORIAL.getRecurFrequency().toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"    private static final String RECURFREQUENCY_DAILY \u003d \"D\";","lastModifiedDate":"2022-03-21"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"    private static final String RECURFREQUENCY_WEEKLY \u003d \"WEEKLY\";","lastModifiedDate":"2022-03-21"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"    private static final String RECURFREQUENCY_BIWEEKLY \u003d \"BIWEEKLY\";","lastModifiedDate":"2022-03-21"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"    private static final LocalDate PAST_RESET_DATE_ODD_LOCALDATE \u003d LocalDate.of(2020, 3, 14);","lastModifiedDate":"2022-03-21"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"    private static final DayOfWeek PAST_RESET_DATE_ODD_DAYOFWEEK \u003d PAST_RESET_DATE_ODD_LOCALDATE.getDayOfWeek();","lastModifiedDate":"2022-03-21"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"    private static final String PAST_RESET_DATE_ODD \u003d PAST_RESET_DATE_ODD_LOCALDATE.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":42,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":43,"author":{"gitId":"tyanhan"},"content":"    private static final LocalDate PAST_RESET_DATE_EVEN_LOCALDATE \u003d LocalDate.of(2020, 3, 7);","lastModifiedDate":"2022-03-21"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    private static final DayOfWeek PAST_RESET_DATE_EVEN_DAYOFWEEK \u003d PAST_RESET_DATE_EVEN_LOCALDATE.getDayOfWeek();","lastModifiedDate":"2022-03-21"},{"lineNumber":45,"author":{"gitId":"tyanhan"},"content":"    private static final String PAST_RESET_DATE_EVEN \u003d PAST_RESET_DATE_EVEN_LOCALDATE.toString();","lastModifiedDate":"2022-03-21"},{"lineNumber":46,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":48,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":49,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(SE_TUTORIAL);","lastModifiedDate":"2022-03-21"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        assertEquals(SE_TUTORIAL, event.toModelType());","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_invalidEventDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":55,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":56,"author":{"gitId":"tyanhan"},"content":"                INVALID_EVENT_DESCRIPTION, VALID_DATE, VALID_TIME, VALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d EventDescription.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-21"},{"lineNumber":58,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_nullEventDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"        System.out.println(VALID_DURATION);","lastModifiedDate":"2022-03-29"},{"lineNumber":64,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":65,"author":{"gitId":"tyanhan"},"content":"                null, VALID_DATE, VALID_TIME, VALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":66,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDescription.class.getSimpleName());","lastModifiedDate":"2022-03-21"},{"lineNumber":67,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":68,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":69,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":70,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":72,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":73,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, INVALID_DATE, VALID_TIME, VALID_DURATION, VALID_RECURFREQUENCY);;","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d Event.DATE_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-21"},{"lineNumber":75,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, null, VALID_TIME, VALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":82,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalDate.class.getSimpleName());","lastModifiedDate":"2022-03-21"},{"lineNumber":83,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":84,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":85,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":86,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":88,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, INVALID_TIME, VALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d Event.TIME_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":95,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":96,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":97,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, null, VALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":98,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LocalTime.class.getSimpleName());","lastModifiedDate":"2022-03-21"},{"lineNumber":99,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":100,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":101,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":102,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":103,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_invalidDuration_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":104,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":105,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, VALID_TIME, INVALID_DURATION, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":106,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d Event.DURATION_MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-03-21"},{"lineNumber":107,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":109,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":110,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":111,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_nullDuration_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":112,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":113,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, VALID_TIME, null, VALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":114,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Duration.class.getSimpleName());","lastModifiedDate":"2022-03-21"},{"lineNumber":115,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":116,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":117,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":118,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":119,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_invalidRecurFrequency_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":120,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":121,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, VALID_TIME, VALID_DURATION, INVALID_RECURFREQUENCY);","lastModifiedDate":"2022-03-21"},{"lineNumber":122,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d RecurFrequency.INVALID_RECUR_FREQUENCY_MESSAGE;","lastModifiedDate":"2022-03-21"},{"lineNumber":123,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":124,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":125,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":126,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":127,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_nullRecurFrequency_throwsIllegalValueException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":128,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":129,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, VALID_DATE, VALID_TIME, VALID_DURATION, null);","lastModifiedDate":"2022-03-21"},{"lineNumber":130,"author":{"gitId":"tyanhan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, RecurFrequency.class.getSimpleName());","lastModifiedDate":"2022-03-21"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2022-03-21"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":133,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":134,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":135,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_updateDaily_success() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":136,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":137,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, PAST_RESET_DATE_ODD, VALID_TIME, VALID_DURATION, RECURFREQUENCY_DAILY);","lastModifiedDate":"2022-03-21"},{"lineNumber":138,"author":{"gitId":"tyanhan"},"content":"        LocalDate expectedDate \u003d LocalDate.now();","lastModifiedDate":"2022-03-21"},{"lineNumber":139,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDate, event.toModelType().getDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":140,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":141,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":142,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":143,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_updateWeekly_success() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":144,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":145,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, PAST_RESET_DATE_ODD, VALID_TIME, VALID_DURATION, RECURFREQUENCY_WEEKLY);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"tyanhan"},"content":"        LocalDate expectedDate \u003d LocalDate.now().with(next(PAST_RESET_DATE_ODD_DAYOFWEEK));","lastModifiedDate":"2022-03-21"},{"lineNumber":147,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDate, event.toModelType().getDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":148,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":149,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":150,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":151,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_updateOddWeekBiweekly_success() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, PAST_RESET_DATE_ODD, VALID_TIME, VALID_DURATION, RECURFREQUENCY_BIWEEKLY);","lastModifiedDate":"2022-03-21"},{"lineNumber":154,"author":{"gitId":"tyanhan"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-21"},{"lineNumber":155,"author":{"gitId":"tyanhan"},"content":"        LocalDate expectedDate \u003d today.with(next(PAST_RESET_DATE_ODD_DAYOFWEEK));","lastModifiedDate":"2022-03-21"},{"lineNumber":156,"author":{"gitId":"tyanhan"},"content":"        if (ChronoUnit.DAYS.between(PAST_RESET_DATE_ODD_LOCALDATE, expectedDate) % 14 !\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":157,"author":{"gitId":"tyanhan"},"content":"            expectedDate \u003d expectedDate.with(next(PAST_RESET_DATE_ODD_DAYOFWEEK));","lastModifiedDate":"2022-03-21"},{"lineNumber":158,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":159,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDate, event.toModelType().getDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":160,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":161,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":162,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":163,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_updateEvenWeekBiweekly_success() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":164,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2022-03-21"},{"lineNumber":165,"author":{"gitId":"tyanhan"},"content":"                VALID_EVENT_DESCRIPTION, PAST_RESET_DATE_EVEN, VALID_TIME, VALID_DURATION, RECURFREQUENCY_BIWEEKLY);","lastModifiedDate":"2022-03-21"},{"lineNumber":166,"author":{"gitId":"tyanhan"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2022-03-21"},{"lineNumber":167,"author":{"gitId":"tyanhan"},"content":"        LocalDate expectedDate \u003d today.with(next(PAST_RESET_DATE_EVEN_DAYOFWEEK));","lastModifiedDate":"2022-03-21"},{"lineNumber":168,"author":{"gitId":"tyanhan"},"content":"        if (ChronoUnit.DAYS.between(PAST_RESET_DATE_EVEN_LOCALDATE, expectedDate) % 14 !\u003d 0) {","lastModifiedDate":"2022-03-21"},{"lineNumber":169,"author":{"gitId":"tyanhan"},"content":"            expectedDate \u003d expectedDate.with(next(PAST_RESET_DATE_EVEN_DAYOFWEEK));","lastModifiedDate":"2022-03-21"},{"lineNumber":170,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":171,"author":{"gitId":"tyanhan"},"content":"        assertEquals(expectedDate, event.toModelType().getDate());","lastModifiedDate":"2022-03-21"},{"lineNumber":172,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":173,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"tyanhan":173}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().toString();","lastModifiedDate":"2022-03-09"},{"lineNumber":33,"author":{"gitId":"vishandi"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().toString();","lastModifiedDate":"2022-03-14"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"    private static final JsonAdaptedSchedule VALID_SCHEDULE \u003d new JsonAdaptedSchedule(","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"            BENSON.getSchedule().getEvents().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"vishandi"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":50,"author":{"gitId":"vishandi"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":58,"author":{"gitId":"vishandi"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-08"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"    public void toModelType_nullTelegram_throwsIllegalValueException() {","lastModifiedDate":"2022-03-08"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-08"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Telegram.class.getSimpleName());","lastModifiedDate":"2022-03-08"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-08"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"    public void toModelType_nullGithub_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM, null,","lastModifiedDate":"2022-03-08"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GitHub.class.getSimpleName());","lastModifiedDate":"2022-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-03-14"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"                null, VALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB, VALID_EMAIL,","lastModifiedDate":"2022-03-14"},{"lineNumber":108,"author":{"gitId":"tyanhan"},"content":"                        INVALID_ADDRESS, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"                VALID_EMAIL, null, VALID_SCHEDULE, VALID_TAGS);","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"vishandi"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_TELEGRAM, VALID_GITHUB,","lastModifiedDate":"2022-03-14"},{"lineNumber":127,"author":{"gitId":"vishandi"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_SCHEDULE, invalidTags);","lastModifiedDate":"2022-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tyanhan":3,"vishandi":30,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tyanhan"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"tyanhan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"tyanhan"},"content":"import static seedu.address.testutil.TypicalSchedule.getTypicalSchedule;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"tyanhan"},"content":"public class JsonAdaptedScheduleTest {","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"tyanhan"},"content":"    private static final Schedule VALID_SCHEDULE \u003d getTypicalSchedule();","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"    @Test","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"tyanhan"},"content":"    public void toModelType_validScheduleDetails_returnsSchedule() throws Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"        JsonAdaptedSchedule schedule \u003d new JsonAdaptedSchedule(VALID_SCHEDULE);","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"tyanhan"},"content":"        assertEquals(VALID_SCHEDULE, schedule.toModelType());","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"tyanhan":19}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setEventDescription(event.getEventDescription());","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setTime(event.getTime());","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setDuration(event.getDuration());","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"        descriptor.setRecurFrequency(event.getRecurFrequency()); // default no recurrence","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code EventDescription} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder withEventDescription(String eventDescription) {","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setEventDescription(new EventDescription(eventDescription));","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code LocalDate} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"            descriptor.setDate(ParserUtil.parseDate(date));","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code LocalTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder withTime(String time) {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"            descriptor.setTime(ParserUtil.parseTime(time));","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code Duration} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder withDuration(String duration) {","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"            descriptor.setDuration(ParserUtil.parseDuration(duration));","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code RecurFrequency} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptorBuilder withRecurFrequency(String recurFrequency) {","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"            descriptor.setRecurFrequency(RecurFrequency.of(recurFrequency));","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"        return descriptor;","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":2,"hanqinilnix":94}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"vishandi"},"content":"        if (telegram.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":66,"author":{"gitId":"vishandi"},"content":"            descriptor.setTelegram(Telegram.EMPTY_TELEGRAM);","lastModifiedDate":"2022-03-22"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"            return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"        descriptor.setTelegram(new Telegram(telegram));","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"vishandi"},"content":"     * Sets the {@code GitHub} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"    public EditPersonDescriptorBuilder withGithub(String github) {","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"        if (github.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"            descriptor.setGithub(GitHub.EMPTY_GITHUB);","lastModifiedDate":"2022-03-22"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"            return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        descriptor.setGithub(new GitHub(github));","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        return this;","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"        if (email.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"            descriptor.setEmail(Email.EMPTY_EMAIL);","lastModifiedDate":"2022-03-22"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"            return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"        if (address.equals(\"\")) {","lastModifiedDate":"2022-03-22"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"            descriptor.setAddress(Address.EMPTY_ADDRESS);","lastModifiedDate":"2022-03-22"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"            return this;","lastModifiedDate":"2022-03-22"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tyanhan":3,"vishandi":25,"-":85,"hanqinilnix":9}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"hanqinilnix"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-13"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"public class EventBuilder {","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DEFAULT_EVENT_DESCRIPTION \u003d \"CS2101 Tutorial\";","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DEFAULT_DATE \u003d \"2022-03-12\";","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"    public static final String DEFAULT_TIME \u003d \"14:00\";","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"    public static final String DEFAULT_DURATION \u003d \"2H\";","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"tyanhan"},"content":"    public static final String DEFAULT_RECURRENCE \u003d \"WEEKLY\";","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"    private EventDescription eventDescription;","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"    private LocalDate date;","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"    private LocalTime time;","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    private Duration duration;","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"    private RecurFrequency recurFrequency;","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder() {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-16"},{"lineNumber":34,"author":{"gitId":"tyanhan"},"content":"            eventDescription \u003d ParserUtil.parseEventDescription(DEFAULT_EVENT_DESCRIPTION);","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"tyanhan"},"content":"            date \u003d ParserUtil.parseDate(DEFAULT_DATE);","lastModifiedDate":"2022-03-16"},{"lineNumber":36,"author":{"gitId":"tyanhan"},"content":"            time \u003d ParserUtil.parseTime(DEFAULT_TIME);","lastModifiedDate":"2022-03-16"},{"lineNumber":37,"author":{"gitId":"tyanhan"},"content":"            duration \u003d ParserUtil.parseDuration(DEFAULT_DURATION);","lastModifiedDate":"2022-03-16"},{"lineNumber":38,"author":{"gitId":"tyanhan"},"content":"            recurFrequency \u003d ParserUtil.parseRecurFrequency(DEFAULT_RECURRENCE);","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-16"},{"lineNumber":40,"author":{"gitId":"tyanhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-16"},{"lineNumber":41,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-16"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"        eventDescription \u003d eventToCopy.getEventDescription();","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"hanqinilnix"},"content":"        time \u003d eventToCopy.getTime();","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"hanqinilnix"},"content":"        duration \u003d eventToCopy.getDuration();","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        recurFrequency \u003d eventToCopy.getRecurFrequency();","lastModifiedDate":"2022-03-16"},{"lineNumber":53,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"hanqinilnix"},"content":"     * Sets the {@code EventDescription} of the {@code Event} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder withEventDescription(String eventDescription) {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"tyanhan"},"content":"            this.eventDescription \u003d ParserUtil.parseEventDescription(eventDescription);","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"hanqinilnix"},"content":"     * Parses and sets the {@code LocalDate} of the {@code Event} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"hanqinilnix"},"content":"            this.date \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":80,"author":{"gitId":"hanqinilnix"},"content":"     * Parses and sets the {@code LocalTime} of the {@code Event} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":81,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder withTime(String time) {","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"hanqinilnix"},"content":"            this.time \u003d ParserUtil.parseTime(time);","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":86,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":90,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":91,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":92,"author":{"gitId":"hanqinilnix"},"content":"     * Parses and sets the {@code Duration} of the {@code Event} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":93,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":94,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder withDuration(String duration) {","lastModifiedDate":"2022-03-13"},{"lineNumber":95,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":96,"author":{"gitId":"hanqinilnix"},"content":"            this.duration \u003d ParserUtil.parseDuration(duration);","lastModifiedDate":"2022-03-13"},{"lineNumber":97,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":98,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":99,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":100,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":101,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":102,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":103,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":104,"author":{"gitId":"hanqinilnix"},"content":"     * Parses and sets the {@code RecurFrequency} of the {@code Event} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":105,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":106,"author":{"gitId":"hanqinilnix"},"content":"    public EventBuilder withRecurFrequency(String recurFrequency) {","lastModifiedDate":"2022-03-13"},{"lineNumber":107,"author":{"gitId":"hanqinilnix"},"content":"        try {","lastModifiedDate":"2022-03-13"},{"lineNumber":108,"author":{"gitId":"hanqinilnix"},"content":"            this.recurFrequency \u003d ParserUtil.parseRecurFrequency(recurFrequency);","lastModifiedDate":"2022-03-13"},{"lineNumber":109,"author":{"gitId":"hanqinilnix"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":110,"author":{"gitId":"hanqinilnix"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-13"},{"lineNumber":111,"author":{"gitId":"hanqinilnix"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":112,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":113,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":114,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":115,"author":{"gitId":"hanqinilnix"},"content":"    public Event build() {","lastModifiedDate":"2022-03-13"},{"lineNumber":116,"author":{"gitId":"hanqinilnix"},"content":"        return new Event(eventDescription, date, time, duration, recurFrequency);","lastModifiedDate":"2022-03-13"},{"lineNumber":117,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":118,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":119,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-13"},{"lineNumber":120,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":18,"hanqinilnix":102}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-03"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-03"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-03"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-18"},{"lineNumber":7,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-03-03"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.GitHub;","lastModifiedDate":"2022-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.person.Telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-03"},{"lineNumber":22,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.EventDescription;","lastModifiedDate":"2022-03-03"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.RecurFrequency;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"vishandi"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"Amy_Bee\";","lastModifiedDate":"2022-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    private Telegram telegram;","lastModifiedDate":"2022-03-08"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"    private GitHub github;","lastModifiedDate":"2022-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"tyanhan"},"content":"    private Schedule schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"vishandi"},"content":"        telegram \u003d Telegram.EMPTY_TELEGRAM;","lastModifiedDate":"2022-03-08"},{"lineNumber":54,"author":{"gitId":"vishandi"},"content":"        github \u003d GitHub.EMPTY_GITHUB;","lastModifiedDate":"2022-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"tyanhan"},"content":"        schedule \u003d new Schedule(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2022-03-08"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"        github \u003d personToCopy.getGithub();","lastModifiedDate":"2022-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"tyanhan"},"content":"        schedule \u003d new Schedule(personToCopy.getSchedule().getEvents());","lastModifiedDate":"2022-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-08"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-08"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-08"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2022-03-08"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2022-03-08"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"        return this;","lastModifiedDate":"2022-03-08"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-08"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-08"},{"lineNumber":115,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-14"},{"lineNumber":116,"author":{"gitId":"vishandi"},"content":"     * Sets the {@code GitHub} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-14"},{"lineNumber":117,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-14"},{"lineNumber":118,"author":{"gitId":"vishandi"},"content":"    public PersonBuilder withGithub(String github) {","lastModifiedDate":"2022-03-14"},{"lineNumber":119,"author":{"gitId":"vishandi"},"content":"        this.github \u003d new GitHub(github);","lastModifiedDate":"2022-03-14"},{"lineNumber":120,"author":{"gitId":"vishandi"},"content":"        return this;","lastModifiedDate":"2022-03-14"},{"lineNumber":121,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-14"},{"lineNumber":122,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":131,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-02-18"},{"lineNumber":132,"author":{"gitId":"tyanhan"},"content":"     * Parses the {@code schedule} into a {@code Schedule} and set it to the {@code Person} that we are building.","lastModifiedDate":"2022-02-18"},{"lineNumber":133,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-02-18"},{"lineNumber":134,"author":{"gitId":"tyanhan"},"content":"    public PersonBuilder withSchedule(Schedule schedule) {","lastModifiedDate":"2022-02-18"},{"lineNumber":135,"author":{"gitId":"tyanhan"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2022-02-18"},{"lineNumber":136,"author":{"gitId":"tyanhan"},"content":"        return this;","lastModifiedDate":"2022-02-18"},{"lineNumber":137,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-02-18"},{"lineNumber":138,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-02-18"},{"lineNumber":139,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":140,"author":{"gitId":"hanqinilnix"},"content":"     * Adds the {@code Event} into the {@code Schedule} of the {@code Person} that we are building.","lastModifiedDate":"2022-03-13"},{"lineNumber":141,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":142,"author":{"gitId":"hanqinilnix"},"content":"    public PersonBuilder withEvent(Event event) {","lastModifiedDate":"2022-03-13"},{"lineNumber":143,"author":{"gitId":"hanqinilnix"},"content":"        ArrayList\u003cEvent\u003e newEvents \u003d new ArrayList\u003c\u003e(schedule.getEvents());","lastModifiedDate":"2022-03-13"},{"lineNumber":144,"author":{"gitId":"hanqinilnix"},"content":"        newEvents.add(event);","lastModifiedDate":"2022-03-13"},{"lineNumber":145,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(newEvents);","lastModifiedDate":"2022-03-21"},{"lineNumber":146,"author":{"gitId":"hanqinilnix"},"content":"        schedule \u003d new Schedule(newEvents);","lastModifiedDate":"2022-03-13"},{"lineNumber":147,"author":{"gitId":"hanqinilnix"},"content":"        return this;","lastModifiedDate":"2022-03-13"},{"lineNumber":148,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":149,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":150,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-03"},{"lineNumber":151,"author":{"gitId":"tyanhan"},"content":"     * Parses the arguments to create an {@code Event} and add it to the {@code Schedule}","lastModifiedDate":"2022-03-21"},{"lineNumber":152,"author":{"gitId":"tyanhan"},"content":"     * of the {@code Person} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":153,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-03"},{"lineNumber":154,"author":{"gitId":"tyanhan"},"content":"    public PersonBuilder withEvent(String description, String date, String time, String duration,","lastModifiedDate":"2022-03-07"},{"lineNumber":155,"author":{"gitId":"tyanhan"},"content":"                                   String recurFrequency) {","lastModifiedDate":"2022-03-07"},{"lineNumber":156,"author":{"gitId":"tyanhan"},"content":"        EventDescription eventDescription \u003d new EventDescription(description);","lastModifiedDate":"2022-03-07"},{"lineNumber":157,"author":{"gitId":"vishandi"},"content":"        try {","lastModifiedDate":"2022-03-03"},{"lineNumber":158,"author":{"gitId":"tyanhan"},"content":"            LocalDate eventDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-07"},{"lineNumber":159,"author":{"gitId":"tyanhan"},"content":"            LocalTime eventTime \u003d ParserUtil.parseTime(time);","lastModifiedDate":"2022-03-07"},{"lineNumber":160,"author":{"gitId":"tyanhan"},"content":"            Duration eventDuration \u003d ParserUtil.parseDuration(duration);","lastModifiedDate":"2022-03-07"},{"lineNumber":161,"author":{"gitId":"tyanhan"},"content":"            RecurFrequency eventRecurFrequency \u003d ParserUtil.parseRecurFrequency(recurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":162,"author":{"gitId":"tyanhan"},"content":"            Event event \u003d new Event(eventDescription, eventDate, eventTime, eventDuration, eventRecurFrequency);","lastModifiedDate":"2022-03-07"},{"lineNumber":163,"author":{"gitId":"tyanhan"},"content":"            ArrayList\u003cEvent\u003e newEvents \u003d new ArrayList\u003c\u003e(this.schedule.getEvents());","lastModifiedDate":"2022-03-15"},{"lineNumber":164,"author":{"gitId":"vishandi"},"content":"            newEvents.add(event);","lastModifiedDate":"2022-03-03"},{"lineNumber":165,"author":{"gitId":"tyanhan"},"content":"            Collections.sort(newEvents);","lastModifiedDate":"2022-03-16"},{"lineNumber":166,"author":{"gitId":"vishandi"},"content":"            this.schedule \u003d new Schedule(newEvents);","lastModifiedDate":"2022-03-03"},{"lineNumber":167,"author":{"gitId":"vishandi"},"content":"            return this;","lastModifiedDate":"2022-03-03"},{"lineNumber":168,"author":{"gitId":"vishandi"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-03"},{"lineNumber":169,"author":{"gitId":"vishandi"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-03"},{"lineNumber":170,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-03"},{"lineNumber":171,"author":{"gitId":"vishandi"},"content":"        return this;","lastModifiedDate":"2022-03-03"},{"lineNumber":172,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-03"},{"lineNumber":173,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-03"},{"lineNumber":174,"author":{"gitId":"tyanhan"},"content":"    /**","lastModifiedDate":"2022-03-21"},{"lineNumber":175,"author":{"gitId":"tyanhan"},"content":"     * Parses the arguments to create an {@code Event} and add its next recurrence to the {@code Schedule} of the","lastModifiedDate":"2022-03-21"},{"lineNumber":176,"author":{"gitId":"tyanhan"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2022-03-21"},{"lineNumber":177,"author":{"gitId":"tyanhan"},"content":"     */","lastModifiedDate":"2022-03-21"},{"lineNumber":178,"author":{"gitId":"tyanhan"},"content":"    public PersonBuilder withClosestEvent(String description, String date, String time, String duration,","lastModifiedDate":"2022-03-21"},{"lineNumber":179,"author":{"gitId":"tyanhan"},"content":"                                   String recurFrequency) {","lastModifiedDate":"2022-03-21"},{"lineNumber":180,"author":{"gitId":"tyanhan"},"content":"        EventDescription eventDescription \u003d new EventDescription(description);","lastModifiedDate":"2022-03-21"},{"lineNumber":181,"author":{"gitId":"tyanhan"},"content":"        try {","lastModifiedDate":"2022-03-21"},{"lineNumber":182,"author":{"gitId":"tyanhan"},"content":"            LocalDate eventDate \u003d ParserUtil.parseDate(date);","lastModifiedDate":"2022-03-21"},{"lineNumber":183,"author":{"gitId":"tyanhan"},"content":"            LocalTime eventTime \u003d ParserUtil.parseTime(time);","lastModifiedDate":"2022-03-21"},{"lineNumber":184,"author":{"gitId":"tyanhan"},"content":"            Duration eventDuration \u003d ParserUtil.parseDuration(duration);","lastModifiedDate":"2022-03-21"},{"lineNumber":185,"author":{"gitId":"tyanhan"},"content":"            RecurFrequency eventRecurFrequency \u003d ParserUtil.parseRecurFrequency(recurFrequency);","lastModifiedDate":"2022-03-21"},{"lineNumber":186,"author":{"gitId":"tyanhan"},"content":"            Event event \u003d new Event(eventDescription, eventDate, eventTime, eventDuration, eventRecurFrequency);","lastModifiedDate":"2022-03-21"},{"lineNumber":187,"author":{"gitId":"hanqinilnix"},"content":"            Event nextRecurringEvent \u003d event.getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":188,"author":{"gitId":"tyanhan"},"content":"            ArrayList\u003cEvent\u003e newEvents \u003d new ArrayList\u003c\u003e(this.schedule.getEvents());","lastModifiedDate":"2022-03-21"},{"lineNumber":189,"author":{"gitId":"tyanhan"},"content":"            newEvents.add(nextRecurringEvent);","lastModifiedDate":"2022-03-21"},{"lineNumber":190,"author":{"gitId":"tyanhan"},"content":"            Collections.sort(newEvents);","lastModifiedDate":"2022-03-21"},{"lineNumber":191,"author":{"gitId":"tyanhan"},"content":"            this.schedule \u003d new Schedule(newEvents);","lastModifiedDate":"2022-03-21"},{"lineNumber":192,"author":{"gitId":"tyanhan"},"content":"            return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":193,"author":{"gitId":"tyanhan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-03-21"},{"lineNumber":194,"author":{"gitId":"tyanhan"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-03-21"},{"lineNumber":195,"author":{"gitId":"tyanhan"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":196,"author":{"gitId":"tyanhan"},"content":"        return this;","lastModifiedDate":"2022-03-21"},{"lineNumber":197,"author":{"gitId":"tyanhan"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":198,"author":{"gitId":"tyanhan"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":200,"author":{"gitId":"vishandi"},"content":"        return new Person(name, phone, telegram, github, email, address, schedule, tags);","lastModifiedDate":"2022-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tyanhan":53,"vishandi":45,"-":94,"hanqinilnix":11}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2022-03-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DESCRIPTION;","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECUR_FREQUENCY;","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"vishandi"},"content":"import java.time.Duration;","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"vishandi"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.EditUtil.EditEventDescriptor;","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.EditUtil.EditPersonDescriptor;","lastModifiedDate":"2022-02-27"},{"lineNumber":20,"author":{"gitId":"tyanhan"},"content":"import seedu.address.logic.commands.person.AddCommand;","lastModifiedDate":"2022-03-05"},{"lineNumber":21,"author":{"gitId":"vishandi"},"content":"import seedu.address.logic.commands.schedule.AddEventCommand;","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"tyanhan"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"vishandi"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    public static String getAddEventCommand(Index index, Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":39,"author":{"gitId":"vishandi"},"content":"        return AddEventCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + getEventDetails(event);","lastModifiedDate":"2022-03-28"},{"lineNumber":40,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"tyanhan"},"content":"        sb.append(PREFIX_NAME + person.getName().value + \" \");","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"tyanhan"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.value).append(\" \"));","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":77,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":78,"author":{"gitId":"vishandi"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2022-03-28"},{"lineNumber":79,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":80,"author":{"gitId":"vishandi"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2022-03-28"},{"lineNumber":81,"author":{"gitId":"vishandi"},"content":"        Duration duration \u003d event.getDuration();","lastModifiedDate":"2022-03-28"},{"lineNumber":82,"author":{"gitId":"vishandi"},"content":"        String hours \u003d String.valueOf(duration.toHours());","lastModifiedDate":"2022-03-28"},{"lineNumber":83,"author":{"gitId":"vishandi"},"content":"        String minutes \u003d String.valueOf(duration.toMinutes() % 60);","lastModifiedDate":"2022-03-28"},{"lineNumber":84,"author":{"gitId":"vishandi"},"content":"        String durationString \u003d String.format(\"%1$sH%2$sM\", hours, minutes);","lastModifiedDate":"2022-03-28"},{"lineNumber":85,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":86,"author":{"gitId":"vishandi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":87,"author":{"gitId":"vishandi"},"content":"        sb.append(PREFIX_EVENT_DESCRIPTION + event.getEventDescription().value + \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        sb.append(PREFIX_DATE + event.getDate().toString() + \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":89,"author":{"gitId":"vishandi"},"content":"        sb.append(PREFIX_TIME + event.getTime().toString() + \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":90,"author":{"gitId":"vishandi"},"content":"        sb.append(PREFIX_DURATION + durationString + \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":91,"author":{"gitId":"vishandi"},"content":"        sb.append(PREFIX_RECUR_FREQUENCY + event.getRecurFrequency().getShortName() + \" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":92,"author":{"gitId":"vishandi"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":93,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":94,"author":{"gitId":"vishandi"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":95,"author":{"gitId":"vishandi"},"content":"    /**","lastModifiedDate":"2022-03-28"},{"lineNumber":96,"author":{"gitId":"vishandi"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2022-03-28"},{"lineNumber":97,"author":{"gitId":"vishandi"},"content":"     */","lastModifiedDate":"2022-03-28"},{"lineNumber":98,"author":{"gitId":"vishandi"},"content":"    public static String getEditEventDescriptorDetails(EditEventDescriptor descriptor) {","lastModifiedDate":"2022-03-28"},{"lineNumber":99,"author":{"gitId":"vishandi"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-03-28"},{"lineNumber":100,"author":{"gitId":"vishandi"},"content":"        descriptor.getEventDescription().ifPresent(ed -\u003e sb.append(PREFIX_EVENT_DESCRIPTION)","lastModifiedDate":"2022-03-28"},{"lineNumber":101,"author":{"gitId":"vishandi"},"content":"                .append(ed.value).append(\" \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":102,"author":{"gitId":"vishandi"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date).append(\" \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":103,"author":{"gitId":"vishandi"},"content":"        descriptor.getTime().ifPresent(time -\u003e sb.append(PREFIX_TIME).append(time).append(\" \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":104,"author":{"gitId":"vishandi"},"content":"        if (descriptor.getDuration().isPresent()) {","lastModifiedDate":"2022-03-28"},{"lineNumber":105,"author":{"gitId":"vishandi"},"content":"            Duration duration \u003d descriptor.getDuration().get();","lastModifiedDate":"2022-03-28"},{"lineNumber":106,"author":{"gitId":"vishandi"},"content":"            String hours \u003d String.valueOf(duration.toHours());","lastModifiedDate":"2022-03-28"},{"lineNumber":107,"author":{"gitId":"vishandi"},"content":"            String minutes \u003d String.valueOf(duration.toMinutes() % 60);","lastModifiedDate":"2022-03-28"},{"lineNumber":108,"author":{"gitId":"vishandi"},"content":"            String durationString \u003d String.format(\"%1$sH%2$sM\", hours, minutes);","lastModifiedDate":"2022-03-28"},{"lineNumber":109,"author":{"gitId":"vishandi"},"content":"            sb.append(PREFIX_DURATION).append(durationString).append(\" \");","lastModifiedDate":"2022-03-28"},{"lineNumber":110,"author":{"gitId":"vishandi"},"content":"        }","lastModifiedDate":"2022-03-28"},{"lineNumber":111,"author":{"gitId":"vishandi"},"content":"        descriptor.getRecurFrequency().ifPresent(rf -\u003e sb.append(PREFIX_RECUR_FREQUENCY)","lastModifiedDate":"2022-03-28"},{"lineNumber":112,"author":{"gitId":"vishandi"},"content":"                .append(rf.getShortName()).append(\" \"));","lastModifiedDate":"2022-03-28"},{"lineNumber":113,"author":{"gitId":"vishandi"},"content":"        return sb.toString();","lastModifiedDate":"2022-03-28"},{"lineNumber":114,"author":{"gitId":"vishandi"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tyanhan":5,"vishandi":53,"-":57}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"    public static final Index INDEX_HENDRI \u003d Index.fromOneBased(8);","lastModifiedDate":"2022-03-03"},{"lineNumber":13,"author":{"gitId":"vishandi"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"vishandi":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"vishandi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TELEGRAM_CAT;","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"import static seedu.address.testutil.TypicalSchedule.getTypicalSchedule;","lastModifiedDate":"2022-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"            .withPhone(\"94351253\").withSchedule(getTypicalSchedule())","lastModifiedDate":"2022-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"hanqinilnix"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withSchedule(getTypicalSchedule())","lastModifiedDate":"2022-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"vishandi"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withTelegram(\"Elle_chan\")","lastModifiedDate":"2022-03-14"},{"lineNumber":46,"author":{"gitId":"vishandi"},"content":"            .withGithub(\"Elle-chan\").build();","lastModifiedDate":"2022-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"vishandi"},"content":"    public static final Person HENDRI \u003d new PersonBuilder().withName(\"Hendri Tanjaya\").withPhone(\"85108989\")","lastModifiedDate":"2022-03-03"},{"lineNumber":52,"author":{"gitId":"vishandi"},"content":"            .withEmail(\"hendri@example.com\").withAddress(\"PGPR\")","lastModifiedDate":"2022-03-03"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"            .withClosestEvent(\"Tutorial CS2103T\", \"2022-03-16\", \"09:00\", \"1H\", \"W\").build();","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"vishandi"},"content":"    public static final Person CAT \u003d new PersonBuilder().withName(VALID_NAME_CAT).withPhone(VALID_PHONE_CAT)","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"vishandi"},"content":"            .withEmail(VALID_EMAIL_CAT).withAddress(VALID_ADDRESS_CAT).withTelegram(VALID_TELEGRAM_CAT)","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"vishandi"},"content":"            .withGithub(VALID_GITHUB_CAT).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"hanqinilnix"},"content":"    private TypicalPersons() {","lastModifiedDate":"2022-03-16"},{"lineNumber":74,"author":{"gitId":"hanqinilnix"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"vishandi"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HENDRI));","lastModifiedDate":"2022-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"tyanhan":1,"vishandi":14,"-":70,"hanqinilnix":5}},{"path":"src/test/java/seedu/address/testutil/TypicalSchedule.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hanqinilnix"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"vishandi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"vishandi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-28"},{"lineNumber":5,"author":{"gitId":"hanqinilnix"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"tyanhan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-03-21"},{"lineNumber":7,"author":{"gitId":"hanqinilnix"},"content":"import java.util.List;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Event;","lastModifiedDate":"2022-03-13"},{"lineNumber":10,"author":{"gitId":"hanqinilnix"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"hanqinilnix"},"content":"/**","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"hanqinilnix"},"content":" * A utility class containing a {@code Schedule} object to be used in tests.","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"hanqinilnix"},"content":" */","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"hanqinilnix"},"content":"public class TypicalSchedule {","lastModifiedDate":"2022-03-13"},{"lineNumber":16,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":17,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event SE_TUTORIAL \u003d new EventBuilder().withEventDescription(\"CS2103T Tutorial\")","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-16\").withTime(\"09:00\").withDuration(\"1H\")","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"hanqinilnix"},"content":"            .withRecurFrequency(\"WEEKLY\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":20,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event SE_LECTURE \u003d new EventBuilder().withEventDescription(\"CS2103T Lecture\")","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-18\").withTime(\"14:00\").withDuration(\"2H\")","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"hanqinilnix"},"content":"            .withRecurFrequency(\"WEEKLY\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":23,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event OS_TUTORIAL \u003d new EventBuilder().withEventDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-14\").withTime(\"10:00\").withDuration(\"1H\")","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"hanqinilnix"},"content":"            .withRecurFrequency(\"WEEKLY\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":26,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event OS_LECTURE \u003d new EventBuilder().withEventDescription(\"CS2106 Lecture\")","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-16\").withTime(\"10:00\").withDuration(\"2H\")","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"hanqinilnix"},"content":"            .withRecurFrequency(\"WEEKLY\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":29,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event OS_LAB \u003d new EventBuilder().withEventDescription(\"CS2106 Lab\")","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-17\").withTime(\"13:00\").withDuration(\"1H\")","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"hanqinilnix"},"content":"            .withRecurFrequency(\"WEEKLY\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":32,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event NATIONAL_DAY_PARTY \u003d new EventBuilder().withEventDescription(\"National Day Party at BFF\")","lastModifiedDate":"2022-03-15"},{"lineNumber":33,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-08-09\").withTime(\"20:00\").withDuration(\"3H\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":34,"author":{"gitId":"hanqinilnix"},"content":"    public static final Event ALICE_BIRTHDAY \u003d new EventBuilder().withEventDescription(\"Alice Birthday Surprise\")","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"hanqinilnix"},"content":"            .withDate(\"2022-03-14\").withTime(\"17:00\").withDuration(\"4H\").build().getNextRecurringEvent(LocalDate.now());","lastModifiedDate":"2022-04-07"},{"lineNumber":36,"author":{"gitId":"vishandi"},"content":"    public static final LocalTime TYPICAL_TIME \u003d LocalTime.parse(\"10:00\");","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"vishandi"},"content":"    public static final LocalDate TYPICAL_DATE \u003d LocalDate.parse(\"2022-02-14\");","lastModifiedDate":"2022-03-28"},{"lineNumber":38,"author":{"gitId":"vishandi"},"content":"    public static final String TYPICAL_PATH \u003d \"typicalSchedule.json\";","lastModifiedDate":"2022-03-29"},{"lineNumber":39,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"hanqinilnix"},"content":"    private TypicalSchedule() {} // prevents instantiation","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"hanqinilnix"},"content":"    /**","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"hanqinilnix"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"hanqinilnix"},"content":"     */","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"hanqinilnix"},"content":"    public static Schedule getTypicalSchedule() {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"hanqinilnix"},"content":"        return new Schedule(getTypicalEvents());","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"hanqinilnix"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"hanqinilnix"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"tyanhan"},"content":"        List\u003cEvent\u003e events \u003d Arrays.asList(OS_TUTORIAL, ALICE_BIRTHDAY, SE_TUTORIAL, OS_LECTURE, OS_LAB,","lastModifiedDate":"2022-03-21"},{"lineNumber":51,"author":{"gitId":"tyanhan"},"content":"                SE_LECTURE, NATIONAL_DAY_PARTY);","lastModifiedDate":"2022-03-21"},{"lineNumber":52,"author":{"gitId":"tyanhan"},"content":"        Collections.sort(events);","lastModifiedDate":"2022-03-21"},{"lineNumber":53,"author":{"gitId":"tyanhan"},"content":"        return events;","lastModifiedDate":"2022-03-21"},{"lineNumber":54,"author":{"gitId":"hanqinilnix"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"hanqinilnix"},"content":"}","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"tyanhan":5,"vishandi":5,"hanqinilnix":45}}]
